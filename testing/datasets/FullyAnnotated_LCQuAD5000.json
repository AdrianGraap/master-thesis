[
  {
    "question": "Which comic characters are painted by Bill Finger?",
    "SerialNumber": "1",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bill_Finger>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "entity mapping": [
      {
        "label": "Bill Finger",
        "uri": "http://dbpedia.org/resource/Bill_Finger"
      }
    ],
    "id": "f0a9f1ca14764095ae089b152e0e7f12",
    "predicate mapping": [
      {
        "label": "painted by",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "comic characters",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter"
      }
    ]
  },
  {
    "question": "Was winston churchill the prime minister of Selwyn Lloyd?",
    "SerialNumber": "2",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Selwyn_Lloyd> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Winston_Churchill> }",
    "entity mapping": [
      {
        "label": "Selwyn Lloyd",
        "uri": "http://dbpedia.org/resource/Selwyn_Lloyd"
      },
      {
        "label": "winston churchill",
        "uri": "http://dbpedia.org/resource/Winston_Churchill"
      }
    ],
    "id": "30b709079ea5421cb33c227c3feb9019",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "Name some leaders of the parent organisation of the Gestapo?",
    "SerialNumber": "3",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gestapo> <http://dbpedia.org/ontology/parentOrganisation> ?x . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gestapo",
        "uri": "http://dbpedia.org/resource/Gestapo"
      }
    ],
    "id": "dad51bf9d0294cac99d176aba17c0241",
    "predicate mapping": [
      {
        "label": "parent organisation",
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      },
      {
        "label": "leaders",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "Which party has come in power in Mumbai North?",
    "SerialNumber": "4",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mumbai North",
        "uri": "http://dbpedia.org/resource/Mumbai_North_(Lok_Sabha_constituency)"
      }
    ],
    "id": "00a3465694634edc903510572f23b487",
    "predicate mapping": [
      {
        "label": "in power",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Name the municipality of Roberto Clemente Bridge ?",
    "SerialNumber": "5",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roberto_Clemente_Bridge> <http://dbpedia.org/ontology/municipality> ?uri } ",
    "entity mapping": [
      {
        "label": "Roberto Clemente Bridge",
        "uri": "http://dbpedia.org/resource/Roberto_Clemente_Bridge"
      }
    ],
    "id": "8216e5b6033a407191548689994aa32e",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      }
    ]
  },
  {
    "question": "In which monarch did Li Si succeed someone?",
    "SerialNumber": "7",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Li_Si> . ?x <http://dbpedia.org/ontology/monarch> ?uri  . }",
    "entity mapping": [
      {
        "label": "Li Si",
        "uri": "http://dbpedia.org/resource/Li_Si"
      }
    ],
    "id": "4447f7daa7cf45eaadac04711dce299a",
    "predicate mapping": [
      {
        "label": "succeed",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch"
      }
    ]
  },
  {
    "question": "Which home town of PAvel Moroz is the death location of the Yakov Estrin ?",
    "SerialNumber": "8",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pavel_Moroz> <http://dbpedia.org/property/hometown> ?uri. <http://dbpedia.org/resource/Yakov_Estrin> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "PAvel Moroz",
        "uri": "http://dbpedia.org/resource/Pavel_Moroz"
      },
      {
        "label": "Yakov Estrin",
        "uri": "http://dbpedia.org/resource/Yakov_Estrin"
      }
    ],
    "id": "a899e312823543e7b728a2517d29392d",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/hometown"
      },
      {
        "label": "death location",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Which company which assembles its cars in Broadmeadows, Victoria?",
    "SerialNumber": "9",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Broadmeadows,_Victoria> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Broadmeadows, Victoria",
        "uri": "http://dbpedia.org/resource/Broadmeadows,_Victoria"
      }
    ],
    "id": "338733202ebc4df1b6b92c618ebe3fc7",
    "predicate mapping": [
      {
        "label": "assembles",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Which person designed the cars which has been designed by ASC Creative Services?",
    "SerialNumber": "10",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/ASC_Creative_Services> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "ASC Creative Services",
        "uri": "http://dbpedia.org/resource/ASC_Creative_Services"
      }
    ],
    "id": "efa779115ad94d16aa180258a272a399",
    "predicate mapping": [
      {
        "label": "designed by",
        "uri": "http://dbpedia.org/ontology/designCompany"
      },
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "car",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Name the scientist whose supervisor was Ernest Rutherford and had a doctoral students named Charles Drummond Ellis?",
    "SerialNumber": "11",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Charles_Drummond_Ellis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford"
      },
      {
        "label": "Charles Drummond Ellis",
        "uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis"
      }
    ],
    "id": "7136d470a4c340bb8a9e1b60d5e68fdf",
    "predicate mapping": [
      {
        "label": "supervisor",
        "uri": "http://dbpedia.org/ontology/doctoralAdvisor"
      },
      {
        "label": "students doctoral",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Where was the designer of REP Parasol born?",
    "SerialNumber": "12",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/REP_Parasol> <http://dbpedia.org/ontology/designer> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "REP Parasol",
        "uri": "http://dbpedia.org/resource/REP_Parasol"
      }
    ],
    "id": "250dc8957716408cbea2c7c1918791f8",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What is the common affiliation of the Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt and alma mater of the Duncan U. Fletcher?",
    "SerialNumber": "13",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Duncan_U._Fletcher> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt",
        "uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt"
      },
      {
        "label": "Duncan U. Fletcher",
        "uri": "http://dbpedia.org/resource/Duncan_U._Fletcher"
      }
    ],
    "id": "35fd0b13f9824451b518e8b26ba64bde",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "What is the hometown of Nader Guirat, where Josef Johansson was born too?",
    "SerialNumber": "14",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josef_Johansson> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Nader_Guirat> <http://dbpedia.org/ontology/hometown> ?uri . }",
    "entity mapping": [
      {
        "label": "Josef Johansson",
        "uri": "http://dbpedia.org/resource/Josef_Johansson"
      },
      {
        "label": "Nader Guirat",
        "uri": "http://dbpedia.org/resource/Nader_Guirat"
      }
    ],
    "id": "243f95d2144c4b2fadb5a18aa339bd98",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown"
      }
    ]
  },
  {
    "question": "How many shows does HBO have?",
    "SerialNumber": "16",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      }
    ],
    "id": "1b604c16430a441ebbae9e095b36661e",
    "predicate mapping": [
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is Nikolai Morozov the former coach of Stanislav Morozov?",
    "SerialNumber": "17",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/ontology/formerCoach> <http://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)> }",
    "entity mapping": [
      {
        "label": "Stanislav Morozov",
        "uri": "http://dbpedia.org/resource/Stanislav_Morozov"
      },
      {
        "label": "Nikolai Morozov",
        "uri": "http://dbpedia.org/resource/Nikolai_Morozov_(figure_skater)"
      }
    ],
    "id": "80d88d56a6634b49b41ded0bdc54ae5c",
    "predicate mapping": [
      {
        "label": "former coach",
        "uri": "http://dbpedia.org/ontology/formerCoach"
      }
    ]
  },
  {
    "question": "Which share holder of outlook is also the content license of the MSX Basics ?",
    "SerialNumber": "19",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri. <http://dbpedia.org/resource/Outlook_on_the_web> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "MSX Basic",
        "uri": "http://dbpedia.org/resource/MSX_BASIC"
      },
      {
        "label": "outlook",
        "uri": "http://dbpedia.org/resource/Outlook_on_the_web"
      }
    ],
    "id": "239fef57d6664f4280caf0dafa7e1eb8",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license"
      },
      {
        "label": "share holder",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "On how many different grounds were seasons chaired by Ronaldo held?",
    "SerialNumber": "20",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Ronaldo> . ?x <http://dbpedia.org/ontology/ground> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ronaldo",
        "uri": "http://dbpedia.org/resource/Ronaldo"
      }
    ],
    "id": "3f943b9b68fe43c7a7363ff39f9f3074",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "grounds",
        "uri": "http://dbpedia.org/ontology/ground"
      }
    ]
  },
  {
    "question": "Where was the battle fought where 2nd Foreign Infantry Regiment participated  ?",
    "SerialNumber": "22",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/2nd_Foreign_Infantry_Regiment> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "2nd Foreign Infantry Regiment",
        "uri": "http://dbpedia.org/resource/2nd_Foreign_Infantry_Regiment"
      }
    ],
    "id": "380224a93b1e441994c4b9785881aa6c",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "What is the operator of SR class 3Sub ?",
    "SerialNumber": "23",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/SR_class_3Sub> <http://dbpedia.org/ontology/operator> ?uri } ",
    "entity mapping": [
      {
        "label": "SR class 3Sub",
        "uri": "http://dbpedia.org/resource/SR_class_3Sub"
      }
    ],
    "id": "df8a83a06ca941c3b6f30667a64bc305",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator"
      }
    ]
  },
  {
    "question": "Which band\u0027s  former member are Kevin Jonas and Joe Jonas?",
    "SerialNumber": "24",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Kevin Jonas",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas"
      },
      {
        "label": "Joe Jonas",
        "uri": "http://dbpedia.org/resource/Joe_Jonas"
      }
    ],
    "id": "8f8139c45fc142a1af369ddcaed646f3",
    "predicate mapping": [
      {
        "label": "former member",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      },
      {
        "label": "former member",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Name the tenants of O.co Coliseum ?",
    "SerialNumber": "26",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/O.co_Coliseum> <http://dbpedia.org/ontology/tenant> ?uri } ",
    "entity mapping": [
      {
        "label": "O.co Coliseum",
        "uri": "http://dbpedia.org/resource/O.co_Coliseum"
      }
    ],
    "id": "a649a19bfcbc4f2e962d2199f8e9598d",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "which politician is currently ruling over Rishikesh?",
    "SerialNumber": "27",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri } ",
    "entity mapping": [
      {
        "label": "Rishikesh",
        "uri": "http://dbpedia.org/resource/Rishikesh"
      }
    ],
    "id": "30e697b1548c4671bb748f26a165543c",
    "predicate mapping": [
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "Is north america one of the destinations of airtours airways?",
    "SerialNumber": "28",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/North_America> }",
    "entity mapping": [
      {
        "label": "airtours",
        "uri": "http://dbpedia.org/resource/Airtours_International_Airways"
      },
      {
        "label": "north america",
        "uri": "http://dbpedia.org/resource/North_America"
      }
    ],
    "id": "7c56af394fc64b84a9f5e244bb068831",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/ontology/destination"
      }
    ]
  },
  {
    "question": "Who have done their PhDs under a National Medal of Science winner?",
    "SerialNumber": "29",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . }",
    "entity mapping": [
      {
        "label": "National Medal of Science",
        "uri": "http://dbpedia.org/resource/National_Medal_of_Science"
      }
    ],
    "id": "d3695db03a5e45ae8906a2527508e7c5",
    "predicate mapping": [
      {
        "label": "winner",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "PhDs under",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      }
    ]
  },
  {
    "question": "Name the mascot of the military branch of William Harper.",
    "SerialNumber": "31",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/William_Harper_(Rhodesian_politician)> <http://dbpedia.org/ontology/militaryBranch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "entity mapping": [
      {
        "label": "William Harper",
        "uri": "http://dbpedia.org/resource/William_Harper_(Rhodesian_politician)"
      }
    ],
    "id": "8b3daf3912ea4686a1b8ee5d2d9918df",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Was Kevin Jonas a part of Jonas brothers?",
    "SerialNumber": "33",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas> }",
    "entity mapping": [
      {
        "label": "Jonas brothers",
        "uri": "http://dbpedia.org/resource/Jonas_Brothers"
      },
      {
        "label": "Kevin Jonas",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas"
      }
    ],
    "id": "f97937b4cc484a1f82a31b1d65d0041c",
    "predicate mapping": [
      {
        "label": "part of",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      }
    ]
  },
  {
    "question": "What was the book that lead to Sagan\u0027s Cosmos, about?",
    "SerialNumber": "34",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Cosmos",
        "uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)"
      }
    ],
    "id": "d8d0571b353e4b028d618c08d2643923",
    "predicate mapping": [
      {
        "label": "lead to",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "about",
        "uri": "http://dbpedia.org/property/subject"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Which kind of conventions are held in Rosemont, Illinois?",
    "SerialNumber": "35",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Rosemont,_Illinois> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Convention>}",
    "entity mapping": [
      {
        "label": "Rosemont, Illinois",
        "uri": "http://dbpedia.org/resource/Rosemont,_Illinois"
      }
    ],
    "id": "3d5d25adde2b46dda7d5bc780106d764",
    "predicate mapping": [
      {
        "label": "held in",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "kind of",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "conventions",
        "uri": "http://dbpedia.org/ontology/Convention"
      }
    ]
  },
  {
    "question": "What are the type of Greenup County High School?",
    "SerialNumber": "36",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greenup_County_High_School> <http://dbpedia.org/property/type> ?uri } ",
    "entity mapping": [
      {
        "label": "Greenup County High School",
        "uri": "http://dbpedia.org/resource/Greenup_County_High_School"
      }
    ],
    "id": "42d9e558edd840a0a310036f7f9bb9b2",
    "predicate mapping": [
      {
        "label": "type",
        "uri": "http://dbpedia.org/property/type"
      }
    ]
  },
  {
    "question": "List the teams for which Bobby Hoppe played ?",
    "SerialNumber": "37",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Hoppe> <http://dbpedia.org/property/pastteams> ?uri } ",
    "entity mapping": [
      {
        "label": "Bobby Hoppe",
        "uri": "http://dbpedia.org/resource/Bobby_Hoppe"
      }
    ],
    "id": "082ecdc0056f4f3192e3b13e46d0ee0c",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/pastteams"
      }
    ]
  },
  {
    "question": "What are some famous works of the writer of The Second Coming?",
    "SerialNumber": "38",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Second_Coming_(TV_serial)> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Second Coming",
        "uri": "http://dbpedia.org/resource/The_Second_Coming_(TV_serial)"
      }
    ],
    "id": "d93543518a8d4a69b6f540f4be499a28",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "famous works",
        "uri": "http://dbpedia.org/property/notableworks"
      }
    ]
  },
  {
    "question": "How many books have been penned by Miguel de Cervantes?",
    "SerialNumber": "39",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Miguel_de_Cervantes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Miguel de Cervantes",
        "uri": "http://dbpedia.org/resource/Miguel_de_Cervantes"
      }
    ],
    "id": "e7c8927b5bec41c6a09ea2319c24e65f",
    "predicate mapping": [
      {
        "label": "penned",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "books",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Which labels signs up progressive rock bands?",
    "SerialNumber": "40",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Progressive_rock> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "progressive rock",
        "uri": "http://dbpedia.org/resource/Progressive_rock"
      }
    ],
    "id": "be29caba2b2b43a385df47982c5421d3",
    "predicate mapping": [
      {
        "label": "signs",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "labels",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "bands",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "What are the schools whose city is Reading, Berkshire?",
    "SerialNumber": "41",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> } ",
    "entity mapping": [
      {
        "label": "Reading, Berkshire",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire"
      }
    ],
    "id": "9a7523469c8c45b58ec65ed56af6e306",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city"
      }
    ]
  },
  {
    "question": "Which magazine\u0027s editor is married to Crystal Harris?",
    "SerialNumber": "42",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Crystal_Harris> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Crystal Harris",
        "uri": "http://dbpedia.org/resource/Crystal_Harris"
      }
    ],
    "id": "efe2cdcf9bb3460e9f13067772d9e62f",
    "predicate mapping": [
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "magazine\u0027s",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "Does the west thurrock come under Essex county?",
    "SerialNumber": "43",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Thurrock> <http://dbpedia.org/ontology/ceremonialCounty> <http://dbpedia.org/resource/Essex> }",
    "entity mapping": [
      {
        "label": "west thurrock",
        "uri": "http://dbpedia.org/resource/West_Thurrock"
      },
      {
        "label": "Essex",
        "uri": "http://dbpedia.org/resource/Essex"
      }
    ],
    "id": "d4f1cee8ab32498faaf9d3d2190380c1",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty"
      }
    ]
  },
  {
    "question": "How many people have headed organizations headquartered at Niederkirchnerstrae?",
    "SerialNumber": "44",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Niederkirchnerstraße> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "entity mapping": [
      {
        "label": "Niederkirchnerstrae",
        "uri": "http://dbpedia.org/resource/Niederkirchnerstraße"
      }
    ],
    "id": "70448495be244ebea4746e370eb19f5c",
    "predicate mapping": [
      {
        "label": "headquartered",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "headed",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "In which television shows have Steven Moffat served as an executive producer?",
    "SerialNumber": "45",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Steven Moffat",
        "uri": "http://dbpedia.org/resource/Steven_Moffat"
      }
    ],
    "id": "93ca4dc34b5e4bf7ba90d0ae55f7d50c",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "television shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which shareholder of Dagenham wind turbines is also the parent company of the Ford Falcon Cobra?",
    "SerialNumber": "46",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "Ford Falcon Cobra",
        "uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra"
      },
      {
        "label": "Dagenham wind turbines",
        "uri": "http://dbpedia.org/resource/Dagenham_wind_turbines"
      }
    ],
    "id": "d8150b46a8714ed9b7ede5b606aa2638",
    "predicate mapping": [
      {
        "label": "company parent",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "shareholder",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "What are the airlines whose hub is San Francisco International Airport?",
    "SerialNumber": "47",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/San_Francisco_International_Airport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "San Francisco International Airport",
        "uri": "http://dbpedia.org/resource/San_Francisco_International_Airport"
      }
    ],
    "id": "09b0e80486e44ea2b1cbca4f69c89923",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "airlines",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Where can I find things run by the maritime museum of San Diego?",
    "SerialNumber": "48",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Maritime_Museum_of_San_Diego> . ?x <http://dbpedia.org/property/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "maritime museum of San Diego",
        "uri": "http://dbpedia.org/resource/Maritime_Museum_of_San_Diego"
      }
    ],
    "id": "8c9f73ffe06247fa8fefae66915c41bb",
    "predicate mapping": [
      {
        "label": "run by",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "of",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "What is the local authority of the Trinity School, Brentwood and place of birth of the Sarah Walker (badminton) ?",
    "SerialNumber": "49",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Sarah_Walker_(badminton)> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Trinity School, Brentwood",
        "uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood"
      },
      {
        "label": "Sarah Walker (badminton)",
        "uri": "http://dbpedia.org/resource/Sarah_Walker_(badminton)"
      }
    ],
    "id": "d4b1587fce7046aabe7c9717457c7894",
    "predicate mapping": [
      {
        "label": "authority local",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "How many services does 21Vianet provide?",
    "SerialNumber": "50",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri  . }",
    "entity mapping": [
      {
        "label": "21Vianet",
        "uri": "http://dbpedia.org/resource/21Vianet"
      }
    ],
    "id": "fb1bfcc7943943b892d6d22690b2ef48",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "where did the office holder died  who is successor to Elmer Burkett ?",
    "SerialNumber": "52",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Elmer_Burkett> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Elmer Burkett",
        "uri": "http://dbpedia.org/resource/Elmer_Burkett"
      }
    ],
    "id": "ee04ea91a583412db4d05a9929dcc4dc",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Name the team for which Hensley Meulens played, whihc was also the debut team od Steve Ontiveros ?",
    "SerialNumber": "53",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Ontiveros_(infielder)> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Hensley_Meulens> <http://dbpedia.org/ontology/team> ?uri} ",
    "entity mapping": [
      {
        "label": "Steve Ontiveros",
        "uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)"
      },
      {
        "label": "Hensley Meulens",
        "uri": "http://dbpedia.org/resource/Hensley_Meulens"
      }
    ],
    "id": "5c171d57abb14180b3f6dc48e55c4bbf",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "List the actors of  Lucy Sullivan Is Getting Married?",
    "SerialNumber": "54",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married> <http://dbpedia.org/property/starring> ?uri } ",
    "entity mapping": [
      {
        "label": "Lucy Sullivan Is Getting Married",
        "uri": "http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married"
      }
    ],
    "id": "f3110585cbc94fc69f9f61aeb1c3555f",
    "predicate mapping": [
      {
        "label": "actors of",
        "uri": "http://dbpedia.org/property/starring"
      }
    ]
  },
  {
    "question": "Name the island with archipelago as Society Islands and has the largest city named Faaa ?",
    "SerialNumber": "55",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Faaa> . ?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Society_Islands>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "entity mapping": [
      {
        "label": "Faaa",
        "uri": "http://dbpedia.org/resource/Faaa"
      },
      {
        "label": "Society Islands",
        "uri": "http://dbpedia.org/resource/Society_Islands"
      }
    ],
    "id": "54e823bdc8d44ed7a0a40c77e29c361d",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island"
      }
    ]
  },
  {
    "question": "Who appointed the governor under whom Richard Winn served?",
    "SerialNumber": "57",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Richard_Winn> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Richard Winn",
        "uri": "http://dbpedia.org/resource/Richard_Winn"
      }
    ],
    "id": "32ab0f92ca6444c5a2877e23fc76303c",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "What company involved in the development of Sherlock did Arthur Levinson work for?",
    "SerialNumber": "58",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_D._Levinson> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Sherlock_(software)> <http://dbpedia.org/ontology/developer> ?uri} ",
    "entity mapping": [
      {
        "label": "Arthur Levinson",
        "uri": "http://dbpedia.org/resource/Arthur_D._Levinson"
      },
      {
        "label": "Sherlock",
        "uri": "http://dbpedia.org/resource/Sherlock_(software)"
      }
    ],
    "id": "83248eda73fd4609ac3a9359b62a9a2c",
    "predicate mapping": [
      {
        "label": "work for",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "development",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Who produced the TV shows for Fremantle Media?",
    "SerialNumber": "60",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/company> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Fremantle Media",
        "uri": "http://dbpedia.org/resource/FremantleMedia"
      }
    ],
    "id": "5e4463b5e91147819fab19c1eb738a8b",
    "predicate mapping": [
      {
        "label": "Who",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "TV shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the style of architecture of South Loop Printing House District ?",
    "SerialNumber": "61",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Loop_Printing_House_District> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ",
    "entity mapping": [
      {
        "label": "South Loop Printing House District",
        "uri": "http://dbpedia.org/resource/South_Loop_Printing_House_District"
      }
    ],
    "id": "2a11aeb11ce248cfaf63be2b6701fe9a",
    "predicate mapping": [
      {
        "label": "style of architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      }
    ]
  },
  {
    "question": "Whose provides the service of  Outlook and also products  such as Visual Studio?",
    "SerialNumber": "62",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . }",
    "entity mapping": [
      {
        "label": "Outlook",
        "uri": "http://dbpedia.org/resource/Outlook.com"
      },
      {
        "label": "Visual Studio",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio"
      }
    ],
    "id": "d101acb6da7a464cbdec88d18d5b855e",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      }
    ]
  },
  {
    "question": "Is Ombla originate in Croatia?",
    "SerialNumber": "63",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ombla> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Croatia> }",
    "entity mapping": [
      {
        "label": "Ombla",
        "uri": "http://dbpedia.org/resource/Ombla"
      },
      {
        "label": "Croatia",
        "uri": "http://dbpedia.org/resource/Croatia"
      }
    ],
    "id": "a2f446250f114e05ad19763cc9c8a1a6",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      }
    ]
  },
  {
    "question": "What is the nationality of Newin Chidchob ?",
    "SerialNumber": "64",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri } ",
    "entity mapping": [
      {
        "label": "Newin Chidchob",
        "uri": "http://dbpedia.org/resource/Newin_Chidchob"
      }
    ],
    "id": "873c3fe1ec484dcfbb114320042f298d",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      }
    ]
  },
  {
    "question": "In which team did Dave Bing and Ron Reed started their basketball career?",
    "SerialNumber": "65",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dave_Bing> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Ron_Reed> <http://dbpedia.org/property/draftTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Dave Bing",
        "uri": "http://dbpedia.org/resource/Dave_Bing"
      },
      {
        "label": "Ron Reed",
        "uri": "http://dbpedia.org/resource/Ron_Reed"
      }
    ],
    "id": "d509a97d616741b69ea3d084e0a7b737",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/draftTeam"
      }
    ]
  },
  {
    "question": "Was Ganymede discovered by Galileo Galilei?",
    "SerialNumber": "66",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ganymede_(moon)> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Galileo_Galilei> }",
    "entity mapping": [
      {
        "label": "Ganymede",
        "uri": "http://dbpedia.org/resource/Ganymede_(moon)"
      },
      {
        "label": "Galileo Galilei",
        "uri": "http://dbpedia.org/resource/Galileo_Galilei"
      }
    ],
    "id": "418b062f88884aff8095211e8c44cbed",
    "predicate mapping": [
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/property/discoverer"
      }
    ]
  },
  {
    "question": "List some musicians associated with famous guitar players?",
    "SerialNumber": "67",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "entity mapping": [
      {
        "label": "guitar",
        "uri": "http://dbpedia.org/resource/Guitar"
      }
    ],
    "id": "cbddb4a494514d32ae94fd66fdde0269",
    "predicate mapping": [
      {
        "label": "list",
        "uri": "http://dbpedia.org/property/notableInstruments"
      },
      {
        "label": "musicians associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "What are the awards won by the producer of Elizabeth: The Golden Age?",
    "SerialNumber": "68",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Elizabeth:_The_Golden_Age_(soundtrack)> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Elizabeth: The Golden Age",
        "uri": "http://dbpedia.org/resource/Elizabeth:_The_Golden_Age_(soundtrack)"
      }
    ],
    "id": "339f9ccfb682456ab0f1e7f580a2d27e",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "With what company is the service OneDrive associated?",
    "SerialNumber": "69",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "OneDrive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      }
    ],
    "id": "1be4e465a7ac4a6c893e6b1fc1aef01a",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the university whose affiliations\u0027s foundation place is Washington, D.C.?",
    "SerialNumber": "70",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Washington,_D.C.> . ?uri <http://dbpedia.org/property/affiliations> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Washington, D.C.",
        "uri": "http://dbpedia.org/resource/Washington,_D.C."
      }
    ],
    "id": "a969284fc29d4b659e9088088a2c49f2",
    "predicate mapping": [
      {
        "label": "foundation place",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "affiliations\u0027s",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Name presidents of the schools which have queen noor of Jordan as one of them ?",
    "SerialNumber": "71",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Queen_Noor_of_Jordan> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "queen noor of Jordan",
        "uri": "http://dbpedia.org/resource/Queen_Noor_of_Jordan"
      }
    ],
    "id": "7aff0ab2a7b741839c3df90771be6add",
    "predicate mapping": [
      {
        "label": "presidents",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "presidents",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "schools",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Who appointed the governor under which Robert Witherspoon worked?",
    "SerialNumber": "72",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Robert_Witherspoon> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Robert Witherspoon",
        "uri": "http://dbpedia.org/resource/Robert_Witherspoon"
      }
    ],
    "id": "312435fad0194831a80fe3346c9a683b",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "Who is the producer of the song which is the previous work of He\u0027s a Liar ?",
    "SerialNumber": "73",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/He\u0027s_a_Liar> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
    "entity mapping": [
      {
        "label": "He\u0027s a Liar",
        "uri": "http://dbpedia.org/resource/He\u0027s_a_Liar"
      }
    ],
    "id": "f76953f003c2433d837966593c777c75",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/Song"
      }
    ]
  },
  {
    "question": "List the base currency of the country whose anthem is Oj, svijetla majska zoro.",
    "SerialNumber": "74",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Oj,_svijetla_majska_zoro> . ?x <http://dbpedia.org/property/currency> ?uri  . }",
    "entity mapping": [
      {
        "label": "Oj, svijetla majska zoro",
        "uri": "http://dbpedia.org/resource/Oj,_svijetla_majska_zoro"
      }
    ],
    "id": "6ac000fc0bb7458f8556f603ed42e4b3",
    "predicate mapping": [
      {
        "label": "anthem",
        "uri": "http://dbpedia.org/ontology/anthem"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency"
      }
    ]
  },
  {
    "question": "Who gave the voice for Allen Walker ?",
    "SerialNumber": "75",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allen_Walker> <http://dbpedia.org/ontology/voice> ?uri } ",
    "entity mapping": [
      {
        "label": "Allen Walker",
        "uri": "http://dbpedia.org/resource/Allen_Walker"
      }
    ],
    "id": "48584c830439478e9272821ca6fac246",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      }
    ]
  },
  {
    "question": "Who is associated to Publius Servilius Vatia Isauricus  and Marcus Calpurnius Bibulus?",
    "SerialNumber": "76",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . }",
    "entity mapping": [
      {
        "label": "Publius Servilius Vatia Isauricus",
        "uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)"
      },
      {
        "label": "Marcus Calpurnius Bibulus",
        "uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus"
      }
    ],
    "id": "78435963a0b241ecbd9b7ab9e4916acc",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associate"
      }
    ]
  },
  {
    "question": "Which country has given citizenship to both saima chowdhury and edmund john?",
    "SerialNumber": "77",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Edmund_John> <http://dbpedia.org/ontology/citizenship> ?uri . }",
    "entity mapping": [
      {
        "label": "saima chowdhury",
        "uri": "http://dbpedia.org/resource/Saima_Chowdhury"
      },
      {
        "label": "edmund john",
        "uri": "http://dbpedia.org/resource/Edmund_John"
      }
    ],
    "id": "81218ea48e2f44a1bef8c118ae5b965a",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship"
      },
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship"
      }
    ]
  },
  {
    "question": "Who is the person that first ascented the Cathedral Peak and Mount Hoffmann?",
    "SerialNumber": "78",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> ?uri. <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> ?uri . }",
    "entity mapping": [
      {
        "label": "Cathedral Peak",
        "uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)"
      },
      {
        "label": "Mount Hoffmann",
        "uri": "http://dbpedia.org/resource/Mount_Hoffmann"
      }
    ],
    "id": "5df6285e711048a5aa9d59ee7bbc7886",
    "predicate mapping": [
      {
        "label": "person that first ascented",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "What university campuses are situated in Indiana?",
    "SerialNumber": "79",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Indiana",
        "uri": "http://dbpedia.org/resource/Indiana"
      }
    ],
    "id": "ae5afe36b84a4b65b6e52062c8c1d079",
    "predicate mapping": [
      {
        "label": "campuses",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Where is the swedish covenant hospital?",
    "SerialNumber": "80",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Swedish_Covenant_Hospital> <http://dbpedia.org/ontology/location> ?uri } ",
    "entity mapping": [
      {
        "label": "swedish covenant hospital",
        "uri": "http://dbpedia.org/resource/Swedish_Covenant_Hospital"
      }
    ],
    "id": "ef9db1b8f7de4e319db223cee9531bb4",
    "predicate mapping": [
      {
        "label": "Where",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Which composer of Girl from the North Country is the subsequent work of the Moondog Matinee?",
    "SerialNumber": "81",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ",
    "entity mapping": [
      {
        "label": "Girl from the North Country",
        "uri": "http://dbpedia.org/resource/Girl_from_the_North_Country"
      },
      {
        "label": "Moondog Matinee",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee"
      }
    ],
    "id": "a6ff1c4c6e0f4b519d1f50c706af5469",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      }
    ]
  },
  {
    "question": "What is the television show whose vocals are performed by  April Stewart and Mona Marshall?",
    "SerialNumber": "82",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "April Stewart",
        "uri": "http://dbpedia.org/resource/April_Stewart"
      },
      {
        "label": "Mona Marshall",
        "uri": "http://dbpedia.org/resource/Mona_Marshall"
      }
    ],
    "id": "b38170945c5d442e80799fe9d203be22",
    "predicate mapping": [
      {
        "label": "vocals",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "vocals",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the members of  boards of Freedom of the City and Trinity House?",
    "SerialNumber": "83",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House> . }",
    "entity mapping": [
      {
        "label": "Freedom of the City",
        "uri": "http://dbpedia.org/resource/Freedom_of_the_City"
      },
      {
        "label": "Trinity House",
        "uri": "http://dbpedia.org/resource/Trinity_House"
      }
    ],
    "id": "401fed151be7413abf38efaa54396fce",
    "predicate mapping": [
      {
        "label": "boards",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "boards",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "Was Reza Amrollahi born in Iran?",
    "SerialNumber": "84",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Reza_Amrollahi> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Iran> }",
    "entity mapping": [
      {
        "label": "Reza Amrollahi",
        "uri": "http://dbpedia.org/resource/Reza_Amrollahi"
      },
      {
        "label": "Iran",
        "uri": "http://dbpedia.org/resource/Iran"
      }
    ],
    "id": "55fad74c2c62469581f58e7bbe60da52",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace"
      }
    ]
  },
  {
    "question": "In which war did Roh Tae Woo and Lee Leffingwell fight?",
    "SerialNumber": "86",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roh_Tae-woo> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Lee_Leffingwell> <http://dbpedia.org/ontology/battle> ?uri . }",
    "entity mapping": [
      {
        "label": "Roh Tae Woo",
        "uri": "http://dbpedia.org/resource/Roh_Tae-woo"
      },
      {
        "label": "Lee Leffingwell",
        "uri": "http://dbpedia.org/resource/Lee_Leffingwell"
      }
    ],
    "id": "94a86fc843af4093900744147451118e",
    "predicate mapping": [
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "list  the producer of the movies in which Rosemarie DeWitt in the star cast?",
    "SerialNumber": "87",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Rosemarie_DeWitt> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Rosemarie DeWitt",
        "uri": "http://dbpedia.org/resource/Rosemarie_DeWitt"
      }
    ],
    "id": "fa13e164104b419f82179aeed15b6117",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "movies",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What can be cooked out of things belonging to the order Sapindales?",
    "SerialNumber": "88",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Sapindales> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . }",
    "entity mapping": [
      {
        "label": "Sapindales",
        "uri": "http://dbpedia.org/resource/Sapindales"
      }
    ],
    "id": "8bdd1143f4044694980167f57d2f1ebd",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "things",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "How many  TV shows were made by someone who was associated with Lewis Hamilton?",
    "SerialNumber": "89",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Lewis_Hamilton> . ?uri <http://dbpedia.org/property/creator> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Lewis Hamilton",
        "uri": "http://dbpedia.org/resource/Lewis_Hamilton"
      }
    ],
    "id": "938bb65e3ede442c84c63fc27fb7b4ea",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "TV shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the city whose mayor is Giorgos Kaminis?",
    "SerialNumber": "90",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "entity mapping": [
      {
        "label": "Giorgos Kaminis",
        "uri": "http://dbpedia.org/resource/Giorgos_Kaminis"
      }
    ],
    "id": "fb471cb9a15f4e8a84b6741cf2b2850c",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion"
      }
    ]
  },
  {
    "question": "Name the alma mater of Michael hahn ?",
    "SerialNumber": "91",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Hahn> <http://dbpedia.org/ontology/almaMater> ?uri } ",
    "entity mapping": [
      {
        "label": "Michael hahn",
        "uri": "http://dbpedia.org/resource/Michael_Hahn"
      }
    ],
    "id": "d87c7466bde24cb3a5fcc03dc0c210fe",
    "predicate mapping": [
      {
        "label": "mater alma",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "How many party leaders are there whose parties are headquartered in Berlin?",
    "SerialNumber": "92",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Berlin> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Berlin",
        "uri": "http://dbpedia.org/resource/Berlin"
      }
    ],
    "id": "7c654505500d49bd835cc07799940fb1",
    "predicate mapping": [
      {
        "label": "headquartered",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "leaders",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "party leaders",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "How many total religions are followed by people whose hometown is somewhere in India?",
    "SerialNumber": "93",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/India> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "India",
        "uri": "http://dbpedia.org/resource/India"
      }
    ],
    "id": "556d585ed3d04cff978e0f6c86b73d8d",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "religions",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Who are the cast members of The Simpsons Ride?",
    "SerialNumber": "94",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Simpsons_Ride> <http://dbpedia.org/property/starring> ?uri } ",
    "entity mapping": [
      {
        "label": "The Simpsons Ride",
        "uri": "http://dbpedia.org/resource/The_Simpsons_Ride"
      }
    ],
    "id": "1df652b299e84ef4a467b353d91a9eff",
    "predicate mapping": [
      {
        "label": "cast members",
        "uri": "http://dbpedia.org/property/starring"
      }
    ]
  },
  {
    "question": "Which american football team  has stadium as O.co Coliseum?",
    "SerialNumber": "95",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "entity mapping": [
      {
        "label": "O.co Coliseum",
        "uri": "http://dbpedia.org/resource/O.co_Coliseum"
      }
    ],
    "id": "ebbd40c6a3ad4a8697e03dc804ff0b4f",
    "predicate mapping": [
      {
        "label": "Which",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam"
      }
    ]
  },
  {
    "question": "List the products of Playboy Enterprises?",
    "SerialNumber": "97",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Playboy_Enterprises> <http://dbpedia.org/property/products> ?uri } ",
    "entity mapping": [
      {
        "label": "Playboy Enterprises",
        "uri": "http://dbpedia.org/resource/Playboy_Enterprises"
      }
    ],
    "id": "5e3b1b3d67c14e79a69346483e72f30e",
    "predicate mapping": [
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      }
    ]
  },
  {
    "question": "Did Gwo Ka originate in Western Africa?",
    "SerialNumber": "98",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gwo_ka> <http://dbpedia.org/property/stylisticOrigins> <http://dbpedia.org/resource/West_Africa> }",
    "entity mapping": [
      {
        "label": "Gwo Ka",
        "uri": "http://dbpedia.org/resource/Gwo_ka"
      },
      {
        "label": "Western Africa",
        "uri": "http://dbpedia.org/resource/West_Africa"
      }
    ],
    "id": "0e1747e68f354dd482d80063d88e8466",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/stylisticOrigins"
      }
    ]
  },
  {
    "question": "What are some artists on the show whose opening theme is Send It On?",
    "SerialNumber": "99",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Send_It_On_(Disney\u0027s_Friends_for_Change_song)> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Send It On",
        "uri": "http://dbpedia.org/resource/Send_It_On_(Disney\u0027s_Friends_for_Change_song)"
      }
    ],
    "id": "7a11e9f4385d422fb3bd4fd737dbb307",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which company has a product named Visual Studio and One Drive as service ?",
    "SerialNumber": "100",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "One Drive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      },
      {
        "label": "Visual Studio",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio"
      }
    ],
    "id": "487fb2a215ba44abb1cd73b0c0c37fda",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Give me the total number of commander of the military conflicts whose commander is Roundhead (Wyandot).",
    "SerialNumber": "101",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/ontology/commander> ?uri }",
    "entity mapping": [
      {
        "label": "Roundhead",
        "uri": "http://dbpedia.org/resource/Roundhead_(Wyandot)"
      }
    ],
    "id": "449ad6621b0e4991bd93d146a64becab",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      }
    ]
  },
  {
    "question": "Who is the player who plays for the team that has the Michigan Stadium?",
    "SerialNumber": "102",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Michigan_Stadium> . ?uri <http://dbpedia.org/property/currentteam> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Michigan Stadium",
        "uri": "http://dbpedia.org/resource/Michigan_Stadium"
      }
    ],
    "id": "cff039a6ae4f4238b311e705c5b4614b",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/currentteam"
      },
      {
        "label": "player",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Which country\u0027s leader is David Johnston?",
    "SerialNumber": "103",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/David_Johnston>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "David Johnston",
        "uri": "http://dbpedia.org/resource/David_Johnston"
      }
    ],
    "id": "8bb7bae6734a4a6492c283e11e8db101",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "country\u0027s",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "How many factions have fought in wars where Francois Marie Le Marchand de Lignery was involved?",
    "SerialNumber": "104",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/François-Marie_Le_Marchand_de_Lignery> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Francois Marie Le Marchand de Lignery",
        "uri": "http://dbpedia.org/resource/François-Marie_Le_Marchand_de_Lignery"
      }
    ],
    "id": "22220c46c35d4bf18d79a51b59159884",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "marchand",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Who is the leader of the town where the Myntdu river originates?",
    "SerialNumber": "105",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Myntdu_River> <http://dbpedia.org/ontology/origin> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}",
    "entity mapping": [
      {
        "label": "Myntdu river",
        "uri": "http://dbpedia.org/resource/Myntdu_River"
      }
    ],
    "id": "fb9fef1a345e41a8a89924438d199ab6",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "town",
        "uri": "http://dbpedia.org/ontology/Town"
      }
    ]
  },
  {
    "question": "List the movies whose editors are born in London.",
    "SerialNumber": "106",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/London> . ?uri <http://dbpedia.org/ontology/editing> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "London",
        "uri": "http://dbpedia.org/resource/London"
      }
    ],
    "id": "f6f6f72678964b8d94d2af776d9f76bb",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "editors",
        "uri": "http://dbpedia.org/ontology/editing"
      },
      {
        "label": "movies",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the incumbent of the Al Gore presidential campaign, 2000 and also the president of the Ann Lewis ?",
    "SerialNumber": "107",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri. <http://dbpedia.org/resource/Ann_Lewis> <http://dbpedia.org/ontology/president> ?uri} ",
    "entity mapping": [
      {
        "label": "Al Gore presidential campaign, 2000",
        "uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000"
      },
      {
        "label": "Ann Lewis",
        "uri": "http://dbpedia.org/resource/Ann_Lewis"
      }
    ],
    "id": "413efd91c7ba4afcbd998432bd8c5531",
    "predicate mapping": [
      {
        "label": "incumbent",
        "uri": "http://dbpedia.org/ontology/incumbent"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "Which royal person married the successor of Darius I?",
    "SerialNumber": "108",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Darius_I> . ?uri <http://dbpedia.org/property/spouse> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Darius I",
        "uri": "http://dbpedia.org/resource/Darius_I"
      }
    ],
    "id": "f20340cfdedd4821a148e2baf7bbc531",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "royal person",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "What is the region of the Kim Sawchuk which is also served by the Airtours International Airways ?",
    "SerialNumber": "109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/property/destinations> ?uri} ",
    "entity mapping": [
      {
        "label": "Kim Sawchuk",
        "uri": "http://dbpedia.org/resource/Kim_Sawchuk"
      },
      {
        "label": "Airtours International Airways",
        "uri": "http://dbpedia.org/resource/Airtours_International_Airways"
      }
    ],
    "id": "553a9cedaec54b4f8160ba21fec81957",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "served by",
        "uri": "http://dbpedia.org/property/destinations"
      }
    ]
  },
  {
    "question": "Where was Antonio Giannini born?",
    "SerialNumber": "110",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antonio_Giannini> <http://dbpedia.org/ontology/birthPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "Antonio Giannini",
        "uri": "http://dbpedia.org/resource/Antonio_Giannini"
      }
    ],
    "id": "30e7fe4d37d4480d8bcd9e85057504ab",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Where was David Scherman trained ?",
    "SerialNumber": "111",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/ontology/training> ?uri } ",
    "entity mapping": [
      {
        "label": "David Scherman",
        "uri": "http://dbpedia.org/resource/David_Scherman"
      }
    ],
    "id": "b1eb16707621406e83de3269573e6703",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/training"
      }
    ]
  },
  {
    "question": "Which company offer service of Outlook.com and OneDrive?",
    "SerialNumber": "112",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Outlook.com",
        "uri": "http://dbpedia.org/resource/Outlook.com"
      },
      {
        "label": "OneDrive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      }
    ],
    "id": "53e6885f679049b3912f392f6b6d80c3",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the province of Rouen Business School ?",
    "SerialNumber": "113",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rouen_Business_School> <http://dbpedia.org/property/province> ?uri } ",
    "entity mapping": [
      {
        "label": "Rouen Business School",
        "uri": "http://dbpedia.org/resource/Rouen_Business_School"
      }
    ],
    "id": "b7ac1b81508e4f6081ad0dc4b5b009f5",
    "predicate mapping": [
      {
        "label": "province",
        "uri": "http://dbpedia.org/property/province"
      }
    ]
  },
  {
    "question": "What religions do politicians in the Korean Minjoo Party follow?",
    "SerialNumber": "114",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Minjoo_Party_of_Korea> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Korean Minjoo Party",
        "uri": "http://dbpedia.org/resource/Minjoo_Party_of_Korea"
      }
    ],
    "id": "3b974c045b2e4beb9b59e0a8b37717cc",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "religions",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Give me the total number of employer of the engineers whose one of the employer is McDonnell Aircraft ?",
    "SerialNumber": "115",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/McDonnell_Aircraft> . ?x <http://dbpedia.org/ontology/employer> ?uri }",
    "entity mapping": [
      {
        "label": "McDonnell Aircraft",
        "uri": "http://dbpedia.org/resource/McDonnell_Aircraft"
      }
    ],
    "id": "6c1e8f0fd26d46a99e74e077585e78c5",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer"
      }
    ]
  },
  {
    "question": "What were the major actions taken by the politicians living in Gales Ferry, Connecticut?",
    "SerialNumber": "116",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Gales_Ferry,_Connecticut> . ?x <http://dbpedia.org/ontology/battle> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Gales Ferry, Connecticut",
        "uri": "http://dbpedia.org/resource/Gales_Ferry,_Connecticut"
      }
    ],
    "id": "120b4c5d72884ab7bed686704a78e112",
    "predicate mapping": [
      {
        "label": "living in",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "Where was Live in Detroit, MI recorded ?",
    "SerialNumber": "117",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri } ",
    "entity mapping": [
      {
        "label": "Live in Detroit, MI",
        "uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI"
      }
    ],
    "id": "e9800af29b274e64b6e1d8fe78b11a40",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      }
    ]
  },
  {
    "question": "who all have been a manager of english under twenty one football team?",
    "SerialNumber": "118",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team> } ",
    "entity mapping": [
      {
        "label": "twenty one football team",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team"
      }
    ],
    "id": "5c2a0fdd797b4369b317ef7541f9dc35",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/property/managerclubs"
      }
    ]
  },
  {
    "question": "Name the sea with Helsinki as one of the shore city and is also an outflow for Danish straits?",
    "SerialNumber": "119",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Helsinki> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Helsinki",
        "uri": "http://dbpedia.org/resource/Helsinki"
      },
      {
        "label": "Danish straits",
        "uri": "http://dbpedia.org/resource/Danish_straits"
      }
    ],
    "id": "e3f84d4ea2bf4837a4250a5cce509c30",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "What awards have been won by the executive producer of Timmy Time ?",
    "SerialNumber": "120",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Timmy_Time> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Timmy Time",
        "uri": "http://dbpedia.org/resource/Timmy_Time"
      }
    ],
    "id": "357edf2393e94d8c9218db99a838a080",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What is the district of Fort Heath radar station ?",
    "SerialNumber": "121",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Heath_radar_station> <http://dbpedia.org/property/district> ?uri } ",
    "entity mapping": [
      {
        "label": "Fort Heath radar station",
        "uri": "http://dbpedia.org/resource/Fort_Heath_radar_station"
      }
    ],
    "id": "37a0e0437d3549d1ab607f3bcc29d49b",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district"
      }
    ]
  },
  {
    "question": "What is the common nickname given both to Harding academy and Lyons township high school?",
    "SerialNumber": "122",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harding_Academy_(Memphis)> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri . }",
    "entity mapping": [
      {
        "label": "Harding academy",
        "uri": "http://dbpedia.org/resource/Harding_Academy_(Memphis)"
      },
      {
        "label": "Lyons township high school",
        "uri": "http://dbpedia.org/resource/Lyons_Township_High_School"
      }
    ],
    "id": "d704a94fd1fb40aa80e96962ef8ad7f2",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "Count all those who\u0027ve played for the youth club which owns the Rosario, Santa Fe stadium.",
    "SerialNumber": "123",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Rosario,_Santa_Fe> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "entity mapping": [
      {
        "label": "Rosario, Santa Fe",
        "uri": "http://dbpedia.org/resource/Rosario,_Santa_Fe"
      }
    ],
    "id": "3ca24dd2487c4192af7eabf87b4a30f5",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/ground"
      },
      {
        "label": "youth club",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "What are some families of mammals in the animal kingdom?",
    "SerialNumber": "124",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/family> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "animal",
        "uri": "http://dbpedia.org/resource/Animal"
      }
    ],
    "id": "4ee83040646043bab75bab4d3b19e105",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "mammals",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "What is the profession of the Chris Myers (New Jersey) which is the governing body of Oahu Railway and Land Company ?",
    "SerialNumber": "125",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Myers_(New_Jersey)> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri} ",
    "entity mapping": [
      {
        "label": "Chris Myers (New Jersey)",
        "uri": "http://dbpedia.org/resource/Chris_Myers_(New_Jersey)"
      },
      {
        "label": "Oahu Railway and Land Company",
        "uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company"
      }
    ],
    "id": "1dd15e0e5e684a168e1ded727d0942ed",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      }
    ]
  },
  {
    "question": "Count all the different purposes followed by the different NGOs.",
    "SerialNumber": "126",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Non-governmental_organization> . ?x <http://dbpedia.org/property/purpose> ?uri  . }",
    "entity mapping": [
      {
        "label": "NGOs",
        "uri": "http://dbpedia.org/resource/Non-governmental_organization"
      }
    ],
    "id": "9633e3f24eb54f34b01ee6d1c08f943b",
    "predicate mapping": [
      {
        "label": "Count",
        "uri": "http://dbpedia.org/property/type"
      },
      {
        "label": "purposes",
        "uri": "http://dbpedia.org/property/purpose"
      }
    ]
  },
  {
    "question": "Which television show\u0027s developer is Brian Graden and voices to the character is by Isaac Hayes?",
    "SerialNumber": "127",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Brian Graden",
        "uri": "http://dbpedia.org/resource/Brian_Graden"
      },
      {
        "label": "Isaac Hayes",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes"
      }
    ],
    "id": "0e1f9caa3e1941c08f8685a375af037d",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "voices",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "television show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Did Steve Sampson manage a club of Santa Clara university",
    "SerialNumber": "129",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Steve_Sampson> <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Santa_Clara_University> }",
    "entity mapping": [
      {
        "label": "Steve Sampson",
        "uri": "http://dbpedia.org/resource/Steve_Sampson"
      },
      {
        "label": "Santa Clara university",
        "uri": "http://dbpedia.org/resource/Santa_Clara_University"
      }
    ],
    "id": "6e5ca1c3866c4d40803a16e1119672a6",
    "predicate mapping": [
      {
        "label": "manage a club",
        "uri": "http://dbpedia.org/ontology/managerClub"
      }
    ]
  },
  {
    "question": "What newspapers\u0027s owners is Schibsted",
    "SerialNumber": "130",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "Schibsted",
        "uri": "http://dbpedia.org/resource/Schibsted"
      }
    ],
    "id": "60a97365c85d48f790174e2e468ec6e0",
    "predicate mapping": [
      {
        "label": "owners",
        "uri": "http://dbpedia.org/property/owners"
      },
      {
        "label": "newspapers\u0027s",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "Which arena of WPC Dynamo Moscow is death location of Tigran Petrosian >",
    "SerialNumber": "131",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri. <http://dbpedia.org/resource/Tigran_Petrosian> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "WPC Dynamo Moscow",
        "uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow"
      },
      {
        "label": "Tigran Petrosian",
        "uri": "http://dbpedia.org/resource/Tigran_Petrosian"
      }
    ],
    "id": "eef1fbca5e44495eb158ddc399496b52",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena"
      },
      {
        "label": "death location",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "List the name of the soccer clubs whose chairman is Joan Laporta.",
    "SerialNumber": "132",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Joan_Laporta> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "Joan Laporta",
        "uri": "http://dbpedia.org/resource/Joan_Laporta"
      }
    ],
    "id": "b7d34b18a1a7492986c025ca171504e3",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "soccer clubs",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "List all the layouts of the automobile whose one of the layout is four-wheel-drive layout ?",
    "SerialNumber": "133",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/layout> <http://dbpedia.org/resource/Front-engine,_four-wheel-drive_layout> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "four-wheel-drive layout",
        "uri": "http://dbpedia.org/resource/Front-engine,_four-wheel-drive_layout"
      }
    ],
    "id": "8a436b4d6a9c4452a7cdb52c1a8fb54e",
    "predicate mapping": [
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "In which time zone is Pong Pha?",
    "SerialNumber": "134",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pong_Pha> <http://dbpedia.org/ontology/timeZone> ?uri } ",
    "entity mapping": [
      {
        "label": "Pong Pha",
        "uri": "http://dbpedia.org/resource/Pong_Pha"
      }
    ],
    "id": "d1e59f4659f1447daf1f03518db7111e",
    "predicate mapping": [
      {
        "label": "zone time",
        "uri": "http://dbpedia.org/ontology/timeZone"
      }
    ]
  },
  {
    "question": "What is the alma mater of the Angela Trusty and Charles Ayres?",
    "SerialNumber": "135",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Angela_Trusty> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Charles_Ayres> <http://dbpedia.org/ontology/almaMater> ?uri . }",
    "entity mapping": [
      {
        "label": "Angela Trusty",
        "uri": "http://dbpedia.org/resource/Angela_Trusty"
      },
      {
        "label": "Charles Ayres",
        "uri": "http://dbpedia.org/resource/Charles_Ayres"
      }
    ],
    "id": "36826b2b0cc1469b91526bbfeeaa3d35",
    "predicate mapping": [
      {
        "label": "mater alma",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "mater alma",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Which band had the members of The Conglomerate, and has made \u0027Before I let you go\u0027?",
    "SerialNumber": "136",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Conglomerate_(American_group)> <http://dbpedia.org/property/pastMembers> ?uri. <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri} ",
    "entity mapping": [
      {
        "label": "The Conglomerate",
        "uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)"
      },
      {
        "label": "Before I let you go",
        "uri": "http://dbpedia.org/resource/Before_I_Let_You_Go"
      }
    ],
    "id": "c6f59ba390834c9cb144952a1bedf699",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      }
    ]
  },
  {
    "question": "What is the birth place of the cast of Lagnacha Dhumdhadaka?",
    "SerialNumber": "137",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lagnacha_Dhumdhadaka> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lagnacha Dhumdhadaka",
        "uri": "http://dbpedia.org/resource/Lagnacha_Dhumdhadaka"
      }
    ],
    "id": "74d88ff455d1442eb2c7cf52c8f6bed4",
    "predicate mapping": [
      {
        "label": "cast",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "How many rivers start in an English speaking country?",
    "SerialNumber": "138",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/English_language> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "English",
        "uri": "http://dbpedia.org/resource/English_language"
      }
    ],
    "id": "6f88aee8549b4f49983ccc544c1cac61",
    "predicate mapping": [
      {
        "label": "speaking",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the television show whose theme music composer\u0027s home town is El Sobrante, California?",
    "SerialNumber": "139",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/El_Sobrante,_California> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "El Sobrante, California",
        "uri": "http://dbpedia.org/resource/El_Sobrante,_California"
      }
    ],
    "id": "175315957baa44d4803c095b646ee477",
    "predicate mapping": [
      {
        "label": "town home",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "composer\u0027s",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What  is the Nickname of Daniel O\u0027Regan ?",
    "SerialNumber": "140",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_O\u0027Regan> <http://dbpedia.org/property/nickname> ?uri } ",
    "entity mapping": [
      {
        "label": "Daniel O\u0027Regan",
        "uri": "http://dbpedia.org/resource/Daniel_O\u0027Regan"
      }
    ],
    "id": "a12c261c27154991801e5701a39bdc5b",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "Where are Aureus and Solidus used as currency?",
    "SerialNumber": "141",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . }",
    "entity mapping": [
      {
        "label": "Aureus",
        "uri": "http://dbpedia.org/resource/Aureus"
      },
      {
        "label": "Solidus",
        "uri": "http://dbpedia.org/resource/Solidus_(coin)"
      }
    ],
    "id": "83982663a6f04e249b296b7d3bee0c46",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "Music for what was made by someone who died of a cardiovascular disease?",
    "SerialNumber": "142",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Cardiovascular_disease> . ?uri <http://dbpedia.org/property/music> ?x  . }",
    "entity mapping": [
      {
        "label": "cardiovascular disease",
        "uri": "http://dbpedia.org/resource/Cardiovascular_disease"
      }
    ],
    "id": "ec38c30a73c44774b95944ad398e3e8b",
    "predicate mapping": [
      {
        "label": "died of",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      }
    ]
  },
  {
    "question": "Was Tim Gunn a guest on The Broken Code?",
    "SerialNumber": "144",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Broken_Code> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }",
    "entity mapping": [
      {
        "label": "The Broken Code",
        "uri": "http://dbpedia.org/resource/The_Broken_Code"
      },
      {
        "label": "Tim Gunn",
        "uri": "http://dbpedia.org/resource/Tim_Gunn"
      }
    ],
    "id": "ba52d02c389e44feaf5d0a833e155c0e",
    "predicate mapping": [
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "In how many nations can I find dishes made of Shallot?",
    "SerialNumber": "145",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Shallot",
        "uri": "http://dbpedia.org/resource/Shallot"
      }
    ],
    "id": "0d1b4492ca3a491c916bd0ceefdde54d",
    "predicate mapping": [
      {
        "label": "find",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "nations",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "nations",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Who are some american football players whose high school is Oktoc, Mississippi?",
    "SerialNumber": "146",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Oktoc,_Mississippi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Oktoc, Mississippi",
        "uri": "http://dbpedia.org/resource/Oktoc,_Mississippi"
      }
    ],
    "id": "6d6a489b56814dafafe173f865cf480d",
    "predicate mapping": [
      {
        "label": "school high",
        "uri": "http://dbpedia.org/property/highSchool"
      },
      {
        "label": "american football players",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "What system is both a platform where Nord runs and also distributed The beauty inside?",
    "SerialNumber": "147",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nord_(video_game)> <http://dbpedia.org/ontology/computingPlatform> ?uri. <http://dbpedia.org/resource/The_Beauty_Inside> <http://dbpedia.org/ontology/distributor> ?uri . }",
    "entity mapping": [
      {
        "label": "Nord",
        "uri": "http://dbpedia.org/resource/Nord_(video_game)"
      },
      {
        "label": "The beauty inside",
        "uri": "http://dbpedia.org/resource/The_Beauty_Inside"
      }
    ],
    "id": "8b5986c0fa344ce8b5e1d878d471fe1c",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "distributed",
        "uri": "http://dbpedia.org/ontology/distributor"
      }
    ]
  },
  {
    "question": "Is Tirana the largest city of Albania?",
    "SerialNumber": "148",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Albania> <http://dbpedia.org/property/largestCity> <http://dbpedia.org/resource/Tirana> }",
    "entity mapping": [
      {
        "label": "Albania",
        "uri": "http://dbpedia.org/resource/Albania"
      },
      {
        "label": "Tirana",
        "uri": "http://dbpedia.org/resource/Tirana"
      }
    ],
    "id": "622f827a327f450d9f7674c67abce591",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity"
      }
    ]
  },
  {
    "question": "Who were all the people in office when bob hawke was the PM?",
    "SerialNumber": "150",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Bob_Hawke> } ",
    "entity mapping": [
      {
        "label": "bob hawke",
        "uri": "http://dbpedia.org/resource/Bob_Hawke"
      }
    ],
    "id": "98df0f1a194d4bb1861607e4d2a1477a",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "Name some shows whose company is owned by the CBS Corporation?",
    "SerialNumber": "151",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/CBS_Corporation> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "CBS Corporation",
        "uri": "http://dbpedia.org/resource/CBS_Corporation"
      }
    ],
    "id": "129e928aa6144eaba586e4379ae9f973",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which sports are played at institues in Taguig?",
    "SerialNumber": "152",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Taguig> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "entity mapping": [
      {
        "label": "Taguig",
        "uri": "http://dbpedia.org/resource/Taguig"
      }
    ],
    "id": "38c688a1da544a7fb79c1a239732903f",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "sports",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "institues",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution"
      }
    ]
  },
  {
    "question": "Joe Hahn is the member of what band?",
    "SerialNumber": "153",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Joe_Hahn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Joe Hahn",
        "uri": "http://dbpedia.org/resource/Joe_Hahn"
      }
    ],
    "id": "47e1ecb9aed24329aa182ac22dd61027",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Name the television show whose distributor is Comedy central and  the character voice is given by Isaac hayes ?",
    "SerialNumber": "154",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Comedy central",
        "uri": "http://dbpedia.org/resource/Comedy_Central"
      },
      {
        "label": "Isaac hayes",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes"
      }
    ],
    "id": "7bbd4a94e58e4bd2b5c13beb56280925",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Raymond Johansen is the mayor of what city?",
    "SerialNumber": "155",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Raymond_Johansen>  . }",
    "entity mapping": [
      {
        "label": "Raymond Johansen",
        "uri": "http://dbpedia.org/resource/Raymond_Johansen"
      }
    ],
    "id": "be6db808f6ae400989a772e77e8e9ff1",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "What is the nation of the speedway league where Ikaros Smederna played?",
    "SerialNumber": "156",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ikaros_Smederna> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SpeedwayLeague>}",
    "entity mapping": [
      {
        "label": "Ikaros Smederna",
        "uri": "http://dbpedia.org/resource/Ikaros_Smederna"
      }
    ],
    "id": "f919a579f278404ea6751583426857cd",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "speedway league",
        "uri": "http://dbpedia.org/ontology/SpeedwayLeague"
      }
    ]
  },
  {
    "question": "What are the kind of games one can play on windows?",
    "SerialNumber": "157",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Microsoft_Windows> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      }
    ],
    "id": "714196c75ed547948e2bd73be5cd2cc2",
    "predicate mapping": [
      {
        "label": "on",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "one",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Count the number of sports played by schools which play hockey ?",
    "SerialNumber": "158",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Hockey> . ?x <http://dbpedia.org/ontology/sport> ?uri }",
    "entity mapping": [
      {
        "label": "hockey",
        "uri": "http://dbpedia.org/resource/Hockey"
      }
    ],
    "id": "87fb8fce27b84f93b8bce8c5f37fd3f3",
    "predicate mapping": [
      {
        "label": "sports",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "sports",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Who holds stock in the railway lines ending in Washington DC?",
    "SerialNumber": "159",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Union_Station_(Washington,_D.C.)> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "entity mapping": [
      {
        "label": "Washington DC",
        "uri": "http://dbpedia.org/resource/Union_Station_(Washington,_D.C.)"
      }
    ],
    "id": "25a932470707489bb49238d7d424b9a9",
    "predicate mapping": [
      {
        "label": "ending",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "holds stock",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "railway lines",
        "uri": "http://dbpedia.org/ontology/RailwayLine"
      }
    ]
  },
  {
    "question": "Where is Temenos Group founded ?",
    "SerialNumber": "160",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temenos_Group> <http://dbpedia.org/property/foundation> ?uri } ",
    "entity mapping": [
      {
        "label": "Temenos Group",
        "uri": "http://dbpedia.org/resource/Temenos_Group"
      }
    ],
    "id": "bbcc0bde9178475b83167718e3f7f63c",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      }
    ]
  },
  {
    "question": "What was the language of the single which came before To Know Him Is to Love Him?",
    "SerialNumber": "161",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/language> ?uri  . }",
    "entity mapping": [
      {
        "label": "To Know Him Is to Love Him",
        "uri": "http://dbpedia.org/resource/To_Know_Him_Is_to_Love_Him"
      }
    ],
    "id": "d08d5583e3724547baa6711c074b4e4c",
    "predicate mapping": [
      {
        "label": "before",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      }
    ]
  },
  {
    "question": "Where was the narrator of Spain on the Road Again born?",
    "SerialNumber": "162",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Spain..._on_the_Road_Again> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Spain on the Road Again",
        "uri": "http://dbpedia.org/resource/Spain..._on_the_Road_Again"
      }
    ],
    "id": "b144d19ed17845e3be65c933a80b56a5",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "What is the common school of Chris Marve and Neria Douglass?",
    "SerialNumber": "163",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Marve> <http://dbpedia.org/ontology/school> ?uri. <http://dbpedia.org/resource/Neria_Douglass> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Chris Marve",
        "uri": "http://dbpedia.org/resource/Chris_Marve"
      },
      {
        "label": "Neria Douglass",
        "uri": "http://dbpedia.org/resource/Neria_Douglass"
      }
    ],
    "id": "99e4d849107646e78dc70715e92b6f25",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school"
      },
      {
        "label": "common",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "In which areas are the radio stations of Monticello, Maine available too?",
    "SerialNumber": "164",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Monticello,_Maine> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "Monticello, Maine",
        "uri": "http://dbpedia.org/resource/Monticello,_Maine"
      }
    ],
    "id": "31da90b739024aa79457f4f8a2e5e432",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "areas",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "radio stations",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "Name the TV show whose composer is Judy Hart Angelo and company as Paramount Television ?",
    "SerialNumber": "166",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Judy Hart Angelo",
        "uri": "http://dbpedia.org/resource/Judy_Hart_Angelo"
      },
      {
        "label": "Paramount Television",
        "uri": "http://dbpedia.org/resource/Paramount_Television"
      }
    ],
    "id": "584cc0fdb95040f19cc8ee83fa1c62bb",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "TV show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Rivers from which countries flow into the Caspian?",
    "SerialNumber": "167",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Caspian_Sea> . ?x <http://dbpedia.org/ontology/sourceCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Caspian",
        "uri": "http://dbpedia.org/resource/Caspian_Sea"
      }
    ],
    "id": "8bcd288b39ee436f92f8e71b129048af",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Name the military unit whose garrison is Arlington County, Virginia and command structure is United States Department of Defense?",
    "SerialNumber": "168",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Arlington County, Virginia",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia"
      },
      {
        "label": "United States Department of Defense",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense"
      }
    ],
    "id": "ebdbaf92c7bf4d16bf1e0624908a684f",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      },
      {
        "label": "structure command",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Where does the successor of Thongsuk Samdaengpan reside?",
    "SerialNumber": "169",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Thongsuk_Samdaengpan> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "Thongsuk Samdaengpan",
        "uri": "http://dbpedia.org/resource/Thongsuk_Samdaengpan"
      }
    ],
    "id": "6cda75748c1440b1a5c1a4d4f6d2810d",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "what are some devices made by asus?",
    "SerialNumber": "170",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "asus",
        "uri": "http://dbpedia.org/resource/Asus"
      }
    ],
    "id": "d30b2d9672204e8ba6c45d14bee2bdb1",
    "predicate mapping": [
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "devices",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Count the number of people who graduated from universities affiliated with the NCAA.",
    "SerialNumber": "171",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/education> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "NCAA",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association"
      }
    ],
    "id": "3da7b4f9f9174d63901356cf058dd0a6",
    "predicate mapping": [
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Is Queen Latifah associated with Afrika Baby Bam?",
    "SerialNumber": "172",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Afrika_Baby_Bam> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Queen_Latifah> }",
    "entity mapping": [
      {
        "label": "Afrika Baby Bam",
        "uri": "http://dbpedia.org/resource/Afrika_Baby_Bam"
      },
      {
        "label": "Queen Latifah",
        "uri": "http://dbpedia.org/resource/Queen_Latifah"
      }
    ],
    "id": "452897c147984666bc0750d8e1981a80",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "Name the sports played by PATTS College of Aeronautics?",
    "SerialNumber": "174",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri } ",
    "entity mapping": [
      {
        "label": "PATTS College of Aeronautics",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics"
      }
    ],
    "id": "fee7a4bf34654f22a3e70e7544af3f20",
    "predicate mapping": [
      {
        "label": "sports",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Which country did the prime minister belong to who was served by Thanong Bidaya ?",
    "SerialNumber": "176",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Thanong_Bidaya> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }",
    "entity mapping": [
      {
        "label": "Thanong Bidaya",
        "uri": "http://dbpedia.org/resource/Thanong_Bidaya"
      }
    ],
    "id": "9fa439841abd475690547f59b821490f",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "Name the major shrine of Bogumilus?",
    "SerialNumber": "179",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogumilus> <http://dbpedia.org/ontology/majorShrine> ?uri } ",
    "entity mapping": [
      {
        "label": "Bogumilus",
        "uri": "http://dbpedia.org/resource/Bogumilus"
      }
    ],
    "id": "49e05cb4c7b944b687a0c3d8d1766fc5",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      }
    ]
  },
  {
    "question": "Name the office holder whose predecessor is  Henry E. Catto, Jr. and won Screen Actors Guild Life Achievement Award?",
    "SerialNumber": "180",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Henry E. Catto, Jr.",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr."
      },
      {
        "label": "Screen Actors Guild Life Achievement Award",
        "uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award"
      }
    ],
    "id": "a0d691169c504035af1d90fd31a2014a",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "Award",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "In which teams have league members of the Czech Extraliga played previously?",
    "SerialNumber": "183",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Czech_Extraliga> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
    "entity mapping": [
      {
        "label": "Czech Extraliga",
        "uri": "http://dbpedia.org/resource/Czech_Extraliga"
      }
    ],
    "id": "37f49d990d204f4c83aa133bab321be3",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "Who are buried in  Rome and Mausoleum of Augustus?",
    "SerialNumber": "187",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome> . ?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus> . }",
    "entity mapping": [
      {
        "label": "Rome",
        "uri": "http://dbpedia.org/resource/Rome"
      },
      {
        "label": "Mausoleum of Augustus",
        "uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus"
      }
    ],
    "id": "fc62fafe2c5c436cb7695e5a91beb9ed",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      }
    ]
  },
  {
    "question": "How many battles have involved commanders of 1st Free French Division?",
    "SerialNumber": "188",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/1st_Free_French_Division> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/property/battles> ?uri  . }",
    "entity mapping": [
      {
        "label": "1st Free French Division",
        "uri": "http://dbpedia.org/resource/1st_Free_French_Division"
      }
    ],
    "id": "4243b354b7954e75ad5981538c61dfa1",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Count the number of cities on the Mediterranean Sea?",
    "SerialNumber": "189",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mediterranean Sea",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea"
      }
    ],
    "id": "172bb4fd523c408cb8cfc0bd46db1031",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "Who is the office holder with deputies as Neil Brown and Andrew Peacock?",
    "SerialNumber": "194",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)> . ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Andrew_Peacock> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Neil Brown",
        "uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)"
      },
      {
        "label": "Andrew Peacock",
        "uri": "http://dbpedia.org/resource/Andrew_Peacock"
      }
    ],
    "id": "da9c6ff456104d10945b6af22f54ca27",
    "predicate mapping": [
      {
        "label": "deputies",
        "uri": "http://dbpedia.org/property/deputy"
      },
      {
        "label": "deputies",
        "uri": "http://dbpedia.org/property/deputy"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which executive producer of Into the Dalek also produced Wizards vs Aliens ?",
    "SerialNumber": "195",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Into_the_Dalek> <http://dbpedia.org/property/executiveProducer> ?uri. <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri} ",
    "entity mapping": [
      {
        "label": "Into the Dalek",
        "uri": "http://dbpedia.org/resource/Into_the_Dalek"
      },
      {
        "label": "Wizards vs Aliens",
        "uri": "http://dbpedia.org/resource/Wizards_vs_Aliens"
      }
    ],
    "id": "629c24823cdd4a4793f7696489607700",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "Who appointed the successor of Charles Pinckney ?",
    "SerialNumber": "196",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Charles_Pinckney_(governor)> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Charles Pinckney",
        "uri": "http://dbpedia.org/resource/Charles_Pinckney_(governor)"
      }
    ],
    "id": "c5bb228043054a8ea67035887fd84db8",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "Where did they debut their careers , those who have played for US men\u0027s national soccer team?",
    "SerialNumber": "197",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/United_States_men\u0027s_national_soccer_team> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }",
    "entity mapping": [
      {
        "label": "US men\u0027s national soccer team",
        "uri": "http://dbpedia.org/resource/United_States_men\u0027s_national_soccer_team"
      }
    ],
    "id": "dff1afb3640745f382d04cc81eeff9e1",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "EU Broadcasting Union is the owner of the distributor of what?",
    "SerialNumber": "199",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/European_Broadcasting_Union> . ?uri <http://dbpedia.org/ontology/distributor> ?x  . }",
    "entity mapping": [
      {
        "label": "EU Broadcasting Union",
        "uri": "http://dbpedia.org/resource/European_Broadcasting_Union"
      }
    ],
    "id": "ea289b0161b2405ca5ec1de91100eab1",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor"
      }
    ]
  },
  {
    "question": "Was Jack Ryan a nominee of US Senate?",
    "SerialNumber": "200",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/United_States_Senate> }",
    "entity mapping": [
      {
        "label": "Jack Ryan",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)"
      },
      {
        "label": "US Senate",
        "uri": "http://dbpedia.org/resource/United_States_Senate"
      }
    ],
    "id": "38646a24ca5a41c2b44a07158a6d5483",
    "predicate mapping": [
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee"
      }
    ]
  },
  {
    "question": "What is the broadcast area of WBCQ (SW) ?",
    "SerialNumber": "204",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBCQ_(SW)> <http://dbpedia.org/property/area> ?uri } ",
    "entity mapping": [
      {
        "label": "WBCQ",
        "uri": "http://dbpedia.org/resource/WBCQ_(SW)"
      }
    ],
    "id": "c4acb6859ef2400a8989bd05cdf3f766",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      }
    ]
  },
  {
    "question": "List the cities which share the same water body as that of Florida ?",
    "SerialNumber": "206",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Florida> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater>}",
    "entity mapping": [
      {
        "label": "Florida",
        "uri": "http://dbpedia.org/resource/Florida"
      }
    ],
    "id": "df05400e047e44529cb00216e3ca4203",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "water body of",
        "uri": "http://dbpedia.org/ontology/BodyOfWater"
      }
    ]
  },
  {
    "question": "God Defend New Zealand is the national anthem of which country?",
    "SerialNumber": "207",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalAnthem> <http://dbpedia.org/resource/God_Defend_New_Zealand> } ",
    "entity mapping": [
      {
        "label": "God Defend New Zealand",
        "uri": "http://dbpedia.org/resource/God_Defend_New_Zealand"
      }
    ],
    "id": "dc045b68c18349d693ff758050108ee5",
    "predicate mapping": [
      {
        "label": "national anthem",
        "uri": "http://dbpedia.org/property/nationalAnthem"
      }
    ]
  },
  {
    "question": "Who founded the sister stations of Discovery Communications?",
    "SerialNumber": "210",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/Discovery_Communications> . ?x <http://dbpedia.org/property/founder> ?uri  . }",
    "entity mapping": [
      {
        "label": "Discovery Communications",
        "uri": "http://dbpedia.org/resource/Discovery_Communications"
      }
    ],
    "id": "4d0d78713fc845a3ac7f51b309934ca1",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterNames"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/founder"
      }
    ]
  },
  {
    "question": "What are the notable works of the person who produced Queer as Folk?",
    "SerialNumber": "211",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Queer as Folk",
        "uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)"
      }
    ],
    "id": "05c054d50e42453aaea8ea3da8ce6afa",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "notable works",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What are the border of High Desert (Oregon)?",
    "SerialNumber": "212",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/High_Desert_(Oregon)> <http://dbpedia.org/ontology/border> ?uri } ",
    "entity mapping": [
      {
        "label": "High Desert (Oregon)",
        "uri": "http://dbpedia.org/resource/High_Desert_(Oregon)"
      }
    ],
    "id": "f90fbf38ccac4a54915b9f68886b7257",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      }
    ]
  },
  {
    "question": "What all is owned by a company one of whose division is Paramount Domestic Television?",
    "SerialNumber": "213",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Paramount_Domestic_Television> . ?uri <http://dbpedia.org/property/company> ?x  . }",
    "entity mapping": [
      {
        "label": "Paramount Domestic Television",
        "uri": "http://dbpedia.org/resource/Paramount_Domestic_Television"
      }
    ],
    "id": "0305f6c0414b4f0cba825e2346e0b8a0",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      }
    ]
  },
  {
    "question": " Which musical band produced the subsequent work of City of New Orleans ?",
    "SerialNumber": "214",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/City_of_New_Orleans_(song)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/musicalBand> ?uri  . }",
    "entity mapping": [
      {
        "label": "City of New Orleans",
        "uri": "http://dbpedia.org/resource/City_of_New_Orleans_(song)"
      }
    ],
    "id": "5714a0b607134b3494e96af29ff7888b",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "Which artist of Madagascar: Operation Penguin is also the writer of He\u0027s a Pirate ?",
    "SerialNumber": "216",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Madagascar:_Operation_Penguin> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/He\u0027s_a_Pirate> <http://dbpedia.org/property/writer> ?uri} ",
    "entity mapping": [
      {
        "label": "Operation Penguin",
        "uri": "http://dbpedia.org/resource/Madagascar:_Operation_Penguin"
      },
      {
        "label": "He\u0027s a Pirate",
        "uri": "http://dbpedia.org/resource/He\u0027s_a_Pirate"
      }
    ],
    "id": "d527decfd5df49a9852e46439a6e38ec",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "Where did Goran Cengic die?",
    "SerialNumber": "217",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goran_Čengić> <http://dbpedia.org/property/deathPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "Goran Cengic",
        "uri": "http://dbpedia.org/resource/Goran_Čengić"
      }
    ],
    "id": "789d45349934476b8ebaf084f1161fc0",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "The authors of Zhorstoke nebo was influenced by whom ?",
    "SerialNumber": "218",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Zhorstoke_nebo> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . }",
    "entity mapping": [
      {
        "label": "Zhorstoke nebo",
        "uri": "http://dbpedia.org/resource/Zhorstoke_nebo"
      }
    ],
    "id": "39173d997c5d410fab182a0ea5ca6a78",
    "predicate mapping": [
      {
        "label": "authors",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "influenced by",
        "uri": "http://dbpedia.org/ontology/influencedBy"
      }
    ]
  },
  {
    "question": "Name the basketball team which is coached by Louis Dunbar and has president as Jeff Munn ?",
    "SerialNumber": "219",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Louis_Dunbar> . ?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Jeff_Munn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "entity mapping": [
      {
        "label": "Louis Dunbar",
        "uri": "http://dbpedia.org/resource/Louis_Dunbar"
      },
      {
        "label": "Jeff Munn",
        "uri": "http://dbpedia.org/resource/Jeff_Munn"
      }
    ],
    "id": "1bdfe333c33d4a9b93c68aff83578281",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam"
      }
    ]
  },
  {
    "question": "Which hometown of pavel Moroz is also the palace of birthplace of Helena of Moscow ?",
    "SerialNumber": "222",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pavel_Moroz> <http://dbpedia.org/property/hometown> ?uri. <http://dbpedia.org/resource/Helena_of_Moscow> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "pavel Moroz",
        "uri": "http://dbpedia.org/resource/Pavel_Moroz"
      },
      {
        "label": "Helena of Moscow",
        "uri": "http://dbpedia.org/resource/Helena_of_Moscow"
      }
    ],
    "id": "a79197506cc946a797bee8f7882d90f0",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Name the largest city in the county where there is a Cy-Fair High School.",
    "SerialNumber": "224",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cy-Fair_High_School> <http://dbpedia.org/ontology/county> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cy-Fair High School",
        "uri": "http://dbpedia.org/resource/Cy-Fair_High_School"
      }
    ],
    "id": "d20a76100844447baaac326f589861ce",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/county"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "What are the academic interests of the past members of Senser?",
    "SerialNumber": "225",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Senser> <http://dbpedia.org/property/pastMembers> ?x . ?x <http://dbpedia.org/property/mainInterests> ?uri  . }",
    "entity mapping": [
      {
        "label": "Senser",
        "uri": "http://dbpedia.org/resource/Senser"
      }
    ],
    "id": "dec00419f40040aab1c69746a1a93469",
    "predicate mapping": [
      {
        "label": "past members",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "interests",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "Name the common associate band of Blayse and Teddy Riley ?",
    "SerialNumber": "226",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blayse> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri . }",
    "entity mapping": [
      {
        "label": "Blayse",
        "uri": "http://dbpedia.org/resource/Blayse"
      },
      {
        "label": "Teddy Riley",
        "uri": "http://dbpedia.org/resource/Teddy_Riley"
      }
    ],
    "id": "f84aac1f48e348e8964388d29ed6a82b",
    "predicate mapping": [
      {
        "label": "associate band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "associate band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "Who is the performer of album which has the song \"To Where You Are\" ?",
    "SerialNumber": "227",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/To_Where_You_Are> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/ontology/artist> ?uri  . }",
    "entity mapping": [
      {
        "label": "To Where You Are",
        "uri": "http://dbpedia.org/resource/To_Where_You_Are"
      }
    ],
    "id": "60347895278a411187b6aaafce98462e",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      },
      {
        "label": "performer",
        "uri": "http://dbpedia.org/ontology/artist"
      }
    ]
  },
  {
    "question": "What is the alma mater of the actors of The God Who Wasn\u0027t There ?",
    "SerialNumber": "233",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_God_Who_Wasn\u0027t_There> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "The God Who Wasn\u0027t There",
        "uri": "http://dbpedia.org/resource/The_God_Who_Wasn\u0027t_There"
      }
    ],
    "id": "1184156dad9a478ba5e2c3590f20096e",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "Which label released the movie written by Thomas Meehan?",
    "SerialNumber": "235",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Thomas_Meehan_(writer)> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Thomas Meehan",
        "uri": "http://dbpedia.org/resource/Thomas_Meehan_(writer)"
      }
    ],
    "id": "6829110a0f8c4c0297649f7ae290e6b3",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the leader name of the settlements whose governing body is Municipal council?",
    "SerialNumber": "236",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/governingBody> <http://dbpedia.org/resource/Municipal_council> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "Municipal council",
        "uri": "http://dbpedia.org/resource/Municipal_council"
      }
    ],
    "id": "8b5f83f82fb945f68ec39bf2ee49c270",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/ontology/governingBody"
      },
      {
        "label": "leader name",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "What is the major shrine of Jacques-Dsir Laval ?",
    "SerialNumber": "237",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jacques-Désiré_Laval> <http://dbpedia.org/ontology/majorShrine> ?uri } ",
    "entity mapping": [
      {
        "label": "Jacques-Dsir Laval",
        "uri": "http://dbpedia.org/resource/Jacques-Désiré_Laval"
      }
    ],
    "id": "624847b205bc4cfdb3fc6d5a3bb94089",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      }
    ]
  },
  {
    "question": "List places that are associated to cities in the state of Mecklenburg-Vorpommern.",
    "SerialNumber": "238",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/federalState> <http://dbpedia.org/resource/Mecklenburg-Vorpommern> . ?uri <http://dbpedia.org/property/cities> ?x  . }",
    "entity mapping": [
      {
        "label": "Mecklenburg-Vorpommern",
        "uri": "http://dbpedia.org/resource/Mecklenburg-Vorpommern"
      }
    ],
    "id": "7cd11e37116b4218a85d96fc128b3c02",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/federalState"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "Count the number of actors in Lucy Sullivan Is Getting Married.",
    "SerialNumber": "240",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married> <http://dbpedia.org/property/starring> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lucy Sullivan Is Getting Married",
        "uri": "http://dbpedia.org/resource/Lucy_Sullivan_Is_Getting_Married"
      }
    ],
    "id": "973af98c92e24d1793c45d8c0ed3e83b",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring"
      }
    ]
  },
  {
    "question": "Which predecessor of Alexander Downer was deputy to Neil Brown ?",
    "SerialNumber": "242",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Alexander_Downer> . ?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)>  . }",
    "entity mapping": [
      {
        "label": "Alexander Downer",
        "uri": "http://dbpedia.org/resource/Alexander_Downer"
      },
      {
        "label": "Neil Brown",
        "uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)"
      }
    ],
    "id": "27ac3a28ee1145f3b6b5a1b7fd89b595",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      }
    ]
  },
  {
    "question": "Which sports are played in the alma mater of Amitava Datta?",
    "SerialNumber": "244",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amitava_Datta> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "Amitava Datta",
        "uri": "http://dbpedia.org/resource/Amitava_Datta"
      }
    ],
    "id": "802bb417e72d4d8a9cb37d8136a0ae07",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "To which series does the character of Londo Mollari belong?",
    "SerialNumber": "245",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Londo_Mollari> <http://dbpedia.org/ontology/series> ?uri } ",
    "entity mapping": [
      {
        "label": "Londo Mollari",
        "uri": "http://dbpedia.org/resource/Londo_Mollari"
      }
    ],
    "id": "8c42485e42e641b297c1b7b9bc431f71",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "Rashid Behbudov State Song Theatre and Baku Puppet Theatre can be found in which country?",
    "SerialNumber": "247",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rashid_Behbudov_State_Song_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri . }",
    "entity mapping": [
      {
        "label": "Rashid Behbudov State Song Theatre",
        "uri": "http://dbpedia.org/resource/Rashid_Behbudov_State_Song_Theatre"
      },
      {
        "label": "Baku Puppet Theatre",
        "uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre"
      }
    ],
    "id": "484f28f611e648b4b388f6cf98d964bb",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      }
    ]
  },
  {
    "question": "What is the birthplace of Liudmila Privivkova and Qadir Huseynov ?",
    "SerialNumber": "248",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liudmila_Privivkova> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Qadir_Huseynov> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "Liudmila Privivkova",
        "uri": "http://dbpedia.org/resource/Liudmila_Privivkova"
      },
      {
        "label": "Qadir Huseynov",
        "uri": "http://dbpedia.org/resource/Qadir_Huseynov"
      }
    ],
    "id": "b5dca27ca03b43638ef8c6dddbd21693",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What is the predecessor of the automobile which is the related of Cadillac Fleetwood?",
    "SerialNumber": "249",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Cadillac Fleetwood",
        "uri": "http://dbpedia.org/resource/Cadillac_Fleetwood"
      }
    ],
    "id": "8bd9695f7e1442e2a222a9db2e5934f0",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Under which archipelago does Canary Islands fall?",
    "SerialNumber": "252",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Canary_Islands> } ",
    "entity mapping": [
      {
        "label": "Canary Islands",
        "uri": "http://dbpedia.org/resource/Canary_Islands"
      }
    ],
    "id": "588353d070ef46ebab76b15f479bafda",
    "predicate mapping": [
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago"
      }
    ]
  },
  {
    "question": "What is the craft of the Ralph Flanders which is also the profession of  Claiborne Pell ?",
    "SerialNumber": "254",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ralph_Flanders> <http://dbpedia.org/property/occupation> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri} ",
    "entity mapping": [
      {
        "label": "Ralph Flanders",
        "uri": "http://dbpedia.org/resource/Ralph_Flanders"
      },
      {
        "label": "Claiborne Pell",
        "uri": "http://dbpedia.org/resource/Claiborne_Pell"
      }
    ],
    "id": "c2b204dc4fa14f0fa3e64b8a5e79c362",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/property/occupation"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      }
    ]
  },
  {
    "question": "Who are the politicians whose death place is Ontario?",
    "SerialNumber": "255",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Ontario>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Ontario",
        "uri": "http://dbpedia.org/resource/Ontario"
      }
    ],
    "id": "c69b4dff5f2c416d9a4d119548801193",
    "predicate mapping": [
      {
        "label": "death place",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "Does the US route 281 have a junction at San Antonio?",
    "SerialNumber": "256",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/U.S._Route_281> <http://dbpedia.org/property/junction> <http://dbpedia.org/resource/San_Antonio> }",
    "entity mapping": [
      {
        "label": "US route 281",
        "uri": "http://dbpedia.org/resource/U.S._Route_281"
      },
      {
        "label": "San Antonio",
        "uri": "http://dbpedia.org/resource/San_Antonio"
      }
    ],
    "id": "60c286ef4d054f78a11a86763d47290b",
    "predicate mapping": [
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction"
      }
    ]
  },
  {
    "question": "Name the company whose one of the product is Pixar Image Computer and has one of the key person as Edwin Catmull?",
    "SerialNumber": "259",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pixar_Image_Computer> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Pixar Image Computer",
        "uri": "http://dbpedia.org/resource/Pixar_Image_Computer"
      },
      {
        "label": "Edwin Catmull",
        "uri": "http://dbpedia.org/resource/Edwin_Catmull"
      }
    ],
    "id": "5cf13a5c4a1849c6afb4b1a429c18893",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "key person",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who has official residences at Beverly Hills and Colts Neck Township ?",
    "SerialNumber": "260",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California> . ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey> . }",
    "entity mapping": [
      {
        "label": "Beverly Hills",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California"
      },
      {
        "label": "Colts Neck Township",
        "uri": "http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey"
      }
    ],
    "id": "9f7022f5c92b4603a66efc8ad9c62d35",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Give me a count of royalties buried in Rome ?",
    "SerialNumber": "261",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Rome",
        "uri": "http://dbpedia.org/resource/Rome"
      }
    ],
    "id": "a33350d8ce8d449a9ce52f0ca2451234",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "royalties",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "What is the route junction of Rhode Island Route 15 ?",
    "SerialNumber": "262",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhode_Island_Route_15> <http://dbpedia.org/ontology/routeJunction> ?uri } ",
    "entity mapping": [
      {
        "label": "Route 15",
        "uri": "http://dbpedia.org/resource/Rhode_Island_Route_15"
      }
    ],
    "id": "eb58dda4372c4a6596673f32df5a1ef4",
    "predicate mapping": [
      {
        "label": "route junction",
        "uri": "http://dbpedia.org/ontology/routeJunction"
      }
    ]
  },
  {
    "question": "Which executive producer of the ultimate merger is also an important person at Trump Productions?",
    "SerialNumber": "263",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Merger> <http://dbpedia.org/ontology/executiveProducer> ?uri. <http://dbpedia.org/resource/Trump_Productions> <http://dbpedia.org/ontology/keyPerson> ?uri . }",
    "entity mapping": [
      {
        "label": "the ultimate merger",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Merger"
      },
      {
        "label": "Trump Productions",
        "uri": "http://dbpedia.org/resource/Trump_Productions"
      }
    ],
    "id": "7231e19892bf4ed6bc48ad9493d50db8",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      }
    ]
  },
  {
    "question": "Is KOMC-FM the sister station of KOMC (AM)?",
    "SerialNumber": "264",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/KOMC_(AM)> <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/KOMC-FM> }",
    "entity mapping": [
      {
        "label": "KOMC (AM)",
        "uri": "http://dbpedia.org/resource/KOMC_(AM)"
      },
      {
        "label": "KOMC-FM",
        "uri": "http://dbpedia.org/resource/KOMC-FM"
      }
    ],
    "id": "bc0e9473e03d40289b81d23a7aad7340",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation"
      }
    ]
  },
  {
    "question": "Which awards are presented by Swedish Academy?",
    "SerialNumber": "266",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Swedish_Academy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "Swedish Academy",
        "uri": "http://dbpedia.org/resource/Swedish_Academy"
      }
    ],
    "id": "001fa9f758104896b853528c748e25f6",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "List the awards won by the fashion designer which have been recognized by Tennessee State Museum ?",
    "SerialNumber": "267",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Tennessee_State_Museum> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>}",
    "entity mapping": [
      {
        "label": "Tennessee State Museum",
        "uri": "http://dbpedia.org/resource/Tennessee_State_Museum"
      }
    ],
    "id": "569c03444cd642899588bdbe6cf9351c",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "fashion designer",
        "uri": "http://dbpedia.org/ontology/FashionDesigner"
      }
    ]
  },
  {
    "question": "What is the record label of the Next Thing and also the  label of the The Producers (2005 film)?",
    "SerialNumber": "275",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri. <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri} ",
    "entity mapping": [
      {
        "label": "Next Thing",
        "uri": "http://dbpedia.org/resource/Next_Thing"
      },
      {
        "label": "The Producers (2005 film)",
        "uri": "http://dbpedia.org/resource/The_Producers_(2005_film)"
      }
    ],
    "id": "0d2597c2a2f94822a3951967fe2e3a7e",
    "predicate mapping": [
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "How many people are known for Dragons\u0027 Den?",
    "SerialNumber": "277",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Dragons\u0027_Den_(UK_TV_series)>  . }",
    "entity mapping": [
      {
        "label": "Dragons\u0027 Den",
        "uri": "http://dbpedia.org/resource/Dragons\u0027_Den_(UK_TV_series)"
      }
    ],
    "id": "49df02ead3be433689a0ab015de139c9",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "What is the award presented by Downtown Athletic Club and Yale Club NYCity?",
    "SerialNumber": "282",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Downtown_Athletic_Club> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Yale_Club_of_New_York_City> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "Downtown Athletic Club",
        "uri": "http://dbpedia.org/resource/Downtown_Athletic_Club"
      },
      {
        "label": "Yale Club",
        "uri": "http://dbpedia.org/resource/Yale_Club_of_New_York_City"
      }
    ],
    "id": "c33e201bd83f4ba38d3aabb00cec0f07",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "List the  primeministers of Victor Hope, 2nd Marquess of Linlithgow ?",
    "SerialNumber": "283",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow> <http://dbpedia.org/property/primeminister> ?uri } ",
    "entity mapping": [
      {
        "label": "Victor Hope, 2nd Marquess of Linlithgow",
        "uri": "http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow"
      }
    ],
    "id": "9d8981bec314421cbc7ab5fa19b35a8b",
    "predicate mapping": [
      {
        "label": "primeminister",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "In which state is the Channel district?",
    "SerialNumber": "286",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Channel_District> <http://dbpedia.org/ontology/state> ?uri } ",
    "entity mapping": [
      {
        "label": "Channel district",
        "uri": "http://dbpedia.org/resource/Channel_District"
      }
    ],
    "id": "df2e76ce3304460b96e4bc1004ba31ff",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/state"
      }
    ]
  },
  {
    "question": "Name the religious affiliation of Vagif Aliyev ?",
    "SerialNumber": "287",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vagif_Aliyev> <http://dbpedia.org/ontology/religion> ?uri } ",
    "entity mapping": [
      {
        "label": "Vagif Aliyev",
        "uri": "http://dbpedia.org/resource/Vagif_Aliyev"
      }
    ],
    "id": "72e904a0c1464fa49e6a57b90d012b10",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "In which branch of the government does James L. McConaughy belong?",
    "SerialNumber": "289",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/James_L._McConaughy> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/property/branch> ?uri  . }",
    "entity mapping": [
      {
        "label": "James L. McConaughy",
        "uri": "http://dbpedia.org/resource/James_L._McConaughy"
      }
    ],
    "id": "0994c57e0c4a42daaa38f1d36dbb7e24",
    "predicate mapping": [
      {
        "label": "government",
        "uri": "http://dbpedia.org/ontology/governor"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "Count the number of characters of the play whose one of the character is Catwoman ?",
    "SerialNumber": "290",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Catwoman> . ?x <http://dbpedia.org/property/characters> ?uri }",
    "entity mapping": [
      {
        "label": "Catwoman",
        "uri": "http://dbpedia.org/resource/Catwoman"
      }
    ],
    "id": "e4ff3218dca54f6e816707115b42aea9",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      }
    ]
  },
  {
    "question": "what cities are located on the sides of mediterranean sea?",
    "SerialNumber": "291",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri } ",
    "entity mapping": [
      {
        "label": "mediterranean sea",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea"
      }
    ],
    "id": "a216ea53e375474aa3d2a23273a88807",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "Is Bacillus belong to the domain Bacteria?",
    "SerialNumber": "292",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bacillus> <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> }",
    "entity mapping": [
      {
        "label": "Bacillus",
        "uri": "http://dbpedia.org/resource/Bacillus"
      },
      {
        "label": "Bacteria",
        "uri": "http://dbpedia.org/resource/Bacteria"
      }
    ],
    "id": "6abd056cf07347d29aaf81047e0d6975",
    "predicate mapping": [
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain"
      }
    ]
  },
  {
    "question": "How many writers speak a language belonging to the Germanic kind of languages?",
    "SerialNumber": "296",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Germanic_languages> . ?uri <http://dbpedia.org/property/language> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Germanic",
        "uri": "http://dbpedia.org/resource/Germanic_languages"
      }
    ],
    "id": "92bd8bf1ae994d77a70ff9745c6690be",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/languageFamily"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Who are the major stockholders of the bank which is the company of Bloomberg Markets ?",
    "SerialNumber": "299",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bloomberg_Markets> <http://dbpedia.org/property/company> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "Bloomberg Markets",
        "uri": "http://dbpedia.org/resource/Bloomberg_Markets"
      }
    ],
    "id": "d501cb9ebb8445839dc4079bffe5f377",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "stockholders",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "How many maintainers are there of the bridges that can carry motor vehicles over them?",
    "SerialNumber": "300",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . }",
    "entity mapping": [
      {
        "label": "motor vehicle",
        "uri": "http://dbpedia.org/resource/Motor_vehicle"
      }
    ],
    "id": "640f3316ba4b47ec9f5efa399249afdb",
    "predicate mapping": [
      {
        "label": "carry",
        "uri": "http://dbpedia.org/property/carries"
      },
      {
        "label": "maintainer",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      }
    ]
  },
  {
    "question": "What race of Linda Hogan is the state of origin of the Holmes Colbert ?",
    "SerialNumber": "301",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "entity mapping": [
      {
        "label": "Linda Hogan",
        "uri": "http://dbpedia.org/resource/Linda_Hogan"
      },
      {
        "label": "Holmes Colbert",
        "uri": "http://dbpedia.org/resource/Holmes_Colbert"
      }
    ],
    "id": "3e8fa86f90ba41089a2aea279c13c9f3",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/ethnicity"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "What is the name of the artist which worked on the subsequent work of Ella Loves Cole ?",
    "SerialNumber": "303",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ella_Loves_Cole> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/artist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ella Loves Cole",
        "uri": "http://dbpedia.org/resource/Ella_Loves_Cole"
      }
    ],
    "id": "7bb0d99556694daa97224e6cdb0d61f4",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "What are the television shows whose network is Prime Time Entertainment Network?",
    "SerialNumber": "304",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Prime Time Entertainment Network",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network"
      }
    ],
    "id": "1d3e8d528a354735aa5fdffc086c9530",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the place of birth of the stars of Auto Shankar ?",
    "SerialNumber": "305",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Auto_Shankar_(film)> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Auto Shankar",
        "uri": "http://dbpedia.org/resource/Auto_Shankar_(film)"
      }
    ],
    "id": "659915fe8d864b808a9a514f5b3ff35d",
    "predicate mapping": [
      {
        "label": "stars",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "In which state can I find Burr Truss styled bridges?",
    "SerialNumber": "306",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Burr_Truss> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Burr Truss",
        "uri": "http://dbpedia.org/resource/Burr_Truss"
      }
    ],
    "id": "5b90785deb8a4411aaa78d29aa3731e5",
    "predicate mapping": [
      {
        "label": "style",
        "uri": "http://dbpedia.org/property/style"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "What city is the residence of Cheryl Teigs?",
    "SerialNumber": "308",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheryl_Tiegs> <http://dbpedia.org/ontology/residence> ?uri } ",
    "entity mapping": [
      {
        "label": "Cheryl Teigs",
        "uri": "http://dbpedia.org/resource/Cheryl_Tiegs"
      }
    ],
    "id": "6229161c4acd41e5ba294a148a25abfb",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Name the nearest city to  Lake Victoria?",
    "SerialNumber": "311",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Victoria> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Lake Victoria",
        "uri": "http://dbpedia.org/resource/Lake_Victoria"
      }
    ],
    "id": "a622cb449bde410c8c3e8c5c11a18ebb",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      }
    ]
  },
  {
    "question": "Name the constituency of Domenico Modugno ?",
    "SerialNumber": "312",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Domenico_Modugno> <http://dbpedia.org/property/constituency> ?uri } ",
    "entity mapping": [
      {
        "label": "Domenico Modugno",
        "uri": "http://dbpedia.org/resource/Domenico_Modugno"
      }
    ],
    "id": "416fe4e82425427cb42f2d36b6e64527",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      }
    ]
  },
  {
    "question": "What awards did the founder of Grameen Bank win?",
    "SerialNumber": "313",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Grameen_Bank> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Grameen Bank",
        "uri": "http://dbpedia.org/resource/Grameen_Bank"
      }
    ],
    "id": "c77dbf978c4e46a490287a6c82caa7f3",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Who is the writer of the singles whose producer is Peter-John Vettese?",
    "SerialNumber": "317",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Peter-John_Vettese> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "Peter-John Vettese",
        "uri": "http://dbpedia.org/resource/Peter-John_Vettese"
      }
    ],
    "id": "2cb981d2ba4a480c9a1e0f51b6478f22",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "Eric roth wrote how many screenplays?",
    "SerialNumber": "319",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Eric_Roth>  . }",
    "entity mapping": [
      {
        "label": "Eric roth",
        "uri": "http://dbpedia.org/resource/Eric_Roth"
      }
    ],
    "id": "47255156e21340db90b083e6f65946bd",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      }
    ]
  },
  {
    "question": "What is the common race of the Martin Molony and race of the Coneygree ?",
    "SerialNumber": "320",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri. <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri} ",
    "entity mapping": [
      {
        "label": "Martin Molony",
        "uri": "http://dbpedia.org/resource/Martin_Molony"
      },
      {
        "label": "Coneygree",
        "uri": "http://dbpedia.org/resource/Coneygree"
      }
    ],
    "id": "df00f7dce8864849b265e3d1128d8dd8",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/ontology/race"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      }
    ]
  },
  {
    "question": "How many have been awarded by the Royal Society?",
    "SerialNumber": "322",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Society>  . }",
    "entity mapping": [
      {
        "label": "Royal Society",
        "uri": "http://dbpedia.org/resource/Royal_Society"
      }
    ],
    "id": "538b8fc2d6e54c939c970590874a350e",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Who are the opponents of Gervase Helwys?",
    "SerialNumber": "324",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gervase_Helwys> <http://dbpedia.org/ontology/opponent> ?uri } ",
    "entity mapping": [
      {
        "label": "Gervase Helwys",
        "uri": "http://dbpedia.org/resource/Gervase_Helwys"
      }
    ],
    "id": "a9e1cae212ba4c2699ddcc5aa1686c2e",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      }
    ]
  },
  {
    "question": "Who is the starring of the movies such that music is by Raamlaxman?",
    "SerialNumber": "325",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Raamlaxman> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Raamlaxman",
        "uri": "http://dbpedia.org/resource/Raamlaxman"
      }
    ],
    "id": "2d7035345c0c4b94aa94c1b42ec57b41",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "starring",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name the movies distributed by RKO Pictures and has music composer as Bernard Herrmann?",
    "SerialNumber": "327",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "RKO Pictures",
        "uri": "http://dbpedia.org/resource/RKO_Pictures"
      },
      {
        "label": "Bernard Herrmann",
        "uri": "http://dbpedia.org/resource/Bernard_Herrmann"
      }
    ],
    "id": "bb9861a2275446428e974e73dd1e1b1b",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the headquarters of the public transit system which is the section of Red Ahead ?",
    "SerialNumber": "328",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Red_Ahead> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}",
    "entity mapping": [
      {
        "label": "Red Ahead",
        "uri": "http://dbpedia.org/resource/Red_Ahead"
      }
    ],
    "id": "7f75c46b604847b88c64d3d6fffa098b",
    "predicate mapping": [
      {
        "label": "section of",
        "uri": "http://dbpedia.org/ontology/isPartOf"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "public transit system",
        "uri": "http://dbpedia.org/ontology/PublicTransitSystem"
      }
    ]
  },
  {
    "question": "Where is the head quarters of the owner of Hamline Avenue?",
    "SerialNumber": "330",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hamline_Avenue_(Metro_Transit_station)> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }",
    "entity mapping": [
      {
        "label": "Hamline Avenue",
        "uri": "http://dbpedia.org/resource/Hamline_Avenue_(Metro_Transit_station)"
      }
    ],
    "id": "6a5afff8b79e41ab814b7600af7ca45a",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "head quarters",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "Which magazine\u0027s publisher is Jann Wenner and founded by Ralph J. Gleason?",
    "SerialNumber": "333",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Jann_Wenner> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Ralph_J._Gleason>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Jann Wenner",
        "uri": "http://dbpedia.org/resource/Jann_Wenner"
      },
      {
        "label": "Ralph J. Gleason",
        "uri": "http://dbpedia.org/resource/Ralph_J._Gleason"
      }
    ],
    "id": "5dcd0eb818614883b22111575756bd54",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "Name the mountain whose range is Sierra Nevada (U.S.) and parent mountain peak is Nevado de Toluca?",
    "SerialNumber": "334",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Sierra Nevada (U.S.)",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)"
      },
      {
        "label": "Nevado de Toluca",
        "uri": "http://dbpedia.org/resource/Nevado_de_Toluca"
      }
    ],
    "id": "838eaa04147b4081beae5daad514fb0c",
    "predicate mapping": [
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      },
      {
        "label": "parent mountain peak",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "Which television show\u0027s network  is BBC HD and is related to Doctor Who Confidential?",
    "SerialNumber": "335",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC HD",
        "uri": "http://dbpedia.org/resource/BBC_HD"
      },
      {
        "label": "Doctor Who Confidential",
        "uri": "http://dbpedia.org/resource/Doctor_Who_Confidential"
      }
    ],
    "id": "f3ad79c40d524db4b41288872c95ba91",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the artist of Sings Kristofferson and also performed Milk Cow Blues atleast once?",
    "SerialNumber": "336",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sings_Kristofferson> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Milk_Cow_Blues> <http://dbpedia.org/ontology/artist> ?uri . }",
    "entity mapping": [
      {
        "label": "Sings Kristofferson",
        "uri": "http://dbpedia.org/resource/Sings_Kristofferson"
      },
      {
        "label": "Milk Cow Blues",
        "uri": "http://dbpedia.org/resource/Milk_Cow_Blues"
      }
    ],
    "id": "0d1d38a04dff419b9fb358a190d55004",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/artist"
      }
    ]
  },
  {
    "question": "What is the life stance of the ethnic groups related to Micronesia ?",
    "SerialNumber": "338",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Micronesia> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "entity mapping": [
      {
        "label": "Micronesia",
        "uri": "http://dbpedia.org/resource/Micronesia"
      }
    ],
    "id": "6658f7d6a2f84f6db5f3da64b9953c8d",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "life stance",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup"
      }
    ]
  },
  {
    "question": "What is the television show whose producer is Stephen E. Ambrose?",
    "SerialNumber": "339",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Stephen E. Ambrose",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose"
      }
    ],
    "id": "73bbae8c251d41238b7dcf1aa0e155e4",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the newspapers whose headquarters\u0027s time zone is Central European Summer Time.",
    "SerialNumber": "340",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Central_European_Summer_Time> . ?uri <http://dbpedia.org/property/headquarters> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "Central European Summer Time",
        "uri": "http://dbpedia.org/resource/Central_European_Summer_Time"
      }
    ],
    "id": "d3ea98fc91814fd2b7993a9312f41010",
    "predicate mapping": [
      {
        "label": "time zone",
        "uri": "http://dbpedia.org/ontology/timeZone"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "What is the magazine which have been  founded by Ralph J. Gleason?",
    "SerialNumber": "342",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Ralph_J._Gleason>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Ralph J. Gleason",
        "uri": "http://dbpedia.org/resource/Ralph_J._Gleason"
      }
    ],
    "id": "b8eaafc1020c44c7b96f49241aafe8a4",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "Which river ends at  Thames Estuary and North Sea?",
    "SerialNumber": "344",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Thames Estuary",
        "uri": "http://dbpedia.org/resource/Thames_Estuary"
      },
      {
        "label": "North Sea",
        "uri": "http://dbpedia.org/resource/North_Sea"
      }
    ],
    "id": "bc35238acbbf4e1fa317ccc66299f892",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Where was Ganefo hosted?",
    "SerialNumber": "345",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GANEFO> <http://dbpedia.org/property/hostCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Ganefo",
        "uri": "http://dbpedia.org/resource/GANEFO"
      }
    ],
    "id": "3f84c71fa3754d4c8efa129eb69a81a7",
    "predicate mapping": [
      {
        "label": "hosted",
        "uri": "http://dbpedia.org/property/hostCity"
      }
    ]
  },
  {
    "question": "Count the number of sports team members  which have player named Matt Williams ?",
    "SerialNumber": "346",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/name> <http://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)> . ?x <http://dbpedia.org/property/name> ?uri }",
    "entity mapping": [
      {
        "label": "Matt Williams",
        "uri": "http://dbpedia.org/resource/Matt_Williams_(New_Zealand_footballer)"
      }
    ],
    "id": "3480c793f4804929a97fe292acfa30a9",
    "predicate mapping": [
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name"
      }
    ]
  },
  {
    "question": "Name the office holder with predecessor as Samuel W. McCall and office in Massachusetts House of Representatives?",
    "SerialNumber": "347",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Samuel_W._McCall> . ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Samuel W. McCall",
        "uri": "http://dbpedia.org/resource/Samuel_W._McCall"
      },
      {
        "label": "Massachusetts House of Representatives",
        "uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives"
      }
    ],
    "id": "ba1402357518422281e2d6df50cfbe2e",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "How many other awards have been given to people who have won the Golden Globe?",
    "SerialNumber": "348",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Globe_Award> . ?x <http://dbpedia.org/property/awards> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "Golden Globe",
        "uri": "http://dbpedia.org/resource/Golden_Globe_Award"
      }
    ],
    "id": "da55afc0da0e4b36af66810a1bec956d",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "Does Mr. Jim\u0027s Pizza operate in the pizza industry?",
    "SerialNumber": "349",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mr._Jim\u0027s_Pizza> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Pizza> }",
    "entity mapping": [
      {
        "label": "Mr. Jim\u0027s Pizza",
        "uri": "http://dbpedia.org/resource/Mr._Jim\u0027s_Pizza"
      },
      {
        "label": "pizza",
        "uri": "http://dbpedia.org/resource/Pizza"
      }
    ],
    "id": "87ef3828c73b4021ab723efbb0b64525",
    "predicate mapping": [
      {
        "label": "industry",
        "uri": "http://dbpedia.org/ontology/industry"
      }
    ]
  },
  {
    "question": "List down the schools whose mascot\u0027s order is Even-toed ungulate?",
    "SerialNumber": "350",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Even-toed_ungulate> . ?uri <http://dbpedia.org/property/mascot> ?x  . }",
    "entity mapping": [
      {
        "label": "Even-toed ungulate",
        "uri": "http://dbpedia.org/resource/Even-toed_ungulate"
      }
    ],
    "id": "dba313f8b26847beb6c2826754d55507",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "How many other field are there of the scientists whose one of the field is Mathematics ?",
    "SerialNumber": "351",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Mathematics> . ?x <http://dbpedia.org/ontology/field> ?uri }",
    "entity mapping": [
      {
        "label": "Mathematics",
        "uri": "http://dbpedia.org/resource/Mathematics"
      }
    ],
    "id": "5f7d68b6d7c24bd29b84f2fd7fa2d1c2",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "Who had  Joe Purcell and Winston Bryant as lieutenants ?",
    "SerialNumber": "352",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> . }",
    "entity mapping": [
      {
        "label": "Joe Purcell",
        "uri": "http://dbpedia.org/resource/Joe_Purcell"
      },
      {
        "label": "Winston Bryant",
        "uri": "http://dbpedia.org/resource/Winston_Bryant"
      }
    ],
    "id": "1b7152be06d645fd89cc99c2c1436c63",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      }
    ]
  },
  {
    "question": "What company\u0027s founder is Jim Harris?",
    "SerialNumber": "353",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> } ",
    "entity mapping": [
      {
        "label": "Jim Harris",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)"
      }
    ],
    "id": "3cdc8e8ea823409f959acead754885e6",
    "predicate mapping": [
      {
        "label": "founder",
        "uri": "http://dbpedia.org/property/founder"
      }
    ]
  },
  {
    "question": "How many sports are played in organizations presided by Emanuel de Guzman?",
    "SerialNumber": "356",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}",
    "entity mapping": [
      {
        "label": "Emanuel de Guzman",
        "uri": "http://dbpedia.org/resource/Emanuel_de_Guzman"
      }
    ],
    "id": "596f2ecca2be42aea17eb2f3e2bbffd9",
    "predicate mapping": [
      {
        "label": "presided",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/Sport"
      }
    ]
  },
  {
    "question": "What is the religion of the person who is in the cast of Master\u0027s Sun> ?",
    "SerialNumber": "359",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Master\u0027s_Sun> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Master\u0027s Sun",
        "uri": "http://dbpedia.org/resource/Master\u0027s_Sun"
      }
    ],
    "id": "654b89b5de0945439a24d12e98348582",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who has official residences at Colts Neck Township and Beverly Hills?",
    "SerialNumber": "361",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey> . ?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California> . }",
    "entity mapping": [
      {
        "label": "Colts Neck Township",
        "uri": "http://dbpedia.org/resource/Colts_Neck_Township,_New_Jersey"
      },
      {
        "label": "Beverly Hills",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California"
      }
    ],
    "id": "efca0e0f9fd34c37abe132b6dec6b3eb",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Name the river with source as Shannon Pot and its mouth is located in Limerick?",
    "SerialNumber": "363",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Shannon_Pot> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Shannon Pot",
        "uri": "http://dbpedia.org/resource/Shannon_Pot"
      },
      {
        "label": "Limerick",
        "uri": "http://dbpedia.org/resource/Limerick"
      }
    ],
    "id": "a08bb500ab2240118a0e3c00ed317f0b",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the common licence of the Frontaccounting and nUbuntu?",
    "SerialNumber": "366",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/NUbuntu> <http://dbpedia.org/ontology/license> ?uri . }",
    "entity mapping": [
      {
        "label": "Frontaccounting",
        "uri": "http://dbpedia.org/resource/Frontaccounting"
      },
      {
        "label": "nUbuntu",
        "uri": "http://dbpedia.org/resource/NUbuntu"
      }
    ],
    "id": "1a77969a5597407fae22ede47cc281fc",
    "predicate mapping": [
      {
        "label": "licence",
        "uri": "http://dbpedia.org/ontology/license"
      },
      {
        "label": "licence",
        "uri": "http://dbpedia.org/ontology/license"
      }
    ]
  },
  {
    "question": "Which TV shows distributor is Broadcast syndication and developed by Brian Graden ?",
    "SerialNumber": "367",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Brian Graden",
        "uri": "http://dbpedia.org/resource/Brian_Graden"
      },
      {
        "label": "Broadcast syndication",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication"
      }
    ],
    "id": "cb0fc7a9c56e4298acc19aa91d3d4c8e",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name few companies founded in Texas?",
    "SerialNumber": "373",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Texas",
        "uri": "http://dbpedia.org/resource/Texas"
      }
    ],
    "id": "74e0b2e3b6864179acc9fd874d6897eb",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which office holder\u0027s governor is Charles Willing Byrd and has final resting place in North Bend, Ohio?",
    "SerialNumber": "378",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Charles Willing Byrd",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd"
      },
      {
        "label": "North Bend, Ohio",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio"
      }
    ],
    "id": "ed4dd38195244983a340f07ca5d05529",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Does chicago own the washington station on the CTA Blue Line?",
    "SerialNumber": "382",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Washington_station_(CTA_Blue_Line)> <http://dbpedia.org/property/owned> <http://dbpedia.org/resource/Chicago> }",
    "entity mapping": [
      {
        "label": "washington station",
        "uri": "http://dbpedia.org/resource/Washington_station_(CTA_Blue_Line)"
      },
      {
        "label": "chicago",
        "uri": "http://dbpedia.org/resource/Chicago"
      }
    ],
    "id": "9177e0691e8c4848a5237a226aed23d4",
    "predicate mapping": [
      {
        "label": "own",
        "uri": "http://dbpedia.org/property/owned"
      }
    ]
  },
  {
    "question": "Give the distinct number of other party of the people which have one of the party as Janata Party ?",
    "SerialNumber": "383",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Janata_Party> . ?x <http://dbpedia.org/ontology/otherParty> ?uri }",
    "entity mapping": [
      {
        "label": "Janata Party",
        "uri": "http://dbpedia.org/resource/Janata_Party"
      }
    ],
    "id": "0ffd6b150c7046af82a01f9b29dbddd6",
    "predicate mapping": [
      {
        "label": "other party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      },
      {
        "label": "other party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      }
    ]
  },
  {
    "question": "What is the company of Ford Theatre ?",
    "SerialNumber": "384",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri } ",
    "entity mapping": [
      {
        "label": "Ford Theatre",
        "uri": "http://dbpedia.org/resource/Ford_Theatre"
      }
    ],
    "id": "966ba5310c7049799db0464434010003",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      }
    ]
  },
  {
    "question": "List the director of The Adventures of mimi ?",
    "SerialNumber": "385",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Mimi_(video)> <http://dbpedia.org/property/director> ?uri } ",
    "entity mapping": [
      {
        "label": "The Adventures of mimi",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Mimi_(video)"
      }
    ],
    "id": "f77569069e6d41b692071d0350ab2d1d",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      }
    ]
  },
  {
    "question": "Count the units garrisoned at Arlington County, Virginia.",
    "SerialNumber": "386",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Arlington County, Virginia",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia"
      }
    ],
    "id": "4212ec5b2f564dd58eaf9a18be59d709",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      },
      {
        "label": "units",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Which company founded by Fusajiro Yamauchi gives service as Nintendo Network?",
    "SerialNumber": "388",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Fusajiro Yamauchi",
        "uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi"
      },
      {
        "label": "Nintendo Network",
        "uri": "http://dbpedia.org/resource/Nintendo_Network"
      }
    ],
    "id": "b6d929ad2217419984a923785b1dcac2",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who designed the bridge in Oddamavadi?",
    "SerialNumber": "389",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Oddamavadi> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Oddamavadi",
        "uri": "http://dbpedia.org/resource/Oddamavadi"
      }
    ],
    "id": "ef594c21024c4ec599be2c7e49e10c09",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "List all the co-founders of the non for profit which have founding member as David pressman ?",
    "SerialNumber": "390",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/David_Pressman> . ?x <http://dbpedia.org/ontology/foundedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}",
    "entity mapping": [
      {
        "label": "David pressman",
        "uri": "http://dbpedia.org/resource/David_Pressman"
      }
    ],
    "id": "e65f96b6ccf54d99ac963173043c60f4",
    "predicate mapping": [
      {
        "label": "co-founder",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "co-founder",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "profit",
        "uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation"
      }
    ]
  },
  {
    "question": "Name the products of Den norske Bank ?",
    "SerialNumber": "391",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Den_norske_Bank> <http://dbpedia.org/property/products> ?uri } ",
    "entity mapping": [
      {
        "label": "Den norske Bank",
        "uri": "http://dbpedia.org/resource/Den_norske_Bank"
      }
    ],
    "id": "33bedb8ae5c1409fb0ba92d69816a355",
    "predicate mapping": [
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      }
    ]
  },
  {
    "question": "What is the common profession of William Luther Hill and Claiborne Pell?",
    "SerialNumber": "398",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri . }",
    "entity mapping": [
      {
        "label": "William Luther Hill",
        "uri": "http://dbpedia.org/resource/William_Luther_Hill"
      },
      {
        "label": "Claiborne Pell",
        "uri": "http://dbpedia.org/resource/Claiborne_Pell"
      }
    ],
    "id": "95c977845c1d40f387b0a56de11b73b7",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      }
    ]
  },
  {
    "question": "Name the movie whose director is Ridley Scott and it\u0027s music composer is Vangelis?",
    "SerialNumber": "399",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Ridley Scott",
        "uri": "http://dbpedia.org/resource/Ridley_Scott"
      },
      {
        "label": "Vangelis",
        "uri": "http://dbpedia.org/resource/Vangelis"
      }
    ],
    "id": "9c030631b627435492811c991fff3fe5",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who coached the marquet golden eagels during 2013",
    "SerialNumber": "402",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team> <http://dbpedia.org/ontology/coach> ?uri } ",
    "entity mapping": [
      {
        "label": "marquet golden eagels during 2013",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men\u0027s_basketball_team"
      }
    ],
    "id": "0cec5868cc27426382d0ebfcbf2272bf",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      }
    ]
  },
  {
    "question": "Who is the musical artist worked for labels Celluloid Records and Victor Entertainment?",
    "SerialNumber": "403",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Celluloid Records",
        "uri": "http://dbpedia.org/resource/Celluloid_Records"
      },
      {
        "label": "Victor Entertainment",
        "uri": "http://dbpedia.org/resource/Victor_Entertainment"
      }
    ],
    "id": "25b560314df748389e244a17213dbb52",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Is Tea the main ingredient of Lahpet?",
    "SerialNumber": "404",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lahpet> <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Tea> }",
    "entity mapping": [
      {
        "label": "Lahpet",
        "uri": "http://dbpedia.org/resource/Lahpet"
      },
      {
        "label": "Tea",
        "uri": "http://dbpedia.org/resource/Tea"
      }
    ],
    "id": "abbf6d791be14816875ef172d71668dd",
    "predicate mapping": [
      {
        "label": "main ingredient",
        "uri": "http://dbpedia.org/property/mainIngredient"
      }
    ]
  },
  {
    "question": "Which tenant of New Sanno Hotel is the military branch of the Gary Holder-Winfield ?",
    "SerialNumber": "405",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri. <http://dbpedia.org/resource/Gary_Holder-Winfield> <http://dbpedia.org/ontology/militaryBranch> ?uri} ",
    "entity mapping": [
      {
        "label": "New Sanno Hotel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel"
      },
      {
        "label": "Gary Holder-Winfield",
        "uri": "http://dbpedia.org/resource/Gary_Holder-Winfield"
      }
    ],
    "id": "f659b3e1ce264120a3d7649054b18001",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "How many destinations are covered by the airlines which also serves Europe ?",
    "SerialNumber": "406",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Europe> . ?x <http://dbpedia.org/property/destinations> ?uri }",
    "entity mapping": [
      {
        "label": "Europe",
        "uri": "http://dbpedia.org/resource/Europe"
      }
    ],
    "id": "2110869943d4431c80ed60a4598d5f4a",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      }
    ]
  },
  {
    "question": "How many famous people are born in Long Island?",
    "SerialNumber": "407",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Long_Island>  . }",
    "entity mapping": [
      {
        "label": "Long Island",
        "uri": "http://dbpedia.org/resource/Long_Island"
      }
    ],
    "id": "7025f720c0ff41419cef7e20b14a8d8d",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Whose academic advisor works at the St George\u0027s Hospital?",
    "SerialNumber": "409",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/St_George\u0027s_Hospital> . ?uri <http://dbpedia.org/ontology/academicAdvisor> ?x  . }",
    "entity mapping": [
      {
        "label": "St George\u0027s Hospital",
        "uri": "http://dbpedia.org/resource/St_George\u0027s_Hospital"
      }
    ],
    "id": "466de8f3348242efa607641fbb8cfd7f",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      }
    ]
  },
  {
    "question": "List the home stadiums of the teams in the Russian Premier League?",
    "SerialNumber": "410",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/2011–12_Russian_Premier_League> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "entity mapping": [
      {
        "label": "Russian Premier League",
        "uri": "http://dbpedia.org/resource/2011–12_Russian_Premier_League"
      }
    ],
    "id": "cc49d89995894cb9af4efa08186ac9b7",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      }
    ]
  },
  {
    "question": "What are the countries for which History of Trier principal to?",
    "SerialNumber": "411",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "History of Trier",
        "uri": "http://dbpedia.org/resource/History_of_Trier"
      }
    ],
    "id": "6979c92554e94d2f9801bdd2da60d29e",
    "predicate mapping": [
      {
        "label": "principal",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "In which country is there a dam on the Awash river?",
    "SerialNumber": "412",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/river> <http://dbpedia.org/resource/Awash_River> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Dam>}",
    "entity mapping": [
      {
        "label": "Awash river",
        "uri": "http://dbpedia.org/resource/Awash_River"
      }
    ],
    "id": "28fb6009d3174bf0a9761f1dc0d93da9",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "dam",
        "uri": "http://dbpedia.org/ontology/Dam"
      }
    ]
  },
  {
    "question": "What are the movies whose cinematographer is Gregg Toland?",
    "SerialNumber": "414",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Gregg Toland",
        "uri": "http://dbpedia.org/resource/Gregg_Toland"
      }
    ],
    "id": "c782fe8362e4411692072d564ba4fedb",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/ontology/cinematography"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who is the person who are on the board of Freedom of the City?",
    "SerialNumber": "415",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Freedom of the City",
        "uri": "http://dbpedia.org/resource/Freedom_of_the_City"
      }
    ],
    "id": "6bb6210d9cac47ddaa5e12e8869fdcd5",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List the television shows whose Composers are associated with Strontium 90 ?",
    "SerialNumber": "419",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Strontium_90_(band)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Strontium 90",
        "uri": "http://dbpedia.org/resource/Strontium_90_(band)"
      }
    ],
    "id": "b57a708ebd054204b4816ab7fb3e1c94",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "Composer",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the ingredient of Blodpalt ?",
    "SerialNumber": "420",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blodpalt> <http://dbpedia.org/ontology/ingredient> ?uri } ",
    "entity mapping": [
      {
        "label": "Blodpalt",
        "uri": "http://dbpedia.org/resource/Blodpalt"
      }
    ],
    "id": "8bba670b59bb421ca58a524a0c474e00",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "Who is the performer of Bengali in Platforms ?",
    "SerialNumber": "422",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bengali_in_Platforms> <http://dbpedia.org/ontology/artist> ?uri } ",
    "entity mapping": [
      {
        "label": "Bengali in Platforms",
        "uri": "http://dbpedia.org/resource/Bengali_in_Platforms"
      }
    ],
    "id": "89689724b652439cbc83fd0be32e637c",
    "predicate mapping": [
      {
        "label": "performer",
        "uri": "http://dbpedia.org/ontology/artist"
      }
    ]
  },
  {
    "question": "Who is the owner of the bank where Thomas Secunda works ?",
    "SerialNumber": "425",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Thomas_Secunda> <http://dbpedia.org/ontology/occupation> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "Thomas Secunda",
        "uri": "http://dbpedia.org/resource/Thomas_Secunda"
      }
    ],
    "id": "00b85c55b2d649c397d73d0e4d2895b8",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "What are some fictional characters whose voice is in the peanuts movie?",
    "SerialNumber": "426",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Peanuts_Movie>  . }",
    "entity mapping": [
      {
        "label": "the peanuts movie",
        "uri": "http://dbpedia.org/resource/The_Peanuts_Movie"
      }
    ],
    "id": "6b6b25414e6d41a79396ddd1c583fe07",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      }
    ]
  },
  {
    "question": "What country had the title of 2001 Speedway Ekstraliga ?",
    "SerialNumber": "427",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/2001_Speedway_Ekstraliga> <http://dbpedia.org/property/title> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "2001 Speedway Ekstraliga",
        "uri": "http://dbpedia.org/resource/2001_Speedway_Ekstraliga"
      }
    ],
    "id": "a5254aca3b244fa1a1736835088e92ea",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "What is the total number of other tenant of the stadia whose one of the tenant is Raptors 905?",
    "SerialNumber": "429",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Raptors_905> . ?x <http://dbpedia.org/ontology/tenant> ?uri }",
    "entity mapping": [
      {
        "label": "Raptors 905",
        "uri": "http://dbpedia.org/resource/Raptors_905"
      }
    ],
    "id": "9121c4fcd51b4533a93936728a6c01cf",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "In how many places have Irishmen died?",
    "SerialNumber": "431",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ireland> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "entity mapping": [
      {
        "label": "Irishmen",
        "uri": "http://dbpedia.org/resource/Ireland"
      }
    ],
    "id": "241bdbc0cd074cc2963509e47a0bc547",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location"
      }
    ]
  },
  {
    "question": "Which draft team of bob Macmillan is also the prospect team of Mikhail Pashnin ?",
    "SerialNumber": "439",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "Mikhail Pashnin",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin"
      },
      {
        "label": "bob Macmillan",
        "uri": "http://dbpedia.org/resource/Bob_MacMillan"
      }
    ],
    "id": "444ae098996b47649d2dbec98edd52a6",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      }
    ]
  },
  {
    "question": "What team has  players  born in Dominican Republic ?",
    "SerialNumber": "445",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Dominican_Republic> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "entity mapping": [
      {
        "label": "Dominican Republic",
        "uri": "http://dbpedia.org/resource/Dominican_Republic"
      }
    ],
    "id": "04f9cbe07a5d4f17bf09a6c7eca5a2b4",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "What is the university attended by the baseball player who\u0027s known for Olin Corporation?",
    "SerialNumber": "447",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Olin_Corporation> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "entity mapping": [
      {
        "label": "Olin Corporation",
        "uri": "http://dbpedia.org/resource/Olin_Corporation"
      }
    ],
    "id": "c352251c728144d3a1114a020b3abb11",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer"
      }
    ]
  },
  {
    "question": "What cities does the river goes through, whose tributary is the little black river in Arkansas?",
    "SerialNumber": "452",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Little_Black_River_(Missouri_-_Arkansas)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "little black river",
        "uri": "http://dbpedia.org/resource/Little_Black_River_(Missouri_-_Arkansas)"
      }
    ],
    "id": "eaf2ccf4da0d4dd99bf39224e317dcf1",
    "predicate mapping": [
      {
        "label": "tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many other characters are there of the plays which has a  characters name Joker (comics) ?",
    "SerialNumber": "454",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Joker_(comics)> . ?x <http://dbpedia.org/property/characters> ?uri }",
    "entity mapping": [
      {
        "label": "Joker (comics)",
        "uri": "http://dbpedia.org/resource/Joker_(comics)"
      }
    ],
    "id": "7dfa4ea0de86402fadf35b56230094d7",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      }
    ]
  },
  {
    "question": "What is the Team Name  of St. Viator High School ?",
    "SerialNumber": "455",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/St._Viator_High_School> <http://dbpedia.org/property/teamName> ?uri } ",
    "entity mapping": [
      {
        "label": "St. Viator High School",
        "uri": "http://dbpedia.org/resource/St._Viator_High_School"
      }
    ],
    "id": "b86a96a710634f0c85c57c051dbd247d",
    "predicate mapping": [
      {
        "label": "Team Name",
        "uri": "http://dbpedia.org/property/teamName"
      }
    ]
  },
  {
    "question": "List the battles fought by  Ali Habib Mahmud ?",
    "SerialNumber": "456",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ali_Habib_Mahmud> <http://dbpedia.org/property/battles> ?uri } ",
    "entity mapping": [
      {
        "label": "Ali Habib Mahmud",
        "uri": "http://dbpedia.org/resource/Ali_Habib_Mahmud"
      }
    ],
    "id": "1b0b90cd44a24c30a8e58ca7fe099d30",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "What is the label of the singles whose group is Outlawz ?",
    "SerialNumber": "457",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Outlawz> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "Outlawz",
        "uri": "http://dbpedia.org/resource/Outlawz"
      }
    ],
    "id": "9bee0af78e8640ebb9e0835aab1fbf80",
    "predicate mapping": [
      {
        "label": "group",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "For how many other teams have the former players of Boston Bruins played?",
    "SerialNumber": "458",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Boston_Bruins> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Boston Bruins",
        "uri": "http://dbpedia.org/resource/Boston_Bruins"
      }
    ],
    "id": "4a4e462a65d545da8ed589257c9a7b03",
    "predicate mapping": [
      {
        "label": "former",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Who is the author of Karakuri Dji Ultimo ?",
    "SerialNumber": "460",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_Dôji_Ultimo> <http://dbpedia.org/ontology/author> ?uri } ",
    "entity mapping": [
      {
        "label": "Karakuri Dji Ultimo",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo"
      }
    ],
    "id": "1aee4c637a91415f9d690c4c5315ded9",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "List the destinations of the airlines which also serves Mediterranean  Sea ?",
    "SerialNumber": "461",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Mediterranean Sea",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea"
      }
    ],
    "id": "f0517726b79e40179b9458dd79aa9218",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Was the  2d Command and Control Squadron barracked in Colorado?",
    "SerialNumber": "462",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2d_Command_and_Control_Squadron> <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Colorado> }",
    "entity mapping": [
      {
        "label": "2d Command and Control Squadron",
        "uri": "http://dbpedia.org/resource/2d_Command_and_Control_Squadron"
      },
      {
        "label": "Colorado",
        "uri": "http://dbpedia.org/resource/Colorado"
      }
    ],
    "id": "ca07f5bdb8504d5eb9f7042cf60590a6",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/garrison"
      }
    ]
  },
  {
    "question": "Name the members of youth clubs which have Camp Nou as their homeground.",
    "SerialNumber": "464",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Camp_Nou> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "entity mapping": [
      {
        "label": "Camp Nou",
        "uri": "http://dbpedia.org/resource/Camp_Nou"
      }
    ],
    "id": "5600cf1071264310a057ac57ba802779",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/property/ground"
      },
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "Who is the founder of Hohenau, Paraguay?",
    "SerialNumber": "465",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hohenau,_Paraguay> <http://dbpedia.org/ontology/founder> ?uri } ",
    "entity mapping": [
      {
        "label": "Hohenau",
        "uri": "http://dbpedia.org/resource/Hohenau,_Paraguay"
      }
    ],
    "id": "a813050ed3c340158c9e4c5fbb61fb8f",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/founder"
      }
    ]
  },
  {
    "question": "Count the number teams which have  former ice hockey players which also included American Hockey League ?",
    "SerialNumber": "467",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/American_Hockey_League> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri }",
    "entity mapping": [
      {
        "label": "American Hockey League",
        "uri": "http://dbpedia.org/resource/American_Hockey_League"
      }
    ],
    "id": "76d7c51e723d48af9852d33633d70572",
    "predicate mapping": [
      {
        "label": "former",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "former",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "What is the largest city of the country which hosted the 1951 Asian Games?",
    "SerialNumber": "468",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/1951_Asian_Games> <http://dbpedia.org/property/hostCity> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "1951 Asian Games",
        "uri": "http://dbpedia.org/resource/1951_Asian_Games"
      }
    ],
    "id": "d0946844e189450aadee011b3a6e2ac5",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/hostCity"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Who gives the license of WXXV-DT2 ?",
    "SerialNumber": "469",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WXXV-DT2> <http://dbpedia.org/property/licensee> ?uri } ",
    "entity mapping": [
      {
        "label": "WXXV-DT2",
        "uri": "http://dbpedia.org/resource/WXXV-DT2"
      }
    ],
    "id": "02bb53dca86a4babb87a656db5452944",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/licensee"
      }
    ]
  },
  {
    "question": "Which political figures were awarded Screen Actors Guild Life Achievement Award?",
    "SerialNumber": "473",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . }",
    "entity mapping": [
      {
        "label": "Screen Actors Guild Life Achievement Award",
        "uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award"
      }
    ],
    "id": "fb1cfb6030934cd2843217941b60cbe7",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Where are the movies directed by Faisal Aman Khan recorded?",
    "SerialNumber": "474",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Faisal_Aman_Khan> . ?x <http://dbpedia.org/property/recorded> ?uri  . }",
    "entity mapping": [
      {
        "label": "Faisal Aman Khan",
        "uri": "http://dbpedia.org/resource/Faisal_Aman_Khan"
      }
    ],
    "id": "ff50d4217d0d43c69bb66a163247c4f1",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "How many different layouts do cars designed by Oliver Boulay have?",
    "SerialNumber": "477",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . }",
    "entity mapping": [
      {
        "label": "Oliver Boulay",
        "uri": "http://dbpedia.org/resource/Olivier_Boulay"
      }
    ],
    "id": "91feed339fa040e486755c343500f7d1",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout"
      }
    ]
  },
  {
    "question": "How many other Guests are there of the television episodes whose Guests is Brian d\u0027Arcy James ?",
    "SerialNumber": "479",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Brian_d\u0027Arcy_James> . ?x <http://dbpedia.org/property/guests> ?uri }",
    "entity mapping": [
      {
        "label": "Brian d\u0027Arcy James",
        "uri": "http://dbpedia.org/resource/Brian_d\u0027Arcy_James"
      }
    ],
    "id": "f018611c46d2443ca03755ae47d1568b",
    "predicate mapping": [
      {
        "label": "Guests",
        "uri": "http://dbpedia.org/property/guests"
      },
      {
        "label": "Guests",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "What awards have the narrator of the Cries and Whispers won?",
    "SerialNumber": "480",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cries_and_Whispers> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cries and Whispers",
        "uri": "http://dbpedia.org/resource/Cries_and_Whispers"
      }
    ],
    "id": "d7b3b5d412234a01aa50b7d8d3365a20",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Name the software which has been developed by John Fanning ?",
    "SerialNumber": "481",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/John_Fanning_(businessman)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "John Fanning",
        "uri": "http://dbpedia.org/resource/John_Fanning_(businessman)"
      }
    ],
    "id": "b3a55c2d774b4ae5b6890b7ae5cf5d5e",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "What are the cities located on the sea into which the Aegean Sea flows?",
    "SerialNumber": "482",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Aegean_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }",
    "entity mapping": [
      {
        "label": "Aegean Sea",
        "uri": "http://dbpedia.org/resource/Aegean_Sea"
      }
    ],
    "id": "2b59ba028c34416390816c7c18f84230",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/outflow"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "Whichi  burial place of the Henri, Duke of Rohan is also the birth place of Michel Frutschi ?",
    "SerialNumber": "484",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri,_Duke_of_Rohan> <http://dbpedia.org/ontology/placeOfBurial> ?uri. <http://dbpedia.org/resource/Michel_Frutschi> <http://dbpedia.org/property/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Henri, Duke of Rohan",
        "uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan"
      },
      {
        "label": "Michel Frutschi",
        "uri": "http://dbpedia.org/resource/Michel_Frutschi"
      }
    ],
    "id": "9056e4b74f654d5ea69fefdc6992e717",
    "predicate mapping": [
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/ontology/placeOfBurial"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "How many mammals are in the Chordate phylum?",
    "SerialNumber": "487",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "Chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      }
    ],
    "id": "784fa60a6196464d8a6c45f97733c61f",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/property/phylum"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "Name the species of Southwest African lion ?",
    "SerialNumber": "490",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Southwest_African_lion> <http://dbpedia.org/ontology/species> ?uri } ",
    "entity mapping": [
      {
        "label": "Southwest African lion",
        "uri": "http://dbpedia.org/resource/Southwest_African_lion"
      }
    ],
    "id": "ac98a0220f7340f187466f3e2d99aab4",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      }
    ]
  },
  {
    "question": "List the pole drivers in the grand prixes where Williams Grand Prix Engineering was a first team?",
    "SerialNumber": "492",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Williams_Grand_Prix_Engineering> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "entity mapping": [
      {
        "label": "Williams Grand Prix Engineering",
        "uri": "http://dbpedia.org/resource/Williams_Grand_Prix_Engineering"
      }
    ],
    "id": "b1760c005bc747f78ec34be2a730e01b",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      },
      {
        "label": "grand prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix"
      }
    ]
  },
  {
    "question": "What are the other key people of the non-profit organisations whose one of the  key person is Joe Green ?",
    "SerialNumber": "499",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Joe_Green_(entrepreneur)> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}",
    "entity mapping": [
      {
        "label": "Joe Green",
        "uri": "http://dbpedia.org/resource/Joe_Green_(entrepreneur)"
      }
    ],
    "id": "8b97d14dcaf24e5ebfbcdd6c33b5225b",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "non-profit organisation",
        "uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation"
      }
    ]
  },
  {
    "question": "Is Mike Babcock the head coach of Toronto Maple Leafs?",
    "SerialNumber": "500",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Toronto_Maple_Leafs> <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock> }",
    "entity mapping": [
      {
        "label": "Toronto Maple Leafs",
        "uri": "http://dbpedia.org/resource/Toronto_Maple_Leafs"
      },
      {
        "label": "Mike Babcock",
        "uri": "http://dbpedia.org/resource/Mike_Babcock"
      }
    ],
    "id": "9c45e57bd6df436a804a484269f51d51",
    "predicate mapping": [
      {
        "label": "head coach",
        "uri": "http://dbpedia.org/property/headCoach"
      }
    ]
  },
  {
    "question": "What writers have nationality as Statelessness?  ",
    "SerialNumber": "501",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Statelessness>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Statelessness",
        "uri": "http://dbpedia.org/resource/Statelessness"
      }
    ],
    "id": "902aa5708f8b44108380a95c01c45686",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Who is the leader of United States House of Representatives elections, 1788 and 1789 ?",
    "SerialNumber": "502",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri } ",
    "entity mapping": [
      {
        "label": "United States House of Representatives elections, 1788 and 1789",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789"
      }
    ],
    "id": "4fa56e45fedf4969b8ccfc846a78dc9a",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader"
      }
    ]
  },
  {
    "question": "What honours did Reigh Count receive?",
    "SerialNumber": "505",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Reigh_Count> <http://dbpedia.org/ontology/honours> ?uri } ",
    "entity mapping": [
      {
        "label": "Reigh Count",
        "uri": "http://dbpedia.org/resource/Reigh_Count"
      }
    ],
    "id": "82880466af6a4a07bb1bcd89ed90af00",
    "predicate mapping": [
      {
        "label": "honours",
        "uri": "http://dbpedia.org/ontology/honours"
      }
    ]
  },
  {
    "question": "List the awards received of the person whose child is Daine Disney Miller?",
    "SerialNumber": "507",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Diane_Disney_Miller> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Daine Disney Miller",
        "uri": "http://dbpedia.org/resource/Diane_Disney_Miller"
      }
    ],
    "id": "ee1bccf6ccb7409e82df8306828de0c8",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the place of birth of Lauren Briggs ?",
    "SerialNumber": "510",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lauren_Briggs> <http://dbpedia.org/property/placeOfBirth> ?uri } ",
    "entity mapping": [
      {
        "label": "Lauren Briggs",
        "uri": "http://dbpedia.org/resource/Lauren_Briggs"
      }
    ],
    "id": "5ac4dc8f112e464796c31164eb0f3a64",
    "predicate mapping": [
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Who is the fictional character whose relative is Vestigial Peter?",
    "SerialNumber": "513",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Vestigial_Peter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Vestigial Peter",
        "uri": "http://dbpedia.org/resource/Vestigial_Peter"
      }
    ],
    "id": "50815a2e5ca14118b958db770c868c1e",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What are a few molluscas whose family is Buccinidae?",
    "SerialNumber": "514",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mollusca>}",
    "entity mapping": [
      {
        "label": "Buccinidae",
        "uri": "http://dbpedia.org/resource/Buccinidae"
      }
    ],
    "id": "6283e026a6f54433921efa5494260bc8",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "mollusca",
        "uri": "http://dbpedia.org/ontology/Mollusca"
      }
    ]
  },
  {
    "question": "What is the agency name of the Ministry of Information and Communication Technology (Thailand) and distribution region  of the Channel 9 MCOT HD ?",
    "SerialNumber": "515",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ministry_of_Information_and_Communication_Technology_(Thailand)> <http://dbpedia.org/property/agencyName> ?uri. <http://dbpedia.org/resource/Channel_9_MCOT_HD> <http://dbpedia.org/property/city> ?uri} ",
    "entity mapping": [
      {
        "label": "Ministry of Information and Communication Technology (Thailand)",
        "uri": "http://dbpedia.org/resource/Ministry_of_Information_and_Communication_Technology_(Thailand)"
      },
      {
        "label": "Channel 9 MCOT HD",
        "uri": "http://dbpedia.org/resource/Channel_9_MCOT_HD"
      }
    ],
    "id": "4082e390c8294b71804e3c6b5b3f249c",
    "predicate mapping": [
      {
        "label": "agency name",
        "uri": "http://dbpedia.org/property/agencyName"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      }
    ]
  },
  {
    "question": "What type of government is elected in Kumta?",
    "SerialNumber": "516",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/ontology/governmentType> ?uri } ",
    "entity mapping": [
      {
        "label": "Kumta",
        "uri": "http://dbpedia.org/resource/Kumta"
      }
    ],
    "id": "f976333c9df44935b5cb741fdfd342ea",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/ontology/governmentType"
      }
    ]
  },
  {
    "question": "What is the television show whose subsequent work is Crusade (TV series) and developed by  J. Michael Straczynski?",
    "SerialNumber": "521",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Crusade_(TV_series)> . ?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Crusade (TV series)",
        "uri": "http://dbpedia.org/resource/Crusade_(TV_series)"
      },
      {
        "label": "J. Michael Straczynski",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski"
      }
    ],
    "id": "7509db63f63840548107d56cc97f5a0f",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which content license of the MSX BASIC is also the profession of the Laura K. Ipsen ?",
    "SerialNumber": "523",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri. <http://dbpedia.org/resource/Laura_K._Ipsen> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "entity mapping": [
      {
        "label": "MSX BASIC",
        "uri": "http://dbpedia.org/resource/MSX_BASIC"
      },
      {
        "label": "Laura K. Ipsen",
        "uri": "http://dbpedia.org/resource/Laura_K._Ipsen"
      }
    ],
    "id": "40d57e64ea22448ab4a194129f2793ae",
    "predicate mapping": [
      {
        "label": "content license",
        "uri": "http://dbpedia.org/property/license"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Who is the performer of the album whose subsequent work is Willie Nelson and Family ?",
    "SerialNumber": "525",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Willie_Nelson_and_Family> . ?x <http://dbpedia.org/ontology/artist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Willie Nelson and Family",
        "uri": "http://dbpedia.org/resource/Willie_Nelson_and_Family"
      }
    ],
    "id": "41dea095bc384feb9fb2f59597e2457d",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "performer",
        "uri": "http://dbpedia.org/ontology/artist"
      }
    ]
  },
  {
    "question": "Name the debut team of Dan Otero ?",
    "SerialNumber": "526",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Otero> <http://dbpedia.org/ontology/debutTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Dan Otero",
        "uri": "http://dbpedia.org/resource/Dan_Otero"
      }
    ],
    "id": "509e179ae21a44d68ac494defe1b32e7",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      }
    ]
  },
  {
    "question": "Who is the producer of Captain EO ?",
    "SerialNumber": "528",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Captain_EO> <http://dbpedia.org/property/producer> ?uri } ",
    "entity mapping": [
      {
        "label": "Captain EO",
        "uri": "http://dbpedia.org/resource/Captain_EO"
      }
    ],
    "id": "d15ac9a40bb143a0a3da0de817e8d832",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      }
    ]
  },
  {
    "question": "List all the home stadium of the soccer clubs which has one of the home stadium as Nairobi ?",
    "SerialNumber": "529",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeStadium> <http://dbpedia.org/resource/Nairobi> . ?x <http://dbpedia.org/property/homeStadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "Nairobi",
        "uri": "http://dbpedia.org/resource/Nairobi"
      }
    ],
    "id": "f2e72675e3df4f1abe9deb7b7779f904",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/property/homeStadium"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/property/homeStadium"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "Which college of Luke List (golfer) is the alma mater of K. Terry Dornbush",
    "SerialNumber": "531",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Luke_List_(golfer)> <http://dbpedia.org/property/college> ?uri. <http://dbpedia.org/resource/K._Terry_Dornbush> <http://dbpedia.org/property/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Luke List",
        "uri": "http://dbpedia.org/resource/Luke_List_(golfer)"
      },
      {
        "label": "K. Terry Dornbush",
        "uri": "http://dbpedia.org/resource/K._Terry_Dornbush"
      }
    ],
    "id": "0645d71c51664c7f98ef83d258d24c5d",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "What are the academic interest of Philip Novak?",
    "SerialNumber": "532",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri } ",
    "entity mapping": [
      {
        "label": "Philip Novak",
        "uri": "http://dbpedia.org/resource/Philip_Novak"
      }
    ],
    "id": "593a45b09e04430e9687b99f34b3e709",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "Count the total number of software whose programming language is C++ and operating system is Microsoft Windows?",
    "SerialNumber": "534",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> } ",
    "entity mapping": [
      {
        "label": "C++",
        "uri": "http://dbpedia.org/resource/C++"
      },
      {
        "label": "Microsoft Windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      }
    ],
    "id": "526b1249debc4893af724c324a24726e",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      }
    ]
  },
  {
    "question": "How many albums were released under the Victor Entertainment label?",
    "SerialNumber": "535",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Victor Entertainment",
        "uri": "http://dbpedia.org/resource/Victor_Entertainment"
      }
    ],
    "id": "e91c453536f24b228292c56b81ead42b",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "Does NOAAS Davidson (S 331) have a homeport in Seattle?",
    "SerialNumber": "536",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/NOAAS_Davidson_(S_331)> <http://dbpedia.org/ontology/homeport> <http://dbpedia.org/resource/Seattle> }",
    "entity mapping": [
      {
        "label": "NOAAS Davidson (S 331)",
        "uri": "http://dbpedia.org/resource/NOAAS_Davidson_(S_331)"
      },
      {
        "label": "Seattle",
        "uri": "http://dbpedia.org/resource/Seattle"
      }
    ],
    "id": "7dc5e7a5b436490481cc92fa93bd288f",
    "predicate mapping": [
      {
        "label": "homeport",
        "uri": "http://dbpedia.org/ontology/homeport"
      }
    ]
  },
  {
    "question": "Which serving railway line of the Daund Junction railway station was also the place where 99 (2009 film) was recorded ?",
    "SerialNumber": "537",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/99_(2009_film)> <http://dbpedia.org/property/recorded> ?uri} ",
    "entity mapping": [
      {
        "label": "Daund Junction railway station",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station"
      },
      {
        "label": "99 (2009 film)",
        "uri": "http://dbpedia.org/resource/99_(2009_film)"
      }
    ],
    "id": "e81ec239e24b4394ad486b4fcfb77f8b",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "Which office holder\u0027s resting place is Alta Mesa Memorial park and has adrian A. Basora as successor ?",
    "SerialNumber": "539",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "adrian A. Basora",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora"
      },
      {
        "label": "Alta Mesa Memorial park",
        "uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park"
      }
    ],
    "id": "6daa5758ac314e80929ed6583575c5f8",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Name the movie written by Monty Python and distributed by Cinema International Corporation ?",
    "SerialNumber": "540",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Cinema International Corporation",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation"
      },
      {
        "label": "Monty Python",
        "uri": "http://dbpedia.org/resource/Monty_Python"
      }
    ],
    "id": "22420b9ce00545229aecd57813393a38",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which governor of Charles Willing byrd fought the battle of Siege of Fort Recovery ?",
    "SerialNumber": "541",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd>  . }",
    "entity mapping": [
      {
        "label": "Siege of Fort Recovery",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery"
      },
      {
        "label": "Charles Willing byrd",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd"
      }
    ],
    "id": "18cc0cb6c446411aba19e87c3d2cef99",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor"
      }
    ]
  },
  {
    "question": "Which company owns Evraz ?",
    "SerialNumber": "543",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evraz> <http://dbpedia.org/ontology/owningCompany> ?uri } ",
    "entity mapping": [
      {
        "label": "Evraz",
        "uri": "http://dbpedia.org/resource/Evraz"
      }
    ],
    "id": "86346cf018e9417da21aae023485460f",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      }
    ]
  },
  {
    "question": "Who is the leader of Panki block ?",
    "SerialNumber": "544",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panki_block> <http://dbpedia.org/ontology/leaderName> ?uri } ",
    "entity mapping": [
      {
        "label": "Panki block",
        "uri": "http://dbpedia.org/resource/Panki_block"
      }
    ],
    "id": "3c5ec517b1a14c2bbccc65ce6c1db5c7",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "Which parent company of  Edsel was the first team of the 1967 Mexican Grand Prix ?",
    "SerialNumber": "545",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edsel> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "Edsel",
        "uri": "http://dbpedia.org/resource/Edsel"
      },
      {
        "label": "1967 Mexican Grand Prix",
        "uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix"
      }
    ],
    "id": "d0a9f37f03c64ca2a96a688f3ac12798",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      }
    ]
  },
  {
    "question": "Name the company whose products\u0027s predecessor is Boeing Vertol CH-46 Sea Knight?",
    "SerialNumber": "546",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Boeing_Vertol_CH-46_Sea_Knight> . ?uri <http://dbpedia.org/property/products> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Boeing Vertol CH-46 Sea Knight",
        "uri": "http://dbpedia.org/resource/Boeing_Vertol_CH-46_Sea_Knight"
      }
    ],
    "id": "2de2ea8f7f994e38898f57b6b90b2088",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the species of Liger ?",
    "SerialNumber": "547",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liger> <http://dbpedia.org/ontology/species> ?uri } ",
    "entity mapping": [
      {
        "label": "Liger",
        "uri": "http://dbpedia.org/resource/Liger"
      }
    ],
    "id": "c1231c9ac8174bc4bb544853d3faf6ca",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      }
    ]
  },
  {
    "question": "Name the line of the Vadodara Junction railway station which is also the  hub airport of the Pawan Hans?",
    "SerialNumber": "550",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri. <http://dbpedia.org/resource/Pawan_Hans> <http://dbpedia.org/ontology/hubAirport> ?uri} ",
    "entity mapping": [
      {
        "label": "Vadodara Junction railway station",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station"
      },
      {
        "label": "Pawan Hans",
        "uri": "http://dbpedia.org/resource/Pawan_Hans"
      }
    ],
    "id": "1fddb6aae1e34017a5ef49ecfbd2f3bb",
    "predicate mapping": [
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line"
      },
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      }
    ]
  },
  {
    "question": "Which television shows has sound format as 5.1 surround?",
    "SerialNumber": "551",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/5.1_surround_sound>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "5.1 surround",
        "uri": "http://dbpedia.org/resource/5.1_surround_sound"
      }
    ],
    "id": "a043a59e39a94f1b804acd94a58801e2",
    "predicate mapping": [
      {
        "label": "format",
        "uri": "http://dbpedia.org/ontology/format"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the TV show whose opening theme is Gary Portnoy and the subsequent work is Frasier?",
    "SerialNumber": "554",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Gary Portnoy",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy"
      },
      {
        "label": "Frasier",
        "uri": "http://dbpedia.org/resource/Frasier"
      }
    ],
    "id": "652f41e8f5324124af1f9e41d9127e5d",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which president was served by someone whose lieutenant is Lewis Stuyvesant Chanler?",
    "SerialNumber": "555",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Lewis_Stuyvesant_Chanler> . ?x <http://dbpedia.org/ontology/president> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lewis Stuyvesant Chanler",
        "uri": "http://dbpedia.org/resource/Lewis_Stuyvesant_Chanler"
      }
    ],
    "id": "2a427a404ec84210b9342358d5cb81a4",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/property/lieutenant"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "Whose county seats are Mediolanum and History of Trier?",
    "SerialNumber": "557",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Mediolanum> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . }",
    "entity mapping": [
      {
        "label": "Mediolanum",
        "uri": "http://dbpedia.org/resource/Mediolanum"
      },
      {
        "label": "History of Trier",
        "uri": "http://dbpedia.org/resource/History_of_Trier"
      }
    ],
    "id": "14657aede6af4c84b339a412d713119b",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital"
      }
    ]
  },
  {
    "question": "How many movies did Joel Schumacher direct?",
    "SerialNumber": "558",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Joel Schumacher",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher"
      }
    ],
    "id": "55a0f9a155d248a4b36850165c830f0b",
    "predicate mapping": [
      {
        "label": "direct",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who is the owner of Saumarez ?",
    "SerialNumber": "560",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saumarez_(horse)> <http://dbpedia.org/ontology/owner> ?uri } ",
    "entity mapping": [
      {
        "label": "Saumarez",
        "uri": "http://dbpedia.org/resource/Saumarez_(horse)"
      }
    ],
    "id": "a100cb0681104c81aeaeb99a2e615d66",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "What automobile engine\u0027s successor is BMW M40",
    "SerialNumber": "563",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/BMW_M40>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AutomobileEngine>}",
    "entity mapping": [
      {
        "label": "BMW M40",
        "uri": "http://dbpedia.org/resource/BMW_M40"
      }
    ],
    "id": "9ea90a365f7c4673a2ae7ecd250d290b",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "automobile engine",
        "uri": "http://dbpedia.org/ontology/AutomobileEngine"
      }
    ]
  },
  {
    "question": "Which shareholder of Naval Air facility Adak is also the operator of New Sanno Hotel ?",
    "SerialNumber": "564",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/property/operator> ?uri. <http://dbpedia.org/resource/Naval_Air_Facility_Adak> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "New Sanno Hotel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel"
      },
      {
        "label": "Naval Air facility Adak",
        "uri": "http://dbpedia.org/resource/Naval_Air_Facility_Adak"
      }
    ],
    "id": "e30c5fcc3147441587dae1c295b22f19",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "shareholder",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "How many owners are there of things located in Alabama?",
    "SerialNumber": "565",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Alabama> . ?x <http://dbpedia.org/ontology/owner> ?uri  . }",
    "entity mapping": [
      {
        "label": "Alabama",
        "uri": "http://dbpedia.org/resource/Alabama"
      }
    ],
    "id": "12381d3b6b434094988269dcdc1e8a46",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "owners",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "What are the outflow of the lakes which also has one of the outflow as Congo River ?",
    "SerialNumber": "568",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Congo_River> . ?x <http://dbpedia.org/ontology/outflow> ?uri  . }",
    "entity mapping": [
      {
        "label": "Congo River",
        "uri": "http://dbpedia.org/resource/Congo_River"
      }
    ],
    "id": "6b60ad1e840246a7a1e76df64a37be03",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/ontology/outflow"
      }
    ]
  },
  {
    "question": "Which key person of Clinton Foundation is also the president of Jim Sasser ?",
    "SerialNumber": "570",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri. <http://dbpedia.org/resource/Jim_Sasser> <http://dbpedia.org/ontology/president> ?uri} ",
    "entity mapping": [
      {
        "label": "Clinton Foundation",
        "uri": "http://dbpedia.org/resource/Clinton_Foundation"
      },
      {
        "label": "Jim Sasser",
        "uri": "http://dbpedia.org/resource/Jim_Sasser"
      }
    ],
    "id": "1c39ad9fe6534d5ab15c4cdca5526643",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "What is the basketball team whose President\u0027s college is Brockport Golden Eagles?",
    "SerialNumber": "572",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/college> <http://dbpedia.org/resource/Brockport_Golden_Eagles> . ?uri <http://dbpedia.org/property/president> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "entity mapping": [
      {
        "label": "Brockport Golden Eagles",
        "uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles"
      }
    ],
    "id": "258d0ae4aaa94829ab2720cff3ef031c",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college"
      },
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam"
      }
    ]
  },
  {
    "question": "How many cities are around the sea into which the aegean sea flows?",
    "SerialNumber": "575",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Aegean_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "aegean sea",
        "uri": "http://dbpedia.org/resource/Aegean_Sea"
      }
    ],
    "id": "891f155dd9e14cdcac38afc45e4a869e",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/outflow"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Whose doctoral student is etienne bieler\\xc9tienne_Bi\\xe9ler",
    "SerialNumber": "578",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Étienne_Biéler> } ",
    "entity mapping": [
      {
        "label": "etienne bieler",
        "uri": "http://dbpedia.org/resource/Étienne_Biéler"
      }
    ],
    "id": "59ee66fc1eb648ff9ca0e751825f1de1",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      }
    ]
  },
  {
    "question": "what awards have been giving to Muhammad Yunus?",
    "SerialNumber": "580",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Muhammad_Yunus> <http://dbpedia.org/ontology/award> ?uri } ",
    "entity mapping": [
      {
        "label": "Muhammad Yunus",
        "uri": "http://dbpedia.org/resource/Muhammad_Yunus"
      }
    ],
    "id": "cf3c2cbbbde94259a9b3d4194d90ac28",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "List the successor of successor of Hayden, Stone \u0026 Co.",
    "SerialNumber": "581",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hayden,_Stone_\u0026_Co.> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/successor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Hayden, Stone \u0026 Co.",
        "uri": "http://dbpedia.org/resource/Hayden,_Stone_\u0026_Co."
      }
    ],
    "id": "f93b26eb3cf04a5e8664ae62dd6b5dfb",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      }
    ]
  },
  {
    "question": "Who are the people which ITV(TV network) has employed?",
    "SerialNumber": "583",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/ITV_(TV_network)>  . }",
    "entity mapping": [
      {
        "label": "ITV",
        "uri": "http://dbpedia.org/resource/ITV_(TV_network)"
      }
    ],
    "id": "900ef117ddb54ad0b9686cde649bc3d0",
    "predicate mapping": [
      {
        "label": "employed",
        "uri": "http://dbpedia.org/property/employer"
      }
    ]
  },
  {
    "question": "How many teams have LA kings players in them currently?",
    "SerialNumber": "586",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Los_Angeles_Kings> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "LA kings",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Kings"
      }
    ],
    "id": "1303bcf1aff546deb0445accfefd890d",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Who is the coach of England national under-21 football team ?",
    "SerialNumber": "588",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri } ",
    "entity mapping": [
      {
        "label": "England national under-21 football team",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team"
      }
    ],
    "id": "5bc08a17c2874dc7b7711f0329ab4fb2",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      }
    ]
  },
  {
    "question": "Name an airline with hub airports as Los Angeles International Airport and San Francisco International Airport?",
    "SerialNumber": "589",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport> . ?uri <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/San_Francisco_International_Airport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Los Angeles International Airport",
        "uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport"
      },
      {
        "label": "San Francisco International Airport",
        "uri": "http://dbpedia.org/resource/San_Francisco_International_Airport"
      }
    ],
    "id": "bafd650bf447413fa5e2c8f3f6435da8",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      },
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "What is the region of Tom Perriello ?",
    "SerialNumber": "590",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tom_Perriello> <http://dbpedia.org/ontology/region> ?uri } ",
    "entity mapping": [
      {
        "label": "Tom Perriello",
        "uri": "http://dbpedia.org/resource/Tom_Perriello"
      }
    ],
    "id": "249843fe379e4bc29f4510be1e62d055",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "What is the label of the album whose previous work is Waterfall?",
    "SerialNumber": "591",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Waterfall_(album)> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Waterfall",
        "uri": "http://dbpedia.org/resource/Waterfall_(album)"
      }
    ],
    "id": "b8477c9f0ba248149197ed898ea97d36",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "Where is the assembly of Plymouth Savoy, and where Special 26 was recorded?",
    "SerialNumber": "593",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?uri. <http://dbpedia.org/resource/Special_26> <http://dbpedia.org/property/recorded> ?uri} ",
    "entity mapping": [
      {
        "label": "Plymouth Savoy",
        "uri": "http://dbpedia.org/resource/Plymouth_Savoy"
      },
      {
        "label": "Special 26",
        "uri": "http://dbpedia.org/resource/Special_26"
      }
    ],
    "id": "56f16d1174db4f37b05d59f669705539",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "Who owns the railway line which goes through the Newark Station?",
    "SerialNumber": "594",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Newark_station_(Delaware)> <http://dbpedia.org/property/line> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . }",
    "entity mapping": [
      {
        "label": "Newark Station",
        "uri": "http://dbpedia.org/resource/Newark_station_(Delaware)"
      }
    ],
    "id": "50ecdb7b02db481399e126e0658583d5",
    "predicate mapping": [
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "What is the branch of the politicians whose governor is Bill Clements?",
    "SerialNumber": "596",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Bill_Clements> . ?x <http://dbpedia.org/property/branch> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Bill Clements",
        "uri": "http://dbpedia.org/resource/Bill_Clements"
      }
    ],
    "id": "85d67513bd1b4291a9c48017ba2c6f30",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "Is National Archaeological Museum (Florence) the museum of Chimera of Arezzo?",
    "SerialNumber": "597",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chimera_of_Arezzo> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)> }",
    "entity mapping": [
      {
        "label": "Chimera of Arezzo",
        "uri": "http://dbpedia.org/resource/Chimera_of_Arezzo"
      },
      {
        "label": "National Archaeological Museum (Florence)",
        "uri": "http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)"
      }
    ],
    "id": "78629f144207411aaaf8e5d9dd60022e",
    "predicate mapping": [
      {
        "label": "Museum",
        "uri": "http://dbpedia.org/property/museum"
      }
    ]
  },
  {
    "question": "Who are the associate musical artists of Dalma Kovcs ?",
    "SerialNumber": "598",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dalma_Kovács> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri } ",
    "entity mapping": [
      {
        "label": "Dalma Kovcs",
        "uri": "http://dbpedia.org/resource/Dalma_Kovács"
      }
    ],
    "id": "390b74bcdbcb43668fa738a6a5ae5bc9",
    "predicate mapping": [
      {
        "label": "associate musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "Whichd officer\u0027s final resting place is North Bend, ohio and belongs to Indiana Territory branch ",
    "SerialNumber": "599",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory>  . }",
    "entity mapping": [
      {
        "label": "North Bend, ohio",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio"
      },
      {
        "label": "Indiana Territory",
        "uri": "http://dbpedia.org/resource/Indiana_Territory"
      }
    ],
    "id": "e2894724dd3947e481b68dd558dced13",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "What is the series of the book which is a subsequent work of Blade Runner 2: The Edge of Human ?",
    "SerialNumber": "601",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Blade Runner 2: The Edge of Human",
        "uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human"
      }
    ],
    "id": "b2ca768fe1b54426a2d0413c0f7c42f0",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "President of Ghana is the leader title of which country?",
    "SerialNumber": "603",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_Ghana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "President of Ghana",
        "uri": "http://dbpedia.org/resource/President_of_Ghana"
      }
    ],
    "id": "4ec3f228ceb342d1b160cd91a06ac835",
    "predicate mapping": [
      {
        "label": "leader title",
        "uri": "http://dbpedia.org/property/leaderTitle"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Give me all commanders which had an important role in both, the Battle of Fort Stephenson and Battle of the Thames?",
    "SerialNumber": "604",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri. <http://dbpedia.org/resource/Battle_of_the_Thames> <http://dbpedia.org/ontology/commander> ?uri . }",
    "entity mapping": [
      {
        "label": "Battle of Fort Stephenson",
        "uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson"
      },
      {
        "label": "Battle of the Thames",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Thames"
      }
    ],
    "id": "462864a5cac04f65bde1144083b52815",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      }
    ]
  },
  {
    "question": "What is the commander of Battle of Brownstown ?",
    "SerialNumber": "607",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Brownstown> <http://dbpedia.org/ontology/commander> ?uri } ",
    "entity mapping": [
      {
        "label": "Battle of Brownstown",
        "uri": "http://dbpedia.org/resource/Battle_of_Brownstown"
      }
    ],
    "id": "28908ee4e3754d90b904645e4f1156b2",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      }
    ]
  },
  {
    "question": "What religion\u0027s politicians are in the Malaysian Chinese association?",
    "SerialNumber": "608",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Malaysian_Chinese_Association> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Malaysian Chinese association",
        "uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association"
      }
    ],
    "id": "d5e7fe8c8df14e7884592ea07357f9fa",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "Who developed the programming languages designed by Rob Pike?",
    "SerialNumber": "610",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Rob_Pike> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProgrammingLanguage>}",
    "entity mapping": [
      {
        "label": "Rob Pike",
        "uri": "http://dbpedia.org/resource/Rob_Pike"
      }
    ],
    "id": "d7d071a722434a7282752c8442ba5572",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/ontology/ProgrammingLanguage"
      }
    ]
  },
  {
    "question": "List down the prime ministers of Peter Thorneycroft ?",
    "SerialNumber": "611",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peter_Thorneycroft> <http://dbpedia.org/ontology/primeMinister> ?uri } ",
    "entity mapping": [
      {
        "label": "Peter Thorneycroft",
        "uri": "http://dbpedia.org/resource/Peter_Thorneycroft"
      }
    ],
    "id": "1894061d4693487abbac158ae035218c",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "What are the non-fiction topics in the books whose authors is Terry Pratchett?",
    "SerialNumber": "612",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Terry_Pratchett> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Terry Pratchett",
        "uri": "http://dbpedia.org/resource/Terry_Pratchett"
      }
    ],
    "id": "fa79374cc5624b72992b576863b1b839",
    "predicate mapping": [
      {
        "label": "authors",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "non-fiction",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "List the newspapers which has headquarters in Stockholm?",
    "SerialNumber": "614",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "Stockholm",
        "uri": "http://dbpedia.org/resource/Stockholm"
      }
    ],
    "id": "dd4fd682874b4c23bf5f60ebc119a98d",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "Which president of Lance Adams-Schneider had nickname Daniel O\u0027Regan ?",
    "SerialNumber": "615",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lance_Adams-Schneider> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Daniel_O\u0027Regan> <http://dbpedia.org/property/nickname> ?uri} ",
    "entity mapping": [
      {
        "label": "Lance Adams-Schneider",
        "uri": "http://dbpedia.org/resource/Lance_Adams-Schneider"
      },
      {
        "label": "Daniel O\u0027Regan",
        "uri": "http://dbpedia.org/resource/Daniel_O\u0027Regan"
      }
    ],
    "id": "d4dde19bfcd949abbdde426e8ebfb8d9",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "List the software using C++ as programming language and licence is Software as a service?",
    "SerialNumber": "616",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "C++",
        "uri": "http://dbpedia.org/resource/C++"
      },
      {
        "label": "Software as a service",
        "uri": "http://dbpedia.org/resource/Software_as_a_service"
      }
    ],
    "id": "a1df4f7d07df497f8e7ddbd6643a6ea2",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "licence",
        "uri": "http://dbpedia.org/ontology/license"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "list some companies founded by Jim Harris.",
    "SerialNumber": "617",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> } ",
    "entity mapping": [
      {
        "label": "Jim Harris",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)"
      }
    ],
    "id": "f9d991647aae449285e9d5867ea64911",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      }
    ]
  },
  {
    "question": "What has been founded in the state that Denton county, Texas is a part of? ",
    "SerialNumber": "618",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Denton_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . }",
    "entity mapping": [
      {
        "label": "Denton county, Texas",
        "uri": "http://dbpedia.org/resource/Denton_County,_Texas"
      }
    ],
    "id": "eb46e7dfdd9244a1b5455ccdf1a5abb6",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      }
    ]
  },
  {
    "question": "Which countries militaries fought the SFOR battle?",
    "SerialNumber": "619",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/SFOR> . ?x <http://dbpedia.org/ontology/battle> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "SFOR",
        "uri": "http://dbpedia.org/resource/SFOR"
      }
    ],
    "id": "a22e77732ec340b89b2da8d21bc2d89a",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "militaries",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "What is the awards won by the producer of From the Life of the Marionettes ?",
    "SerialNumber": "620",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/From_the_Life_of_the_Marionettes> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "From the Life of the Marionettes",
        "uri": "http://dbpedia.org/resource/From_the_Life_of_the_Marionettes"
      }
    ],
    "id": "068c624211d44e12aee8f503946a20b0",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "How many writers worked on the album Main Course?",
    "SerialNumber": "622",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Main_Course> . ?x <http://dbpedia.org/property/writer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Main Course",
        "uri": "http://dbpedia.org/resource/Main_Course"
      }
    ],
    "id": "2d5d4a8626d54ff58754ce28b3036910",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "Count the number of shows whose creators are Jerry Seinfeld and Larry David?",
    "SerialNumber": "623",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David>} ",
    "entity mapping": [
      {
        "label": "Jerry Seinfeld",
        "uri": "http://dbpedia.org/resource/Jerry_Seinfeld"
      },
      {
        "label": "Larry David",
        "uri": "http://dbpedia.org/resource/Larry_David"
      }
    ],
    "id": "1bbfeeb6913d4de6a7e96c9a64ec101f",
    "predicate mapping": [
      {
        "label": "creators",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "creators",
        "uri": "http://dbpedia.org/ontology/creator"
      }
    ]
  },
  {
    "question": "What is the television show whose company is Playtone and written by Erik Jendresen?",
    "SerialNumber": "625",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Playtone",
        "uri": "http://dbpedia.org/resource/Playtone"
      },
      {
        "label": "Erik Jendresen",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen"
      }
    ],
    "id": "162e1b03aabf4dec9809ad4bd74fbbde",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which office holder allegiance is Colony of Virginia and was has a wife named Dolley Madison ?",
    "SerialNumber": "626",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "uri": "http://dbpedia.org/resource/Dolley_Madison"
      },
      {
        "label": "Colony of Virginia",
        "uri": "http://dbpedia.org/resource/Colony_of_Virginia"
      }
    ],
    "id": "c8c8394ec36c4c9eb2ab8e1fb8c14441",
    "predicate mapping": [
      {
        "label": "wife",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "How many broadcast area of the television stations exists whose broadcast area is Rodrigues ?",
    "SerialNumber": "627",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Rodrigues> . ?x <http://dbpedia.org/property/broadcastArea> ?uri }",
    "entity mapping": [
      {
        "label": "Rodrigues",
        "uri": "http://dbpedia.org/resource/Rodrigues"
      }
    ],
    "id": "50af4130157947afa9979e302f6247f8",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      },
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      }
    ]
  },
  {
    "question": "Which company is the parent company of Chevrolet Spark ?",
    "SerialNumber": "631",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chevrolet_Spark> <http://dbpedia.org/property/parentCompany> ?uri } ",
    "entity mapping": [
      {
        "label": "Chevrolet Spark",
        "uri": "http://dbpedia.org/resource/Chevrolet_Spark"
      }
    ],
    "id": "d43e1ffd1be04f37bd53e99b819bcd08",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/property/parentCompany"
      }
    ]
  },
  {
    "question": "Which stadium\u0027s operator works in the Pepsi Center?",
    "SerialNumber": "633",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Pepsi_Center> . ?uri <http://dbpedia.org/ontology/operator> ?x  . }",
    "entity mapping": [
      {
        "label": "Pepsi Center",
        "uri": "http://dbpedia.org/resource/Pepsi_Center"
      }
    ],
    "id": "6506ce80b6da4014a695dd37684fd858",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator"
      }
    ]
  },
  {
    "question": "Whose deputy is Neil Brown?",
    "SerialNumber": "638",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Neil_Brown_(Australian_politician)>  . }",
    "entity mapping": [
      {
        "label": "Neil Brown",
        "uri": "http://dbpedia.org/resource/Neil_Brown_(Australian_politician)"
      }
    ],
    "id": "52c67daa68c74c3aba9e745ba14b242c",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      }
    ]
  },
  {
    "question": "Who founded the Not on our Watch NGO?",
    "SerialNumber": "639",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Not_on_Our_Watch_(organization)> <http://dbpedia.org/ontology/foundedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "Not on our Watch",
        "uri": "http://dbpedia.org/resource/Not_on_Our_Watch_(organization)"
      }
    ],
    "id": "2ae88829677d41d4aea8ccfc94157dc9",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      }
    ]
  },
  {
    "question": "Who first ascented a mountain of Mount Hoffmann ?",
    "SerialNumber": "640",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> ?uri } ",
    "entity mapping": [
      {
        "label": "Mount Hoffmann",
        "uri": "http://dbpedia.org/resource/Mount_Hoffmann"
      }
    ],
    "id": "689d2f8f512742b78ba168d386e52220",
    "predicate mapping": [
      {
        "label": "ascented",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "List the broadcast area of the TV stations which also serves in Agalga ?",
    "SerialNumber": "641",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Agaléga> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . }",
    "entity mapping": [
      {
        "label": "Agalga",
        "uri": "http://dbpedia.org/resource/Agaléga"
      }
    ],
    "id": "8d253335f3354509a31f7348a91ae3e5",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      },
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      }
    ]
  },
  {
    "question": "Which operating system provider of LG Optimus Vu is also the employer of Manu Cornet ?",
    "SerialNumber": "642",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LG_Optimus_Vu> <http://dbpedia.org/ontology/operatingSystem> ?uri. <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri} ",
    "entity mapping": [
      {
        "label": "LG Optimus Vu",
        "uri": "http://dbpedia.org/resource/LG_Optimus_Vu"
      },
      {
        "label": "Manu Cornet",
        "uri": "http://dbpedia.org/resource/Manu_Cornet"
      }
    ],
    "id": "61660d3107614a2d8f76e7dfac844a7b",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "employer",
        "uri": "http://dbpedia.org/property/employer"
      }
    ]
  },
  {
    "question": "In how many countries do the rivers start which end at the Caspian Sea?",
    "SerialNumber": "649",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Caspian_Sea> . ?x <http://dbpedia.org/ontology/sourceCountry> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Caspian Sea",
        "uri": "http://dbpedia.org/resource/Caspian_Sea"
      }
    ],
    "id": "c5e369b698d4499a92beac8371b73491",
    "predicate mapping": [
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "What was founded by Congress of Industrial Organizations ?",
    "SerialNumber": "650",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Congress_of_Industrial_Organizations> <http://dbpedia.org/property/founded> ?uri } ",
    "entity mapping": [
      {
        "label": "Congress of Industrial Organizations",
        "uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations"
      }
    ],
    "id": "b39e52f81f1a4c8db50b35e3a82ebb1d",
    "predicate mapping": [
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founded"
      }
    ]
  },
  {
    "question": "Who are the former partners of the figure skaters whose performance have been choreographed by Catarina Lindgren in the past?",
    "SerialNumber": "651",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Catarina_Lindgren> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "entity mapping": [
      {
        "label": "Catarina Lindgren",
        "uri": "http://dbpedia.org/resource/Catarina_Lindgren"
      }
    ],
    "id": "be5e96ca6b8e4b3cbda144341ad8892e",
    "predicate mapping": [
      {
        "label": "choreographed",
        "uri": "http://dbpedia.org/ontology/formerChoreographer"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater"
      }
    ]
  },
  {
    "question": "Which holy things canonized John of Damascus?",
    "SerialNumber": "652",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "John of Damascus",
        "uri": "http://dbpedia.org/resource/John_of_Damascus"
      }
    ],
    "id": "e9207f57106645a098206a135438489b",
    "predicate mapping": [
      {
        "label": "canonized",
        "uri": "http://dbpedia.org/ontology/canonizedBy"
      }
    ]
  },
  {
    "question": "Is Pixar Canada a subsidiary of Pixar?",
    "SerialNumber": "655",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pixar> <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Pixar_Canada> }",
    "entity mapping": [
      {
        "label": "Pixar",
        "uri": "http://dbpedia.org/resource/Pixar"
      },
      {
        "label": "Pixar Canada ",
        "uri": "http://dbpedia.org/resource/Pixar_Canada"
      }
    ],
    "id": "d278080949bc4004b75ff345c547a211",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      }
    ]
  },
  {
    "question": "Which TV show is related to The Sarah Jane Adventures and theme music is composed by  Ron Grainer?",
    "SerialNumber": "660",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "The Sarah Jane Adventures",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures"
      },
      {
        "label": "Ron Grainer",
        "uri": "http://dbpedia.org/resource/Ron_Grainer"
      }
    ],
    "id": "afaeb0eb33ff41d5be722b4859f82618",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the notable work of David Isaacs (writer)?",
    "SerialNumber": "661",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Isaacs_(writer)> <http://dbpedia.org/ontology/notableWork> ?uri } ",
    "entity mapping": [
      {
        "label": "David Isaacs",
        "uri": "http://dbpedia.org/resource/David_Isaacs_(writer)"
      }
    ],
    "id": "47315c1388d2459d9fa1ecc1723ffcf6",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "Who was in military unit which played the role of Air interdiction?",
    "SerialNumber": "662",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Air_interdiction> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }",
    "entity mapping": [
      {
        "label": "Air interdiction",
        "uri": "http://dbpedia.org/resource/Air_interdiction"
      }
    ],
    "id": "f6b72115e52e4c26983c7be44e8e1df8",
    "predicate mapping": [
      {
        "label": "role",
        "uri": "http://dbpedia.org/property/role"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      }
    ]
  },
  {
    "question": "Tirana is the largest city of which country?",
    "SerialNumber": "664",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Tirana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Tirana",
        "uri": "http://dbpedia.org/resource/Tirana"
      }
    ],
    "id": "2bf7c4d882ac4bdca78ac99d19625b3b",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "List the movies whose music composer is often associated with Jon and Vangelis.",
    "SerialNumber": "665",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Jon_and_Vangelis> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Jon and Vangelis",
        "uri": "http://dbpedia.org/resource/Jon_and_Vangelis"
      }
    ],
    "id": "b9e8a704d52448cfa0def79568e79d2a",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the area of the broadcast network which has the affiliation with 9TV?",
    "SerialNumber": "668",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/9TV> <http://dbpedia.org/property/affiliation> ?x . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "entity mapping": [
      {
        "label": "9TV",
        "uri": "http://dbpedia.org/resource/9TV"
      }
    ],
    "id": "7db0553af6fd43c3b91d8767f3add3f3",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "broadcast network",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork"
      }
    ]
  },
  {
    "question": "Was the Army Air Corps honored for the battle of Iraq?",
    "SerialNumber": "669",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Army_Air_Corps_(United_Kingdom)> <http://dbpedia.org/property/battleHonours> <http://dbpedia.org/resource/Iraq> }",
    "entity mapping": [
      {
        "label": "Army Air Corps",
        "uri": "http://dbpedia.org/resource/Army_Air_Corps_(United_Kingdom)"
      },
      {
        "label": "Iraq",
        "uri": "http://dbpedia.org/resource/Iraq"
      }
    ],
    "id": "7aa2e062f4ea473f830cf8f1a72fded6",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battleHonours"
      }
    ]
  },
  {
    "question": "What is the debut team of the american football player who studied in North Fort Myers High School?",
    "SerialNumber": "670",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/North_Fort_Myers_High_School> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "North Fort Myers High School",
        "uri": "http://dbpedia.org/resource/North_Fort_Myers_High_School"
      }
    ],
    "id": "5a928e7eda774ef6911803e52d2461d5",
    "predicate mapping": [
      {
        "label": "school high",
        "uri": "http://dbpedia.org/ontology/highschool"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "What is the mascot of the handball teams in the Turkish Handball Super League?",
    "SerialNumber": "672",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/Turkish_Handball_Super_League> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HandballTeam>}",
    "entity mapping": [
      {
        "label": "Turkish Handball Super League",
        "uri": "http://dbpedia.org/resource/Turkish_Handball_Super_League"
      }
    ],
    "id": "dfd73dbae7ae491793de86126bdb9de2",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "handball team",
        "uri": "http://dbpedia.org/ontology/HandballTeam"
      }
    ]
  },
  {
    "question": "Is Truth prevails the national motto of Czechoslovakia?",
    "SerialNumber": "675",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Czechoslovakia> <http://dbpedia.org/property/nationalMotto> <http://dbpedia.org/resource/Truth_prevails> }",
    "entity mapping": [
      {
        "label": "Czechoslovakia",
        "uri": "http://dbpedia.org/resource/Czechoslovakia"
      },
      {
        "label": "Truth prevails",
        "uri": "http://dbpedia.org/resource/Truth_prevails"
      }
    ],
    "id": "3a2ddeb21c3746fb92dbf66a6c0bc86e",
    "predicate mapping": [
      {
        "label": "national motto",
        "uri": "http://dbpedia.org/property/nationalMotto"
      }
    ]
  },
  {
    "question": "What is Bob Adams (American football) known for?",
    "SerialNumber": "677",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_Adams_(American_football)> <http://dbpedia.org/property/knownFor> ?uri } ",
    "entity mapping": [
      {
        "label": "Bob Adams (American football)",
        "uri": "http://dbpedia.org/resource/Bob_Adams_(American_football)"
      }
    ],
    "id": "3a948631dd8441caa4bea0a1acc65d97",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "Which football players have Newell\u0027s Old Boys as youthclub?",
    "SerialNumber": "679",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell\u0027s_Old_Boys> } ",
    "entity mapping": [
      {
        "label": "Newell\u0027s Old Boys",
        "uri": "http://dbpedia.org/resource/Newell\u0027s_Old_Boys"
      }
    ],
    "id": "08ebfe3921a342c3affe388dd2aea32c",
    "predicate mapping": [
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "Which educational institution of Jack Mcgregor is also the alma mater of Donn barber ?",
    "SerialNumber": "685",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Donn_Barber> <http://dbpedia.org/ontology/education> ?uri . }",
    "entity mapping": [
      {
        "label": "Jack Mcgregor",
        "uri": "http://dbpedia.org/resource/Jack_McGregor"
      },
      {
        "label": "Donn barber",
        "uri": "http://dbpedia.org/resource/Donn_Barber"
      }
    ],
    "id": "90db48b330cc476e9694d1e7e62d38bd",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education"
      }
    ]
  },
  {
    "question": "What is the common party of the Manthena Venkata Raju and  B. Shiva Rao?",
    "SerialNumber": "688",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manthena_Venkata_Raju> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/B._Shiva_Rao> <http://dbpedia.org/property/party> ?uri} ",
    "entity mapping": [
      {
        "label": "Manthena Venkata Raju",
        "uri": "http://dbpedia.org/resource/Manthena_Venkata_Raju"
      },
      {
        "label": "B. Shiva Rao",
        "uri": "http://dbpedia.org/resource/B._Shiva_Rao"
      }
    ],
    "id": "d3faf37f41144547b64d5521b4e67d1c",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "List the ceremonial county of East Tilbury ?",
    "SerialNumber": "692",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri } ",
    "entity mapping": [
      {
        "label": "East Tilbury",
        "uri": "http://dbpedia.org/resource/East_Tilbury"
      }
    ],
    "id": "78f031f16717475180bc9868531bd502",
    "predicate mapping": [
      {
        "label": "ceremonial county",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty"
      }
    ]
  },
  {
    "question": "How many people are there who have relationship with Kennedy family?",
    "SerialNumber": "693",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Kennedy_family>  . }",
    "entity mapping": [
      {
        "label": "Kennedy family",
        "uri": "http://dbpedia.org/resource/Kennedy_family"
      }
    ],
    "id": "6bb581d8ce694ddea69cd899f9f45e14",
    "predicate mapping": [
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "What is the official residence of the Lula J. Davis which is also the death location of the John McTaggart (jockey) ?",
    "SerialNumber": "697",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lula_J._Davis> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/John_McTaggart_(jockey)> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Lula J. Davis",
        "uri": "http://dbpedia.org/resource/Lula_J._Davis"
      },
      {
        "label": "John McTaggart (jockey)",
        "uri": "http://dbpedia.org/resource/John_McTaggart_(jockey)"
      }
    ],
    "id": "4aa7041e78b14355a3150e15ab4c8cbb",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "death location",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "How many other key people are there of the non-profit organisations whose key people is Hillary Clinton ?",
    "SerialNumber": "705",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Hillary_Clinton> . ?x <http://dbpedia.org/property/keyPeople> ?uri }",
    "entity mapping": [
      {
        "label": "Hillary Clinton",
        "uri": "http://dbpedia.org/resource/Hillary_Clinton"
      }
    ],
    "id": "1d01420e4fe94bcb98a919c43f297926",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "How many races have the horses bred by Jacques Van\u0027t Hart participated in?",
    "SerialNumber": "706",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Jacques_Van\u0027t_Hart> . ?x <http://dbpedia.org/property/race> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jacques Van\u0027t Hart",
        "uri": "http://dbpedia.org/resource/Jacques_Van\u0027t_Hart"
      }
    ],
    "id": "4553bf351e414e73a1faa2b005c17496",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/ontology/breeder"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      }
    ]
  },
  {
    "question": "Who is the spouse of Daniel Gibson? ",
    "SerialNumber": "707",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Daniel_Gibson>  . }",
    "entity mapping": [
      {
        "label": "Daniel Gibson",
        "uri": "http://dbpedia.org/resource/Daniel_Gibson"
      }
    ],
    "id": "1f0f16883a764370b8cb9aae06e6d527",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse"
      }
    ]
  },
  {
    "question": "Name the mouth country of Upper Neretva ?",
    "SerialNumber": "708",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri } ",
    "entity mapping": [
      {
        "label": "Upper Neretva",
        "uri": "http://dbpedia.org/resource/Upper_Neretva"
      }
    ],
    "id": "afc1eb64cfc24a95975afaf3b10c8429",
    "predicate mapping": [
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/ontology/mouthCountry"
      }
    ]
  },
  {
    "question": "In how many regions is English American spoken?",
    "SerialNumber": "709",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/English_Americans> <http://dbpedia.org/property/region> ?uri  . }",
    "entity mapping": [
      {
        "label": "English American ",
        "uri": "http://dbpedia.org/resource/English_Americans"
      }
    ],
    "id": "3edcbc0ae531477c808768239f89c922",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "Who has been married to both Penny Lancaster and Alana Stewart?",
    "SerialNumber": "710",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Penny_Lancaster> <http://dbpedia.org/ontology/spouse> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri . }",
    "entity mapping": [
      {
        "label": "Penny Lancaster",
        "uri": "http://dbpedia.org/resource/Penny_Lancaster"
      },
      {
        "label": "Alana Stewart",
        "uri": "http://dbpedia.org/resource/Alana_Stewart"
      }
    ],
    "id": "3dfd41b5ba22435eb756a1d2034d0ce6",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "Which country does league of Nguendula Filipe belongs to?",
    "SerialNumber": "711",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Nguendula_Filipe> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/property/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "Nguendula Filipe",
        "uri": "http://dbpedia.org/resource/Nguendula_Filipe"
      }
    ],
    "id": "e1f667ae1cb6458ba9f14a1021e8c8b4",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "What is the largest city of the country to whom, the battle honours of 65th Regiment of Foot were given?",
    "SerialNumber": "713",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/65th_(2nd_Yorkshire,_North_Riding)_Regiment_of_Foot> <http://dbpedia.org/property/battleHonours> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "65th",
        "uri": "http://dbpedia.org/resource/65th_(2nd_Yorkshire,_North_Riding)_Regiment_of_Foot"
      }
    ],
    "id": "20163596744342f4b6677a18dbc491d0",
    "predicate mapping": [
      {
        "label": "battle honours",
        "uri": "http://dbpedia.org/property/battleHonours"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "Is Ella Fitzgerald associated with Mickey Roker?",
    "SerialNumber": "715",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mickey_Roker> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Ella_Fitzgerald> }",
    "entity mapping": [
      {
        "label": "Mickey Roker",
        "uri": "http://dbpedia.org/resource/Mickey_Roker"
      },
      {
        "label": "Ella Fitzgerald",
        "uri": "http://dbpedia.org/resource/Ella_Fitzgerald"
      }
    ],
    "id": "007bb942a6da4c3f987fba8dff86e26b",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "Does Cascade Airways have a hub in Seattle?",
    "SerialNumber": "717",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Seattle> }",
    "entity mapping": [
      {
        "label": "Cascade Airways",
        "uri": "http://dbpedia.org/resource/Cascade_Airways"
      },
      {
        "label": "Seattle",
        "uri": "http://dbpedia.org/resource/Seattle"
      }
    ],
    "id": "461bef912cd34b3cbadf533925a20f87",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      }
    ]
  },
  {
    "question": "Who did their highschool from a school whose mascot was a fighting tiger?",
    "SerialNumber": "718",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Fighting_Tiger> . ?uri <http://dbpedia.org/ontology/highschool> ?x  . }",
    "entity mapping": [
      {
        "label": "fighting tiger",
        "uri": "http://dbpedia.org/resource/Fighting_Tiger"
      }
    ],
    "id": "d795c9f16e8347cba7a4dd7b2a27de50",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/ontology/highschool"
      }
    ]
  },
  {
    "question": "What are the school mascots in Blytheville school district?",
    "SerialNumber": "719",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/district> <http://dbpedia.org/resource/Blytheville_School_District> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Blytheville school district",
        "uri": "http://dbpedia.org/resource/Blytheville_School_District"
      }
    ],
    "id": "295460c32de746aa8bcc193aaee595c3",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "How many services does the company who made Onedrive provide?",
    "SerialNumber": "721",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/OneDrive> . ?x <http://dbpedia.org/property/services> ?uri  . }",
    "entity mapping": [
      {
        "label": "Onedrive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      }
    ],
    "id": "f4b98010a03e427385fe8ee2f13cffc8",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "Name the movie written by Monty Python and has music composer as Geoffrey Burgon ?",
    "SerialNumber": "722",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Geoffrey_Burgon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Monty Python",
        "uri": "http://dbpedia.org/resource/Monty_Python"
      },
      {
        "label": "Geoffrey Burgon",
        "uri": "http://dbpedia.org/resource/Geoffrey_Burgon"
      }
    ],
    "id": "b087abc428724248b54e69d4f2519f9a",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who is the leader of Hackweiser ?",
    "SerialNumber": "724",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hackweiser> <http://dbpedia.org/property/leaderName> ?uri } ",
    "entity mapping": [
      {
        "label": "Hackweiser",
        "uri": "http://dbpedia.org/resource/Hackweiser"
      }
    ],
    "id": "8dc28cce9d654bfe8fbf70dc2b8673e9",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leaderName"
      }
    ]
  },
  {
    "question": "What musician is often associated with Tiffany Villarreal and wrote Same Song?",
    "SerialNumber": "726",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/Tiffany_Villarreal> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri . }",
    "entity mapping": [
      {
        "label": "Same Song",
        "uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)"
      },
      {
        "label": "Tiffany Villarreal",
        "uri": "http://dbpedia.org/resource/Tiffany_Villarreal"
      }
    ],
    "id": "968a91762e304939ac276e8bffeeb104",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "Name the city served by Juhu Aerodrome ?",
    "SerialNumber": "727",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juhu_Aerodrome> <http://dbpedia.org/property/cityServed> ?uri } ",
    "entity mapping": [
      {
        "label": "Juhu Aerodrome",
        "uri": "http://dbpedia.org/resource/Juhu_Aerodrome"
      }
    ],
    "id": "bdab35771cbc423897c8ea4079e34696",
    "predicate mapping": [
      {
        "label": "served city",
        "uri": "http://dbpedia.org/property/cityServed"
      }
    ]
  },
  {
    "question": "What common team are Mikhail Pashnin and Robin Kovacs expected to play for?",
    "SerialNumber": "730",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Mikhail Pashnin",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin"
      },
      {
        "label": "Robin Kovacs",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs"
      }
    ],
    "id": "4e674cf3dbdb4a39a2fc15b0844576f1",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/prospectTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/prospectTeam"
      }
    ]
  },
  {
    "question": "Which races has the horse bred by Jacques Van\u0027t Hart participated in?",
    "SerialNumber": "731",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Jacques_Van\u0027t_Hart> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Jacques Van\u0027t Hart",
        "uri": "http://dbpedia.org/resource/Jacques_Van\u0027t_Hart"
      }
    ],
    "id": "cc34045be9af41d2a638daad32507b44",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/ontology/breeder"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "What are the awards won by the spouse of Liv Ullmann ?",
    "SerialNumber": "732",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Liv_Ullmann> <http://dbpedia.org/ontology/partner> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Liv Ullmann",
        "uri": "http://dbpedia.org/resource/Liv_Ullmann"
      }
    ],
    "id": "216d2d9373974e00a989034dbc7b8fd4",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/partner"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "List the movies directed by Stanley Kubrick?",
    "SerialNumber": "735",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick"
      }
    ],
    "id": "ce2de0ff47ec4745a8c1c17dbfe8758b",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many first drivers have participated when Scuderia Ferrari was a first team?",
    "SerialNumber": "737",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . }",
    "entity mapping": [
      {
        "label": "Scuderia Ferrari",
        "uri": "http://dbpedia.org/resource/Scuderia_Ferrari"
      }
    ],
    "id": "c6faa5c6368d4328b6ff164344475881",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver"
      }
    ]
  },
  {
    "question": "What is the religious affiliation of Wickramabahu Central College (National School) ?",
    "SerialNumber": "739",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri } ",
    "entity mapping": [
      {
        "label": "Wickramabahu Central College (National School)",
        "uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)"
      }
    ],
    "id": "418dfe53e2ba43708a7884f5047d9093",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      }
    ]
  },
  {
    "question": "What is the destinations of the airline whose headquarters is in Manchester?",
    "SerialNumber": "740",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Manchester> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Manchester",
        "uri": "http://dbpedia.org/resource/Manchester"
      }
    ],
    "id": "e20cde96361c4690974f7cd6b67e3241",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Name all the bands which have members of QDT in them.",
    "SerialNumber": "741",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/QDT> <http://dbpedia.org/ontology/bandMember> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
    "entity mapping": [
      {
        "label": "QDT",
        "uri": "http://dbpedia.org/resource/QDT"
      }
    ],
    "id": "4afbc166875f40419999fc2110b6ec04",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "bands",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "What is the allegiance of the Albert Kwesi Ocran and state of origin of the Jojo Chintoh ?",
    "SerialNumber": "742",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Kwesi_Ocran> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Jojo_Chintoh> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "entity mapping": [
      {
        "label": "Albert Kwesi Ocran",
        "uri": "http://dbpedia.org/resource/Albert_Kwesi_Ocran"
      },
      {
        "label": "Jojo Chintoh",
        "uri": "http://dbpedia.org/resource/Jojo_Chintoh"
      }
    ],
    "id": "70e501f13ec0430ab83bbd1ab7d9768e",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Which publisher of Stone Canoe is also the university for which Michael Powell plays for ?",
    "SerialNumber": "744",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stone_Canoe> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri} ",
    "entity mapping": [
      {
        "label": "Stone Canoe",
        "uri": "http://dbpedia.org/resource/Stone_Canoe"
      },
      {
        "label": "Michael Powell",
        "uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)"
      }
    ],
    "id": "cc91a60484e342e48d63ac373d934455",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "plays for",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "What are the movies directed by Joel Schumacher?",
    "SerialNumber": "746",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Joel Schumacher",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher"
      }
    ],
    "id": "8c563a445be548dcbe86117be621f124",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who is owner of the soccer club which owns the Cobham Training Centre?",
    "SerialNumber": "747",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cobham_Training_Centre>  <http://dbpedia.org/property/owner> ?x .  ?x <http://dbpedia.org/property/owner> ?uri . }",
    "entity mapping": [
      {
        "label": "Cobham Training Centre",
        "uri": "http://dbpedia.org/resource/Cobham_Training_Centre"
      }
    ],
    "id": "3fd7c86ca6824a3dbc88fe313eb4e1a8",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "What is the military rank of the commanders of Regiment of Mounted Grenadiers?",
    "SerialNumber": "748",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Regiment_of_Mounted_Grenadiers> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/militaryRank> ?uri  . }",
    "entity mapping": [
      {
        "label": "Regiment of Mounted Grenadiers",
        "uri": "http://dbpedia.org/resource/Regiment_of_Mounted_Grenadiers"
      }
    ],
    "id": "ce57cc92bd8645e186f8da0f9cf915de",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      },
      {
        "label": "military rank",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      }
    ]
  },
  {
    "question": "How many companies serve the Australian region?",
    "SerialNumber": "752",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Australia",
        "uri": "http://dbpedia.org/resource/Australia"
      }
    ],
    "id": "27bc2760a11844569f85ac7e66cd3be3",
    "predicate mapping": [
      {
        "label": "region serve",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the river whose source mountain is Baikal Mountains and mouth location is Arctic Ocean?",
    "SerialNumber": "754",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Baikal Mountains",
        "uri": "http://dbpedia.org/resource/Baikal_Mountains"
      },
      {
        "label": "Arctic Ocean",
        "uri": "http://dbpedia.org/resource/Arctic_Ocean"
      }
    ],
    "id": "9c981beb9a30463aaf8b11f260183ccc",
    "predicate mapping": [
      {
        "label": "source mountain",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      },
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Who was the opponent of Robert Carr, 1st Earl of Somerset ?",
    "SerialNumber": "755",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Carr,_1st_Earl_of_Somerset> <http://dbpedia.org/ontology/opponent> ?uri } ",
    "entity mapping": [
      {
        "label": "Robert Carr",
        "uri": "http://dbpedia.org/resource/Robert_Carr,_1st_Earl_of_Somerset"
      }
    ],
    "id": "86746719f387413aaf461a7c70f4ef96",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      }
    ]
  },
  {
    "question": "Which organisation has superintendent as Lieutenant general (United States)?",
    "SerialNumber": "756",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Lieutenant general (United States)",
        "uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)"
      }
    ],
    "id": "709ea85fe41942d3a0f49a39541f93ee",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/ontology/superintendent"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Give me the total number of architect of the buildings whose one of the  architect was Louis D. Astorino?",
    "SerialNumber": "757",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Louis_D._Astorino> . ?x <http://dbpedia.org/property/architect> ?uri }",
    "entity mapping": [
      {
        "label": "Louis D. Astorino",
        "uri": "http://dbpedia.org/resource/Louis_D._Astorino"
      }
    ],
    "id": "681e53e68393454b864693eaa0ee2eb7",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      }
    ]
  },
  {
    "question": "List the leaders of the government agencies whose jurisdiction was German-occupied Europe.",
    "SerialNumber": "759",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "entity mapping": [
      {
        "label": "German-occupied Europe",
        "uri": "http://dbpedia.org/resource/German-occupied_Europe"
      }
    ],
    "id": "26e27f1518224881bd791e4d2ed313b6",
    "predicate mapping": [
      {
        "label": "jurisdiction",
        "uri": "http://dbpedia.org/ontology/jurisdiction"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "government",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency"
      }
    ]
  },
  {
    "question": "What is the total number of awards whose presenter\u0027s headquarters is Beverly Hills, California?",
    "SerialNumber": "761",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Beverly_Hills,_California> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "Beverly Hills, California",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California"
      }
    ],
    "id": "ca43be7031db43e1bea3ea6da5eb0e12",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "Count the total number of launch site of the rockets which have been launched form Cape Canaveral Air Force Station ?",
    "SerialNumber": "764",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/launchSite> ?uri }",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station"
      }
    ],
    "id": "1d08293ffa5440beaad63cd2ffd708a8",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite"
      }
    ]
  },
  {
    "question": "Name the home town of Cline Buckens ?",
    "SerialNumber": "766",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Céline_Buckens> <http://dbpedia.org/ontology/hometown> ?uri } ",
    "entity mapping": [
      {
        "label": "Cline Buckens",
        "uri": "http://dbpedia.org/resource/Céline_Buckens"
      }
    ],
    "id": "e45dcefc54af4edbbb07b37331ca8f14",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      }
    ]
  },
  {
    "question": "Was Cliff Burton in Metallica?",
    "SerialNumber": "767",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Cliff_Burton> }",
    "entity mapping": [
      {
        "label": "Metallica",
        "uri": "http://dbpedia.org/resource/Metallica"
      },
      {
        "label": "Cliff Burton",
        "uri": "http://dbpedia.org/resource/Cliff_Burton"
      }
    ],
    "id": "a4cea3abd1184b649cc7a5057169a76b",
    "predicate mapping": [
      {
        "label": "was",
        "uri": "http://dbpedia.org/property/pastMembers"
      }
    ]
  },
  {
    "question": "What are the television shows whose network\u0027s sister station is BBC Two?",
    "SerialNumber": "768",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC Two",
        "uri": "http://dbpedia.org/resource/BBC_Two"
      }
    ],
    "id": "0b60b66059d842f79d0b4d9825973e79",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Tell me the name of the Prime Time Entertainment Network\u0027s TV show whose Artist is Christopher Franke ?",
    "SerialNumber": "769",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "uri": "http://dbpedia.org/resource/Christopher_Franke"
      },
      {
        "label": "Prime Time Entertainment Network",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network"
      }
    ],
    "id": "33f63e6829ad4508bbe0d83cf298e9df",
    "predicate mapping": [
      {
        "label": "Artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "Network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which TV show had a judge named Harry Connick, Jr. and was presented by Ryan Seacrest?",
    "SerialNumber": "770",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.> . ?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Harry Connick, Jr.",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr."
      },
      {
        "label": "Ryan Seacrest",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest"
      }
    ],
    "id": "7e720d99f29d4758adc7c2bcbf7b69d7",
    "predicate mapping": [
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "By which companies is RENFE Class 333 designed?",
    "SerialNumber": "773",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri } ",
    "entity mapping": [
      {
        "label": "RENFE Class 333",
        "uri": "http://dbpedia.org/resource/RENFE_Class_333"
      }
    ],
    "id": "5943549088b54cd687dab2cb1cd0bde2",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer"
      }
    ]
  },
  {
    "question": "Does the asiana airlines fly into the Gimhae International Airport?",
    "SerialNumber": "775",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Asiana_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gimhae_International_Airport> }",
    "entity mapping": [
      {
        "label": "asiana airlines",
        "uri": "http://dbpedia.org/resource/Asiana_Airlines"
      },
      {
        "label": "Gimhae International Airport",
        "uri": "http://dbpedia.org/resource/Gimhae_International_Airport"
      }
    ],
    "id": "b242da1bee49478487a9dd713cc010da",
    "predicate mapping": [
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      }
    ]
  },
  {
    "question": "What is the state of the senator whose successor is Nathaniel P. Hill ?",
    "SerialNumber": "778",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Nathaniel_P._Hill> . ?x <http://dbpedia.org/property/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "entity mapping": [
      {
        "label": "Nathaniel P. Hill",
        "uri": "http://dbpedia.org/resource/Nathaniel_P._Hill"
      }
    ],
    "id": "601a17c1d3db4a76b3e597bf95a55f39",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator"
      }
    ]
  },
  {
    "question": "What is the alma mater of the James Still which is also the alma mater of Tom Maniatis?",
    "SerialNumber": "779",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_Still> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Tom_Maniatis> <http://dbpedia.org/property/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "James Still",
        "uri": "http://dbpedia.org/resource/James_Still"
      },
      {
        "label": "Tom Maniatis",
        "uri": "http://dbpedia.org/resource/Tom_Maniatis"
      }
    ],
    "id": "b6db05781cdc46cb9c9a8c83a5ad5276",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "Count the awards given to the recepients of the Becket fund for religious liberty.",
    "SerialNumber": "780",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Becket fund for religious liberty",
        "uri": "http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty"
      }
    ],
    "id": "acbd41cd7e11412e8af8c45b2f8d29c6",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "What is the president whose lieutenants are Winston Bryant and Joe Purcell?",
    "SerialNumber": "781",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Winston Bryant",
        "uri": "http://dbpedia.org/resource/Winston_Bryant"
      },
      {
        "label": "Joe Purcell",
        "uri": "http://dbpedia.org/resource/Joe_Purcell"
      }
    ],
    "id": "f602a0dfb487490098f078746235816a",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "In all the grand prixes where the first team was Scuderia Ferrari, who all were the pole drivers?",
    "SerialNumber": "782",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/property/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "entity mapping": [
      {
        "label": "Scuderia Ferrari",
        "uri": "http://dbpedia.org/resource/Scuderia_Ferrari"
      }
    ],
    "id": "ecce3a142aae4853b61f92d76a787bfe",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/property/poleDriver"
      },
      {
        "label": "grand prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix"
      }
    ]
  },
  {
    "question": "What is the layout of the automobiles designed by Olivier Boulay?",
    "SerialNumber": "783",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Olivier Boulay",
        "uri": "http://dbpedia.org/resource/Olivier_Boulay"
      }
    ],
    "id": "f9931eecbd9646808d8468edd4b7cc74",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Who maintains the stuff designed by the Brunei government?",
    "SerialNumber": "786",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Politics_of_Brunei> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . }",
    "entity mapping": [
      {
        "label": "Brunei",
        "uri": "http://dbpedia.org/resource/Politics_of_Brunei"
      }
    ],
    "id": "5c175091321340c3bb110a48d78c7d74",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "maintains",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      }
    ]
  },
  {
    "question": "Name the common current team of the Avalon biddle and John mcGuinness ?",
    "SerialNumber": "787",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Avalon_Biddle> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)> <http://dbpedia.org/property/currentTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Avalon biddle",
        "uri": "http://dbpedia.org/resource/Avalon_Biddle"
      },
      {
        "label": "John mcGuinness",
        "uri": "http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)"
      }
    ],
    "id": "d39b6d7deb914f70b8ca353696734df4",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam"
      },
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam"
      }
    ]
  },
  {
    "question": "List the origin of the weapons which were used in the American Revolutionary War.",
    "SerialNumber": "788",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/usedInWar> <http://dbpedia.org/resource/American_Revolutionary_War> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Weapon>}",
    "entity mapping": [
      {
        "label": "American Revolutionary War",
        "uri": "http://dbpedia.org/resource/American_Revolutionary_War"
      }
    ],
    "id": "1a62e676c8a44df4b06c37ad3e9e5061",
    "predicate mapping": [
      {
        "label": "used",
        "uri": "http://dbpedia.org/ontology/usedInWar"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "weapon",
        "uri": "http://dbpedia.org/ontology/Weapon"
      }
    ]
  },
  {
    "question": "To which military division does Clark Daniel Stearns belong?",
    "SerialNumber": "789",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Clark_Daniel_Stearns> <http://dbpedia.org/ontology/militaryBranch> ?uri } ",
    "entity mapping": [
      {
        "label": "Clark Daniel Stearns",
        "uri": "http://dbpedia.org/resource/Clark_Daniel_Stearns"
      }
    ],
    "id": "7e03672a7f204b4e97641dcfd07042af",
    "predicate mapping": [
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "In which race did Coneygree the racehorse and Fergie Sutherland the horse trainer participate?",
    "SerialNumber": "790",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri . }",
    "entity mapping": [
      {
        "label": "Fergie Sutherland",
        "uri": "http://dbpedia.org/resource/Fergie_Sutherland"
      },
      {
        "label": "Coneygree",
        "uri": "http://dbpedia.org/resource/Coneygree"
      }
    ],
    "id": "216172af192b4bbda827edcfaac62a26",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      }
    ]
  },
  {
    "question": "What are the resting places of the associates of John Betts a, Connecticut politician?",
    "SerialNumber": "791",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_Betts_(Connecticut_politician)> <http://dbpedia.org/ontology/associate> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "John Betts",
        "uri": "http://dbpedia.org/resource/John_Betts_(Connecticut_politician)"
      }
    ],
    "id": "86f33792c9fe4d8bab748d5b5d0d13e5",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "To which educational institutes is Samuel Isham associated to?",
    "SerialNumber": "792",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samuel_Isham> <http://dbpedia.org/property/education> ?uri } ",
    "entity mapping": [
      {
        "label": "Samuel Isham",
        "uri": "http://dbpedia.org/resource/Samuel_Isham"
      }
    ],
    "id": "62d41f3590914838b15d806cdd5e887b",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "Give me a count of mammals whose family is Canidae?",
    "SerialNumber": "793",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Canidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "Canidae",
        "uri": "http://dbpedia.org/resource/Canidae"
      }
    ],
    "id": "4d9cdb81e3394b4fab4a281827ca89fe",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "What sports can be played in Kharghar\u0027s schools",
    "SerialNumber": "794",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Kharghar> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Kharghar",
        "uri": "http://dbpedia.org/resource/Kharghar"
      }
    ],
    "id": "b438f7d1e9084d009019042d4cae9c70",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Name the origin of Henry Cluney ?",
    "SerialNumber": "795",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Cluney> <http://dbpedia.org/property/origin> ?uri } ",
    "entity mapping": [
      {
        "label": "Henry Cluney",
        "uri": "http://dbpedia.org/resource/Henry_Cluney"
      }
    ],
    "id": "0737179a939545608332c4f961a2373c",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      }
    ]
  },
  {
    "question": "Which football team is in a city where A J Clark was a builder?",
    "SerialNumber": "796",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/A._James_Clark> . ?uri <http://dbpedia.org/property/city> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "entity mapping": [
      {
        "label": "A J Clark",
        "uri": "http://dbpedia.org/resource/A._James_Clark"
      }
    ],
    "id": "bfa3a1b13bce417a9befe12eabeda20d",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam"
      }
    ]
  },
  {
    "question": "What are the current music bands of Chester Bennington?",
    "SerialNumber": "798",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Chester_Bennington> } ",
    "entity mapping": [
      {
        "label": "Chester Bennington",
        "uri": "http://dbpedia.org/resource/Chester_Bennington"
      }
    ],
    "id": "1d04a828ba6f427eac7fe74af1769003",
    "predicate mapping": [
      {
        "label": "current",
        "uri": "http://dbpedia.org/property/currentMembers"
      }
    ]
  },
  {
    "question": "For which team does Ramiro Pea play ?",
    "SerialNumber": "799",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ramiro_Peña> <http://dbpedia.org/ontology/team> ?uri } ",
    "entity mapping": [
      {
        "label": "Ramiro Pea",
        "uri": "http://dbpedia.org/resource/Ramiro_Peña"
      }
    ],
    "id": "6e7de39eb6f7486286b10b30a81637ab",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "What is the leader of the government agency which is the military unit of Erich Kempka ?",
    "SerialNumber": "801",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Erich_Kempka> <http://dbpedia.org/ontology/militaryUnit> ?x . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "entity mapping": [
      {
        "label": "Erich Kempka",
        "uri": "http://dbpedia.org/resource/Erich_Kempka"
      }
    ],
    "id": "70ff6c1f39f74fbe9d2b6229a7b825c1",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "Which offices were held by the politicians who held their allegiance to the union of american civil war?",
    "SerialNumber": "802",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)> . ?x <http://dbpedia.org/property/office> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "union",
        "uri": "http://dbpedia.org/resource/Union_(American_Civil_War)"
      }
    ],
    "id": "6d8299cbdb824323a42be4e46d7c60c3",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      },
      {
        "label": "offices",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which awards did the narrator of Oscar and Lucinda win?",
    "SerialNumber": "803",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Oscar_and_Lucinda_(film)> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Oscar and Lucinda",
        "uri": "http://dbpedia.org/resource/Oscar_and_Lucinda_(film)"
      }
    ],
    "id": "4034b4110a224b589124d0037cfd52c3",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Name the serving line of Daund Junction railway station?",
    "SerialNumber": "804",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ",
    "entity mapping": [
      {
        "label": "Daund Junction railway station",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station"
      }
    ],
    "id": "222add5c80274f5b86e1221896e34865",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      }
    ]
  },
  {
    "question": "On what subjects was Broca\u0027s Brain written?",
    "SerialNumber": "805",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Broca\u0027s_Brain> <http://dbpedia.org/property/subject> ?uri } ",
    "entity mapping": [
      {
        "label": "Broca\u0027s Brain",
        "uri": "http://dbpedia.org/resource/Broca\u0027s_Brain"
      }
    ],
    "id": "80f74a9018ae47769a3c567eee3066b9",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      }
    ]
  },
  {
    "question": "Which purpose of the Maharashtra Chess Association is Abhijit kunte is also know for ?",
    "SerialNumber": "806",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri. <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri} ",
    "entity mapping": [
      {
        "label": "Maharashtra Chess Association",
        "uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association"
      },
      {
        "label": "Abhijit kunte",
        "uri": "http://dbpedia.org/resource/Abhijit_Kunte"
      }
    ],
    "id": "c9f88e12945544de9fc544118870c95e",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "label": "know for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "Who are the people who influenced the writers of Evenor ?",
    "SerialNumber": "813",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Evenor_(collection)> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/influenced> ?uri  . }",
    "entity mapping": [
      {
        "label": "Evenor",
        "uri": "http://dbpedia.org/resource/Evenor_(collection)"
      }
    ],
    "id": "403c3d0a80c9462f9baf9fbe7edcbff0",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/ontology/influenced"
      }
    ]
  },
  {
    "question": "What is the mascot of alma mater of John O Moseley?",
    "SerialNumber": "817",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_O._Moseley> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "entity mapping": [
      {
        "label": "John O Moseley",
        "uri": "http://dbpedia.org/resource/John_O._Moseley"
      }
    ],
    "id": "da229f76f78d4af7bc559dab6f9f3d00",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Henry McDaniel\u0027s trained horses have won which awards?",
    "SerialNumber": "818",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Henry_McDaniel_(racehorse_trainer)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Henry McDaniel",
        "uri": "http://dbpedia.org/resource/Henry_McDaniel_(racehorse_trainer)"
      }
    ],
    "id": "e00e1461078d4aacba00099390f97ced",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/trainer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "What are the Languages of Zabbaleen ?",
    "SerialNumber": "819",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zabbaleen> <http://dbpedia.org/property/languages> ?uri } ",
    "entity mapping": [
      {
        "label": "Zabbaleen",
        "uri": "http://dbpedia.org/resource/Zabbaleen"
      }
    ],
    "id": "9985f6fa134e4a0eb0cb51e125757840",
    "predicate mapping": [
      {
        "label": "Languages",
        "uri": "http://dbpedia.org/property/languages"
      }
    ]
  },
  {
    "question": "List down the important people of The Elders ?",
    "SerialNumber": "820",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Elders_(organization)> <http://dbpedia.org/property/keyPeople> ?uri } ",
    "entity mapping": [
      {
        "label": "The Elders",
        "uri": "http://dbpedia.org/resource/The_Elders_(organization)"
      }
    ],
    "id": "498a45b06c174d1d87a2f97ad4d3cd8c",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "Through which label did Mel Brooks produce his movie?",
    "SerialNumber": "821",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Mel_Brooks> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Mel Brooks",
        "uri": "http://dbpedia.org/resource/Mel_Brooks"
      }
    ],
    "id": "b41762bf722a4fa7a80d93b0759d28c6",
    "predicate mapping": [
      {
        "label": "produce",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many scientists are known for the Manhatten Project?",
    "SerialNumber": "822",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Manhatten Project",
        "uri": "http://dbpedia.org/resource/Manhattan_Project"
      }
    ],
    "id": "58cce734a7f44455a0cf5a7d76f94bf2",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Which broadcast area of Mauritius Broadcasting Corporation is also the nationality of Michael Medor ?",
    "SerialNumber": "823",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation> <http://dbpedia.org/property/broadcastArea> ?uri. <http://dbpedia.org/resource/Michael_Medor> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "Mauritius Broadcasting Corporation",
        "uri": "http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation"
      },
      {
        "label": "Michael Medor",
        "uri": "http://dbpedia.org/resource/Michael_Medor"
      }
    ],
    "id": "4230209176f74a3380d70219147cb40e",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What is the settlement whose neighboring municipalities is Lancy and mayor name is Esther Alder?",
    "SerialNumber": "827",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "Lancy",
        "uri": "http://dbpedia.org/resource/Lancy"
      },
      {
        "label": "Esther Alder",
        "uri": "http://dbpedia.org/resource/Esther_Alder"
      }
    ],
    "id": "8f3f49b511d24b11956f541a0bc155f5",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      },
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "What is the television show whose executive producer is Douglas Netter?",
    "SerialNumber": "828",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Douglas Netter",
        "uri": "http://dbpedia.org/resource/Douglas_Netter"
      }
    ],
    "id": "9d8915a4779f49148599be5ab27a571d",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Whihc alma mater of angela Trusty is also the training center of David Scherman ?",
    "SerialNumber": "829",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/ontology/training> ?uri. <http://dbpedia.org/resource/Angela_Trusty> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "David Scherman",
        "uri": "http://dbpedia.org/resource/David_Scherman"
      },
      {
        "label": "angela Trusty",
        "uri": "http://dbpedia.org/resource/Angela_Trusty"
      }
    ],
    "id": "e631c13576674e3a99d3ba6ec5186338",
    "predicate mapping": [
      {
        "label": "training",
        "uri": "http://dbpedia.org/ontology/training"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Which successor of Philippine Ports Authority is the state of origin of Ruben J. Villote ?",
    "SerialNumber": "831",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philippine_Ports_Authority> <http://dbpedia.org/ontology/successor> ?uri. <http://dbpedia.org/resource/Ruben_J._Villote> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "entity mapping": [
      {
        "label": "Philippine Ports Authority",
        "uri": "http://dbpedia.org/resource/Philippine_Ports_Authority"
      },
      {
        "label": "Ruben J. Villote",
        "uri": "http://dbpedia.org/resource/Ruben_J._Villote"
      }
    ],
    "id": "b9c7b8e256e64e948ef9b537af9aa574",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Who is the spouse of Willian Menalaus?",
    "SerialNumber": "832",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Menelaus> <http://dbpedia.org/ontology/spouse> ?uri } ",
    "entity mapping": [
      {
        "label": "Willian Menalaus",
        "uri": "http://dbpedia.org/resource/William_Menelaus"
      }
    ],
    "id": "ea6c7a88f9a643beb176f5c9e5c2a632",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "What television show is aired on channel Sirius XM Holdings?",
    "SerialNumber": "833",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Sirius_XM_Holdings>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Sirius XM Holdings",
        "uri": "http://dbpedia.org/resource/Sirius_XM_Holdings"
      }
    ],
    "id": "dafa96a08d1e4268be2cd01faa56f652",
    "predicate mapping": [
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is Joe Schilling the trainer of Nick Diaz?",
    "SerialNumber": "834",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Diaz> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Joe_Schilling> }",
    "entity mapping": [
      {
        "label": "Nick Diaz",
        "uri": "http://dbpedia.org/resource/Nick_Diaz"
      },
      {
        "label": "Joe Schilling",
        "uri": "http://dbpedia.org/resource/Joe_Schilling"
      }
    ],
    "id": "ea9a58014dfc4200ba7ad903db937419",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer"
      }
    ]
  },
  {
    "question": "Name the associate acts of  Martin Pugh?",
    "SerialNumber": "835",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Pugh> <http://dbpedia.org/property/associatedActs> ?uri } ",
    "entity mapping": [
      {
        "label": "Martin Pugh",
        "uri": "http://dbpedia.org/resource/Martin_Pugh"
      }
    ],
    "id": "e491eb48c1824d5b8ae4e30f80a67e90",
    "predicate mapping": [
      {
        "label": "associate acts",
        "uri": "http://dbpedia.org/property/associatedActs"
      }
    ]
  },
  {
    "question": "Which domain\u0027s journals did Willard Fiske edit?",
    "SerialNumber": "836",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Willard_Fiske> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "Willard Fiske",
        "uri": "http://dbpedia.org/resource/Willard_Fiske"
      }
    ],
    "id": "151691666bec45238d4879d05f239dd4",
    "predicate mapping": [
      {
        "label": "edit",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/discipline"
      },
      {
        "label": "journals",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "Is James Hetfield a band member of Metallica?",
    "SerialNumber": "837",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Metallica> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/James_Hetfield>  . }",
    "entity mapping": [
      {
        "label": "Metallica",
        "uri": "http://dbpedia.org/resource/Metallica"
      },
      {
        "label": "James Hetfield",
        "uri": "http://dbpedia.org/resource/James_Hetfield"
      }
    ],
    "id": "d27aec4554814245aba1890efc687d41",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      }
    ]
  },
  {
    "question": "Which baseball team is managed by Bruce Bochy?",
    "SerialNumber": "838",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Bruce_Bochy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "entity mapping": [
      {
        "label": "Bruce Bochy",
        "uri": "http://dbpedia.org/resource/Bruce_Bochy"
      }
    ],
    "id": "8d0300b08e544d4a98727862063b751f",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/manager"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam"
      }
    ]
  },
  {
    "question": "Name the F1 racer with relative as Ralf Schumacher and has child named Mick Schumacher?",
    "SerialNumber": "839",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ralf_Schumacher> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Mick_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
    "entity mapping": [
      {
        "label": "Ralf Schumacher",
        "uri": "http://dbpedia.org/resource/Ralf_Schumacher"
      },
      {
        "label": "Mick Schumacher",
        "uri": "http://dbpedia.org/resource/Mick_Schumacher"
      }
    ],
    "id": "2a230169f9384e17b2a51ca0553f5fd4",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "has child",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "racer",
        "uri": "http://dbpedia.org/ontology/FormulaOneRacer"
      }
    ]
  },
  {
    "question": "What is the person known for who is the movie director of Sleepy-Time Squirrel ?",
    "SerialNumber": "843",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sleepy-Time_Squirrel> <http://dbpedia.org/property/director> ?x . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Sleepy-Time Squirrel",
        "uri": "http://dbpedia.org/resource/Sleepy-Time_Squirrel"
      }
    ],
    "id": "744c835886844eeca2d45ce92e2d5c28",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What kind of music is produced at the record label founded by Andre Bourgeois?",
    "SerialNumber": "844",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/André_Bourgeois> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
    "entity mapping": [
      {
        "label": "Andre Bourgeois",
        "uri": "http://dbpedia.org/resource/André_Bourgeois"
      }
    ],
    "id": "41e26ecabe2c4da4a506fd9fee06b197",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "kind of music",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel"
      }
    ]
  },
  {
    "question": "Which political party of Arunachal Pradesh Legislative Assembly election, 2014 was the leader of Rishikesh ?",
    "SerialNumber": "845",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri} ",
    "entity mapping": [
      {
        "label": "Arunachal Pradesh Legislative Assembly election, 2014",
        "uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014"
      },
      {
        "label": "Rishikesh",
        "uri": "http://dbpedia.org/resource/Rishikesh"
      }
    ],
    "id": "34a0e332264149388873f74ac371829a",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "What is the common battle fought by Stephen Urban and Ali Habib Mahmud ?",
    "SerialNumber": "847",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stephen_Urban> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Ali_Habib_Mahmud> <http://dbpedia.org/property/battles> ?uri} ",
    "entity mapping": [
      {
        "label": "Stephen Urban",
        "uri": "http://dbpedia.org/resource/Stephen_Urban"
      },
      {
        "label": "Ali Habib Mahmud",
        "uri": "http://dbpedia.org/resource/Ali_Habib_Mahmud"
      }
    ],
    "id": "96b03adc9d314bfa8a97e5d5d784a62e",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Who is the cover artist of Doctor Mirabilis (novel) ?",
    "SerialNumber": "848",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doctor_Mirabilis_(novel)> <http://dbpedia.org/property/coverArtist> ?uri } ",
    "entity mapping": [
      {
        "label": "Doctor Mirabilis (novel)",
        "uri": "http://dbpedia.org/resource/Doctor_Mirabilis_(novel)"
      }
    ],
    "id": "ecbda26b25fc4319a9c2f2b629abdd69",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/property/coverArtist"
      }
    ]
  },
  {
    "question": "Where did Whitney Wistert debut?",
    "SerialNumber": "849",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Whitey_Wistert> <http://dbpedia.org/property/debutteam> ?uri } ",
    "entity mapping": [
      {
        "label": "Whitney Wistert",
        "uri": "http://dbpedia.org/resource/Whitey_Wistert"
      }
    ],
    "id": "5a09891ab68147329f938e2031e236a0",
    "predicate mapping": [
      {
        "label": "debut",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "Name the sport league of Hampton Roads Rhinos ?",
    "SerialNumber": "851",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hampton_Roads_Rhinos> <http://dbpedia.org/property/league> ?uri } ",
    "entity mapping": [
      {
        "label": "Hampton Roads Rhinos",
        "uri": "http://dbpedia.org/resource/Hampton_Roads_Rhinos"
      }
    ],
    "id": "d6d6f6e87c26462fb54e12d67e50ba61",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/property/league"
      }
    ]
  },
  {
    "question": "What novels are belong to the genre of Utopian and dystopian fiction?",
    "SerialNumber": "852",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Utopian_and_dystopian_fiction> } ",
    "entity mapping": [
      {
        "label": "Utopian",
        "uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction"
      }
    ],
    "id": "55717a4e06d940f9a6e2d0fee2b4709d",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      }
    ]
  },
  {
    "question": "What is the programme format of WWTR ?",
    "SerialNumber": "854",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WWTR> <http://dbpedia.org/ontology/programmeFormat> ?uri } ",
    "entity mapping": [
      {
        "label": "WWTR",
        "uri": "http://dbpedia.org/resource/WWTR"
      }
    ],
    "id": "1e42c94409f64658a8d74bc8554ae63d",
    "predicate mapping": [
      {
        "label": "programme format",
        "uri": "http://dbpedia.org/ontology/programmeFormat"
      }
    ]
  },
  {
    "question": "What is the home ground of the clubs managed by Ciao Zanardi?",
    "SerialNumber": "855",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Caio_Zanardi> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "entity mapping": [
      {
        "label": "Ciao Zanardi",
        "uri": "http://dbpedia.org/resource/Caio_Zanardi"
      }
    ],
    "id": "603c322f0c284704ba4d70f749b724b2",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/manager"
      },
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason"
      }
    ]
  },
  {
    "question": "Name the university of Alexandre Tichonov ?",
    "SerialNumber": "858",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> ?uri } ",
    "entity mapping": [
      {
        "label": "Alexandre Tichonov",
        "uri": "http://dbpedia.org/resource/Alexandre_Tichonov"
      }
    ],
    "id": "f0185fa38b024eb1acf082b227049b42",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/property/university"
      }
    ]
  },
  {
    "question": "What subjects does the subsequent work of The Dragons of Eden deals with  ?",
    "SerialNumber": "859",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Dragons_of_Eden> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/subject> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Dragons of Eden",
        "uri": "http://dbpedia.org/resource/The_Dragons_of_Eden"
      }
    ],
    "id": "0ac2d94a73f64e1181b207736b31a127",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      }
    ]
  },
  {
    "question": "Name the office of Richard Coke ?",
    "SerialNumber": "861",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Coke> <http://dbpedia.org/property/office> ?uri } ",
    "entity mapping": [
      {
        "label": "Richard Coke",
        "uri": "http://dbpedia.org/resource/Richard_Coke"
      }
    ],
    "id": "793d70e3bef54e1eaf081dc7e518ec08",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "Which allegiance of the John Kotelawala is also the  sovereign state of the Sanath Weerakoon ?",
    "SerialNumber": "864",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Kotelawala> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Sanath_Weerakoon> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "John Kotelawala",
        "uri": "http://dbpedia.org/resource/John_Kotelawala"
      },
      {
        "label": "Sanath Weerakoon",
        "uri": "http://dbpedia.org/resource/Sanath_Weerakoon"
      }
    ],
    "id": "64a7ff80505c4d709cd0b19106d1cf2d",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Which city\u0027s teams have been coached by Gary Kubaik?",
    "SerialNumber": "865",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Gary_Kubiak> . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Gary Kubaik",
        "uri": "http://dbpedia.org/resource/Gary_Kubiak"
      }
    ],
    "id": "9e5f22b859b14a329ce320977751c4ef",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "city\u0027s",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Was Writings and Drawings illustrated by Bob Dylan?",
    "SerialNumber": "872",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Writings_and_Drawings> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/Bob_Dylan> }",
    "entity mapping": [
      {
        "label": "Writings and Drawings",
        "uri": "http://dbpedia.org/resource/Writings_and_Drawings"
      },
      {
        "label": "Bob Dylan",
        "uri": "http://dbpedia.org/resource/Bob_Dylan"
      }
    ],
    "id": "7d1d3175ed2b434ab6460785837338f2",
    "predicate mapping": [
      {
        "label": "illustrated by",
        "uri": "http://dbpedia.org/property/illustrator"
      }
    ]
  },
  {
    "question": "How many major shrine are there, of the saints whose beatified by Pope Pius XI ?",
    "SerialNumber": "874",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_XI> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . }",
    "entity mapping": [
      {
        "label": "Pius XI",
        "uri": "http://dbpedia.org/resource/Pope_Pius_XI"
      }
    ],
    "id": "3423cef33b1146fe9432cb59652d6c94",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      }
    ]
  },
  {
    "question": "List the guest of the show The Other Side (The Outer Limits)?",
    "SerialNumber": "875",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)> <http://dbpedia.org/property/guests> ?uri } ",
    "entity mapping": [
      {
        "label": "The Other Side (The Outer Limits)",
        "uri": "http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)"
      }
    ],
    "id": "9e935a3e2d31428c87992e9f8bca00bd",
    "predicate mapping": [
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "Who are the characters of Batman Live?",
    "SerialNumber": "876",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batman_Live> <http://dbpedia.org/property/characters> ?uri } ",
    "entity mapping": [
      {
        "label": "Batman Live",
        "uri": "http://dbpedia.org/resource/Batman_Live"
      }
    ],
    "id": "9ae7378d981c4a9ca527a177a3042a8e",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      }
    ]
  },
  {
    "question": "Who is buried at the place governed by National Park Service?",
    "SerialNumber": "877",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/National_Park_Service> . ?uri <http://dbpedia.org/property/restingplace> ?x  . }",
    "entity mapping": [
      {
        "label": "National Park Service",
        "uri": "http://dbpedia.org/resource/National_Park_Service"
      }
    ],
    "id": "329c2825367b4e55a7788f13852af6e8",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "Count all the things licensed as Software as a service.",
    "SerialNumber": "878",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . }",
    "entity mapping": [
      {
        "label": "Software as a service",
        "uri": "http://dbpedia.org/resource/Software_as_a_service"
      }
    ],
    "id": "fef09ad090cf49e09d0a7cc2b6befc0c",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license"
      }
    ]
  },
  {
    "question": "What show  has theme music composer as Ron Grainer and at the same time  related to Class (2016 TV series)?",
    "SerialNumber": "879",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Class_(2016_TV_series)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Ron Grainer",
        "uri": "http://dbpedia.org/resource/Ron_Grainer"
      },
      {
        "label": "Class (2016 TV series)",
        "uri": "http://dbpedia.org/resource/Class_(2016_TV_series)"
      }
    ],
    "id": "be7a77cb153746509db12c6ab5f4b69f",
    "predicate mapping": [
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who are the stars of the movies which are distributed by Artisan Entertainment ?",
    "SerialNumber": "882",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Artisan_Entertainment> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Artisan Entertainment",
        "uri": "http://dbpedia.org/resource/Artisan_Entertainment"
      }
    ],
    "id": "d505d3763ec449168b961367ed3a424b",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "stars",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What awards have been once awarded to Ingmar Bergman, and have employed the service of Laemmle Theatres?",
    "SerialNumber": "884",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri} ",
    "entity mapping": [
      {
        "label": "Ingmar Bergman",
        "uri": "http://dbpedia.org/resource/Ingmar_Bergman"
      },
      {
        "label": "Laemmle Theatres",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres"
      }
    ],
    "id": "b60924d7dde34c5d914cafff9edd9023",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service"
      }
    ]
  },
  {
    "question": "Who produced wizards vs aliens?",
    "SerialNumber": "885",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri } ",
    "entity mapping": [
      {
        "label": "wizards vs aliens",
        "uri": "http://dbpedia.org/resource/Wizards_vs_Aliens"
      }
    ],
    "id": "53a85329c96443f8b76e32e8ee53d78c",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "Which team did Bill Murphy and Jean Segura play for?",
    "SerialNumber": "886",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bill_Murphy_(baseball)> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Jean_Segura> <http://dbpedia.org/ontology/team> ?uri . }",
    "entity mapping": [
      {
        "label": "Bill Murphy",
        "uri": "http://dbpedia.org/resource/Bill_Murphy_(baseball)"
      },
      {
        "label": "Jean Segura",
        "uri": "http://dbpedia.org/resource/Jean_Segura"
      }
    ],
    "id": "515670bd31cf40348dbbd059c8876662",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "What is the draft team of Gene Conley ?",
    "SerialNumber": "887",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gene_Conley> <http://dbpedia.org/property/draftTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Gene Conley",
        "uri": "http://dbpedia.org/resource/Gene_Conley"
      }
    ],
    "id": "fb00be1561c84ae488c92a78ab96340e",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      }
    ]
  },
  {
    "question": "What location country of AH141 is also the nation of malaysia Junior hockey league ?",
    "SerialNumber": "889",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AH141> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/Malaysia_Junior_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "AH141",
        "uri": "http://dbpedia.org/resource/AH141"
      },
      {
        "label": "malaysia Junior hockey league",
        "uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League"
      }
    ],
    "id": "2f848ce8ed2a4a2da8c4b8c892a738aa",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/county"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "On how many subjects has Random house publishers published books?",
    "SerialNumber": "890",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Random_House> . ?x <http://dbpedia.org/property/subject> ?uri  . }",
    "entity mapping": [
      {
        "label": "Random house",
        "uri": "http://dbpedia.org/resource/Random_House"
      }
    ],
    "id": "61b0b02309714b1ab6e78e1d416a872f",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      }
    ]
  },
  {
    "question": "What is the common nationality of Funny Face a comedian and that of Georgina Theodora Wood ?",
    "SerialNumber": "891",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Funny_Face_(comedian)> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Georgina_Theodora_Wood> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "Funny Face",
        "uri": "http://dbpedia.org/resource/Funny_Face_(comedian)"
      },
      {
        "label": "Georgina Theodora Wood",
        "uri": "http://dbpedia.org/resource/Georgina_Theodora_Wood"
      }
    ],
    "id": "39bdbe59a40c47c7afc10b6b85c1286a",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What are the things Eric Schiller known for ?",
    "SerialNumber": "893",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri } ",
    "entity mapping": [
      {
        "label": "Eric Schiller",
        "uri": "http://dbpedia.org/resource/Eric_Schiller"
      }
    ],
    "id": "4988ef2fd0df4d35b243ffe31755c171",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Which nearest city of Jurgens Site is the death plce of Jimmie Heuga ?",
    "SerialNumber": "895",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jurgens_Site> <http://dbpedia.org/property/nearestCity> ?uri. <http://dbpedia.org/resource/Jimmie_Heuga> <http://dbpedia.org/property/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Jurgens Site",
        "uri": "http://dbpedia.org/resource/Jurgens_Site"
      },
      {
        "label": "Jimmie Heuga",
        "uri": "http://dbpedia.org/resource/Jimmie_Heuga"
      }
    ],
    "id": "eda67bd4365e424cb594decde543c99e",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "What are the nearest city to the historic places whose one of the nearest city is Wisconsin?",
    "SerialNumber": "897",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/property/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}",
    "entity mapping": [
      {
        "label": "Wisconsin",
        "uri": "http://dbpedia.org/resource/Wisconsin"
      }
    ],
    "id": "f75be1c0090f4e99b6015f9af7d2589d",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity"
      },
      {
        "label": "historic place",
        "uri": "http://dbpedia.org/ontology/HistoricPlace"
      }
    ]
  },
  {
    "question": "Who is the leader of the Kriminalpolizei and Ordnungspolizei?",
    "SerialNumber": "898",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri. <http://dbpedia.org/resource/Ordnungspolizei> <http://dbpedia.org/ontology/leader> ?uri . }",
    "entity mapping": [
      {
        "label": "Kriminalpolizei",
        "uri": "http://dbpedia.org/resource/Kriminalpolizei"
      },
      {
        "label": "Ordnungspolizei",
        "uri": "http://dbpedia.org/resource/Ordnungspolizei"
      }
    ],
    "id": "df34b20d025a49648aa1d1d8d09d8533",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "To which political party does Virendra Kataria belongs ?",
    "SerialNumber": "900",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Virendra_Kataria> <http://dbpedia.org/property/party> ?uri } ",
    "entity mapping": [
      {
        "label": "Virendra Kataria",
        "uri": "http://dbpedia.org/resource/Virendra_Kataria"
      }
    ],
    "id": "80973c292e414e8890ed3a1de7f362bf",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "List all the former broadcast network of WMDN ?",
    "SerialNumber": "903",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WMDN> <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri } ",
    "entity mapping": [
      {
        "label": "WMDN",
        "uri": "http://dbpedia.org/resource/WMDN"
      }
    ],
    "id": "76fc4d62d2b74c798a3b6b61c4d1ff6f",
    "predicate mapping": [
      {
        "label": "former broadcast network",
        "uri": "http://dbpedia.org/ontology/formerBroadcastNetwork"
      }
    ]
  },
  {
    "question": "Which ethnicity do Linda Hogan and Riley Reid come from?",
    "SerialNumber": "904",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri . }",
    "entity mapping": [
      {
        "label": "Linda Hogan",
        "uri": "http://dbpedia.org/resource/Linda_Hogan"
      },
      {
        "label": "Riley Reid",
        "uri": "http://dbpedia.org/resource/Riley_Reid"
      }
    ],
    "id": "406e904e414b410dadccc945a9ed205b",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity"
      }
    ]
  },
  {
    "question": "Who are the people which were the influencer of the person, who influenced Costanzo Preve ?",
    "SerialNumber": "905",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Costanzo_Preve> <http://dbpedia.org/ontology/influencedBy> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Costanzo Preve",
        "uri": "http://dbpedia.org/resource/Costanzo_Preve"
      }
    ],
    "id": "70fe1d61709e49bd895d4cb06d045664",
    "predicate mapping": [
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/ontology/influencedBy"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/ontology/influencedBy"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who is married to Tony Ramo",
    "SerialNumber": "907",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Tony_Romo>  . }",
    "entity mapping": [
      {
        "label": "Tony Ramo",
        "uri": "http://dbpedia.org/resource/Tony_Romo"
      }
    ],
    "id": "75d8ae08f021434f8b64b8c089efb56e",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/partner"
      }
    ]
  },
  {
    "question": "Which county of Tremont Avenue is also the birht place of Ron Galotti ?",
    "SerialNumber": "908",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri. <http://dbpedia.org/resource/Ron_Galotti> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Tremont Avenue",
        "uri": "http://dbpedia.org/resource/Tremont_Avenue"
      },
      {
        "label": "Ron Galotti",
        "uri": "http://dbpedia.org/resource/Ron_Galotti"
      }
    ],
    "id": "ce59dab6544f465aa821fd5c205187fe",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/property/counties"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What is the debut team of the gridiron football player who coached the 1931 Staten Island Stapletons season ?",
    "SerialNumber": "909",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/1931_Staten_Island_Stapletons_season> <http://dbpedia.org/ontology/coach> ?x . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GridironFootballPlayer>}",
    "entity mapping": [
      {
        "label": "1931 Staten Island Stapletons season",
        "uri": "http://dbpedia.org/resource/1931_Staten_Island_Stapletons_season"
      }
    ],
    "id": "2f6ed9508dab4dc695a219ed4c3c90b6",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "gridiron football player",
        "uri": "http://dbpedia.org/ontology/GridironFootballPlayer"
      }
    ]
  },
  {
    "question": "What is the region of the successor of Mr. Jerome B. Chaffee ?",
    "SerialNumber": "911",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jerome_B._Chaffee> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jerome B. Chaffee",
        "uri": "http://dbpedia.org/resource/Jerome_B._Chaffee"
      }
    ],
    "id": "d21e712713ec4e57824cf6b277c93553",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Who appointed Joseph Clay and William Cushing to their office?",
    "SerialNumber": "912",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri . }",
    "entity mapping": [
      {
        "label": "Joseph Clay",
        "uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)"
      },
      {
        "label": "William Cushing",
        "uri": "http://dbpedia.org/resource/William_Cushing"
      }
    ],
    "id": "c641ab471c154f5f85be724766cc04f4",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer"
      }
    ]
  },
  {
    "question": "Who first ascented a mountain of Cathedral Peak (California) ?",
    "SerialNumber": "914",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> ?uri } ",
    "entity mapping": [
      {
        "label": "Cathedral Peak",
        "uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)"
      }
    ],
    "id": "e118a1a544bf48ee9836c7b3ce7fc651",
    "predicate mapping": [
      {
        "label": "ascented",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "Name the licensee of the WRVU who has the affiliation of  Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt ?",
    "SerialNumber": "915",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri} ",
    "entity mapping": [
      {
        "label": "WRVU",
        "uri": "http://dbpedia.org/resource/WRVU"
      },
      {
        "label": "Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt",
        "uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt"
      }
    ],
    "id": "2cac0aa4df6d4ad6918d462993e33e80",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "What awards did the film director of The Haunted House win ?",
    "SerialNumber": "916",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Haunted House",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)"
      }
    ],
    "id": "4aa80af1497f49ecbcd3bd93990e9df9",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "In which war did the units garrisoned at Turin fight?",
    "SerialNumber": "917",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Turin> . ?x <http://dbpedia.org/ontology/battle> ?uri  . }",
    "entity mapping": [
      {
        "label": "Turin",
        "uri": "http://dbpedia.org/resource/Turin"
      }
    ],
    "id": "00f3d768f79c46eeaa5348f45889e34e",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      },
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "Whose theme music was composed by a band which collaborated with Phish?",
    "SerialNumber": "920",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Phish> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . }",
    "entity mapping": [
      {
        "label": "Phish",
        "uri": "http://dbpedia.org/resource/Phish"
      }
    ],
    "id": "b4b48ab141a24da6b6df5ede9f5bfbf3",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      }
    ]
  },
  {
    "question": "Which president had lieutenants whose governor was Bill Clinton?",
    "SerialNumber": "922",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Bill_Clinton> . ?uri <http://dbpedia.org/ontology/lieutenant> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Bill Clinton",
        "uri": "http://dbpedia.org/resource/Bill_Clinton"
      }
    ],
    "id": "504f89e982944a649b1a6d9e2106f944",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "List the developers who has contributed to both GNOWSYS and GNU TeXmacs ?",
    "SerialNumber": "923",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GNOWSYS> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/GNU_TeXmacs> <http://dbpedia.org/ontology/developer> ?uri . }",
    "entity mapping": [
      {
        "label": "GNOWSYS",
        "uri": "http://dbpedia.org/resource/GNOWSYS"
      },
      {
        "label": "GNU TeXmacs",
        "uri": "http://dbpedia.org/resource/GNU_TeXmacs"
      }
    ],
    "id": "32bebb59a0fb43aab77ff13a2fba2b4f",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "What is the municipality of Liberty Bell ?",
    "SerialNumber": "924",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liberty_Bell> <http://dbpedia.org/ontology/municipality> ?uri } ",
    "entity mapping": [
      {
        "label": "Liberty Bell",
        "uri": "http://dbpedia.org/resource/Liberty_Bell"
      }
    ],
    "id": "b5774df2305a4772bad9f84bc85d5d62",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      }
    ]
  },
  {
    "question": "Which animator of the The Skeleton Dance is also the  cinematographer of the Mickey\u0027s Mellerdrammer?",
    "SerialNumber": "926",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri} ",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance"
      },
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer"
      }
    ],
    "id": "0ffa12b348584eac8502b778b6e3013a",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator"
      },
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography"
      }
    ]
  },
  {
    "question": "Brian Dunkleman is the presenter of what TV show?",
    "SerialNumber": "928",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Brian Dunkleman",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman"
      }
    ],
    "id": "74833a9d360e4944ba62ebb5ff1633fb",
    "predicate mapping": [
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which television show is the subsequent work of Frasier and the opening theme is Gary Portnoy?",
    "SerialNumber": "930",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Frasier",
        "uri": "http://dbpedia.org/resource/Frasier"
      },
      {
        "label": "Gary Portnoy",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy"
      }
    ],
    "id": "eea1dcd97f494d799d7fcacd6bad1685",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which country\u0027s largest city is Lima?",
    "SerialNumber": "932",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Lima> } ",
    "entity mapping": [
      {
        "label": "Lima",
        "uri": "http://dbpedia.org/resource/Lima"
      }
    ],
    "id": "ac8eb701fbd94707ac65d5bd874c8b7a",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "List the awards given to the relatives of Gregorios Bernardakis.",
    "SerialNumber": "933",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gregorios_Bernardakis> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gregorios Bernardakis",
        "uri": "http://dbpedia.org/resource/Gregorios_Bernardakis"
      }
    ],
    "id": "89b4110b9d064a0fb8feff6aa5aa2ff2",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Count all the games whose distributors are located in America",
    "SerialNumber": "934",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/distributor> ?x  . }",
    "entity mapping": [
      {
        "label": "America",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "18993c411e4b43aa9d11cab3a62f9f88",
    "predicate mapping": [
      {
        "label": "count",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      }
    ]
  },
  {
    "question": "Which builder of Ford Straight-6 engine is also the automobile latform provider of Chiva bus ?",
    "SerialNumber": "936",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri. <http://dbpedia.org/resource/Ford_Straight-6_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "entity mapping": [
      {
        "label": "Chiva bus",
        "uri": "http://dbpedia.org/resource/Chiva_bus"
      },
      {
        "label": "Ford Straight-6 engine",
        "uri": "http://dbpedia.org/resource/Ford_Straight-6_engine"
      }
    ],
    "id": "6099a612c08a4e97be03115bc7433ad2",
    "predicate mapping": [
      {
        "label": "automobile latform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "What is the university whose campus is Mount Moosilauke?",
    "SerialNumber": "937",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Mount_Moosilauke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Mount Moosilauke",
        "uri": "http://dbpedia.org/resource/Mount_Moosilauke"
      }
    ],
    "id": "b58bac57950f452cbbce5e9e0faa159d",
    "predicate mapping": [
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Which non fiction of the Thud is also the field of the Jon Speelman ?",
    "SerialNumber": "938",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri. <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri} ",
    "entity mapping": [
      {
        "label": "Thud ",
        "uri": "http://dbpedia.org/resource/Thud!"
      },
      {
        "label": "Jon Speelman",
        "uri": "http://dbpedia.org/resource/Jon_Speelman"
      }
    ],
    "id": "c7a0d930b20447e4a742431bbe7d440d",
    "predicate mapping": [
      {
        "label": "fiction non",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "What is the owning organisation of the Ford Kansas City Assembly Plant and also the builder of the Ford Y-block engine?",
    "SerialNumber": "939",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri. <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "entity mapping": [
      {
        "label": "Ford Kansas City Assembly Plant",
        "uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant"
      },
      {
        "label": "Ford Y-block engine",
        "uri": "http://dbpedia.org/resource/Ford_Y-block_engine"
      }
    ],
    "id": "b88127c669a54c12aa05eef809943bc3",
    "predicate mapping": [
      {
        "label": "owning organisation",
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "List the former partner of the figure skaters whose former choreographer was Igor Shpillband.",
    "SerialNumber": "942",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Igor_Shpillband> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "entity mapping": [
      {
        "label": "Igor Shpillband",
        "uri": "http://dbpedia.org/resource/Igor_Shpillband"
      }
    ],
    "id": "2c84a9a631f743f0b2302b12af7aa606",
    "predicate mapping": [
      {
        "label": "former choreographer",
        "uri": "http://dbpedia.org/ontology/formerChoreographer"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater"
      }
    ]
  },
  {
    "question": "What is the title of Kakae ?",
    "SerialNumber": "944",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kakae> <http://dbpedia.org/property/title> ?uri } ",
    "entity mapping": [
      {
        "label": "Kakae",
        "uri": "http://dbpedia.org/resource/Kakae"
      }
    ],
    "id": "1ccd1c0a38d94273b20369bad3a4e3e6",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title"
      }
    ]
  },
  {
    "question": "List all the line of Vadodara Junction railway station?",
    "SerialNumber": "945",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri } ",
    "entity mapping": [
      {
        "label": "Vadodara Junction railway station",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station"
      }
    ],
    "id": "bf81c3eaa06d49e9b4022d317a8b2af0",
    "predicate mapping": [
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line"
      }
    ]
  },
  {
    "question": "List the team for which Doug Acomb played ?",
    "SerialNumber": "947",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri } ",
    "entity mapping": [
      {
        "label": "Doug Acomb",
        "uri": "http://dbpedia.org/resource/Doug_Acomb"
      }
    ],
    "id": "2832515b3cd94fbaba52612934519520",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "How many states does the Pioneer corporation operate in?",
    "SerialNumber": "950",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "Pioneer corporation",
        "uri": "http://dbpedia.org/resource/Pioneer_Corporation"
      }
    ],
    "id": "91ea8eda1f9b4116a2f984f432ff6ea6",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "What is the appliance which uses the central processing unit manufactured by Marvell Technology Group?",
    "SerialNumber": "954",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Marvell_Technology_Group>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "Marvell Technology Group",
        "uri": "http://dbpedia.org/resource/Marvell_Technology_Group"
      }
    ],
    "id": "dd14801af7dd48b5b9c3860b4f2ac690",
    "predicate mapping": [
      {
        "label": "central processing unit",
        "uri": "http://dbpedia.org/ontology/cpu"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "In which team was the person drafted who has studied at the Worcester college, Oxford?",
    "SerialNumber": "955",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Worcester college, Oxford",
        "uri": "http://dbpedia.org/resource/Worcester_College,_Oxford"
      }
    ],
    "id": "c0b4eebc87244ce9a17b1517fc5a7e4f",
    "predicate mapping": [
      {
        "label": "studied at",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the military branch of John Tower ?",
    "SerialNumber": "956",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Tower> <http://dbpedia.org/ontology/militaryBranch> ?uri } ",
    "entity mapping": [
      {
        "label": "John Tower",
        "uri": "http://dbpedia.org/resource/John_Tower"
      }
    ],
    "id": "94efeafa9ef24e1391fdb5bed1b465b0",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "How many people used to play in the youthclub of FC Barcelona?",
    "SerialNumber": "957",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona>  . }",
    "entity mapping": [
      {
        "label": "FC Barcelona",
        "uri": "http://dbpedia.org/resource/FC_Barcelona"
      }
    ],
    "id": "8c423ae07cd444eca119288d4f151034",
    "predicate mapping": [
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "What is the type of Naval Station Bremerton ?",
    "SerialNumber": "958",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Station_Bremerton> <http://dbpedia.org/property/type> ?uri } ",
    "entity mapping": [
      {
        "label": "Naval Station Bremerton",
        "uri": "http://dbpedia.org/resource/Naval_Station_Bremerton"
      }
    ],
    "id": "09496228c50d4dd0829420bde30ad222",
    "predicate mapping": [
      {
        "label": "type",
        "uri": "http://dbpedia.org/property/type"
      }
    ]
  },
  {
    "question": "Count the number of offices held by people who have their allegiances with the american civil war union?",
    "SerialNumber": "959",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)> . ?x <http://dbpedia.org/property/office> ?uri  . }",
    "entity mapping": [
      {
        "label": "union",
        "uri": "http://dbpedia.org/resource/Union_(American_Civil_War)"
      }
    ],
    "id": "a5f83e85563f44108c787e395fe60425",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "What are the other band members of the band one of whose current member is Robert De Niro?",
    "SerialNumber": "961",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Robert_De_Niro> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Robert De Niro",
        "uri": "http://dbpedia.org/resource/Robert_De_Niro"
      }
    ],
    "id": "d8805aed27b84e74a23977910500e942",
    "predicate mapping": [
      {
        "label": "members current",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Who are the tenants of MasterCard Centre?",
    "SerialNumber": "963",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri } ",
    "entity mapping": [
      {
        "label": "MasterCard Centre",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre"
      }
    ],
    "id": "694a307769eb4f02b15d499978c98c6a",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "Who is the President of United World College of Costa Rica ?",
    "SerialNumber": "964",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/property/president> ?uri } ",
    "entity mapping": [
      {
        "label": "United World College of Costa Rica",
        "uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica"
      }
    ],
    "id": "ba8179bb4b874d8a8ec1115fefbd1fb2",
    "predicate mapping": [
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "Is nintendo in the video games industry?",
    "SerialNumber": "965",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nintendo> <http://dbpedia.org/property/industry> <http://dbpedia.org/resource/Video_game> }",
    "entity mapping": [
      {
        "label": "nintendo",
        "uri": "http://dbpedia.org/resource/Nintendo"
      },
      {
        "label": "video games",
        "uri": "http://dbpedia.org/resource/Video_game"
      }
    ],
    "id": "fab1a809ffa043059b189683eb9c205e",
    "predicate mapping": [
      {
        "label": "industry",
        "uri": "http://dbpedia.org/property/industry"
      }
    ]
  },
  {
    "question": "In which movies directed by Orson Welles has Bernard Herrmann as music composer ?",
    "SerialNumber": "966",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Bernard Herrmann",
        "uri": "http://dbpedia.org/resource/Bernard_Herrmann"
      },
      {
        "label": "Orson Welles",
        "uri": "http://dbpedia.org/resource/Orson_Welles"
      }
    ],
    "id": "bc7257226afd49379f8622d5735bd59f",
    "predicate mapping": [
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the major shrine of the monarchs whose successor is Dragimir of Travunia and Zachlumia?",
    "SerialNumber": "967",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia> . ?x <http://dbpedia.org/property/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}",
    "entity mapping": [
      {
        "label": "Dragimir of Travunia and Zachlumia",
        "uri": "http://dbpedia.org/resource/Dragimir_of_Travunia_and_Zachlumia"
      }
    ],
    "id": "4279f6d60e2b40aca3b49c6d92f96f80",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine"
      },
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/Monarch"
      }
    ]
  },
  {
    "question": "List the program genres of the sister stations of 97.1 WASH FM?",
    "SerialNumber": "975",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WASH_(FM)> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . }",
    "entity mapping": [
      {
        "label": "WASH",
        "uri": "http://dbpedia.org/resource/WASH_(FM)"
      }
    ],
    "id": "6f280f2da9014ea5b9dd55d08cd22cd5",
    "predicate mapping": [
      {
        "label": "sister stations",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "program",
        "uri": "http://dbpedia.org/ontology/programmeFormat"
      }
    ]
  },
  {
    "question": "Count all the band members who are in Bands which have signed up with Entertainment One Music?",
    "SerialNumber": "977",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Entertainment_One_Music> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . }",
    "entity mapping": [
      {
        "label": "Entertainment One Music",
        "uri": "http://dbpedia.org/resource/Entertainment_One_Music"
      }
    ],
    "id": "0bc0430408384e73b48e9e08a71e7f11",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      }
    ]
  },
  {
    "question": " Erik Jendresen is the writer of which television show?",
    "SerialNumber": "978",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Erik Jendresen",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen"
      }
    ],
    "id": "2dccee64e1754b3ebb0e0b7dbd8f53e5",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the editor of Hearth and Home ?",
    "SerialNumber": "979",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hearth_and_Home> <http://dbpedia.org/ontology/editor> ?uri } ",
    "entity mapping": [
      {
        "label": "Hearth and Home",
        "uri": "http://dbpedia.org/resource/Hearth_and_Home"
      }
    ],
    "id": "3bcdc25b65614b0487c429348217ea4b",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editor"
      }
    ]
  },
  {
    "question": "Mike Shinoda is in which band?",
    "SerialNumber": "980",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mike_Shinoda> } ",
    "entity mapping": [
      {
        "label": "Mike Shinoda",
        "uri": "http://dbpedia.org/resource/Mike_Shinoda"
      }
    ],
    "id": "a2ccd223b18049ec8f3baa631c19db91",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/bandMember"
      }
    ]
  },
  {
    "question": "How many tenants are there in the Mercedes Benz Superdome?",
    "SerialNumber": "982",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mercedes-Benz_Superdome> <http://dbpedia.org/ontology/tenant> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mercedes Benz Superdome",
        "uri": "http://dbpedia.org/resource/Mercedes-Benz_Superdome"
      }
    ],
    "id": "2d350c457f654871877104d78d4595be",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "What is the religion of the successor of Chatumongol Sonakul?",
    "SerialNumber": "983",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chatumongol_Sonakul> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Chatumongol Sonakul",
        "uri": "http://dbpedia.org/resource/Chatumongol_Sonakul"
      }
    ],
    "id": "2ce7408563bc4fff84ed8255c318beac",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which associated band of the Teddy Riley is also the performer of the Before I Let You Go?",
    "SerialNumber": "984",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri} ",
    "entity mapping": [
      {
        "label": "Teddy Riley",
        "uri": "http://dbpedia.org/resource/Teddy_Riley"
      },
      {
        "label": "Before I Let You Go",
        "uri": "http://dbpedia.org/resource/Before_I_Let_You_Go"
      }
    ],
    "id": "4b2bed5caa0f4fcd97539ab5fe8b0c31",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "performer",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      }
    ]
  },
  {
    "question": "List all the doctoral student of the scientist who has advised john Bowlby ?",
    "SerialNumber": "985",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/John_Bowlby> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "john Bowlby",
        "uri": "http://dbpedia.org/resource/John_Bowlby"
      }
    ],
    "id": "9385b5410adb4b398d78b74233daa3e7",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many developers have worked on games of the Oddworld series?",
    "SerialNumber": "986",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Oddworld> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Oddworld",
        "uri": "http://dbpedia.org/resource/Oddworld"
      }
    ],
    "id": "c68c8778028948a5a3e0de11281c7ca8",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Count everyone who was in a youthclub chaired by Josep Maria Bartomeu ?",
    "SerialNumber": "987",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Josep_Maria_Bartomeu> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "entity mapping": [
      {
        "label": "Josep Maria Bartomeu",
        "uri": "http://dbpedia.org/resource/Josep_Maria_Bartomeu"
      }
    ],
    "id": "70aa9eff865c482b9b003af932aaf051",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/property/chairman"
      },
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "Is Peter Piper Pizza in the pizza industry?",
    "SerialNumber": "988",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Peter_Piper_Pizza> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Pizza> }",
    "entity mapping": [
      {
        "label": "Peter Piper Pizza",
        "uri": "http://dbpedia.org/resource/Peter_Piper_Pizza"
      },
      {
        "label": "pizza",
        "uri": "http://dbpedia.org/resource/Pizza"
      }
    ],
    "id": "13a66e0633544928a5c94aa1f3012477",
    "predicate mapping": [
      {
        "label": "industry",
        "uri": "http://dbpedia.org/ontology/industry"
      }
    ]
  },
  {
    "question": "Name a river starting from arequipa region?",
    "SerialNumber": "989",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "arequipa region",
        "uri": "http://dbpedia.org/resource/Arequipa_Region"
      }
    ],
    "id": "4faf770f82744bd3a5ae913949ab8d0a",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/sourceRegion"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the religion of the person who founded the Emel magazine?",
    "SerialNumber": "990",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Emel_(magazine)> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Emel",
        "uri": "http://dbpedia.org/resource/Emel_(magazine)"
      }
    ],
    "id": "efb34433b68544b09f7dc35e94b450f9",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the alma mater of the scientist who is known for Rational analysis ?",
    "SerialNumber": "993",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Rational_analysis> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Rational analysis",
        "uri": "http://dbpedia.org/resource/Rational_analysis"
      }
    ],
    "id": "c7922582976442cfb8e59c1660842c18",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What organisations purpose is Peace?",
    "SerialNumber": "994",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Peace",
        "uri": "http://dbpedia.org/resource/Peace"
      }
    ],
    "id": "059b389bffc642eaab76a7072a3a9b9c",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "name the mountain range of Le Gibloux ?",
    "SerialNumber": "995",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Le_Gibloux> <http://dbpedia.org/ontology/mountainRange> ?uri } ",
    "entity mapping": [
      {
        "label": "Gibloux",
        "uri": "http://dbpedia.org/resource/Le_Gibloux"
      }
    ],
    "id": "1a7add8911774e34a9753b1970a42b0f",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      }
    ]
  },
  {
    "question": "Where is the headquarters of Metro Transit (Minnesota) ?",
    "SerialNumber": "996",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Metro_Transit_(Minnesota)> <http://dbpedia.org/property/headquarters> ?uri } ",
    "entity mapping": [
      {
        "label": "Metro Transit",
        "uri": "http://dbpedia.org/resource/Metro_Transit_(Minnesota)"
      }
    ],
    "id": "020c57dc849e4ed79054a420fb7f59ff",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "Which relative of ralf schumacher is a famous formula one racer?",
    "SerialNumber": "999",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ralf_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
    "entity mapping": [
      {
        "label": "ralf schumacher",
        "uri": "http://dbpedia.org/resource/Ralf_Schumacher"
      }
    ],
    "id": "28b62059c317408d9e02cdf9e33d1935",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "formula one racer",
        "uri": "http://dbpedia.org/ontology/FormulaOneRacer"
      }
    ]
  },
  {
    "question": "List the awards won by the spouse of Harriet Andersson?",
    "SerialNumber": "1000",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Harriet_Andersson> <http://dbpedia.org/ontology/partner> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Harriet Andersson",
        "uri": "http://dbpedia.org/resource/Harriet_Andersson"
      }
    ],
    "id": "47a8730100bb43ab9b5565b15e073f44",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/partner"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "List the judges of Rising Star which is also the artist of Brad Paisley discography ?",
    "SerialNumber": "1002",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)> <http://dbpedia.org/property/judges> ?uri. <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri} ",
    "entity mapping": [
      {
        "label": "Rising Star",
        "uri": "http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)"
      },
      {
        "label": "Brad Paisley discography",
        "uri": "http://dbpedia.org/resource/Brad_Paisley_discography"
      }
    ],
    "id": "95a5e8b6535b44d7a306e95c185accee",
    "predicate mapping": [
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "Who are the current members of Insects vs Robots?",
    "SerialNumber": "1003",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri } ",
    "entity mapping": [
      {
        "label": "Insects vs Robots",
        "uri": "http://dbpedia.org/resource/Insects_vs_Robots"
      }
    ],
    "id": "69644dc7516e4f57a68e2ef38707770b",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers"
      }
    ]
  },
  {
    "question": "What is the alma mater of the author of Letter to a Christian Nation ?",
    "SerialNumber": "1006",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Letter_to_a_Christian_Nation> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Letter to a Christian Nation",
        "uri": "http://dbpedia.org/resource/Letter_to_a_Christian_Nation"
      }
    ],
    "id": "02d8c986d51743f79aadb85498ab95eb",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "name the races where bobby beasley took part ?",
    "SerialNumber": "1007",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Beasley> <http://dbpedia.org/ontology/race> ?uri } ",
    "entity mapping": [
      {
        "label": "bobby beasley",
        "uri": "http://dbpedia.org/resource/Bobby_Beasley"
      }
    ],
    "id": "760c753b13f2446a9330ada587e18873",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/ontology/race"
      }
    ]
  },
  {
    "question": "What is the content license of Darcs ?",
    "SerialNumber": "1008",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Darcs> <http://dbpedia.org/ontology/license> ?uri } ",
    "entity mapping": [
      {
        "label": "Darcs",
        "uri": "http://dbpedia.org/resource/Darcs"
      }
    ],
    "id": "acc08e9a7a55497086586e40d6223753",
    "predicate mapping": [
      {
        "label": "content license",
        "uri": "http://dbpedia.org/ontology/license"
      }
    ]
  },
  {
    "question": "How many items belong to the Science Fiction genre?",
    "SerialNumber": "1010",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction>  . }",
    "entity mapping": [
      {
        "label": "Science Fiction",
        "uri": "http://dbpedia.org/resource/Science_fiction"
      }
    ],
    "id": "8ae784fd30814515b6229d039f232b79",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "Who is the developer of the software which serves the platform for King\u0027s Quest VI?",
    "SerialNumber": "1012",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/King\u0027s_Quest_VI> <http://dbpedia.org/ontology/computingPlatform> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "King\u0027s Quest VI",
        "uri": "http://dbpedia.org/resource/King\u0027s_Quest_VI"
      }
    ],
    "id": "1df640ae02bb4421947b10d25fb15963",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "What magazine companies are of form Limited liability company?",
    "SerialNumber": "1013",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Limited_liability_company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Limited liability company",
        "uri": "http://dbpedia.org/resource/Limited_liability_company"
      }
    ],
    "id": "930321a78c1f43668bb1a7051bc5727b",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "Count the cities whihch are on the same sea as that of Miami ?",
    "SerialNumber": "1014",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/cities> ?uri }",
    "entity mapping": [
      {
        "label": "Miami",
        "uri": "http://dbpedia.org/resource/Miami"
      }
    ],
    "id": "e2916bd3eb4a49159537f5a32218b829",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "Name the river whose mouth mountain is Southend-on-Sea and mouth place is Essex?",
    "SerialNumber": "1017",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Southend-on-Sea> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Southend-on-Sea",
        "uri": "http://dbpedia.org/resource/Southend-on-Sea"
      },
      {
        "label": "Essex",
        "uri": "http://dbpedia.org/resource/Essex"
      }
    ],
    "id": "12bc818a1cad45d1a91e51273310e997",
    "predicate mapping": [
      {
        "label": "mouth mountain",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the official residence of the Helen Getachew which is also the palce of death of the Haile Selassie Gugsa ?",
    "SerialNumber": "1021",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Helen_Getachew> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Haile_Selassie_Gugsa> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "Helen Getachew",
        "uri": "http://dbpedia.org/resource/Helen_Getachew"
      },
      {
        "label": "Haile Selassie Gugsa",
        "uri": "http://dbpedia.org/resource/Haile_Selassie_Gugsa"
      }
    ],
    "id": "d4dcd0fd68e54344be04bf5a83626fb8",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "What is the nationality of the J. T. Krogh which is also the  sovereign state of the Camilla Martin",
    "SerialNumber": "1023",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._T._Krogh> <http://dbpedia.org/ontology/nationality> ?uri. <http://dbpedia.org/resource/Camilla_Martin> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "J. T. Krogh",
        "uri": "http://dbpedia.org/resource/J._T._Krogh"
      },
      {
        "label": "Camilla Martin",
        "uri": "http://dbpedia.org/resource/Camilla_Martin"
      }
    ],
    "id": "7791f674f69644b597e58b7e0b2da6be",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Name the saint whose major shrine is in Canada and was canonized by Pope Benedict XVI?",
    "SerialNumber": "1025",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Canada> . ?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Benedict_XVI>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "entity mapping": [
      {
        "label": "Canada",
        "uri": "http://dbpedia.org/resource/Canada"
      },
      {
        "label": "Pope Benedict XVI",
        "uri": "http://dbpedia.org/resource/Pope_Benedict_XVI"
      }
    ],
    "id": "eb9973f1951346f39307949428dd4e26",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint"
      }
    ]
  },
  {
    "question": "What is the television show whose sculptor is C. E. Webber and composed by Murray Gold?",
    "SerialNumber": "1026",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/C._E._Webber> . ?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Murray_Gold>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "C. E. Webber",
        "uri": "http://dbpedia.org/resource/C._E._Webber"
      },
      {
        "label": "Murray Gold",
        "uri": "http://dbpedia.org/resource/Murray_Gold"
      }
    ],
    "id": "dc23a511ad514de1aa0138b011745698",
    "predicate mapping": [
      {
        "label": "sculptor",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "In how many different places have people beatified by Pope Pius X died?",
    "SerialNumber": "1029",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_X> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Pope Pius X",
        "uri": "http://dbpedia.org/resource/Pope_Pius_X"
      }
    ],
    "id": "0eb2c9964a5047548bafa2cc6ffb4019",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "What is the title of the Kakae and also the district of the Robert William Wilcox ?",
    "SerialNumber": "1031",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kakae> <http://dbpedia.org/property/title> ?uri. <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri} ",
    "entity mapping": [
      {
        "label": "Kakae",
        "uri": "http://dbpedia.org/resource/Kakae"
      },
      {
        "label": "Robert William Wilcox",
        "uri": "http://dbpedia.org/resource/Robert_William_Wilcox"
      }
    ],
    "id": "ed4fb70a35a34a85bd5669521192912b",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district"
      }
    ]
  },
  {
    "question": "Is Halyna Kukhar the former coach of Stanislav Morozov?",
    "SerialNumber": "1033",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/ontology/formerCoach> <http://dbpedia.org/resource/Halyna_Kukhar> }",
    "entity mapping": [
      {
        "label": "Stanislav Morozov",
        "uri": "http://dbpedia.org/resource/Stanislav_Morozov"
      },
      {
        "label": "Halyna Kukhar",
        "uri": "http://dbpedia.org/resource/Halyna_Kukhar"
      }
    ],
    "id": "46cb9047955d4914a06a2fd681844bba",
    "predicate mapping": [
      {
        "label": "former coach",
        "uri": "http://dbpedia.org/ontology/formerCoach"
      }
    ]
  },
  {
    "question": "What is the origin of the musical artist whose associated band is Ziggi Recado ?",
    "SerialNumber": "1035",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Ziggi_Recado> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Ziggi Recado",
        "uri": "http://dbpedia.org/resource/Ziggi_Recado"
      }
    ],
    "id": "569f87ca37d249fca1fd669c42b61425",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "What is the game platform of Google Cloud Connect ?",
    "SerialNumber": "1042",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri } ",
    "entity mapping": [
      {
        "label": "Google Cloud Connect",
        "uri": "http://dbpedia.org/resource/Google_Cloud_Connect"
      }
    ],
    "id": "fd948db9a1074ffca0b870175bf8308e",
    "predicate mapping": [
      {
        "label": "game platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      }
    ]
  },
  {
    "question": "Which city\u0027s mayor is married to Jean Marc Germain?",
    "SerialNumber": "1043",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Jean-Marc_Germain> . ?uri <http://dbpedia.org/property/mayor> ?x  . }",
    "entity mapping": [
      {
        "label": "Jean Marc Germain",
        "uri": "http://dbpedia.org/resource/Jean-Marc_Germain"
      }
    ],
    "id": "c9f63111222c4d6c837952e9c7db59f9",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor"
      }
    ]
  },
  {
    "question": "Name the company which provides Outlook.com as service and also has a product named Microsoft Azure ?",
    "SerialNumber": "1044",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Outlook",
        "uri": "http://dbpedia.org/resource/Outlook.com"
      },
      {
        "label": "Microsoft Azure",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure"
      }
    ],
    "id": "e9767fcb96f14efeaa05520dc4675f58",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "To which persons is Ron Cyrus a relative?",
    "SerialNumber": "1047",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ron_Cyrus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ron Cyrus",
        "uri": "http://dbpedia.org/resource/Ron_Cyrus"
      }
    ],
    "id": "cec0cca9c76744ca97e1a9740254d40a",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the scientist who was awarded a position in Royal Society and has academic advisor as Franz Brentano?",
    "SerialNumber": "1049",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Franz_Brentano>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Royal Society",
        "uri": "http://dbpedia.org/resource/Royal_Society"
      },
      {
        "label": "Franz Brentano",
        "uri": "http://dbpedia.org/resource/Franz_Brentano"
      }
    ],
    "id": "9a2c07ecaef04020b5ad3820012f0ef4",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What is the allegiance of John Kotelawala ?",
    "SerialNumber": "1056",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Kotelawala> <http://dbpedia.org/property/allegiance> ?uri } ",
    "entity mapping": [
      {
        "label": "John Kotelawala",
        "uri": "http://dbpedia.org/resource/John_Kotelawala"
      }
    ],
    "id": "0496d085c1c84057847b2b47a44df27d",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      }
    ]
  },
  {
    "question": "What is the common party of Chandra Shekhar and Govinda  ?",
    "SerialNumber": "1058",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri} ",
    "entity mapping": [
      {
        "label": "Chandra Shekhar",
        "uri": "http://dbpedia.org/resource/Chandra_Shekhar"
      },
      {
        "label": "Govinda",
        "uri": "http://dbpedia.org/resource/Govinda_(actor)"
      }
    ],
    "id": "af46582ccf234c2f9f78b845dd3c11ee",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "How many different songwriters have had their songs recorded in London?",
    "SerialNumber": "1061",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/London> . ?x <http://dbpedia.org/ontology/writer> ?uri  . }",
    "entity mapping": [
      {
        "label": "London",
        "uri": "http://dbpedia.org/resource/London"
      }
    ],
    "id": "c9adffe8cefd409cac7b4cb98a75654b",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/writer"
      }
    ]
  },
  {
    "question": "Which university of Alexandre Tichonov is the place of death of Valentin Muratov /",
    "SerialNumber": "1062",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> ?uri. <http://dbpedia.org/resource/Valentin_Muratov> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "Alexandre Tichonov",
        "uri": "http://dbpedia.org/resource/Alexandre_Tichonov"
      },
      {
        "label": "Valentin Muratov",
        "uri": "http://dbpedia.org/resource/Valentin_Muratov"
      }
    ],
    "id": "ce42ceda65bc44e4af05eebe148399f6",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/property/university"
      },
      {
        "label": "place of death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "What are the common houses of US Congress and the Kansas Legislature?",
    "SerialNumber": "1063",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_Congress> <http://dbpedia.org/property/houses> ?uri. <http://dbpedia.org/resource/Kansas_Legislature> <http://dbpedia.org/ontology/house> ?uri} ",
    "entity mapping": [
      {
        "label": "US Congress",
        "uri": "http://dbpedia.org/resource/United_States_Congress"
      },
      {
        "label": "Kansas Legislature",
        "uri": "http://dbpedia.org/resource/Kansas_Legislature"
      }
    ],
    "id": "acf18faa3348443eb2081c4a516063f7",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses"
      },
      {
        "label": "house",
        "uri": "http://dbpedia.org/ontology/house"
      }
    ]
  },
  {
    "question": "Which administrative headquarters of the Pulau Ubin is also the resting place of the Nicole Lai",
    "SerialNumber": "1064",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/capital> ?uri. <http://dbpedia.org/resource/Nicole_Lai> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Pulau Ubin",
        "uri": "http://dbpedia.org/resource/Pulau_Ubin"
      },
      {
        "label": "Nicole Lai",
        "uri": "http://dbpedia.org/resource/Nicole_Lai"
      }
    ],
    "id": "27b4aeb6443f452ab9936158e4704854",
    "predicate mapping": [
      {
        "label": "administrative headquarters",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "What is the common military branch of the Thomas Darden and that of Edwin F. Hunter",
    "SerialNumber": "1065",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Darden> <http://dbpedia.org/ontology/militaryBranch> ?uri. <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri} ",
    "entity mapping": [
      {
        "label": "Thomas Darden",
        "uri": "http://dbpedia.org/resource/Thomas_Darden"
      },
      {
        "label": "Edwin F. Hunter",
        "uri": "http://dbpedia.org/resource/Edwin_F._Hunter"
      }
    ],
    "id": "bdd508af2ed146e7ba2598dd73e439b0",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "Which is the university of Vanderbilt Commodores ?",
    "SerialNumber": "1066",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri } ",
    "entity mapping": [
      {
        "label": "Vanderbilt Commodores",
        "uri": "http://dbpedia.org/resource/Vanderbilt_Commodores"
      }
    ],
    "id": "c9b8f77f399f4f88b60f4a252aa7e825",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university"
      }
    ]
  },
  {
    "question": "Which fictional character\u0027s portrayer was edited by Roger Barton?",
    "SerialNumber": "1068",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Roger_Barton_(film_editor)> . ?uri <http://dbpedia.org/ontology/portrayer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Roger Barton",
        "uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)"
      }
    ],
    "id": "76c3eb3bdc2b4a3d846ba7a10155535c",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "portrayer",
        "uri": "http://dbpedia.org/ontology/portrayer"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Which country does the current team of Darren McNamara belong to?",
    "SerialNumber": "1069",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Darren_McNamara> <http://dbpedia.org/property/currentTeam> ?x . ?x <http://dbpedia.org/ontology/locationCountry> ?uri  . }",
    "entity mapping": [
      {
        "label": "Darren McNamara",
        "uri": "http://dbpedia.org/resource/Darren_McNamara"
      }
    ],
    "id": "4c72ce839cc74eb5af7c755665ba0b19",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      }
    ]
  },
  {
    "question": "Which is the common nation of Louisa Hill and American Football Wellington from?",
    "SerialNumber": "1071",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Louisa_Hill> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/American_Football_Wellington> <http://dbpedia.org/ontology/country> ?uri . }",
    "entity mapping": [
      {
        "label": "Louisa Hill",
        "uri": "http://dbpedia.org/resource/Louisa_Hill"
      },
      {
        "label": "American Football Wellington",
        "uri": "http://dbpedia.org/resource/American_Football_Wellington"
      }
    ],
    "id": "1787b4b57f8648f7a691dc0b6458a93c",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Was robert sarvis a nominee of the US Senate?",
    "SerialNumber": "1072",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> <http://dbpedia.org/resource/United_States_Senate> }",
    "entity mapping": [
      {
        "label": "robert sarvis",
        "uri": "http://dbpedia.org/resource/Robert_Sarvis"
      },
      {
        "label": "US Senate",
        "uri": "http://dbpedia.org/resource/United_States_Senate"
      }
    ],
    "id": "1dcc19d42ba74a9487b2f289e05c435e",
    "predicate mapping": [
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee"
      }
    ]
  },
  {
    "question": "Who is the successor of McDonnell Douglas ?",
    "SerialNumber": "1075",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/McDonnell_Douglas> <http://dbpedia.org/property/successor> ?uri } ",
    "entity mapping": [
      {
        "label": "McDonnell Douglas",
        "uri": "http://dbpedia.org/resource/McDonnell_Douglas"
      }
    ],
    "id": "e496a9c37c484d349983cda8defe8e0e",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      }
    ]
  },
  {
    "question": "where did Boga originate?",
    "SerialNumber": "1076",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boga_(soft_drink)> <http://dbpedia.org/property/origin> ?uri } ",
    "entity mapping": [
      {
        "label": "Boga",
        "uri": "http://dbpedia.org/resource/Boga_(soft_drink)"
      }
    ],
    "id": "dbd91640b99b4b68accaf939e7b660b6",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      }
    ]
  },
  {
    "question": "What is the order of the Henry Clay and profession of the William Luther Hill?",
    "SerialNumber": "1077",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Clay> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri} ",
    "entity mapping": [
      {
        "label": "Henry Clay",
        "uri": "http://dbpedia.org/resource/Henry_Clay"
      },
      {
        "label": "William Luther Hill",
        "uri": "http://dbpedia.org/resource/William_Luther_Hill"
      }
    ],
    "id": "8bc8f57fd4dc4186ba01fb3c91533c19",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/property/order"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      }
    ]
  },
  {
    "question": "Name the co-founder of the record labels which have one of the founder as Chris DuBois ?",
    "SerialNumber": "1078",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Chris_DuBois> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
    "entity mapping": [
      {
        "label": "Chris DuBois",
        "uri": "http://dbpedia.org/resource/Chris_DuBois"
      }
    ],
    "id": "abdbfd4f0fc94f8abd065f71ee33daaa",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel"
      }
    ]
  },
  {
    "question": "what does the cahora bassa flow into?",
    "SerialNumber": "1080",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri } ",
    "entity mapping": [
      {
        "label": "cahora bassa",
        "uri": "http://dbpedia.org/resource/Cahora_Bassa"
      }
    ],
    "id": "84d8ee90740d450784488c785a892205",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/property/inflow"
      }
    ]
  },
  {
    "question": "What awards have been given to the anyone who raced in the Lawrence Realization Stakes?",
    "SerialNumber": "1081",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Lawrence_Realization_Stakes> . ?x <http://dbpedia.org/ontology/honours> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lawrence Realization Stakes",
        "uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes"
      }
    ],
    "id": "1c1c775a8beb4abfaacf4e09a2fdde14",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours"
      }
    ]
  },
  {
    "question": "How many home stadium are there, of the soccer club seasons whose chairman is Merritt Paulson?",
    "SerialNumber": "1082",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "entity mapping": [
      {
        "label": "Merritt Paulson",
        "uri": "http://dbpedia.org/resource/Merritt_Paulson"
      }
    ],
    "id": "5cb7cae6ad1c4e6884cdf454075a9ec5",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      }
    ]
  },
  {
    "question": "Name the scientist whose academic advisor is Karl Ewald Hasse and supervisor is Georg Meissner?",
    "SerialNumber": "1083",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Karl Ewald Hasse",
        "uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse"
      },
      {
        "label": "Georg Meissner",
        "uri": "http://dbpedia.org/resource/Georg_Meissner"
      }
    ],
    "id": "8cf47e5b92d148bdac37fa14e7f2f0d3",
    "predicate mapping": [
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Name the resting place of Charles Edward Magoon ?",
    "SerialNumber": "1085",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Edward_Magoon> <http://dbpedia.org/property/restingplace> ?uri } ",
    "entity mapping": [
      {
        "label": "Charles Edward Magoon",
        "uri": "http://dbpedia.org/resource/Charles_Edward_Magoon"
      }
    ],
    "id": "20d4fbedbfba402298cd46213df4550e",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "Who owns the newspaper which was founded by Nehru?",
    "SerialNumber": "1087",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jawaharlal_Nehru> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "Nehru",
        "uri": "http://dbpedia.org/resource/Jawaharlal_Nehru"
      }
    ],
    "id": "6674f869460343a08285a7ecc8e8efef",
    "predicate mapping": [
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "In which region was political figure Wayne Allard elected?",
    "SerialNumber": "1089",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wayne_Allard> <http://dbpedia.org/ontology/region> ?uri } ",
    "entity mapping": [
      {
        "label": "Wayne Allard",
        "uri": "http://dbpedia.org/resource/Wayne_Allard"
      }
    ],
    "id": "bc55397cdb6c4e01b5cb95814c0c9662",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Which party of Rishang Keishing is the leader at Manendragarh ?",
    "SerialNumber": "1090",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manendragarh> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Rishang_Keishing> <http://dbpedia.org/property/party> ?uri} ",
    "entity mapping": [
      {
        "label": "Manendragarh",
        "uri": "http://dbpedia.org/resource/Manendragarh"
      },
      {
        "label": "Rishang Keishing",
        "uri": "http://dbpedia.org/resource/Rishang_Keishing"
      }
    ],
    "id": "f194dbdb9cd343d0a3713fc8e635fff2",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "Name the district of Robert William Wilcox ?",
    "SerialNumber": "1092",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri } ",
    "entity mapping": [
      {
        "label": "Robert William Wilcox",
        "uri": "http://dbpedia.org/resource/Robert_William_Wilcox"
      }
    ],
    "id": "ba1296ab79d44a72b90bc4eda20551f0",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district"
      }
    ]
  },
  {
    "question": "Who is the author of Karakuri Dji Ultimo ?",
    "SerialNumber": "1093",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_Dôji_Ultimo> <http://dbpedia.org/property/author> ?uri } ",
    "entity mapping": [
      {
        "label": "Karakuri Dji Ultimo",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo"
      }
    ],
    "id": "3c2822d238f74e5d8723e577709dbc0d",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "Name the movies in which music is give by  Laurie Johnson and edited by Anthony Harvey ?",
    "SerialNumber": "1094",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson> . ?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Laurie Johnson",
        "uri": "http://dbpedia.org/resource/Laurie_Johnson"
      },
      {
        "label": "Anthony Harvey",
        "uri": "http://dbpedia.org/resource/Anthony_Harvey"
      }
    ],
    "id": "96586e0449a14210adfeea2f9756672f",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What are some districts in the Tendring borough?",
    "SerialNumber": "1095",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/borough> <http://dbpedia.org/resource/Tendring> . ?x <http://dbpedia.org/ontology/district> ?uri  . }",
    "entity mapping": [
      {
        "label": "Tendring",
        "uri": "http://dbpedia.org/resource/Tendring"
      }
    ],
    "id": "87e83ee1d27a42928457988a175777b9",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district"
      }
    ]
  },
  {
    "question": "Give me a count of bacterias which belongs to Bacilli class?",
    "SerialNumber": "1097",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Bacilli>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "entity mapping": [
      {
        "label": "Bacilli",
        "uri": "http://dbpedia.org/resource/Bacilli"
      }
    ],
    "id": "6027ae40ca0541feb5c23edebbf8dc5c",
    "predicate mapping": [
      {
        "label": "class",
        "uri": "http://dbpedia.org/ontology/class"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria"
      }
    ]
  },
  {
    "question": " Name the city whose province is Metropolitan City of Venice and has leader as Luigi Brugnaro ?",
    "SerialNumber": "1098",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Metropolitan_City_of_Venice> . ?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Luigi_Brugnaro>  . }",
    "entity mapping": [
      {
        "label": "Metropolitan City of Venice",
        "uri": "http://dbpedia.org/resource/Metropolitan_City_of_Venice"
      },
      {
        "label": "Luigi Brugnaro",
        "uri": "http://dbpedia.org/resource/Luigi_Brugnaro"
      }
    ],
    "id": "87b8d216055241b8bfb033091e0b401d",
    "predicate mapping": [
      {
        "label": "province",
        "uri": "http://dbpedia.org/property/province"
      },
      {
        "label": "leader name",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "Name the television show whose voice is given by April Stewart and it\u0027s distributor is Broadcast syndication?",
    "SerialNumber": "1100",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "April Stewart",
        "uri": "http://dbpedia.org/resource/April_Stewart"
      },
      {
        "label": "Broadcast syndication",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication"
      }
    ],
    "id": "b999081fee064aae850db1e1963425c1",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which universities are alma mater to Charles Plosser?",
    "SerialNumber": "1113",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Plosser> <http://dbpedia.org/property/almaMater> ?uri } ",
    "entity mapping": [
      {
        "label": "Charles Plosser",
        "uri": "http://dbpedia.org/resource/Charles_Plosser"
      }
    ],
    "id": "63e6c4e6a8e54d1d84d524f2d2efec81",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "Where was the Temptation Waits recorded?",
    "SerialNumber": "1114",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temptation_Waits> <http://dbpedia.org/ontology/recordedIn> ?uri } ",
    "entity mapping": [
      {
        "label": "Temptation Waits",
        "uri": "http://dbpedia.org/resource/Temptation_Waits"
      }
    ],
    "id": "e8ba1b2b3f3944aa9e7a39ebfb9d8640",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      }
    ]
  },
  {
    "question": "Name the species of Panthera leo fossilis ?",
    "SerialNumber": "1115",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panthera_leo_fossilis> <http://dbpedia.org/ontology/species> ?uri } ",
    "entity mapping": [
      {
        "label": "Panthera leo fossilis",
        "uri": "http://dbpedia.org/resource/Panthera_leo_fossilis"
      }
    ],
    "id": "571fc2015ffd4fc78f1f711b2042fbe1",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      }
    ]
  },
  {
    "question": "What is the associated band of the musical artist who is the producer of The Trumpet Kings Meet Joe Turner ?",
    "SerialNumber": "1116",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Trumpet_Kings_Meet_Joe_Turner> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "The Trumpet Kings Meet Joe Turner",
        "uri": "http://dbpedia.org/resource/The_Trumpet_Kings_Meet_Joe_Turner"
      }
    ],
    "id": "8498d4343f9b475eb530413e390c99cd",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Name the driver who had a pole finish in 1989 Portuguese Grand Prix ?",
    "SerialNumber": "1117",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1989_Portuguese_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri } ",
    "entity mapping": [
      {
        "label": "1989 Portuguese Grand Prix",
        "uri": "http://dbpedia.org/resource/1989_Portuguese_Grand_Prix"
      }
    ],
    "id": "af1582bae86d4e2dbb0237cb9e880064",
    "predicate mapping": [
      {
        "label": "driver pole",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      }
    ]
  },
  {
    "question": "Give me the total number of membership of the organisations which have memebers as  Azerbaijan?",
    "SerialNumber": "1119",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Azerbaijan> . ?x <http://dbpedia.org/property/membership> ?uri }",
    "entity mapping": [
      {
        "label": "Azerbaijan",
        "uri": "http://dbpedia.org/resource/Azerbaijan"
      }
    ],
    "id": "66c29c1492c74dc0887a4d8ed49584f1",
    "predicate mapping": [
      {
        "label": "membership",
        "uri": "http://dbpedia.org/property/membership"
      },
      {
        "label": "membership",
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "Who is the builder of the bridge owned by Tabriz ?",
    "SerialNumber": "1120",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Tabriz> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Tabriz",
        "uri": "http://dbpedia.org/resource/Tabriz"
      }
    ],
    "id": "6843ef8a60e748b1845aa257e4054420",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Which show\u0027s theme music was composed by Primus and voiced by Isaac Hayes?",
    "SerialNumber": "1121",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Primus",
        "uri": "http://dbpedia.org/resource/Primus_(band)"
      },
      {
        "label": "Isaac Hayes",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes"
      }
    ],
    "id": "3d937ff8b74e4b77873053158ed4a571",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which city\u0027s governing body is led by Bruce Harrell?",
    "SerialNumber": "1122",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Bruce_Harrell> . ?uri <http://dbpedia.org/property/governingBody> ?x  . }",
    "entity mapping": [
      {
        "label": "Bruce Harrell",
        "uri": "http://dbpedia.org/resource/Bruce_Harrell"
      }
    ],
    "id": "f99ff03fa6aa4f94ac6dd9d409b8706a",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      }
    ]
  },
  {
    "question": "What are the reason served by Toll Global Express which is also the country of LPGA ?",
    "SerialNumber": "1123",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/LPGA> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Toll Global Express",
        "uri": "http://dbpedia.org/resource/Toll_Global_Express"
      },
      {
        "label": "LPGA",
        "uri": "http://dbpedia.org/resource/LPGA"
      }
    ],
    "id": "789c4ee3592743b49f1e3f05c8a35b1e",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "What are the television shows whose writers did notable work for Band of Brothers ?",
    "SerialNumber": "1126",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Band_of_Brothers_(miniseries)> . ?uri <http://dbpedia.org/property/writer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Band of Brothers",
        "uri": "http://dbpedia.org/resource/Band_of_Brothers_(miniseries)"
      }
    ],
    "id": "52db9e57f2664971af4d8b9d4dd8b49f",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Was 12th Field Artillery Regiment garrisoned at colorado?",
    "SerialNumber": "1127",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/12th_Field_Artillery_Regiment> <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Colorado> }",
    "entity mapping": [
      {
        "label": "12th Field Artillery Regiment",
        "uri": "http://dbpedia.org/resource/12th_Field_Artillery_Regiment"
      },
      {
        "label": "colorado",
        "uri": "http://dbpedia.org/resource/Colorado"
      }
    ],
    "id": "6d862521319c45838d0b8922b8bd22a1",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      }
    ]
  },
  {
    "question": "What is the genre of the Band whose home town is County Westmeath?",
    "SerialNumber": "1129",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/County_Westmeath> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "County Westmeath",
        "uri": "http://dbpedia.org/resource/County_Westmeath"
      }
    ],
    "id": "44d2ca7a78c54e4e8e4034be3b29abd0",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "Band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "What is the municipality of Patterson Houses ?",
    "SerialNumber": "1130",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Patterson_Houses> <http://dbpedia.org/ontology/municipality> ?uri } ",
    "entity mapping": [
      {
        "label": "Patterson Houses",
        "uri": "http://dbpedia.org/resource/Patterson_Houses"
      }
    ],
    "id": "696529855616457e86adf4ee2c4833a9",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      }
    ]
  },
  {
    "question": "What is the successor of the governors whose child is Levi Lincoln, Jr.?",
    "SerialNumber": "1131",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Levi_Lincoln,_Jr.> . ?x <http://dbpedia.org/property/successor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}",
    "entity mapping": [
      {
        "label": "Levi Lincoln, Jr.",
        "uri": "http://dbpedia.org/resource/Levi_Lincoln,_Jr."
      }
    ],
    "id": "7c998b30d1464e4096270e79dab19769",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/Governor"
      }
    ]
  },
  {
    "question": "Was Gareth Southgate a manager of Middlesbrough F.C.?",
    "SerialNumber": "1132",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gareth_Southgate> <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/Middlesbrough_F.C.> }",
    "entity mapping": [
      {
        "label": "Gareth Southgate",
        "uri": "http://dbpedia.org/resource/Gareth_Southgate"
      },
      {
        "label": "Middlesbrough F.C",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C."
      }
    ],
    "id": "819cbba8b6af4f75bddb596029d507d6",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/property/managerclubs"
      }
    ]
  },
  {
    "question": "In which city is the building, whose part is the Martin AN/FSG1 anti aircraft system?",
    "SerialNumber": "1133",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Martin_AN/FSG-1_Antiaircraft_Defense_System> . ?x <http://dbpedia.org/property/district> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [],
    "id": "bfc1096eaf1243c6b9d2d32967f50390",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "aircraft system anti",
        "uri": "http://dbpedia.org/resource/Martin_AN/FSG-1_Antiaircraft_Defense_System"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/district"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Does Lousana lie at the end of Alberta Highway 42?",
    "SerialNumber": "1139",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alberta_Highway_42> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Lousana>  . }",
    "entity mapping": [
      {
        "label": "Highway 42",
        "uri": "http://dbpedia.org/resource/Alberta_Highway_42"
      },
      {
        "label": "Lousana",
        "uri": "http://dbpedia.org/resource/Lousana"
      }
    ],
    "id": "26729aff756e4638a9b104c39f66ba59",
    "predicate mapping": [
      {
        "label": "end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "Give me a count of movies whose producer is Larry J. Franco?",
    "SerialNumber": "1144",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Larry_J._Franco>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Larry J. Franco",
        "uri": "http://dbpedia.org/resource/Larry_J._Franco"
      }
    ],
    "id": "9e0cf38ea6bf48b18ba968d51da06694",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who authored the works published in the Jump Square Magazine?",
    "SerialNumber": "1145",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Jump_Square> . ?x <http://dbpedia.org/property/author> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jump Square",
        "uri": "http://dbpedia.org/resource/Jump_Square"
      }
    ],
    "id": "847f6bf7556844018c82cace3485a7a9",
    "predicate mapping": [
      {
        "label": "Magazine",
        "uri": "http://dbpedia.org/property/magazine"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "Name the partners of Kelly Brook?",
    "SerialNumber": "1146",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kelly_Brook> <http://dbpedia.org/ontology/partner> ?uri } ",
    "entity mapping": [
      {
        "label": "Kelly Brook",
        "uri": "http://dbpedia.org/resource/Kelly_Brook"
      }
    ],
    "id": "c6210ff5ca7d44fd8d63a4a8c291e777",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner"
      }
    ]
  },
  {
    "question": "What is the TV Show whose theme is composed by someone signed up with Prawn Song Records?",
    "SerialNumber": "1147",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Prawn_Song_Records> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Prawn Song Records",
        "uri": "http://dbpedia.org/resource/Prawn_Song_Records"
      }
    ],
    "id": "9303edfb0af843e094e5273e975f604e",
    "predicate mapping": [
      {
        "label": "records",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Count the  total number of mammals whose phylum is Chordate and order (taxonomy) is Diprotodontia?",
    "SerialNumber": "1149",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate> . ?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> } ",
    "entity mapping": [
      {
        "label": "Chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      },
      {
        "label": "Diprotodontia",
        "uri": "http://dbpedia.org/resource/Diprotodontia"
      }
    ],
    "id": "d1caae4b8c75454d93e63dad304d42b9",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum"
      },
      {
        "label": "order (taxonomy)",
        "uri": "http://dbpedia.org/ontology/order"
      }
    ]
  },
  {
    "question": "What is the location town of First Church of Christ, Scientist (Pittsburgh) ?",
    "SerialNumber": "1152",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)> <http://dbpedia.org/property/locationTown> ?uri } ",
    "entity mapping": [
      {
        "label": "First Church of Christ, Scientist (Pittsburgh)",
        "uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)"
      }
    ],
    "id": "1b2911efce6c47eca4f936300c9bb041",
    "predicate mapping": [
      {
        "label": "location town",
        "uri": "http://dbpedia.org/property/locationTown"
      }
    ]
  },
  {
    "question": "Whose commanders are Colin Powell and Jaber Al-Ahmad Al-Sabah?",
    "SerialNumber": "1153",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah> . }",
    "entity mapping": [
      {
        "label": "Colin Powell",
        "uri": "http://dbpedia.org/resource/Colin_Powell"
      },
      {
        "label": "Jaber Al-Ahmad Al-Sabah",
        "uri": "http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah"
      }
    ],
    "id": "fcf7d180e4f849d884627ce282a7d659",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      }
    ]
  },
  {
    "question": "Who is the person whose home town is Fairmount, Indiana?",
    "SerialNumber": "1155",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Fairmount,_Indiana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Fairmount, Indiana",
        "uri": "http://dbpedia.org/resource/Fairmount,_Indiana"
      }
    ],
    "id": "9986303e97774cd7a0eb26d611ebfb8c",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Is George Lucas the cinematographer of 6-18-67?",
    "SerialNumber": "1157",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/6-18-67> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/George_Lucas> }",
    "entity mapping": [
      {
        "label": "6-18-67",
        "uri": "http://dbpedia.org/resource/6-18-67"
      },
      {
        "label": "George Lucas",
        "uri": "http://dbpedia.org/resource/George_Lucas"
      }
    ],
    "id": "e79c464a0faa4544b7317d38d2bc4f10",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography"
      }
    ]
  },
  {
    "question": "List the shows whose company\u0027s successor is Amblin Television.",
    "SerialNumber": "1158",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Amblin_Television> . ?uri <http://dbpedia.org/ontology/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Amblin Television",
        "uri": "http://dbpedia.org/resource/Amblin_Television"
      }
    ],
    "id": "cae3487d42164d05933fe21a244679b0",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "television.",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Count the total number of battles fought by the military people which fought in Levant ?",
    "SerialNumber": "1159",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Levant> . ?x <http://dbpedia.org/property/battles> ?uri }",
    "entity mapping": [
      {
        "label": "Levant",
        "uri": "http://dbpedia.org/resource/Levant"
      }
    ],
    "id": "3d79316015644677b50c9a9187864e97",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Which genre of books does the writer of The Many Hands write?",
    "SerialNumber": "1162",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Many_Hands> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Many Hands",
        "uri": "http://dbpedia.org/resource/The_Many_Hands"
      }
    ],
    "id": "e0d5791e431e4dfaa75b9ae5077f76f6",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "Laozi has authored which books ?",
    "SerialNumber": "1164",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Laozi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Laozi",
        "uri": "http://dbpedia.org/resource/Laozi"
      }
    ],
    "id": "28cd37f0c056464ba94caaf56714d451",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "What is the television show whose opening theme is Te Deum (Charpentier)?",
    "SerialNumber": "1166",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Te Deum",
        "uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)"
      }
    ],
    "id": "8cb5fda5cb994ed4a6559ef08a02c270",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the river passing through Reading Berkshire and has mouth place at Essex ?",
    "SerialNumber": "1169",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Reading",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire"
      },
      {
        "label": "Essex",
        "uri": "http://dbpedia.org/resource/Essex"
      }
    ],
    "id": "1d9e39c815aa470e98599d9dce9429ac",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many movies music composers are associated with Demis Roussos ?",
    "SerialNumber": "1170",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Demis_Roussos> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Demis Roussos",
        "uri": "http://dbpedia.org/resource/Demis_Roussos"
      }
    ],
    "id": "8799ce61b9644208a9ceb5a2851990ef",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who all play for the Ivory Coast football team?",
    "SerialNumber": "1171",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Ivory_Coast_national_football_team> } ",
    "entity mapping": [
      {
        "label": "Ivory Coast football team",
        "uri": "http://dbpedia.org/resource/Ivory_Coast_national_football_team"
      }
    ],
    "id": "68b47db5171449cab76dfcb3095290e0",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "List the total number of executive producer of TV show which have one of the executiive producer as Steven Moffat ?",
    "SerialNumber": "1174",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat> . ?x <http://dbpedia.org/property/executiveProducer> ?uri }",
    "entity mapping": [
      {
        "label": "Steven Moffat",
        "uri": "http://dbpedia.org/resource/Steven_Moffat"
      }
    ],
    "id": "371d70719856441eaf31d0f5046aa071",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer"
      }
    ]
  },
  {
    "question": "What is the nation of the Major All Stars Season 1 and Pioneer Corporation ?",
    "SerialNumber": "1175",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Major_All_Stars_Season_1> <http://dbpedia.org/property/country> ?uri. <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri . }",
    "entity mapping": [
      {
        "label": "Major All Stars Season 1",
        "uri": "http://dbpedia.org/resource/Major_All_Stars_Season_1"
      },
      {
        "label": "Pioneer Corporation",
        "uri": "http://dbpedia.org/resource/Pioneer_Corporation"
      }
    ],
    "id": "e3aa6561a7cc47cf9a28949ebf5a6af6",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "How many things belong to a division of plant kingdom?",
    "SerialNumber": "1176",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Plant> . ?uri <http://dbpedia.org/ontology/division> ?x  . }",
    "entity mapping": [
      {
        "label": "plant kingdom",
        "uri": "http://dbpedia.org/resource/Plant"
      }
    ],
    "id": "45e3091f10f74546abd072865a7e6b78",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      }
    ]
  },
  {
    "question": "What is the fictional character which has Clan McDuck and Ludwig Von Draken as relatives?",
    "SerialNumber": "1179",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ludwig_Von_Drake> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Clan McDuck",
        "uri": "http://dbpedia.org/resource/Clan_McDuck"
      },
      {
        "label": "Ludwig Von Drake",
        "uri": "http://dbpedia.org/resource/Ludwig_Von_Drake"
      }
    ],
    "id": "a737185e8cc848e3ab56d97876bccbff",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Companies headquartered in Geneva own which TV Shows?",
    "SerialNumber": "1184",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Geneva> . ?uri <http://dbpedia.org/property/company> ?x  . }",
    "entity mapping": [
      {
        "label": "Geneva",
        "uri": "http://dbpedia.org/resource/Geneva"
      }
    ],
    "id": "6abe087917704e3f90ab3bbeb58cc5bb",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/company"
      }
    ]
  },
  {
    "question": "In which city is the sister station of WCSE-LP located ?",
    "SerialNumber": "1186",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WCSE-LP> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/city> ?uri  . }",
    "entity mapping": [
      {
        "label": "WCSE-LP",
        "uri": "http://dbpedia.org/resource/WCSE-LP"
      }
    ],
    "id": "01a41f39bd59458cb89c2df139ccc213",
    "predicate mapping": [
      {
        "label": "station sister",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      }
    ]
  },
  {
    "question": "Where are the homestadiums of the seasons chaired by Merritt Paulson?",
    "SerialNumber": "1189",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "entity mapping": [
      {
        "label": "Merritt Paulson",
        "uri": "http://dbpedia.org/resource/Merritt_Paulson"
      }
    ],
    "id": "b7b9319df8c949b1a7ddcb86ae2879b0",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "homestadiums",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      },
      {
        "label": "seasons",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason"
      }
    ]
  },
  {
    "question": "What is the products of the BBC Multimedia and series of the The Last Resort (Doctor Who)",
    "SerialNumber": "1190",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/property/products> ?uri. <http://dbpedia.org/resource/The_Last_Resort_(Doctor_Who)> <http://dbpedia.org/ontology/series> ?uri} ",
    "entity mapping": [
      {
        "label": "BBC Multimedia",
        "uri": "http://dbpedia.org/resource/BBC_Multimedia"
      },
      {
        "label": "The Last Resort (Doctor Who)",
        "uri": "http://dbpedia.org/resource/The_Last_Resort_(Doctor_Who)"
      }
    ],
    "id": "d4cce931336041649e567c91e9bfb7c6",
    "predicate mapping": [
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "What are the home stadiums of the things Leonid Fedun has been the chairman of?",
    "SerialNumber": "1194",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Leonid_Fedun> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "entity mapping": [
      {
        "label": "Leonid Fedun",
        "uri": "http://dbpedia.org/resource/Leonid_Fedun"
      }
    ],
    "id": "6e2a9956638d4d918c8bc965f66fb09a",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      }
    ]
  },
  {
    "question": "For which team does hunter pence play for?",
    "SerialNumber": "1195",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hunter_Pence> <http://dbpedia.org/ontology/team> ?uri } ",
    "entity mapping": [
      {
        "label": "hunter pence",
        "uri": "http://dbpedia.org/resource/Hunter_Pence"
      }
    ],
    "id": "a82ecf0242f748acbf844b9c3181614a",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "How many have former teams as Indianapolis Colts and Carolina Panthers?",
    "SerialNumber": "1196",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers>} ",
    "entity mapping": [
      {
        "label": "Indianapolis Colts",
        "uri": "http://dbpedia.org/resource/Indianapolis_Colts"
      },
      {
        "label": "Carolina Panthers",
        "uri": "http://dbpedia.org/resource/Carolina_Panthers"
      }
    ],
    "id": "113d32b939f643a3ba85439d8bf95a1f",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "Of what all has David Ian Salter been an editor of?",
    "SerialNumber": "1197",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/David_Ian_Salter> } ",
    "entity mapping": [
      {
        "label": "David Ian Salter",
        "uri": "http://dbpedia.org/resource/David_Ian_Salter"
      }
    ],
    "id": "5932978b97be44fd926095c0dfaad785",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing"
      }
    ]
  },
  {
    "question": "Which  governing body of the Oahu Railway and Land Company is also the military branch of the Jimmy Quillen ?",
    "SerialNumber": "1202",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri. <http://dbpedia.org/resource/Jimmy_Quillen> <http://dbpedia.org/ontology/militaryBranch> ?uri} ",
    "entity mapping": [
      {
        "label": "Oahu Railway and Land Company",
        "uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company"
      },
      {
        "label": "Jimmy Quillen",
        "uri": "http://dbpedia.org/resource/Jimmy_Quillen"
      }
    ],
    "id": "ebc8f78170a84f1b82725c6d20206319",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "What is the place of death of the royalties one of whose parents was Adam Ludwik Czartoryski?",
    "SerialNumber": "1205",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Adam_Ludwik_Czartoryski> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Adam Ludwik Czartoryski",
        "uri": "http://dbpedia.org/resource/Adam_Ludwik_Czartoryski"
      }
    ],
    "id": "2e77394fb30c488ba0cb3132da2b5e95",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "place death",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "royalties",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Name the fictional character whose voice\u0027s animator is Hardie Gramatky?",
    "SerialNumber": "1206",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/animator> <http://dbpedia.org/resource/Hardie_Gramatky> . ?uri <http://dbpedia.org/ontology/voice> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Hardie Gramatky",
        "uri": "http://dbpedia.org/resource/Hardie_Gramatky"
      }
    ],
    "id": "dcb720202a9b4b1bac3951450a734b3a",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What actor starred in Splash and is married to Rita Wilson?",
    "SerialNumber": "1207",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Splash_(film)> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Rita_Wilson> <http://dbpedia.org/property/spouse> ?uri . }",
    "entity mapping": [
      {
        "label": "Splash",
        "uri": "http://dbpedia.org/resource/Splash_(film)"
      },
      {
        "label": "Rita Wilson",
        "uri": "http://dbpedia.org/resource/Rita_Wilson"
      }
    ],
    "id": "be6257ece9e546bc821b110aed45c1b1",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse"
      }
    ]
  },
  {
    "question": "What are the movies whose distributor\u0027s headquarters is New York?",
    "SerialNumber": "1210",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "New York",
        "uri": "http://dbpedia.org/resource/New_York"
      }
    ],
    "id": "d8d554549f9949d5833e62ee180939b7",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the religion of the political party which is an international party of Hamas?",
    "SerialNumber": "1212",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hamas> <http://dbpedia.org/property/international> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "entity mapping": [
      {
        "label": "Hamas",
        "uri": "http://dbpedia.org/resource/Hamas"
      }
    ],
    "id": "f6f5d9f089ee4019abd4ce4fb8a6235e",
    "predicate mapping": [
      {
        "label": "international",
        "uri": "http://dbpedia.org/property/international"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/PoliticalParty"
      }
    ]
  },
  {
    "question": "Which bacteria\u0027s taxonomic class is Bacilli?",
    "SerialNumber": "1215",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Bacilli>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "entity mapping": [
      {
        "label": "Bacilli",
        "uri": "http://dbpedia.org/resource/Bacilli"
      }
    ],
    "id": "8b32454f2b2e4618a018054db9635e5b",
    "predicate mapping": [
      {
        "label": "class",
        "uri": "http://dbpedia.org/ontology/class"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria"
      }
    ]
  },
  {
    "question": "Who was the prime minister of Victor Hope, 2nd Marquess of Linlithgow and also the editor of British Gazette ?",
    "SerialNumber": "1216",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri} ",
    "entity mapping": [
      {
        "label": "Victor Hope",
        "uri": "http://dbpedia.org/resource/Victor_Hope,_2nd_Marquess_of_Linlithgow"
      },
      {
        "label": "British Gazette",
        "uri": "http://dbpedia.org/resource/British_Gazette"
      }
    ],
    "id": "4b8c7926f42b4c87ab22e1d6116e4c50",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor"
      }
    ]
  },
  {
    "question": "Is the magnolia place of the greek revival architectural style?",
    "SerialNumber": "1217",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Magnolia_Place> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Greek_Revival_architecture> }",
    "entity mapping": [
      {
        "label": "magnolia place",
        "uri": "http://dbpedia.org/resource/Magnolia_Place"
      },
      {
        "label": "greek revival",
        "uri": "http://dbpedia.org/resource/Greek_Revival_architecture"
      }
    ],
    "id": "0f11a466b24a499382890661bf1fc5ef",
    "predicate mapping": [
      {
        "label": "architectural style",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      }
    ]
  },
  {
    "question": "Name the fictional character whose relative are Duck family and Clan McDuck?",
    "SerialNumber": "1218",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Duck_family_(Disney)> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Duck family",
        "uri": "http://dbpedia.org/resource/Duck_family_(Disney)"
      },
      {
        "label": "Clan McDuck",
        "uri": "http://dbpedia.org/resource/Clan_McDuck"
      }
    ],
    "id": "6f8d3265d2f34fe2823b67ae38748882",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Name the movies distributed by Warner Bros. and directed by Ridley Scott ?",
    "SerialNumber": "1220",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Warner Bros.",
        "uri": "http://dbpedia.org/resource/Warner_Bros."
      },
      {
        "label": "Ridley Scott",
        "uri": "http://dbpedia.org/resource/Ridley_Scott"
      }
    ],
    "id": "57e62ad01fb74f208589fefbb58693e3",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who is the publisher of the comic, one of whose authors is Kentaro Takekuma ?",
    "SerialNumber": "1222",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Kentaro_Takekuma> . ?x <http://dbpedia.org/property/publisher> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comic>}",
    "entity mapping": [
      {
        "label": "Kentaro Takekuma",
        "uri": "http://dbpedia.org/resource/Kentaro_Takekuma"
      }
    ],
    "id": "56360270525d4a54a2201b9a4d1f5f55",
    "predicate mapping": [
      {
        "label": "authors",
        "uri": "http://dbpedia.org/property/writers"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "comic",
        "uri": "http://dbpedia.org/ontology/Comic"
      }
    ]
  },
  {
    "question": "What was the result of Operation Autumn Clouds ?",
    "SerialNumber": "1223",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Operation_Autumn_Clouds> <http://dbpedia.org/property/result> ?uri } ",
    "entity mapping": [
      {
        "label": "Operation Autumn Clouds",
        "uri": "http://dbpedia.org/resource/Operation_Autumn_Clouds"
      }
    ],
    "id": "1c72a1337f9d4e5aabf86018b6b52340",
    "predicate mapping": [
      {
        "label": "result",
        "uri": "http://dbpedia.org/property/result"
      }
    ]
  },
  {
    "question": "List the significant building of the architect who also designed  Kiev?",
    "SerialNumber": "1224",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Kiev> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}",
    "entity mapping": [
      {
        "label": "Kiev",
        "uri": "http://dbpedia.org/resource/Kiev"
      }
    ],
    "id": "9de9adf4a6e94b7a8958262626c02714",
    "predicate mapping": [
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding"
      },
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/Architect"
      }
    ]
  },
  {
    "question": "Was George Washington on the rank of general?",
    "SerialNumber": "1225",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/George_Washington> <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/General_(United_States)> }",
    "entity mapping": [
      {
        "label": "George Washington",
        "uri": "http://dbpedia.org/resource/George_Washington"
      },
      {
        "label": "general",
        "uri": "http://dbpedia.org/resource/General_(United_States)"
      }
    ],
    "id": "246f18a55ab64b0fbb6478194175418d",
    "predicate mapping": [
      {
        "label": "rank",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      }
    ]
  },
  {
    "question": "What softwares were created by Apple Productivity Experience Group ?",
    "SerialNumber": "1226",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri } ",
    "entity mapping": [
      {
        "label": "Apple Productivity Experience Group",
        "uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group"
      }
    ],
    "id": "68516929d5024193a4b6db18b81526ba",
    "predicate mapping": [
      {
        "label": "Product",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "Count the number of judges who\u0027ve come on CTV network shows.",
    "SerialNumber": "1227",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/CTV_Television_Network> . ?x <http://dbpedia.org/property/judges> ?uri  . }",
    "entity mapping": [
      {
        "label": "CTV",
        "uri": "http://dbpedia.org/resource/CTV_Television_Network"
      }
    ],
    "id": "f43f2072568f44aaa9450a64e62ca3da",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges"
      }
    ]
  },
  {
    "question": "What is the mountain whose parent mountain peak is Nevado de Toluca?",
    "SerialNumber": "1230",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Nevado de Toluca",
        "uri": "http://dbpedia.org/resource/Nevado_de_Toluca"
      }
    ],
    "id": "d33ef66c27f14eab8306e08bdf8b8973",
    "predicate mapping": [
      {
        "label": "parent mountain peak",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "What is the Recorded of the Kaptaan is also the headquarters of the Orient News ?",
    "SerialNumber": "1232",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kaptaan> <http://dbpedia.org/property/recorded> ?uri. <http://dbpedia.org/resource/Orient_News> <http://dbpedia.org/property/headquarters> ?uri} ",
    "entity mapping": [
      {
        "label": "Kaptaan",
        "uri": "http://dbpedia.org/resource/Kaptaan"
      },
      {
        "label": "Orient News",
        "uri": "http://dbpedia.org/resource/Orient_News"
      }
    ],
    "id": "3a8332895e0e42bf98c79235b4002de4",
    "predicate mapping": [
      {
        "label": "Recorded",
        "uri": "http://dbpedia.org/property/recorded"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "Is Gaza Strip the result of Operation Autumn Clouds?",
    "SerialNumber": "1233",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Operation_Autumn_Clouds> <http://dbpedia.org/property/result> <http://dbpedia.org/resource/Gaza_Strip> }",
    "entity mapping": [
      {
        "label": "Operation Autumn Clouds",
        "uri": "http://dbpedia.org/resource/Operation_Autumn_Clouds"
      },
      {
        "label": "Gaza Strip",
        "uri": "http://dbpedia.org/resource/Gaza_Strip"
      }
    ],
    "id": "4d97dbf2259544de93801dc834e88eb7",
    "predicate mapping": [
      {
        "label": "result",
        "uri": "http://dbpedia.org/property/result"
      }
    ]
  },
  {
    "question": "Name the office holder whose predecessor is Henry E. Catto, Jr. and successor is Adrian A. Basora?",
    "SerialNumber": "1234",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Henry E. Catto, Jr.",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr."
      },
      {
        "label": "Adrian A. Basora",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora"
      }
    ],
    "id": "8937f9f398fb4c4091e5b258bed5abf1",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "?What are the airline hubs of Cascade Airways",
    "SerialNumber": "1235",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/property/hubs> ?uri } ",
    "entity mapping": [
      {
        "label": "Cascade Airways",
        "uri": "http://dbpedia.org/resource/Cascade_Airways"
      }
    ],
    "id": "606ecd9c542e4d1d8cd5322a41818757",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs"
      }
    ]
  },
  {
    "question": "Name the common musical band of Take Me There and Tonight\u0027s the Night ?",
    "SerialNumber": "1239",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)> <http://dbpedia.org/ontology/musicalBand> ?uri. <http://dbpedia.org/resource/Tonight\u0027s_the_Night_(Blackstreet_song)> <http://dbpedia.org/ontology/musicalBand> ?uri . }",
    "entity mapping": [
      {
        "label": "Take Me There",
        "uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)"
      },
      {
        "label": "Tonight\u0027s the Night",
        "uri": "http://dbpedia.org/resource/Tonight\u0027s_the_Night_(Blackstreet_song)"
      }
    ],
    "id": "eec96c7f869747149720de05e392503f",
    "predicate mapping": [
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      },
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "What is the university whose campus are Indiana and Iowa?",
    "SerialNumber": "1241",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Indiana",
        "uri": "http://dbpedia.org/resource/Indiana"
      },
      {
        "label": "Iowa",
        "uri": "http://dbpedia.org/resource/Iowa"
      }
    ],
    "id": "1bcf8001ee594f30bb75b84ca66dabab",
    "predicate mapping": [
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "To which political party does the writer of In the Bazaars of Hyderabad belong?",
    "SerialNumber": "1242",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/In_the_Bazaars_of_Hyderabad> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "In the Bazaars of Hyderabad",
        "uri": "http://dbpedia.org/resource/In_the_Bazaars_of_Hyderabad"
      }
    ],
    "id": "dbc169a2e4a34f00b36ca8be031fe8f5",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "List the other members of the band of which Juelz Santana is a part?",
    "SerialNumber": "1243",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Juelz_Santana> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Juelz Santana",
        "uri": "http://dbpedia.org/resource/Juelz_Santana"
      }
    ],
    "id": "292a555f92794024a9334e9248fd2c1a",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "What is the style of architecture of Pontiac Building ?",
    "SerialNumber": "1245",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pontiac_Building> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ",
    "entity mapping": [
      {
        "label": "Pontiac Building",
        "uri": "http://dbpedia.org/resource/Pontiac_Building"
      }
    ],
    "id": "0373e167503941919cb83707358aee72",
    "predicate mapping": [
      {
        "label": "style of architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      }
    ]
  },
  {
    "question": "Name the constituency of  Jonas Gahr Stre ?",
    "SerialNumber": "1247",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonas_Gahr_Støre> <http://dbpedia.org/property/constituency> ?uri } ",
    "entity mapping": [
      {
        "label": "Jonas Gahr Stre",
        "uri": "http://dbpedia.org/resource/Jonas_Gahr_Støre"
      }
    ],
    "id": "a5012e9aba5b40bbbc06155442c8940c",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      }
    ]
  },
  {
    "question": "Name the directors of Lennon Legend: The Very Best of John Lennon (DVD) ?",
    "SerialNumber": "1249",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)> <http://dbpedia.org/ontology/director> ?uri } ",
    "entity mapping": [
      {
        "label": "Lennon Legend: The Very Best of John Lennon (DVD)",
        "uri": "http://dbpedia.org/resource/Lennon_Legend:_The_Very_Best_of_John_Lennon_(DVD)"
      }
    ],
    "id": "6689a88cf3af48998efaa96b5466f7cb",
    "predicate mapping": [
      {
        "label": "directors",
        "uri": "http://dbpedia.org/ontology/director"
      }
    ]
  },
  {
    "question": "For how many other teams have the members of Atlant Moscow Oblast played?",
    "SerialNumber": "1251",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/playedFor> <http://dbpedia.org/resource/Atlant_Moscow_Oblast> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
    "entity mapping": [
      {
        "label": "Atlant Moscow Oblast",
        "uri": "http://dbpedia.org/resource/Atlant_Moscow_Oblast"
      }
    ],
    "id": "f96d57842d93417d8597a69c57604dd8",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "What are some products of the company whose parent is BBC?",
    "SerialNumber": "1252",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/BBC> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "BBC",
        "uri": "http://dbpedia.org/resource/BBC"
      }
    ],
    "id": "dfc6f1364b4f43ac8569c33167e51bee",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "How many sports are played in maharashtran schools?",
    "SerialNumber": "1254",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}",
    "entity mapping": [
      {
        "label": "maharashtra",
        "uri": "http://dbpedia.org/resource/Maharashtra"
      }
    ],
    "id": "e8ea9501be9241a191a46ec67d21f79b",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/Sport"
      }
    ]
  },
  {
    "question": "Whose famous works have been illustrated by E W Kemble?",
    "SerialNumber": "1256",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/E._W._Kemble> . ?uri <http://dbpedia.org/ontology/notableWork> ?x  . }",
    "entity mapping": [
      {
        "label": "E W Kemble",
        "uri": "http://dbpedia.org/resource/E._W._Kemble"
      }
    ],
    "id": "7c0d1f9a0e5e430ea5c1edbef2007075",
    "predicate mapping": [
      {
        "label": "illustrated by",
        "uri": "http://dbpedia.org/property/illustrator"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "Who is the owner of the South end ?",
    "SerialNumber": "1257",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_South_End> <http://dbpedia.org/property/owners> ?uri } ",
    "entity mapping": [
      {
        "label": "the South end",
        "uri": "http://dbpedia.org/resource/The_South_End"
      }
    ],
    "id": "3180262923484726bbeebc7b398144d1",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owners"
      }
    ]
  },
  {
    "question": "List down the commanders of Battle of Fort stephenson ?",
    "SerialNumber": "1258",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri } ",
    "entity mapping": [
      {
        "label": "Battle of Fort stephenson",
        "uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson"
      }
    ],
    "id": "6b763993596b4edab96dd9ec9211ba78",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      }
    ]
  },
  {
    "question": "Which cities of the American Mediterranean Sea has Nickname Entronque de Herradura?",
    "SerialNumber": "1259",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Entronque_de_Herradura> <http://dbpedia.org/property/nickname> ?uri} ",
    "entity mapping": [
      {
        "label": "American Mediterranean Sea",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea"
      },
      {
        "label": "Entronque de Herradura",
        "uri": "http://dbpedia.org/resource/Entronque_de_Herradura"
      }
    ],
    "id": "ba7f17bb21dc46b9979f8bffb96711ed",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "Nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "What is the municipality of the Brown\u0027s Corners, Toronto and also the  place of birth of the George Karrys",
    "SerialNumber": "1260",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brown\u0027s_Corners,_Toronto> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/George_Karrys> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Brown\u0027s Corners, Toronto",
        "uri": "http://dbpedia.org/resource/Brown\u0027s_Corners,_Toronto"
      },
      {
        "label": "George Karrys",
        "uri": "http://dbpedia.org/resource/George_Karrys"
      }
    ],
    "id": "7e627205a122439da56687c80907b67e",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Did taylor swift do the theme song of The Farmer Wants a Wife?",
    "SerialNumber": "1265",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Farmer_Wants_a_Wife_(Australian_TV_series)> <http://dbpedia.org/property/opentheme> <http://dbpedia.org/resource/Taylor_Swift> }",
    "entity mapping": [
      {
        "label": "The Farmer Wants a Wife",
        "uri": "http://dbpedia.org/resource/The_Farmer_Wants_a_Wife_(Australian_TV_series)"
      },
      {
        "label": "taylor swift",
        "uri": "http://dbpedia.org/resource/Taylor_Swift"
      }
    ],
    "id": "d5b9d26028c14c77af021dfcc3cc13c2",
    "predicate mapping": [
      {
        "label": "theme",
        "uri": "http://dbpedia.org/property/opentheme"
      }
    ]
  },
  {
    "question": "Where does the Kentucky cycle take place?",
    "SerialNumber": "1266",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Kentucky_Cycle> <http://dbpedia.org/property/place> ?uri } ",
    "entity mapping": [
      {
        "label": "the Kentucky cycle",
        "uri": "http://dbpedia.org/resource/The_Kentucky_Cycle"
      }
    ],
    "id": "2c6285f3f7ad4840802f57a3ec025f80",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place"
      }
    ]
  },
  {
    "question": "What currencies have been prevalent in the country whose national anthem is La Marseillaise?",
    "SerialNumber": "1268",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/La_Marseillaise> . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
    "entity mapping": [
      {
        "label": "La Marseillaise",
        "uri": "http://dbpedia.org/resource/La_Marseillaise"
      }
    ],
    "id": "a0e58ea11b974c7a85d86e9f454b77c8",
    "predicate mapping": [
      {
        "label": "national anthem",
        "uri": "http://dbpedia.org/ontology/anthem"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "Name the college of Jon Curran ?",
    "SerialNumber": "1269",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Curran> <http://dbpedia.org/property/college> ?uri } ",
    "entity mapping": [
      {
        "label": "Jon Curran",
        "uri": "http://dbpedia.org/resource/Jon_Curran"
      }
    ],
    "id": "b698642c0c4944baad539ca67412e78a",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college"
      }
    ]
  },
  {
    "question": "Which writer of A streetcar Named Desire is also the author of The Catastrophe of Success ?",
    "SerialNumber": "1275",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/The_Catastrophe_of_Success> <http://dbpedia.org/ontology/author> ?uri} ",
    "entity mapping": [
      {
        "label": "A streetcar Named Desire",
        "uri": "http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)"
      },
      {
        "label": "The Catastrophe of Success",
        "uri": "http://dbpedia.org/resource/The_Catastrophe_of_Success"
      }
    ],
    "id": "64cb26ab6c624d9daee385d3e86ed7c4",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "What state was Cyrus Mann born in, and has the famous Downriver ?",
    "SerialNumber": "1277",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Downriver> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Cyrus_Mann> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "Downriver",
        "uri": "http://dbpedia.org/resource/Downriver"
      },
      {
        "label": "Cyrus Mann",
        "uri": "http://dbpedia.org/resource/Cyrus_Mann"
      }
    ],
    "id": "9ba55398005e4e5c9354a2f73d3f4113",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Who is the appointer of William Cushing ?",
    "SerialNumber": "1278",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri } ",
    "entity mapping": [
      {
        "label": "William Cushing",
        "uri": "http://dbpedia.org/resource/William_Cushing"
      }
    ],
    "id": "d585bb851bb2430d9893a3976b2310bd",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/ontology/appointer"
      }
    ]
  },
  {
    "question": "Where is the origin of Filbert\u0027s Old Time Root Beer ?",
    "SerialNumber": "1279",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Filbert\u0027s_Old_Time_Root_Beer> <http://dbpedia.org/ontology/origin> ?uri } ",
    "entity mapping": [
      {
        "label": "Filbert\u0027s Old Time Root Beer",
        "uri": "http://dbpedia.org/resource/Filbert\u0027s_Old_Time_Root_Beer"
      }
    ],
    "id": "331c4b8c9a8a40a78ec70c332af7cf77",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "Name the musical band of Written in the Stars ?",
    "SerialNumber": "1281",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Written_in_the_Stars_(Elton_John_and_LeAnn_Rimes_song)> <http://dbpedia.org/ontology/musicalBand> ?uri } ",
    "entity mapping": [
      {
        "label": "Written in the Stars",
        "uri": "http://dbpedia.org/resource/Written_in_the_Stars_(Elton_John_and_LeAnn_Rimes_song)"
      }
    ],
    "id": "f82d0e347f514ec1bcb41a22922ce6aa",
    "predicate mapping": [
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "Count the affiliations of International Union of Anarchists?",
    "SerialNumber": "1283",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/International_Union_of_Anarchists> <http://dbpedia.org/property/affiliation> ?uri  . }",
    "entity mapping": [
      {
        "label": "International Union of Anarchists",
        "uri": "http://dbpedia.org/resource/International_Union_of_Anarchists"
      }
    ],
    "id": "e18fd4075a914d4a8455c72375bdd4b9",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "Hugh Hefner is editor of which magazine?",
    "SerialNumber": "1284",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Hugh_Hefner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Hugh Hefner",
        "uri": "http://dbpedia.org/resource/Hugh_Hefner"
      }
    ],
    "id": "965fd3fdc73445e6b1bddc3d141ebb3c",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "Which are the previous broadcast networks of sister channels of WGBC?",
    "SerialNumber": "1285",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WGBC_(DT2)> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri  . }",
    "entity mapping": [
      {
        "label": "WGBC",
        "uri": "http://dbpedia.org/resource/WGBC_(DT2)"
      }
    ],
    "id": "3bb69cb3b8634c3689b4846fcbb449cd",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "broadcast",
        "uri": "http://dbpedia.org/ontology/formerBroadcastNetwork"
      }
    ]
  },
  {
    "question": "On which subjects does the author of the novel Thud! delve?",
    "SerialNumber": "1286",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri } ",
    "entity mapping": [
      {
        "label": "Thud!",
        "uri": "http://dbpedia.org/resource/Thud!"
      }
    ],
    "id": "94de863bd4184aa2a7f508889eabee26",
    "predicate mapping": [
      {
        "label": "subjects",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      }
    ]
  },
  {
    "question": "Which awards have been given to the horse who sired Triplicate ?",
    "SerialNumber": "1288",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Triplicate> <http://dbpedia.org/property/sire> ?x . ?x <http://dbpedia.org/ontology/honours> ?uri  . }",
    "entity mapping": [
      {
        "label": "Triplicate",
        "uri": "http://dbpedia.org/resource/Triplicate"
      }
    ],
    "id": "d3b2ba7427da4cfba3470565de8c8c64",
    "predicate mapping": [
      {
        "label": "sire",
        "uri": "http://dbpedia.org/property/sire"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours"
      }
    ]
  },
  {
    "question": "Who is the american football player whose highschool is Ringgold High School (Pennsylvania)?",
    "SerialNumber": "1289",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/Ringgold_High_School_(Pennsylvania)> } ",
    "entity mapping": [
      {
        "label": "Ringgold High School",
        "uri": "http://dbpedia.org/resource/Ringgold_High_School_(Pennsylvania)"
      }
    ],
    "id": "24e52abfafbb43d491744511cbfbfb38",
    "predicate mapping": [
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/ontology/highschool"
      }
    ]
  },
  {
    "question": "List books authored by Miguel de Cervantes and published by Francisco de Robles ?",
    "SerialNumber": "1291",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Miguel_de_Cervantes> . ?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Francisco_de_Robles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Miguel de Cervantes",
        "uri": "http://dbpedia.org/resource/Miguel_de_Cervantes"
      },
      {
        "label": "Francisco de Robles",
        "uri": "http://dbpedia.org/resource/Francisco_de_Robles"
      }
    ],
    "id": "dbb28edd6b1a49f384baf3d63c64a0b3",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Is Wahoo! the previous work of Honeybuns?",
    "SerialNumber": "1293",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Honeybuns> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Wahoo!> }",
    "entity mapping": [
      {
        "label": "Honeybuns",
        "uri": "http://dbpedia.org/resource/Honeybuns"
      },
      {
        "label": "Wahoo!",
        "uri": "http://dbpedia.org/resource/Wahoo!"
      }
    ],
    "id": "e4fd9eca450f4cb2ba2b2bc4f87102ad",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork"
      }
    ]
  },
  {
    "question": "List the awards given to the race horses bred by Willis Sharpe Kilmer.",
    "SerialNumber": "1294",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/breeder> <http://dbpedia.org/resource/Willis_Sharpe_Kilmer> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
    "entity mapping": [
      {
        "label": "Willis Sharpe Kilmer",
        "uri": "http://dbpedia.org/resource/Willis_Sharpe_Kilmer"
      }
    ],
    "id": "f0e59cb06b254517af079b9825cebc6b",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/ontology/breeder"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours"
      },
      {
        "label": "race horse",
        "uri": "http://dbpedia.org/ontology/RaceHorse"
      }
    ]
  },
  {
    "question": "What is the constituency of the leader of Labour Party (Norway)?",
    "SerialNumber": "1295",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Labour_Party_(Norway)> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/property/constituency> ?uri  . }",
    "entity mapping": [
      {
        "label": "Labour Party (Norway)",
        "uri": "http://dbpedia.org/resource/Labour_Party_(Norway)"
      }
    ],
    "id": "2ba0e19e73f04f15b8858aec5e4e7bd7",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      }
    ]
  },
  {
    "question": "List the tomb of the royalties whose burial place is Little Easton ?",
    "SerialNumber": "1296",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Little_Easton> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Little Easton",
        "uri": "http://dbpedia.org/resource/Little_Easton"
      }
    ],
    "id": "d7c5b09663594b8d9849e4b0a4561068",
    "predicate mapping": [
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "royalties",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "The players born in Bellaire, Ohio have played for which team?",
    "SerialNumber": "1297",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Bellaire,_Ohio> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bellaire, Ohio",
        "uri": "http://dbpedia.org/resource/Bellaire,_Ohio"
      }
    ],
    "id": "0a6db2441bd741369578947633c0ff1f",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "What are the television shows whose voices is given by  Mona Marshall?",
    "SerialNumber": "1299",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Mona Marshall",
        "uri": "http://dbpedia.org/resource/Mona_Marshall"
      }
    ],
    "id": "715cd1e1ff8d43868e231fe93c6699c9",
    "predicate mapping": [
      {
        "label": "voices",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is Frontaccounting licensed under GNU license?",
    "SerialNumber": "1302",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/GNU> }",
    "entity mapping": [
      {
        "label": "Frontaccounting",
        "uri": "http://dbpedia.org/resource/Frontaccounting"
      },
      {
        "label": "GNU",
        "uri": "http://dbpedia.org/resource/GNU"
      }
    ],
    "id": "479e2179c3784c05b660e355e8236391",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license"
      }
    ]
  },
  {
    "question": "What sports are played by school which owns Fr. Agnel Stadium ?",
    "SerialNumber": "1305",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Fr._Agnel_Stadium> <http://dbpedia.org/property/owner> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Fr. Agnel Stadium",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium"
      }
    ],
    "id": "f6c5c6f3ecd14071b9bfc93098fb994e",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Which things have been made by artists who died in Midhurst?",
    "SerialNumber": "1306",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Midhurst> . ?uri <http://dbpedia.org/ontology/creator> ?x  . }",
    "entity mapping": [
      {
        "label": "Midhurst",
        "uri": "http://dbpedia.org/resource/Midhurst"
      }
    ],
    "id": "b3e252172359437c9a8de2e762ad5ce7",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/creator"
      }
    ]
  },
  {
    "question": "What is the Location of the Peetz Table Wind Energy Center which is also the state of Ben Nighthorse Campbell ?",
    "SerialNumber": "1307",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Ben_Nighthorse_Campbell> <http://dbpedia.org/property/state> ?uri} ",
    "entity mapping": [
      {
        "label": "Peetz Table Wind Energy Center",
        "uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center"
      },
      {
        "label": "Ben Nighthorse Campbell",
        "uri": "http://dbpedia.org/resource/Ben_Nighthorse_Campbell"
      }
    ],
    "id": "5b3a93c4212a454bb5186485623329c7",
    "predicate mapping": [
      {
        "label": "Location",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "What is the citizenship of the Sarah Kazemy and land of the Cervelle de canut",
    "SerialNumber": "1308",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sarah_Kazemy> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Cervelle_de_canut> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Sarah Kazemy",
        "uri": "http://dbpedia.org/resource/Sarah_Kazemy"
      },
      {
        "label": "Cervelle de canut",
        "uri": "http://dbpedia.org/resource/Cervelle_de_canut"
      }
    ],
    "id": "3b8e4f3b8b154b09b5afa7f034e6aa1f",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship"
      },
      {
        "label": "land",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "From which team did Marv McFadden played ?",
    "SerialNumber": "1309",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> ?uri } ",
    "entity mapping": [
      {
        "label": "Marv McFadden",
        "uri": "http://dbpedia.org/resource/Marv_McFadden"
      }
    ],
    "id": "e2c86da7511a495c8e6a199690371c48",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/pastteams"
      }
    ]
  },
  {
    "question": "What is the draft team of Bob MacMillan ?",
    "SerialNumber": "1314",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Bob MacMillan",
        "uri": "http://dbpedia.org/resource/Bob_MacMillan"
      }
    ],
    "id": "d527f6cf049c4bd29df7ab1f81a69de8",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      }
    ]
  },
  {
    "question": "How many other home stadium are there of the soccer club whose home stadium is Luzhniki Stadium ?",
    "SerialNumber": "1315",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Luzhniki_Stadium> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri }",
    "entity mapping": [
      {
        "label": "Luzhniki Stadium",
        "uri": "http://dbpedia.org/resource/Luzhniki_Stadium"
      }
    ],
    "id": "0261cb6df27c42bea175c81ec1b62f5c",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      }
    ]
  },
  {
    "question": "List the races of Fergie Sutherland?",
    "SerialNumber": "1317",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri } ",
    "entity mapping": [
      {
        "label": "Fergie Sutherland",
        "uri": "http://dbpedia.org/resource/Fergie_Sutherland"
      }
    ],
    "id": "122b26f0029248c683b600712a408383",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      }
    ]
  },
  {
    "question": "Where is the  assembly of Caterpillar 797 ?",
    "SerialNumber": "1318",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Caterpillar_797> <http://dbpedia.org/ontology/assembly> ?uri } ",
    "entity mapping": [
      {
        "label": "Caterpillar 797 ",
        "uri": "http://dbpedia.org/resource/Caterpillar_797"
      }
    ],
    "id": "619c994eb3cd4bbfb7925d970b1f3ad9",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly"
      }
    ]
  },
  {
    "question": "Which things are Breann McGregor known for ?",
    "SerialNumber": "1320",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri } ",
    "entity mapping": [
      {
        "label": "Breann McGregor",
        "uri": "http://dbpedia.org/resource/Breann_McGregor"
      }
    ],
    "id": "4423f1c8b04e4c438c50790d4c60c722",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "Who is the Pole driver of 1992 Canadian Grand Prix ?",
    "SerialNumber": "1321",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1992_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ",
    "entity mapping": [
      {
        "label": "1992 Canadian Grand Prix",
        "uri": "http://dbpedia.org/resource/1992_Canadian_Grand_Prix"
      }
    ],
    "id": "ec13e17ac45d4c1a8e774331d113e8cd",
    "predicate mapping": [
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver"
      }
    ]
  },
  {
    "question": "Sentinel High School  team is known as ?",
    "SerialNumber": "1323",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sentinel_High_School> <http://dbpedia.org/property/teamName> ?uri } ",
    "entity mapping": [
      {
        "label": "Sentinel High School",
        "uri": "http://dbpedia.org/resource/Sentinel_High_School"
      }
    ],
    "id": "962450920a5d4789866bb953d15deaa4",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/teamName"
      }
    ]
  },
  {
    "question": "How many shows belong to the networks one of whose sister station is BBC News?",
    "SerialNumber": "1328",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_News_(TV_channel)> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC News",
        "uri": "http://dbpedia.org/resource/BBC_News_(TV_channel)"
      }
    ],
    "id": "43d606c2a68b425aa232aff1c3428a37",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterNames"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are some shareholders of the bridge maintained by the Massachusetts department of transportation?",
    "SerialNumber": "1329",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/maintainedBy> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Massachusetts department of transportation",
        "uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation"
      }
    ],
    "id": "a29f93a5bc72413887c3844c5ebf8e76",
    "predicate mapping": [
      {
        "label": "maintained by",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      },
      {
        "label": "shareholders",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Which creator of Theme Time Radio Hour has also given the  musical score of the The Times They Are a-Changin\u0027 (musical)?",
    "SerialNumber": "1331",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri. <http://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri} ",
    "entity mapping": [
      {
        "label": "Theme Time Radio Hour",
        "uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour"
      },
      {
        "label": "The Times They Are a-Changin\u0027 (musical)",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin\u0027_(musical)"
      }
    ],
    "id": "abb80d23ef834a749f6d227acc81e758",
    "predicate mapping": [
      {
        "label": "creator",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/musicBy"
      }
    ]
  },
  {
    "question": "Alexander Magleby, a rugby player is alma mater to which university?",
    "SerialNumber": "1332",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexander_Magleby> <http://dbpedia.org/property/university> ?uri } ",
    "entity mapping": [
      {
        "label": "Alexander Magleby",
        "uri": "http://dbpedia.org/resource/Alexander_Magleby"
      }
    ],
    "id": "d2698d17b3fc4da3b3a659d38d722a13",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/property/university"
      }
    ]
  },
  {
    "question": "Among the universities having Gyrfalcon as mascot which have Michelle D. Johnson as superintendent ? ",
    "SerialNumber": "1335",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Michelle_D._Johnson> . ?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Gyrfalcon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Michelle D. Johnson",
        "uri": "http://dbpedia.org/resource/Michelle_D._Johnson"
      },
      {
        "label": "Gyrfalcon",
        "uri": "http://dbpedia.org/resource/Gyrfalcon"
      }
    ],
    "id": "8b493628c6cb47dcaa54dfa91d17f425",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/property/superintendent"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Whose opponents are Ike Clanton and Billy Clanton?",
    "SerialNumber": "1336",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Billy_Clanton> . }",
    "entity mapping": [
      {
        "label": "Ike Clanton",
        "uri": "http://dbpedia.org/resource/Ike_Clanton"
      },
      {
        "label": "Billy Clanton",
        "uri": "http://dbpedia.org/resource/Billy_Clanton"
      }
    ],
    "id": "f155833272af4760ab962b2c4a75ea1f",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      }
    ]
  },
  {
    "question": "To which religion does the commander of South Thailand insurgency belong?",
    "SerialNumber": "1339",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/South_Thailand_insurgency> <http://dbpedia.org/ontology/commander> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "South Thailand insurgency",
        "uri": "http://dbpedia.org/resource/South_Thailand_insurgency"
      }
    ],
    "id": "25d1a97101e943698160921c3f0bb7cc",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What is the parent company of Edsel?",
    "SerialNumber": "1340",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edsel> <http://dbpedia.org/property/parent> ?uri } ",
    "entity mapping": [
      {
        "label": "Edsel",
        "uri": "http://dbpedia.org/resource/Edsel"
      }
    ],
    "id": "7e8d0703ae84488c9069607df8d097d6",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      }
    ]
  },
  {
    "question": "Give me a count of everything owned by the network whose sister name is The CW?",
    "SerialNumber": "1341",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/The_CW> . ?uri <http://dbpedia.org/property/network> ?x  . }",
    "entity mapping": [
      {
        "label": "The CW",
        "uri": "http://dbpedia.org/resource/The_CW"
      }
    ],
    "id": "921e9607ab704a2293e0d3c7a2e6dbe3",
    "predicate mapping": [
      {
        "label": "sister name",
        "uri": "http://dbpedia.org/property/sisterNames"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      }
    ]
  },
  {
    "question": "In which state does the valley bordering the Modoc plateau lie?",
    "SerialNumber": "1342",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/border> <http://dbpedia.org/resource/Modoc_Plateau> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}",
    "entity mapping": [
      {
        "label": "Modoc plateau",
        "uri": "http://dbpedia.org/resource/Modoc_Plateau"
      }
    ],
    "id": "b0daa7f219de4127802c163ea4d7b308",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/property/border"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "valley",
        "uri": "http://dbpedia.org/ontology/Valley"
      }
    ]
  },
  {
    "question": "Name the common alma mater of the Henry Morton Dexter and Jack McGregor",
    "SerialNumber": "1343",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Morton_Dexter> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri . }",
    "entity mapping": [
      {
        "label": "Henry Morton Dexter",
        "uri": "http://dbpedia.org/resource/Henry_Morton_Dexter"
      },
      {
        "label": "Jack McGregor",
        "uri": "http://dbpedia.org/resource/Jack_McGregor"
      }
    ],
    "id": "af78d170c10743f2b8c2008336992a65",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education"
      }
    ]
  },
  {
    "question": "Which famous writer was married to Jill Krementz and had a son named Edith Vonnegut ?",
    "SerialNumber": "1344",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Jill_Krementz> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edith_Vonnegut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Jill Krementz",
        "uri": "http://dbpedia.org/resource/Jill_Krementz"
      },
      {
        "label": "Edith Vonnegut",
        "uri": "http://dbpedia.org/resource/Edith_Vonnegut"
      }
    ],
    "id": "e2c84e16da1c4ada900d8e9932d4c088",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Which are the races in which Martin Molony participated?",
    "SerialNumber": "1346",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri } ",
    "entity mapping": [
      {
        "label": "Martin Molony",
        "uri": "http://dbpedia.org/resource/Martin_Molony"
      }
    ],
    "id": "f04e2e9f5e1246b7a8494b970c269e6c",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/ontology/race"
      }
    ]
  },
  {
    "question": "What is the main common interests of the Philip Novak and Timothy Morton?",
    "SerialNumber": "1347",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri. <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> ?uri . }",
    "entity mapping": [
      {
        "label": "Philip Novak",
        "uri": "http://dbpedia.org/resource/Philip_Novak"
      },
      {
        "label": "Timothy Morton",
        "uri": "http://dbpedia.org/resource/Timothy_Morton"
      }
    ],
    "id": "cc91a807569c4c39bd0a00e68053d9c9",
    "predicate mapping": [
      {
        "label": "interests main",
        "uri": "http://dbpedia.org/property/mainInterests"
      },
      {
        "label": "interests main",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "What is the company which has Raymond Conner and Dennis Muilenburg as key person?",
    "SerialNumber": "1351",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "uri": "http://dbpedia.org/resource/Raymond_Conner"
      },
      {
        "label": "Dennis Muilenburg",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg"
      }
    ],
    "id": "fe375b78109c42628cbc2ce69704bc5b",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the field of the Jon Speelman and occupation of the Karen Grigorian?",
    "SerialNumber": "1352",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "entity mapping": [
      {
        "label": "Jon Speelman",
        "uri": "http://dbpedia.org/resource/Jon_Speelman"
      },
      {
        "label": "Karen Grigorian",
        "uri": "http://dbpedia.org/resource/Karen_Grigorian"
      }
    ],
    "id": "7ba861cb0c5447b79cb878b421cf1113",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "List the maintainers of Pandaruan Bridge?",
    "SerialNumber": "1353",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pandaruan_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "Pandaruan Bridge",
        "uri": "http://dbpedia.org/resource/Pandaruan_Bridge"
      }
    ],
    "id": "ddf2a44585b34de3afaf20021f33a330",
    "predicate mapping": [
      {
        "label": "maintainer",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      }
    ]
  },
  {
    "question": "Name the river with source country in Zambia and source region as North-Western Province, Zambia?",
    "SerialNumber": "1354",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Zambia",
        "uri": "http://dbpedia.org/resource/Zambia"
      },
      {
        "label": "North-Western Province, Zambia",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia"
      }
    ],
    "id": "28ef4e7c24d544d1b9c35db869e032b0",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "source region",
        "uri": "http://dbpedia.org/ontology/sourceRegion"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Who were the producers of the tenderfoot?",
    "SerialNumber": "1355",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Tenderfoot_(miniseries)> <http://dbpedia.org/ontology/producer> ?uri } ",
    "entity mapping": [
      {
        "label": "the tenderfoot",
        "uri": "http://dbpedia.org/resource/The_Tenderfoot_(miniseries)"
      }
    ],
    "id": "42e685f396ad4d289d05e57d384f0b3c",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "Is coffee a main ingredient of Hopje?",
    "SerialNumber": "1357",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hopje> <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Coffee> }",
    "entity mapping": [
      {
        "label": "Hopje",
        "uri": "http://dbpedia.org/resource/Hopje"
      },
      {
        "label": "coffee",
        "uri": "http://dbpedia.org/resource/Coffee"
      }
    ],
    "id": "751a7482320c4deb949864158d4b16b9",
    "predicate mapping": [
      {
        "label": "main ingredient",
        "uri": "http://dbpedia.org/property/mainIngredient"
      }
    ]
  },
  {
    "question": "Who has Saint Joseph and Mary as parents ?",
    "SerialNumber": "1358",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Saint_Joseph> . ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_(mother_of_Jesus)> . }",
    "entity mapping": [
      {
        "label": "Saint Joseph",
        "uri": "http://dbpedia.org/resource/Saint_Joseph"
      },
      {
        "label": "Mary",
        "uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)"
      }
    ],
    "id": "a62ce2cfa64b4b0fb7f2e17ba58b43d1",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      }
    ]
  },
  {
    "question": "List the products of the company which published Tweenies: Game Time.",
    "SerialNumber": "1359",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Tweenies:_Game_Time> <http://dbpedia.org/property/publisher> ?x . ?x <http://dbpedia.org/property/products> ?uri  . }",
    "entity mapping": [
      {
        "label": "Tweenies: Game Time",
        "uri": "http://dbpedia.org/resource/Tweenies:_Game_Time"
      }
    ],
    "id": "af164ec109cc41a8895ca7011ca62c3f",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      }
    ]
  },
  {
    "question": "Which engine\u0027s successor\u0027s predecessor is BMW M10?",
    "SerialNumber": "1361",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/BMW_M10> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}",
    "entity mapping": [
      {
        "label": "BMW M10",
        "uri": "http://dbpedia.org/resource/BMW_M10"
      }
    ],
    "id": "e68e190c5fea42bd9d7b2f106c0299e4",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "engine",
        "uri": "http://dbpedia.org/ontology/Engine"
      }
    ]
  },
  {
    "question": "Which person\u0027s successor is Samsu-iluna?",
    "SerialNumber": "1362",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Samsu-iluna>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Samsu-iluna",
        "uri": "http://dbpedia.org/resource/Samsu-iluna"
      }
    ],
    "id": "e52a7b93b92f4a908fbe6e753ea32d89",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "To which region does the Miluk language belong?",
    "SerialNumber": "1363",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miluk_language> <http://dbpedia.org/property/region> ?uri } ",
    "entity mapping": [
      {
        "label": "Miluk language",
        "uri": "http://dbpedia.org/resource/Miluk_language"
      }
    ],
    "id": "87210ff3e55b4299a32d89b85345d93f",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "Name a person who was educated in Humes High School ?",
    "SerialNumber": "1368",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Humes_High_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Humes High School",
        "uri": "http://dbpedia.org/resource/Humes_High_School"
      }
    ],
    "id": "0f1a0373eac342828313fec23a869b83",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List the awards won by the writer of Face to Face ?",
    "SerialNumber": "1371",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Face_to_Face_(1976_film)> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Face to Face",
        "uri": "http://dbpedia.org/resource/Face_to_Face_(1976_film)"
      }
    ],
    "id": "ce0cda33ee3e45b0b88aae26a2908f48",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Does the Sicklefin lemon shark belong in the animal kingdom?",
    "SerialNumber": "1373",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sicklefin_lemon_shark> <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> }",
    "entity mapping": [
      {
        "label": "Sicklefin lemon shark",
        "uri": "http://dbpedia.org/resource/Sicklefin_lemon_shark"
      },
      {
        "label": "animal",
        "uri": "http://dbpedia.org/resource/Animal"
      }
    ],
    "id": "0a010b343f2b41da91c743a12b3a47a0",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom"
      }
    ]
  },
  {
    "question": "What is the local authority of Liverpool Institute High School for Boys ?",
    "SerialNumber": "1374",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_Institute_High_School_for_Boys> <http://dbpedia.org/ontology/localAuthority> ?uri } ",
    "entity mapping": [
      {
        "label": "Liverpool Institute High School",
        "uri": "http://dbpedia.org/resource/Liverpool_Institute_High_School_for_Boys"
      }
    ],
    "id": "91921f98a78148b1b74c79a5bd598e40",
    "predicate mapping": [
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "What is the place of birth of the Kira Plastinina and Sergey Ryazansky",
    "SerialNumber": "1375",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kira_Plastinina> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Sergey_Ryazansky> <http://dbpedia.org/property/placeOfBirth> ?uri . }",
    "entity mapping": [
      {
        "label": "Kira Plastinina",
        "uri": "http://dbpedia.org/resource/Kira_Plastinina"
      },
      {
        "label": "Sergey Ryazansky",
        "uri": "http://dbpedia.org/resource/Sergey_Ryazansky"
      }
    ],
    "id": "8a98295e35f9472fbc9b9d7ebb99de74",
    "predicate mapping": [
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Give me the places where people who worked in Church of England died in ?",
    "SerialNumber": "1377",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Church_of_England> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Church of England",
        "uri": "http://dbpedia.org/resource/Church_of_England"
      }
    ],
    "id": "3f4b72d7662b4caa82f1760f020528db",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "What belongs to the families of Buccinidae and Buccinoidea?",
    "SerialNumber": "1379",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea> . }",
    "entity mapping": [
      {
        "label": "Buccinidae",
        "uri": "http://dbpedia.org/resource/Buccinidae"
      },
      {
        "label": "Buccinoidea",
        "uri": "http://dbpedia.org/resource/Buccinoidea"
      }
    ],
    "id": "ff112c068fe348d99bc382783bc5554f",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "List down all notable works of Neil Cross ?",
    "SerialNumber": "1381",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri } ",
    "entity mapping": [
      {
        "label": "Neil Cross",
        "uri": "http://dbpedia.org/resource/Neil_Cross"
      }
    ],
    "id": "89de2e9950be4d148cceb0f13606223d",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "What is the largest city of the country which have an assembly of Plymouth Savoy?",
    "SerialNumber": "1382",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Plymouth Savoy",
        "uri": "http://dbpedia.org/resource/Plymouth_Savoy"
      }
    ],
    "id": "10540b9b82364f5eb00957a38632eca3",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "Does nintendo have a division called Nintendo Entertainment Planning \u0026 Development?",
    "SerialNumber": "1383",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nintendo> <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Nintendo_Entertainment_Planning_\u0026_Development> }",
    "entity mapping": [
      {
        "label": "nintendo",
        "uri": "http://dbpedia.org/resource/Nintendo"
      },
      {
        "label": "Nintendo Entertainment Planning \u0026 Development",
        "uri": "http://dbpedia.org/resource/Nintendo_Entertainment_Planning_\u0026_Development"
      }
    ],
    "id": "f6ce613bfafa488daaf3caf27629399b",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/divisions"
      }
    ]
  },
  {
    "question": "Is Queen Latifah the narrator of Arctic Tale?",
    "SerialNumber": "1388",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Arctic_Tale> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Queen_Latifah> }",
    "entity mapping": [
      {
        "label": "Arctic Tale",
        "uri": "http://dbpedia.org/resource/Arctic_Tale"
      },
      {
        "label": "Queen Latifah",
        "uri": "http://dbpedia.org/resource/Queen_Latifah"
      }
    ],
    "id": "34eed5d543524bd6a5872d93bf79d3e7",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrator"
      }
    ]
  },
  {
    "question": "List the major shrines of the saints whose one of the shrine is St. Takla Haymanot\u0027s Church ?",
    "SerialNumber": "1391",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Takla_Haymanot\u0027s_Church_(Alexandria)> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "entity mapping": [
      {
        "label": "St. Takla Haymanot\u0027s Church",
        "uri": "http://dbpedia.org/resource/St._Takla_Haymanot\u0027s_Church_(Alexandria)"
      }
    ],
    "id": "17b4a249affa4dde85cdeb1693177725",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint"
      }
    ]
  },
  {
    "question": "How many companies were founded in Dallas?",
    "SerialNumber": "1392",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Dallas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Dallas",
        "uri": "http://dbpedia.org/resource/Dallas"
      }
    ],
    "id": "da03ed79bd2448b49214a557bd180b57",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What are the mammals whose phylum is Chordate?",
    "SerialNumber": "1393",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "Chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      }
    ],
    "id": "b4b08639276b4e5f8db54327fc6c012f",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "What is the denomination of S. H. Kapadia ?",
    "SerialNumber": "1394",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/S._H._Kapadia> <http://dbpedia.org/property/religion> ?uri } ",
    "entity mapping": [
      {
        "label": "S. H. Kapadia",
        "uri": "http://dbpedia.org/resource/S._H._Kapadia"
      }
    ],
    "id": "3c8fdf37975f4f08945c5542bcc97d93",
    "predicate mapping": [
      {
        "label": "denomination",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Charles Willing Byrd was the governor under which politician?",
    "SerialNumber": "1396",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> } ",
    "entity mapping": [
      {
        "label": "Charles Willing Byrd",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd"
      }
    ],
    "id": "b4072b20f7fa40d7b0fe48885dca9d53",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor"
      }
    ]
  },
  {
    "question": "Who is the maker of the engine of Ford F-Series first generation ?",
    "SerialNumber": "1397",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ford_F-Series_first_generation> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ford F-Series first generation",
        "uri": "http://dbpedia.org/resource/Ford_F-Series_first_generation"
      }
    ],
    "id": "7d5159ea5c5a452086175f68079c8e22",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine"
      },
      {
        "label": "maker",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Who all have been judges on CTV Network\u0027s shows?",
    "SerialNumber": "1400",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/CTV_Television_Network> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "CTV Network",
        "uri": "http://dbpedia.org/resource/CTV_Television_Network"
      }
    ],
    "id": "44126a7ebefe489c8d4093ec82f95ef1",
    "predicate mapping": [
      {
        "label": "Network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which rivers end in Old Saybrook, Connecticut?",
    "SerialNumber": "1402",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Old_Saybrook,_Connecticut> } ",
    "entity mapping": [
      {
        "label": "Old Saybrook, Connecticut",
        "uri": "http://dbpedia.org/resource/Old_Saybrook,_Connecticut"
      }
    ],
    "id": "8f75a8ba0817469791fe7f783a003b62",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      }
    ]
  },
  {
    "question": "Which TV show\u0027s executive producer is Douglas Netter and composed by Stewart Copeland ?",
    "SerialNumber": "1404",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Douglas Netter",
        "uri": "http://dbpedia.org/resource/Douglas_Netter"
      },
      {
        "label": "Stewart Copeland",
        "uri": "http://dbpedia.org/resource/Stewart_Copeland"
      }
    ],
    "id": "e1d331f8870d4fcb99ef55121fda7c31",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the television show whose network is TNT (TV channel) and Prime Time Entertainment Network?",
    "SerialNumber": "1405",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "TNT (TV channel)",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)"
      },
      {
        "label": "Prime Time Entertainment Network",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network"
      }
    ],
    "id": "af7ff586aa3e46058865543dba5c96b0",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where is the arena of WPC Dynamo Moscow situated?",
    "SerialNumber": "1406",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri } ",
    "entity mapping": [
      {
        "label": "WPC Dynamo Moscow",
        "uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow"
      }
    ],
    "id": "374e41e0c9074e29aa08bc200f1d9a04",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena"
      }
    ]
  },
  {
    "question": "Name the founders of the record labels whose one of the founders is Frank Rogers ?",
    "SerialNumber": "1408",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Frank_Rogers_(record_producer)> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
    "entity mapping": [
      {
        "label": "Frank Rogers",
        "uri": "http://dbpedia.org/resource/Frank_Rogers_(record_producer)"
      }
    ],
    "id": "ed3777b583d140ae9097e15d39c80d2f",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel"
      }
    ]
  },
  {
    "question": "What are the television shows whose starting music is composed by Ron Grainer?",
    "SerialNumber": "1410",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Ron Grainer",
        "uri": "http://dbpedia.org/resource/Ron_Grainer"
      }
    ],
    "id": "7db07f152ba64000952041d7c269d816",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the military branch of  Henry Hyde ?",
    "SerialNumber": "1411",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henry_Hyde> <http://dbpedia.org/ontology/militaryBranch> ?uri } ",
    "entity mapping": [
      {
        "label": "Henry Hyde",
        "uri": "http://dbpedia.org/resource/Henry_Hyde"
      }
    ],
    "id": "74a833da4a3449f792fe8603400f3a51",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "Who is the developer of Montecito Inn ?",
    "SerialNumber": "1412",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Montecito_Inn> <http://dbpedia.org/property/developer> ?uri } ",
    "entity mapping": [
      {
        "label": "Montecito Inn",
        "uri": "http://dbpedia.org/resource/Montecito_Inn"
      }
    ],
    "id": "a51b846524854b8d8be7950d0143aa08",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer"
      }
    ]
  },
  {
    "question": "which planet was discovered by Urbain Le Verrier?",
    "SerialNumber": "1415",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Urbain_Le_Verrier> } ",
    "entity mapping": [
      {
        "label": "Urbain Le Verrier",
        "uri": "http://dbpedia.org/resource/Urbain_Le_Verrier"
      }
    ],
    "id": "b2179061510340db8454e133c3829727",
    "predicate mapping": [
      {
        "label": "discovered by",
        "uri": "http://dbpedia.org/ontology/discoverer"
      }
    ]
  },
  {
    "question": "Name the parent company of Ford Falcon Cobra ?",
    "SerialNumber": "1422",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri } ",
    "entity mapping": [
      {
        "label": "Ford Falcon Cobra",
        "uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra"
      }
    ],
    "id": "d1129ddcb8c04a6d88e360a759cf01d9",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      }
    ]
  },
  {
    "question": "Where is the radio broadcasted in, whose sister station is CKFM-FM?",
    "SerialNumber": "1424",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/CKFM-FM> . ?x <http://dbpedia.org/ontology/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "CKFM-FM",
        "uri": "http://dbpedia.org/resource/CKFM-FM"
      }
    ],
    "id": "6cf9b1c0073641558b6b87a6afd477c3",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      },
      {
        "label": "station radio",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "Does A foreign policy of freedom belong to the genre Politics?",
    "SerialNumber": "1425",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Politics> }",
    "entity mapping": [
      {
        "label": "A foreign policy of freedom",
        "uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom"
      },
      {
        "label": "Politics",
        "uri": "http://dbpedia.org/resource/Politics"
      }
    ],
    "id": "63ca129cc4fa4a1a982e2980c540e35b",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      }
    ]
  },
  {
    "question": "For which common president did Jim Sasser and Mike McCurry work?",
    "SerialNumber": "1427",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Sasser> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Mike_McCurry_(press_secretary)> <http://dbpedia.org/ontology/president> ?uri . }",
    "entity mapping": [
      {
        "label": "Jim Sasser",
        "uri": "http://dbpedia.org/resource/Jim_Sasser"
      },
      {
        "label": "Mike McCurry",
        "uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)"
      }
    ],
    "id": "8185bbd0be854ace812c865f25e2ffb2",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "Jerry Bock\u0027s musicals has been adapted from how many things?",
    "SerialNumber": "1429",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jerry_Bock> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jerry Bock",
        "uri": "http://dbpedia.org/resource/Jerry_Bock"
      }
    ],
    "id": "427a250b939b4dbfab09841c8f20e929",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "adapted from",
        "uri": "http://dbpedia.org/ontology/basedOn"
      }
    ]
  },
  {
    "question": "What is the birth place of the children of Miguel Garca Granados ?",
    "SerialNumber": "1431",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Miguel_García_Granados> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Miguel Garca Granados",
        "uri": "http://dbpedia.org/resource/Miguel_García_Granados"
      }
    ],
    "id": "720882e8f33e4b9a8d62b57e24b5c363",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Titus software publishes which genre of games?",
    "SerialNumber": "1432",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Titus_Software> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Titus software",
        "uri": "http://dbpedia.org/resource/Titus_Software"
      }
    ],
    "id": "edec33716ab949b993955978a2dc9011",
    "predicate mapping": [
      {
        "label": "publishes",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Who are the spouse of the parents of Kimberly Stewart?",
    "SerialNumber": "1433",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kimberly_Stewart> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/ontology/spouse> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kimberly Stewart",
        "uri": "http://dbpedia.org/resource/Kimberly_Stewart"
      }
    ],
    "id": "5574fe2aa59d4b4394e830d098886f3c",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "What academic discipline of the Journal of Cerebral Blood Flow \u0026 Metabolism is also the record label of the Double Diamond (album)?",
    "SerialNumber": "1434",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri. <http://dbpedia.org/resource/Double_Diamond_(album)> <http://dbpedia.org/ontology/recordLabel> ?uri} ",
    "entity mapping": [
      {
        "label": "Journal of Cerebral Blood Flow \u0026 Metabolism",
        "uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism"
      },
      {
        "label": "Double Diamond (album)",
        "uri": "http://dbpedia.org/resource/Double_Diamond_(album)"
      }
    ],
    "id": "79b29a50491143fcb95984df5dc84ca0",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      }
    ]
  },
  {
    "question": "What are the houses of Parliament Security Services ?",
    "SerialNumber": "1437",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_Security_Services> <http://dbpedia.org/property/houses> ?uri } ",
    "entity mapping": [
      {
        "label": "Parliament Security Services",
        "uri": "http://dbpedia.org/resource/Parliament_Security_Services"
      }
    ],
    "id": "0baa037b73d543a7a59be401e8a0bc44",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses"
      }
    ]
  },
  {
    "question": "Who is the governor of Carl McCall ?",
    "SerialNumber": "1438",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_McCall> <http://dbpedia.org/ontology/governor> ?uri } ",
    "entity mapping": [
      {
        "label": "Carl McCall",
        "uri": "http://dbpedia.org/resource/Carl_McCall"
      }
    ],
    "id": "9f03bf078f8e43e68ca2db1f89a182b7",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor"
      }
    ]
  },
  {
    "question": "What is the nickname of the city where Tuba Dei lives?",
    "SerialNumber": "1439",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Tuba_Dei> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "entity mapping": [
      {
        "label": "Tuba Dei",
        "uri": "http://dbpedia.org/resource/Tuba_Dei"
      }
    ],
    "id": "6010a5c2d8cf410ba846684155d6afb3",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "List the mascot of the universities which are a part of  National Collegiate Athletic Association.",
    "SerialNumber": "1443",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association"
      }
    ],
    "id": "46c7118086dc4e08bdd9bf77f4273377",
    "predicate mapping": [
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What is the official residence of Fergus McMaster ?",
    "SerialNumber": "1448",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fergus_McMaster> <http://dbpedia.org/ontology/residence> ?uri } ",
    "entity mapping": [
      {
        "label": "Fergus McMaster",
        "uri": "http://dbpedia.org/resource/Fergus_McMaster"
      }
    ],
    "id": "90b8340912aa47be9e2468424ccf95d8",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Which university has chancellor as Nicholas S. Zeppos?",
    "SerialNumber": "1449",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/chancellor> <http://dbpedia.org/resource/Nicholas_S._Zeppos>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Nicholas S. Zeppos",
        "uri": "http://dbpedia.org/resource/Nicholas_S._Zeppos"
      }
    ],
    "id": "a54d9ab5b073425aa078172cd3175ec8",
    "predicate mapping": [
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What is the total number of  builder of the military structures whose builder is also United States?",
    "SerialNumber": "1450",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/builder> ?uri }",
    "entity mapping": [
      {
        "label": "United States",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "c83f849b65f046198bee117225c1dac5",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      }
    ]
  },
  {
    "question": "List the associated musical artist of the current members of Al Bano and Romina Power?",
    "SerialNumber": "1452",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Al_Bano_and_Romina_Power> <http://dbpedia.org/property/currentMembers> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Al Bano and Romina Power",
        "uri": "http://dbpedia.org/resource/Al_Bano_and_Romina_Power"
      }
    ],
    "id": "37fc8c815f8f4cd1a8c8b46ad3a577f7",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "What team does John McGeever play for, which also employed Ben Dreith at some time?",
    "SerialNumber": "1454",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Dreith> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/John_McGeever> <http://dbpedia.org/ontology/team> ?uri . }",
    "entity mapping": [
      {
        "label": "Ben Dreith",
        "uri": "http://dbpedia.org/resource/Ben_Dreith"
      },
      {
        "label": "John McGeever",
        "uri": "http://dbpedia.org/resource/John_McGeever"
      }
    ],
    "id": "967f6935fd4248ed99f03141a2b0e459",
    "predicate mapping": [
      {
        "label": "at",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "What is the total number of guests on the show whose theme music is Let me be your star?",
    "SerialNumber": "1456",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Let_Me_Be_Your_Star> . ?x <http://dbpedia.org/property/guests> ?uri  . }",
    "entity mapping": [
      {
        "label": "Let me be your star",
        "uri": "http://dbpedia.org/resource/Let_Me_Be_Your_Star"
      }
    ],
    "id": "98cf58e6424a49e1afab18da3372f362",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "guests",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "Name the home town of Rolando Gomez ?",
    "SerialNumber": "1457",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolando_Gomez> <http://dbpedia.org/property/homeTown> ?uri } ",
    "entity mapping": [
      {
        "label": "Rolando Gomez",
        "uri": "http://dbpedia.org/resource/Rolando_Gomez"
      }
    ],
    "id": "0f2bfb81e96b44b1bc4586e49852fccf",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown"
      }
    ]
  },
  {
    "question": "Was Noko a band member of Luxuria?",
    "SerialNumber": "1458",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Luxuria_(band)> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Noko> }",
    "entity mapping": [
      {
        "label": "Luxuria",
        "uri": "http://dbpedia.org/resource/Luxuria_(band)"
      },
      {
        "label": "Noko",
        "uri": "http://dbpedia.org/resource/Noko"
      }
    ],
    "id": "3914f43429894759b145e663790fc209",
    "predicate mapping": [
      {
        "label": "member band",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      }
    ]
  },
  {
    "question": "Name some basketball players whose team is coached by Fred Hoiberg?",
    "SerialNumber": "1460",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Fred_Hoiberg> . ?uri <http://dbpedia.org/property/team> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "Fred Hoiberg",
        "uri": "http://dbpedia.org/resource/Fred_Hoiberg"
      }
    ],
    "id": "6ad0d1eeef934ec0bfd88f85a1e3320f",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "Who is the prime minister that Michael Jeffery served?",
    "SerialNumber": "1462",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Jeffery> <http://dbpedia.org/property/primeminister> ?uri } ",
    "entity mapping": [
      {
        "label": "Michael Jeffery",
        "uri": "http://dbpedia.org/resource/Michael_Jeffery"
      }
    ],
    "id": "3dab698090ef4acda3d9a1bd30a307dc",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "What are the movies whose music is composed by Vangelis?",
    "SerialNumber": "1463",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Vangelis",
        "uri": "http://dbpedia.org/resource/Vangelis"
      }
    ],
    "id": "bf81b0ed08944a0091644587ff07d4fc",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Was Walt Disney the cinematographer of Mickey\u0027s Mellerdrammer?",
    "SerialNumber": "1464",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Walt_Disney> }",
    "entity mapping": [
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer"
      },
      {
        "label": "Walt Disney",
        "uri": "http://dbpedia.org/resource/Walt_Disney"
      }
    ],
    "id": "f1eae8d8caba4bae88873a154dfec671",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography"
      }
    ]
  },
  {
    "question": "Who is the operator of Rainbow Warrior (1955) ?",
    "SerialNumber": "1465",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rainbow_Warrior_(1955)> <http://dbpedia.org/ontology/operator> ?uri } ",
    "entity mapping": [
      {
        "label": "Rainbow Warrior",
        "uri": "http://dbpedia.org/resource/Rainbow_Warrior_(1955)"
      }
    ],
    "id": "ff89e1f2ebea4884b42c7497cbf61372",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator"
      }
    ]
  },
  {
    "question": "To which sports team is Aubie the mascot?",
    "SerialNumber": "1466",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Aubie>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Aubie",
        "uri": "http://dbpedia.org/resource/Aubie"
      }
    ],
    "id": "46849da00b124a0f9c847045c1d34579",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "sports team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Which series are Lennier and Londo Mollari both from?",
    "SerialNumber": "1467",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lennier> <http://dbpedia.org/ontology/series> ?uri. <http://dbpedia.org/resource/Londo_Mollari> <http://dbpedia.org/ontology/series> ?uri . }",
    "entity mapping": [
      {
        "label": "Lennier",
        "uri": "http://dbpedia.org/resource/Lennier"
      },
      {
        "label": "Londo Mollari",
        "uri": "http://dbpedia.org/resource/Londo_Mollari"
      }
    ],
    "id": "732483cb47924b00b32792c0bb79f680",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "Graduates of Somerville College have been in how many political parties?",
    "SerialNumber": "1469",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Somerville College",
        "uri": "http://dbpedia.org/resource/Somerville_College,_Oxford"
      }
    ],
    "id": "c1d38d3b2ca945bd9989a4ea50cb9b23",
    "predicate mapping": [
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Count the number of battles fought by the military person involved in Morocco ?",
    "SerialNumber": "1471",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Morocco> . ?x <http://dbpedia.org/property/battles> ?uri }",
    "entity mapping": [
      {
        "label": "Morocco",
        "uri": "http://dbpedia.org/resource/Morocco"
      }
    ],
    "id": "9f0fff722db84e1498deba1ebb619e50",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Who is the office holder whose deputy was Andrew Peacock and predecessor was Alexander Downer?",
    "SerialNumber": "1475",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Andrew_Peacock> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Alexander_Downer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Andrew Peacock",
        "uri": "http://dbpedia.org/resource/Andrew_Peacock"
      },
      {
        "label": "Alexander Downer",
        "uri": "http://dbpedia.org/resource/Alexander_Downer"
      }
    ],
    "id": "81fc6048cd674197b4c6918b39592d57",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Who was the editor of the newspaper owned by the the UK government?",
    "SerialNumber": "1476",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Government_of_the_United_Kingdom> . ?x <http://dbpedia.org/property/editor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "UK government",
        "uri": "http://dbpedia.org/resource/Government_of_the_United_Kingdom"
      }
    ],
    "id": "68d4d257dad14afa9f33b32b9f8f06cc",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "List all the collaborators of the artist which has collaborated with sanremo Music Festival ?",
    "SerialNumber": "1478",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Sanremo_Music_Festival> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "sanremo Music Festival",
        "uri": "http://dbpedia.org/resource/Sanremo_Music_Festival"
      }
    ],
    "id": "c8c5d0a0594e48609e559b9b8766b7a5",
    "predicate mapping": [
      {
        "label": "artist music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "artist music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Where did the plays written by Robert Schenkkan take place?",
    "SerialNumber": "1479",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Robert_Schenkkan> . ?x <http://dbpedia.org/property/place> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
    "entity mapping": [
      {
        "label": "Robert Schenkkan",
        "uri": "http://dbpedia.org/resource/Robert_Schenkkan"
      }
    ],
    "id": "0a0eaf434b7342f1a47f9e61c8093efe",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Play"
      }
    ]
  },
  {
    "question": "Which baseball team is owned by Robert Nutting?",
    "SerialNumber": "1481",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Robert_Nutting>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "entity mapping": [
      {
        "label": "Robert Nutting",
        "uri": "http://dbpedia.org/resource/Robert_Nutting"
      }
    ],
    "id": "6b7392c622bf4b9d8d89ad9e53010cb2",
    "predicate mapping": [
      {
        "label": "is owned by",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam"
      }
    ]
  },
  {
    "question": "Which sports are played typically in private schools?",
    "SerialNumber": "1482",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/schooltype> <http://dbpedia.org/resource/Private_school> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "private school",
        "uri": "http://dbpedia.org/resource/Private_school"
      }
    ],
    "id": "e7dde5ecb2d4418f9c39988c43ddb848",
    "predicate mapping": [
      {
        "label": "schools",
        "uri": "http://dbpedia.org/property/schooltype"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Was Marie Curie a doctoral student of Henri Becquerel?",
    "SerialNumber": "1484",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henri_Becquerel> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Marie_Curie> }",
    "entity mapping": [
      {
        "label": "Henri Becquerel",
        "uri": "http://dbpedia.org/resource/Henri_Becquerel"
      },
      {
        "label": "Marie Curie",
        "uri": "http://dbpedia.org/resource/Marie_Curie"
      }
    ],
    "id": "c6a4fb6c10984d2494a7f6b2c3c6f6a9",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      }
    ]
  },
  {
    "question": "List the television shows whose network\u0027s sister names is N-tv.",
    "SerialNumber": "1485",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/N-tv> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "N-tv",
        "uri": "http://dbpedia.org/resource/N-tv"
      }
    ],
    "id": "ec357021bd3041b88bc21430566a7aa5",
    "predicate mapping": [
      {
        "label": "sister names",
        "uri": "http://dbpedia.org/property/sisterNames"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are some other services of the company whose service is Onedrive?",
    "SerialNumber": "1486",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/OneDrive> . ?x <http://dbpedia.org/property/services> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Onedrive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      }
    ],
    "id": "478436ca4cc34c0bb4f8d95e5e869be7",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Where does the railway tracks start, which ends in Kazan?",
    "SerialNumber": "1487",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Kazan> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "entity mapping": [
      {
        "label": "Kazan",
        "uri": "http://dbpedia.org/resource/Kazan"
      }
    ],
    "id": "ddc9605fad1340cfa17fe46efa3d5516",
    "predicate mapping": [
      {
        "label": "ends",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "start,",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "railway",
        "uri": "http://dbpedia.org/ontology/RailwayLine"
      }
    ]
  },
  {
    "question": "Give me a count of all ice hockey players whose teams are headcoached by John Tortorella?",
    "SerialNumber": "1488",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/John_Tortorella> . ?uri <http://dbpedia.org/ontology/team> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
    "entity mapping": [
      {
        "label": "John Tortorella",
        "uri": "http://dbpedia.org/resource/John_Tortorella"
      }
    ],
    "id": "f3a7adce77844beb83973ad768b686b0",
    "predicate mapping": [
      {
        "label": "headcoached",
        "uri": "http://dbpedia.org/property/headCoach"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "ice hockey player",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer"
      }
    ]
  },
  {
    "question": "Name all the venues of the convention which has also been hosted in San Diego Convention ?",
    "SerialNumber": "1490",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/venue> <http://dbpedia.org/resource/San_Diego_Convention_Center> . ?x <http://dbpedia.org/property/venue> ?uri  . }",
    "entity mapping": [
      {
        "label": "San Diego Convention",
        "uri": "http://dbpedia.org/resource/San_Diego_Convention_Center"
      }
    ],
    "id": "1243d7724dc846eea4a227142bb548be",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue"
      },
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue"
      }
    ]
  },
  {
    "question": "Where is the county seat of King County, Washington?",
    "SerialNumber": "1491",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri } ",
    "entity mapping": [
      {
        "label": "King County, Washington",
        "uri": "http://dbpedia.org/resource/King_County,_Washington"
      }
    ],
    "id": "83eea7c4c71d45ec847c1410bfbdd035",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat"
      }
    ]
  },
  {
    "question": "What is the river whose mouth locations are Arctic Ocean and Laptev Sea?",
    "SerialNumber": "1493",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Arctic Ocean",
        "uri": "http://dbpedia.org/resource/Arctic_Ocean"
      },
      {
        "label": "Laptev Sea",
        "uri": "http://dbpedia.org/resource/Laptev_Sea"
      }
    ],
    "id": "801fda9479a245bfba75d1f7d1881540",
    "predicate mapping": [
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Was Lucrezia Tornabuoni the mother of Lorenzo de\u0027 Medici?",
    "SerialNumber": "1494",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lorenzo_de\u0027_Medici> <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Lucrezia_Tornabuoni> }",
    "entity mapping": [
      {
        "label": "Lorenzo de\u0027 Medici",
        "uri": "http://dbpedia.org/resource/Lorenzo_de\u0027_Medici"
      },
      {
        "label": "Lucrezia Tornabuoni",
        "uri": "http://dbpedia.org/resource/Lucrezia_Tornabuoni"
      }
    ],
    "id": "4f1a4374cc27457faacbad707a9ca72f",
    "predicate mapping": [
      {
        "label": "mother",
        "uri": "http://dbpedia.org/property/mother"
      }
    ]
  },
  {
    "question": "What band had  Nick Jonas and Kevin Jonas as former members ?",
    "SerialNumber": "1495",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Nick Jonas",
        "uri": "http://dbpedia.org/resource/Nick_Jonas"
      },
      {
        "label": "Kevin Jonas",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas"
      }
    ],
    "id": "92e3b5727baf4081b7905f89e63e2785",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "What is the combatant of the Northwest Indian War and also the ethnic group of the Linda Hogan ",
    "SerialNumber": "1496",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northwest_Indian_War> <http://dbpedia.org/property/combatant> ?uri. <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri} ",
    "entity mapping": [
      {
        "label": "Northwest Indian War",
        "uri": "http://dbpedia.org/resource/Northwest_Indian_War"
      },
      {
        "label": "Linda Hogan",
        "uri": "http://dbpedia.org/resource/Linda_Hogan"
      }
    ],
    "id": "d6c6b1031e8a40ccabf25cc682c9eb07",
    "predicate mapping": [
      {
        "label": "combatant",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "ethnic",
        "uri": "http://dbpedia.org/property/ethnicity"
      }
    ]
  },
  {
    "question": "Give me the characters who last appeared in Star Wars Episode 3",
    "SerialNumber": "1497",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/last> <http://dbpedia.org/resource/Star_Wars:_Episode_III_–_Revenge_of_the_Sith> } ",
    "entity mapping": [
      {
        "label": "Star Wars Episode 3",
        "uri": "http://dbpedia.org/resource/Star_Wars:_Episode_III_–_Revenge_of_the_Sith"
      }
    ],
    "id": "5c6a09d1e72a45429f86bae07bb422e6",
    "predicate mapping": [
      {
        "label": "last",
        "uri": "http://dbpedia.org/property/last"
      }
    ]
  },
  {
    "question": "List of people who were the first one to ascend a mountain in the Cathedral range?",
    "SerialNumber": "1498",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Cathedral_Range> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Cathedral range",
        "uri": "http://dbpedia.org/resource/Cathedral_Range"
      }
    ],
    "id": "19799ac99ae44c6ea599ce69e0ef0bc8",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "Name the movie with narrator as Trevor Peacock and music composer  as Christophe Beck?",
    "SerialNumber": "1501",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Christophe_Beck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Trevor Peacock",
        "uri": "http://dbpedia.org/resource/Trevor_Peacock"
      },
      {
        "label": "Christophe Beck",
        "uri": "http://dbpedia.org/resource/Christophe_Beck"
      }
    ],
    "id": "c7d501b648c444519cdf5fc5af8a1145",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrator"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many movies did Stanley Kubrick direct?",
    "SerialNumber": "1502",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . }",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick"
      }
    ],
    "id": "b8f8719333604e9b9a5e34e7babe9e91",
    "predicate mapping": [
      {
        "label": "direct",
        "uri": "http://dbpedia.org/ontology/director"
      }
    ]
  },
  {
    "question": "Who is the President of the United World College of Costa Rica and United World Colleges ?",
    "SerialNumber": "1506",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/United_World_Colleges> <http://dbpedia.org/property/president> ?uri . }",
    "entity mapping": [
      {
        "label": "United World College of Costa Rica",
        "uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica"
      },
      {
        "label": "United World College ",
        "uri": "http://dbpedia.org/resource/United_World_Colleges"
      }
    ],
    "id": "e38ad8e6192b406494e5c1a4926019e3",
    "predicate mapping": [
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "Which movie produced by Michael Deeley was distributed by Warner Bros ?",
    "SerialNumber": "1507",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Warner Bros ",
        "uri": "http://dbpedia.org/resource/Warner_Bros."
      },
      {
        "label": "Michael Deeley",
        "uri": "http://dbpedia.org/resource/Michael_Deeley"
      }
    ],
    "id": "d0aac092bd35492b9e073efaf22ba601",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who has had been the tenant of the stadium built by PCL construction firm?",
    "SerialNumber": "1509",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/PCL_Construction> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "PCL construction",
        "uri": "http://dbpedia.org/resource/PCL_Construction"
      }
    ],
    "id": "7d987e66986840188fcae0a20722dccf",
    "predicate mapping": [
      {
        "label": "built by",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "For which team did Cam Plante and Doug Acomb both play atleast once?",
    "SerialNumber": "1510",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri . }",
    "entity mapping": [
      {
        "label": "Cam Plante",
        "uri": "http://dbpedia.org/resource/Cam_Plante"
      },
      {
        "label": "Doug Acomb",
        "uri": "http://dbpedia.org/resource/Doug_Acomb"
      }
    ],
    "id": "8dc6914347504e2983925818c0616850",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "What is the type of Vesak ?",
    "SerialNumber": "1511",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri } ",
    "entity mapping": [
      {
        "label": "Vesak",
        "uri": "http://dbpedia.org/resource/Vesak"
      }
    ],
    "id": "c5f6f930e7c2465d84f9347c2ed9be35",
    "predicate mapping": [
      {
        "label": "type",
        "uri": "http://dbpedia.org/ontology/type"
      }
    ]
  },
  {
    "question": "Which military personnel belong to the branch of Continental Army?",
    "SerialNumber": "1512",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> } ",
    "entity mapping": [
      {
        "label": "Continental Army",
        "uri": "http://dbpedia.org/resource/Continental_Army"
      }
    ],
    "id": "a407bb2b3115418b9c87072530021edb",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "What is the title of the successor of Kaulahea I ?",
    "SerialNumber": "1514",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kaulahea_I> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/title> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kaulahea I",
        "uri": "http://dbpedia.org/resource/Kaulahea_I"
      }
    ],
    "id": "22c351d2188d4fdf9764737954766fa0",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title"
      }
    ]
  },
  {
    "question": "List the notable works of the writer of The Tony Randall Show ?",
    "SerialNumber": "1522",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Tony_Randall_Show> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Tony Randall Show",
        "uri": "http://dbpedia.org/resource/The_Tony_Randall_Show"
      }
    ],
    "id": "aff5614125a14573982db28c91a123c8",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "What prizes have been awarded to the relatives of Linn Ullmann?",
    "SerialNumber": "1525",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Linn_Ullmann> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Linn Ullmann",
        "uri": "http://dbpedia.org/resource/Linn_Ullmann"
      }
    ],
    "id": "76979737099748f4a8ec2329b9f2a7f0",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Who is the scientist whose academic advisor was Karl Ewald Hasse?",
    "SerialNumber": "1526",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Karl Ewald Hasse",
        "uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse"
      }
    ],
    "id": "212a265d6c5f4b94a59ae65ab6741cce",
    "predicate mapping": [
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "List the other nicknames of city which has one of the nickname as City of Angels ?",
    "SerialNumber": "1528",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/City_of_Angels> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "entity mapping": [
      {
        "label": "City of Angels",
        "uri": "http://dbpedia.org/resource/City_of_Angels"
      }
    ],
    "id": "e3e252422e084971a88eab39961db3c6",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "Count the awards received by the ones who fought the battle of france?",
    "SerialNumber": "1531",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_France> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "battle of france",
        "uri": "http://dbpedia.org/resource/Battle_of_France"
      }
    ],
    "id": "11b1b9c7215d497589a3b1657936580f",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What is the baseball team whose club manager is Chip Hale?",
    "SerialNumber": "1532",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Chip_Hale>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "entity mapping": [
      {
        "label": "Chip Hale",
        "uri": "http://dbpedia.org/resource/Chip_Hale"
      }
    ],
    "id": "c2e076a790a4486b93dcd39fbd2281db",
    "predicate mapping": [
      {
        "label": "club manager",
        "uri": "http://dbpedia.org/property/manager"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam"
      }
    ]
  },
  {
    "question": "By what person of which political party is Balangir district led?",
    "SerialNumber": "1534",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Balangir_district> <http://dbpedia.org/ontology/leaderName> ?uri } ",
    "entity mapping": [
      {
        "label": "Balangir district",
        "uri": "http://dbpedia.org/resource/Balangir_district"
      }
    ],
    "id": "cb15bf7284f846b29b8e526dbe1593a5",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "What is the owner of Ivanpah Solar Power Facility and the original developer of Dart?",
    "SerialNumber": "1536",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri} ",
    "entity mapping": [
      {
        "label": "Ivanpah Solar",
        "uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility"
      },
      {
        "label": "Dart",
        "uri": "http://dbpedia.org/resource/Dart_(programming_language)"
      }
    ],
    "id": "db8768bc59044ae58cdf6ba508873b38",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Name the movie which has music composed by Elliot Goldenthal and screenplay by Akiva Goldsman ?",
    "SerialNumber": "1541",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Elliot_Goldenthal> . ?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Elliot Goldenthal",
        "uri": "http://dbpedia.org/resource/Elliot_Goldenthal"
      },
      {
        "label": "Akiva Goldsman",
        "uri": "http://dbpedia.org/resource/Akiva_Goldsman"
      }
    ],
    "id": "d3d85e553d834356807085b355f01240",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which shows had their painters born in England?",
    "SerialNumber": "1542",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/England> . ?uri <http://dbpedia.org/ontology/creator> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "51cbc9d885dd4b7ea69442fd1343c8c9",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "painters",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the former team of the american football players whose position is Running back?",
    "SerialNumber": "1544",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Running_back> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Running back",
        "uri": "http://dbpedia.org/resource/Running_back"
      }
    ],
    "id": "03bb0e70f8a44f4f8650ccf6d6ff03dc",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/ontology/position"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "Did Stan Lee create the Iceman comics?",
    "SerialNumber": "1550",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Iceman_(comics)> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Stan_Lee> }",
    "entity mapping": [
      {
        "label": "Iceman",
        "uri": "http://dbpedia.org/resource/Iceman_(comics)"
      },
      {
        "label": "Stan Lee",
        "uri": "http://dbpedia.org/resource/Stan_Lee"
      }
    ],
    "id": "7645a46261d14d09a5d676889c29a695",
    "predicate mapping": [
      {
        "label": "create",
        "uri": "http://dbpedia.org/property/creators"
      }
    ]
  },
  {
    "question": "What are the movies whose director\u0027s daughter is Luke Scott?",
    "SerialNumber": "1551",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Luke_Scott_(director)> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Luke Scott",
        "uri": "http://dbpedia.org/resource/Luke_Scott_(director)"
      }
    ],
    "id": "1941e1a9b0c24c018927477c05b1e5cc",
    "predicate mapping": [
      {
        "label": "daughter",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Whihc party of the Mizoram Legislative Assembly is the government type of kumta ?",
    "SerialNumber": "1552",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/ontology/governmentType> ?uri. <http://dbpedia.org/resource/Mizoram_Legislative_Assembly> <http://dbpedia.org/property/party> ?uri} ",
    "entity mapping": [
      {
        "label": "kumta",
        "uri": "http://dbpedia.org/resource/Kumta"
      },
      {
        "label": "Mizoram Legislative Assembly",
        "uri": "http://dbpedia.org/resource/Mizoram_Legislative_Assembly"
      }
    ],
    "id": "129712fe4ad5420f9c2c7ec7bf7b44be",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/ontology/governmentType"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "Who is the mfr. of the engine used in Ford Transit ?",
    "SerialNumber": "1555",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ford_Transit> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}",
    "entity mapping": [
      {
        "label": "Ford Transit",
        "uri": "http://dbpedia.org/resource/Ford_Transit"
      }
    ],
    "id": "a3226ab632ca4954b180bdb3473e0aa4",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine"
      },
      {
        "label": "mfr",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "engine",
        "uri": "http://dbpedia.org/ontology/Engine"
      }
    ]
  },
  {
    "question": "What is the birthplace of the Ferrel Harris which is also resting palce of  Green Wix Unthank?",
    "SerialNumber": "1556",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ferrel_Harris> <http://dbpedia.org/property/birthplace> ?uri. <http://dbpedia.org/resource/Green_Wix_Unthank> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Ferrel Harris",
        "uri": "http://dbpedia.org/resource/Ferrel_Harris"
      },
      {
        "label": "Green Wix Unthank",
        "uri": "http://dbpedia.org/resource/Green_Wix_Unthank"
      }
    ],
    "id": "4db21db33c10474689e1a77bde6e0c01",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace"
      },
      {
        "label": "resting",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "Under which president was timothy l. woodruff a lieutenant?",
    "SerialNumber": "1564",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Timothy_L._Woodruff> } ",
    "entity mapping": [
      {
        "label": "timothy l. woodruff",
        "uri": "http://dbpedia.org/resource/Timothy_L._Woodruff"
      }
    ],
    "id": "2a4df258ebd845d6b60aa3371a5e639c",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/property/lieutenant"
      }
    ]
  },
  {
    "question": "Ernest Rutherford was the advisor of how many people?",
    "SerialNumber": "1568",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford"
      }
    ],
    "id": "78671ca44f6445c08adb515eb5031860",
    "predicate mapping": [
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      }
    ]
  },
  {
    "question": "Which birthplace of Liliya Lobanova is also the location of the Snake Island ?",
    "SerialNumber": "1569",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri. <http://dbpedia.org/resource/Snake_Island_(Black_Sea)> <http://dbpedia.org/property/locationCountry> ?uri} ",
    "entity mapping": [
      {
        "label": "Liliya Lobanova",
        "uri": "http://dbpedia.org/resource/Liliya_Lobanova"
      },
      {
        "label": "Snake Island",
        "uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)"
      }
    ],
    "id": "482ddc59c8bc469aba847456beec32d4",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/locationCountry"
      }
    ]
  },
  {
    "question": "What is the nationality of Aishath Saffa ?",
    "SerialNumber": "1571",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aishath_Saffa> <http://dbpedia.org/property/nationality> ?uri } ",
    "entity mapping": [
      {
        "label": "Aishath Saffa",
        "uri": "http://dbpedia.org/resource/Aishath_Saffa"
      }
    ],
    "id": "7750fb1d95a7475ea49813b10023c2ed",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      }
    ]
  },
  {
    "question": "What is the currency of Kerguelen Islands ?",
    "SerialNumber": "1574",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri } ",
    "entity mapping": [
      {
        "label": "Kerguelen Islands",
        "uri": "http://dbpedia.org/resource/Kerguelen_Islands"
      }
    ],
    "id": "bd98b86d3b6c435aacc10d295ce6d25c",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "In how many nations is Coconut a common food ingredient?",
    "SerialNumber": "1576",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Coconut> . ?x <http://dbpedia.org/property/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Coconut",
        "uri": "http://dbpedia.org/resource/Coconut"
      }
    ],
    "id": "b3accf6c63ba441da4b7f73c93c7fc87",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "How many games have been composed by Hirokazu Tanaka?",
    "SerialNumber": "1579",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Hirokazu Tanaka",
        "uri": "http://dbpedia.org/resource/Hirokazu_Tanaka"
      }
    ],
    "id": "e845283de6574fc59a1cce2cc027c070",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Was Queen Latifah in the U.N.I.T.Y. group?",
    "SerialNumber": "1582",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/U.N.I.T.Y.> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Queen_Latifah> }",
    "entity mapping": [
      {
        "label": "U.N.I.T.Y.",
        "uri": "http://dbpedia.org/resource/U.N.I.T.Y."
      },
      {
        "label": "Queen Latifah",
        "uri": "http://dbpedia.org/resource/Queen_Latifah"
      }
    ],
    "id": "67483b164094400d9d576eccb59768bd",
    "predicate mapping": [
      {
        "label": "group",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      }
    ]
  },
  {
    "question": "List the total number of regions of the building whose are located in\\Grand Forks Air Force Base?",
    "SerialNumber": "1584",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/region> <http://dbpedia.org/resource/Grand_Forks_Air_Force_Base> . ?x <http://dbpedia.org/ontology/region> ?uri }",
    "entity mapping": [
      {
        "label": "Grand Forks Air Force Base",
        "uri": "http://dbpedia.org/resource/Grand_Forks_Air_Force_Base"
      }
    ],
    "id": "8346271fdbeb43c38d5f057dcd618d8f",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Which office holder owes its allegiance to a state whose capital town is Jamestown, Virginia?",
    "SerialNumber": "1586",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Jamestown,_Virginia> . ?uri <http://dbpedia.org/property/allegiance> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Jamestown, Virginia",
        "uri": "http://dbpedia.org/resource/Jamestown,_Virginia"
      }
    ],
    "id": "69cb6ce0352f474abab40245852c8670",
    "predicate mapping": [
      {
        "label": "capital town",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Count the different alma maters of people employed by the CNN",
    "SerialNumber": "1588",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "CNN",
        "uri": "http://dbpedia.org/resource/CNN"
      }
    ],
    "id": "432c5c5d446a4b608c1de47eac01170d",
    "predicate mapping": [
      {
        "label": "employed by",
        "uri": "http://dbpedia.org/property/employer"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "What is the common governing body of the Naval Air Facility Adak and Oahu Railway and Land Company?",
    "SerialNumber": "1590",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Air_Facility_Adak> <http://dbpedia.org/property/governingBody> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri . }",
    "entity mapping": [
      {
        "label": "Naval Air Facility Adak",
        "uri": "http://dbpedia.org/resource/Naval_Air_Facility_Adak"
      },
      {
        "label": "Oahu Railway and Land Company",
        "uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company"
      }
    ],
    "id": "e204ffab3fc443009fdb2fe1076fe742",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      }
    ]
  },
  {
    "question": "Was the Funky Lab Rat released in North America?",
    "SerialNumber": "1592",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Funky_Lab_Rat> <http://dbpedia.org/property/released> <http://dbpedia.org/resource/North_America> }",
    "entity mapping": [
      {
        "label": "Funky Lab Rat",
        "uri": "http://dbpedia.org/resource/Funky_Lab_Rat"
      },
      {
        "label": "North America",
        "uri": "http://dbpedia.org/resource/North_America"
      }
    ],
    "id": "3ea8d607953f4c308929055937b16aaa",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/property/released"
      }
    ]
  },
  {
    "question": "Which nation is the origin of Dornier Aerodyne ?",
    "SerialNumber": "1593",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dornier_Aerodyne> <http://dbpedia.org/property/nationalOrigin> ?uri } ",
    "entity mapping": [
      {
        "label": "Dornier Aerodyne",
        "uri": "http://dbpedia.org/resource/Dornier_Aerodyne"
      }
    ],
    "id": "7852a6da015f4c208bb9f11e5e423d74",
    "predicate mapping": [
      {
        "label": "origin nation",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      }
    ]
  },
  {
    "question": "Where is the rival school of Somerset Berkeley Regional High school?",
    "SerialNumber": "1594",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rival> <http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Somerset Berkeley Regional High school",
        "uri": "http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School"
      }
    ],
    "id": "7b5b0c8cb0ab4bd392162a7625ee8375",
    "predicate mapping": [
      {
        "label": "rival",
        "uri": "http://dbpedia.org/ontology/rival"
      },
      {
        "label": "Region",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "What is the state of the settlement, which is the sub assembly of Mohamedia, Tunisia ?",
    "SerialNumber": "1596",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mohamedia,_Tunisia> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mohamedia, Tunisia",
        "uri": "http://dbpedia.org/resource/Mohamedia,_Tunisia"
      }
    ],
    "id": "06b5a80c33ba482fae7bb1d6ca6f4466",
    "predicate mapping": [
      {
        "label": "assembly of",
        "uri": "http://dbpedia.org/ontology/isPartOf"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Name the television show whose company is HBO and Playtone?",
    "SerialNumber": "1597",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      },
      {
        "label": "Playtone",
        "uri": "http://dbpedia.org/resource/Playtone"
      }
    ],
    "id": "6a5d40f8a52947ff8f4c0f896df790b9",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What television show are distributed by Broadcast syndication?",
    "SerialNumber": "1599",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Broadcast syndication",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication"
      }
    ],
    "id": "278c456525224d648387222246b05683",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the common parent of Gettv and hypnotize mind ?",
    "SerialNumber": "1600",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri. <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri} ",
    "entity mapping": [
      {
        "label": "Gettv",
        "uri": "http://dbpedia.org/resource/GetTV"
      },
      {
        "label": "hypnotize mind ",
        "uri": "http://dbpedia.org/resource/Hypnotize_Minds"
      }
    ],
    "id": "b0d14b766ec544f7b6027a2ff2c21705",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      }
    ]
  },
  {
    "question": "Name the mascot of Austin College ?",
    "SerialNumber": "1601",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Austin_College> <http://dbpedia.org/property/mascot> ?uri } ",
    "entity mapping": [
      {
        "label": "Austin College",
        "uri": "http://dbpedia.org/resource/Austin_College"
      }
    ],
    "id": "db8ba3e09dd14372b45c7565c2b078f7",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "What is the birth city of trainer of Leallah?",
    "SerialNumber": "1602",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Leallah> <http://dbpedia.org/property/trainer> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Leallah",
        "uri": "http://dbpedia.org/resource/Leallah"
      }
    ],
    "id": "e61297db8f36438f953bf3f79b912f41",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/property/trainer"
      },
      {
        "label": "birth city",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Name the person with opponents Ike Clanton and Tom McLaury?",
    "SerialNumber": "1603",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Tom_McLaury> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ike Clanton",
        "uri": "http://dbpedia.org/resource/Ike_Clanton"
      },
      {
        "label": "Tom McLaury",
        "uri": "http://dbpedia.org/resource/Tom_McLaury"
      }
    ],
    "id": "698471b904f24b2aa626bb6426728661",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which city was founded by  George Washington and John Forbes (British Army officer)?",
    "SerialNumber": "1608",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/George_Washington> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/John_Forbes_(British_Army_officer)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "George Washington",
        "uri": "http://dbpedia.org/resource/George_Washington"
      },
      {
        "label": "John Forbes (British Army officer)",
        "uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)"
      }
    ],
    "id": "8e8ac76792d840c9849445eb2ee65da9",
    "predicate mapping": [
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "List the country of Tokaj wine region ?",
    "SerialNumber": "1609",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tokaj_wine_region> <http://dbpedia.org/property/country> ?uri } ",
    "entity mapping": [
      {
        "label": "Tokaj wine region",
        "uri": "http://dbpedia.org/resource/Tokaj_wine_region"
      }
    ],
    "id": "778cbddc962441b5b7e5928f7fbd4c0f",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "Who are the golf players whose college is Arizona State Sun Devils?",
    "SerialNumber": "1610",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Arizona_State_Sun_Devils>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}",
    "entity mapping": [
      {
        "label": "Arizona State Sun Devils",
        "uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils"
      }
    ],
    "id": "d291a478d5a74fb6bebdcc6c74bf55c8",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "golf player",
        "uri": "http://dbpedia.org/ontology/GolfPlayer"
      }
    ]
  },
  {
    "question": "Which school did Robbie Diack attend?",
    "SerialNumber": "1615",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robbie_Diack> <http://dbpedia.org/property/school> ?uri } ",
    "entity mapping": [
      {
        "label": "Robbie Diack",
        "uri": "http://dbpedia.org/resource/Robbie_Diack"
      }
    ],
    "id": "d6aaeb41aef44a8b8bffd1a5e90e3d16",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school"
      }
    ]
  },
  {
    "question": "Who is the film star of On Air with Ryan Seacrest ?",
    "SerialNumber": "1616",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/On_Air_with_Ryan_Seacrest> <http://dbpedia.org/ontology/starring> ?uri } ",
    "entity mapping": [
      {
        "label": "On Air with Ryan Seacrest",
        "uri": "http://dbpedia.org/resource/On_Air_with_Ryan_Seacrest"
      }
    ],
    "id": "f1036fdd007245499c769a21e5ecb88e",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/ontology/starring"
      }
    ]
  },
  {
    "question": "Who is the builder of Atamurat-Kerkichi Bridge ?",
    "SerialNumber": "1619",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Atamurat-Kerkichi_Bridge> <http://dbpedia.org/property/builder> ?uri } ",
    "entity mapping": [
      {
        "label": "Atamurat-Kerkichi Bridge",
        "uri": "http://dbpedia.org/resource/Atamurat-Kerkichi_Bridge"
      }
    ],
    "id": "87745e512088474b8c15730c5bb6c4c1",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/property/builder"
      }
    ]
  },
  {
    "question": "To which destinations does Air 2000 fly?",
    "SerialNumber": "1622",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri } ",
    "entity mapping": [
      {
        "label": "Air 2000",
        "uri": "http://dbpedia.org/resource/Air_2000"
      }
    ],
    "id": "31f62ce6b5864c64a97f7cc543adf78e",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      }
    ]
  },
  {
    "question": "Did Stan Lee write the Daredevils?",
    "SerialNumber": "1625",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Daredevils> <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Stan_Lee> }",
    "entity mapping": [
      {
        "label": "the Daredevils",
        "uri": "http://dbpedia.org/resource/The_Daredevils"
      },
      {
        "label": "Stan Lee",
        "uri": "http://dbpedia.org/resource/Stan_Lee"
      }
    ],
    "id": "364f8115122d4456bd0b8b6d9667f399",
    "predicate mapping": [
      {
        "label": "write",
        "uri": "http://dbpedia.org/property/writers"
      }
    ]
  },
  {
    "question": "To what region is Sukhumbhand Paribatra, a leader?",
    "SerialNumber": "1628",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Sukhumbhand_Paribatra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
    "entity mapping": [
      {
        "label": "Sukhumbhand Paribatra",
        "uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra"
      }
    ],
    "id": "37c6c9560a004182b868a8325b4125f7",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/Region"
      }
    ]
  },
  {
    "question": "Where was Picasso\u0027s Last Words recorded ?",
    "SerialNumber": "1629",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Picasso\u0027s_Last_Words_(Drink_to_Me)> <http://dbpedia.org/property/recorded> ?uri } ",
    "entity mapping": [
      {
        "label": "Picasso\u0027s Last Words",
        "uri": "http://dbpedia.org/resource/Picasso\u0027s_Last_Words_(Drink_to_Me)"
      }
    ],
    "id": "8427427253454182aca2857c9c998594",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "What is the largest city of the birthplace of Pat Kirkwood?",
    "SerialNumber": "1630",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pat_Kirkwood_(racing_driver)> <http://dbpedia.org/property/birthplace> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Pat Kirkwood",
        "uri": "http://dbpedia.org/resource/Pat_Kirkwood_(racing_driver)"
      }
    ],
    "id": "b39bd89257314e1590322c36e2473a36",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "For how many movies have the music composer composed music, who have collaborated with Yes ?",
    "SerialNumber": "1631",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Yes_(band)> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Yes",
        "uri": "http://dbpedia.org/resource/Yes_(band)"
      }
    ],
    "id": "b202004bedfc47c3ab2bf3c5a1cadc48",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the largest city of Pulau Ubin ?",
    "SerialNumber": "1632",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Pulau Ubin",
        "uri": "http://dbpedia.org/resource/Pulau_Ubin"
      }
    ],
    "id": "08a500572859403193faa199f742c448",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "Which key perosn of the Elders is also the president of united World College ?",
    "SerialNumber": "1634",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Elders_(organization)> <http://dbpedia.org/property/keyPeople> ?uri. <http://dbpedia.org/resource/United_World_Colleges> <http://dbpedia.org/ontology/president> ?uri} ",
    "entity mapping": [
      {
        "label": "the Elders",
        "uri": "http://dbpedia.org/resource/The_Elders_(organization)"
      },
      {
        "label": "united World College",
        "uri": "http://dbpedia.org/resource/United_World_Colleges"
      }
    ],
    "id": "ec8a5db122044505b00fd65fb461df70",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "What is the total number of other nearest countries to the lakes whose nearest countries is Uganda?",
    "SerialNumber": "1635",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Uganda> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri }",
    "entity mapping": [
      {
        "label": "Uganda",
        "uri": "http://dbpedia.org/resource/Uganda"
      }
    ],
    "id": "6b13f7438d6d4847b09299089889dd7e",
    "predicate mapping": [
      {
        "label": "nearest",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "nearest",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      }
    ]
  },
  {
    "question": "Name the shows whose theme was composed by a band in which Jay Lane used to be?",
    "SerialNumber": "1638",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Jay_Lane> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Jay Lane",
        "uri": "http://dbpedia.org/resource/Jay_Lane"
      }
    ],
    "id": "379c894ed50943efa6daca5de2dba735",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many units follow the US Navy Department\u0027s command structure?",
    "SerialNumber": "1642",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "US Navy Department",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy"
      }
    ],
    "id": "d8f5b908b827406cb94b84acf46a4d08",
    "predicate mapping": [
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      },
      {
        "label": "units",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Which education institute of Duncan U. Fletcher is also the university of Vanderbilt Commodores ?",
    "SerialNumber": "1645",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duncan_U._Fletcher> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri} ",
    "entity mapping": [
      {
        "label": "Duncan U. Fletcher",
        "uri": "http://dbpedia.org/resource/Duncan_U._Fletcher"
      },
      {
        "label": "Vanderbilt Commodores",
        "uri": "http://dbpedia.org/resource/Vanderbilt_Commodores"
      }
    ],
    "id": "24b693a3d51d407081f086a373e872c9",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university"
      }
    ]
  },
  {
    "question": "Which license provider of MSX basic is also the designer of Language Integrated Query ?",
    "SerialNumber": "1646",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri} ",
    "entity mapping": [
      {
        "label": "Language Integrated Query",
        "uri": "http://dbpedia.org/resource/Language_Integrated_Query"
      },
      {
        "label": "MSX basic",
        "uri": "http://dbpedia.org/resource/MSX_BASIC"
      }
    ],
    "id": "5581904287e54612991d36031d060a31",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license"
      }
    ]
  },
  {
    "question": "What are the awards received by spouse of Ellen Lundstrom?",
    "SerialNumber": "1649",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ellen_Lundström> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ellen Lundstrom",
        "uri": "http://dbpedia.org/resource/Ellen_Lundström"
      }
    ],
    "id": "57b3533cb2b741e1a567c34b4ff71b21",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Is Plymouth High School for Girls in Devon county?",
    "SerialNumber": "1650",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Plymouth_High_School_for_Girls> <http://dbpedia.org/ontology/county> <http://dbpedia.org/resource/Devon> }",
    "entity mapping": [
      {
        "label": "Plymouth High School for Girls",
        "uri": "http://dbpedia.org/resource/Plymouth_High_School_for_Girls"
      },
      {
        "label": "Devon",
        "uri": "http://dbpedia.org/resource/Devon"
      }
    ],
    "id": "92a16632674c43289898624bf2cb23aa",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/county"
      }
    ]
  },
  {
    "question": "In which city is the hub airport of Club One Air?",
    "SerialNumber": "1651",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Club_One_Air> <http://dbpedia.org/ontology/hubAirport> ?x . ?x <http://dbpedia.org/property/cityServed> ?uri  . }",
    "entity mapping": [
      {
        "label": "Club One Air",
        "uri": "http://dbpedia.org/resource/Club_One_Air"
      }
    ],
    "id": "b8c65342df0845babde8d67c22d0343c",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cityServed"
      }
    ]
  },
  {
    "question": "List the first drivers of Grand Prixes where Mika Hakkinen was a pole driver.",
    "SerialNumber": "1652",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/poleDriver> <http://dbpedia.org/resource/Mika_Häkkinen> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "entity mapping": [
      {
        "label": "Mika Hakkinen",
        "uri": "http://dbpedia.org/resource/Mika_Häkkinen"
      }
    ],
    "id": "15dd4008b74d40e89454e046b370e8f8",
    "predicate mapping": [
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver"
      },
      {
        "label": "Grand Prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix"
      }
    ]
  },
  {
    "question": "Who is the designer of Saleen S5S Raptor ?",
    "SerialNumber": "1657",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saleen_S5S_Raptor> <http://dbpedia.org/property/designer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Saleen S5S Raptor",
        "uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor"
      }
    ],
    "id": "900865ae340c40d793d500a8d01ca479",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/property/designer"
      }
    ]
  },
  {
    "question": "Name some TV shows whose theme is made by a band associated with Buckethead?",
    "SerialNumber": "1658",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Buckethead> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Buckethead",
        "uri": "http://dbpedia.org/resource/Buckethead"
      }
    ],
    "id": "6e4a15a53aae46c98668eb591c9d4c6d",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "theme",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many different people hold authority over the members of Balanidae family?",
    "SerialNumber": "1659",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Balanidae> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . }",
    "entity mapping": [
      {
        "label": "Balanidae",
        "uri": "http://dbpedia.org/resource/Balanidae"
      }
    ],
    "id": "299a2517930845609e238e4349ba2e5a",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      }
    ]
  },
  {
    "question": "Which fields\u0027 academic journals are found in the US?",
    "SerialNumber": "1660",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . }",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "e97e582bdce440f9acac0f42cfa04053",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/discipline"
      }
    ]
  },
  {
    "question": "Which basketball team\u0027s coach is Kurt Rambis?",
    "SerialNumber": "1662",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Kurt_Rambis> } ",
    "entity mapping": [
      {
        "label": "Kurt Rambis",
        "uri": "http://dbpedia.org/resource/Kurt_Rambis"
      }
    ],
    "id": "663ee78f1ef04f2e993a7e2bfc3a33f6",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      }
    ]
  },
  {
    "question": "How many other region served are there of the companies which serves  Pacific Ocean ?",
    "SerialNumber": "1663",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Pacific_Ocean> . ?x <http://dbpedia.org/ontology/regionServed> ?uri }",
    "entity mapping": [
      {
        "label": "Pacific Ocean",
        "uri": "http://dbpedia.org/resource/Pacific_Ocean"
      }
    ],
    "id": "ef2ee51cf7824d8fa2fd0a5ab306a4dc",
    "predicate mapping": [
      {
        "label": "region served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "region served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      }
    ]
  },
  {
    "question": "Name the alma mater of Ernest de Saisset ?",
    "SerialNumber": "1665",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ernest_de_Saisset> <http://dbpedia.org/ontology/almaMater> ?uri } ",
    "entity mapping": [
      {
        "label": "Ernest de Saisset",
        "uri": "http://dbpedia.org/resource/Ernest_de_Saisset"
      }
    ],
    "id": "ec64691c6956449cb904adfc2f248e5e",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Whose constituency is Duboce Triangle ?",
    "SerialNumber": "1667",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco>  . }",
    "entity mapping": [
      {
        "label": "Duboce Triangle",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco"
      }
    ],
    "id": "dd2c217006414f468433007e3ee89d47",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      }
    ]
  },
  {
    "question": "Name the office holder with predecessor as Mark Latham and partner Tim Mathieson ?",
    "SerialNumber": "1668",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Mark_Latham> . ?uri <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Tim_Mathieson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Mark Latham",
        "uri": "http://dbpedia.org/resource/Mark_Latham"
      },
      {
        "label": "Tim Mathieson",
        "uri": "http://dbpedia.org/resource/Tim_Mathieson"
      }
    ],
    "id": "df38113ac72a4b079f4b7ce32a5fab4d",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What are some party leaders of the parties which have had a seat in Berlin?",
    "SerialNumber": "1669",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Berlin> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "entity mapping": [
      {
        "label": "Berlin",
        "uri": "http://dbpedia.org/resource/Berlin"
      }
    ],
    "id": "279603f7c94547af858759999611f14d",
    "predicate mapping": [
      {
        "label": "seat",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/PoliticalParty"
      }
    ]
  },
  {
    "question": "What is the location city of the Denver Broncos which is also  place of birth of the William C. Cramer ?",
    "SerialNumber": "1671",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri. <http://dbpedia.org/resource/William_C._Cramer> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Denver Broncos",
        "uri": "http://dbpedia.org/resource/Denver_Broncos"
      },
      {
        "label": "William C. Cramer",
        "uri": "http://dbpedia.org/resource/William_C._Cramer"
      }
    ],
    "id": "a39c0776beac448ba93918e218e263d9",
    "predicate mapping": [
      {
        "label": "location city",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Which video game\u0027s artist is Hiroji Kiyotake and computing platform is Virtual Console?",
    "SerialNumber": "1673",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Hiroji_Kiyotake> . ?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Hiroji Kiyotake",
        "uri": "http://dbpedia.org/resource/Hiroji_Kiyotake"
      },
      {
        "label": "Virtual Console",
        "uri": "http://dbpedia.org/resource/Virtual_Console"
      }
    ],
    "id": "a6422effde9d467e8150547dafbdb5f6",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "computing platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "List the characters of Lysistrata ?",
    "SerialNumber": "1676",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lysistrata> <http://dbpedia.org/property/characters> ?uri } ",
    "entity mapping": [
      {
        "label": "Lysistrata",
        "uri": "http://dbpedia.org/resource/Lysistrata"
      }
    ],
    "id": "f84586d24de34750a3807a55539f8bf9",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      }
    ]
  },
  {
    "question": "Where is the office of P Elmo Futrell Jr?",
    "SerialNumber": "1677",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/P._Elmo_Futrell,_Jr.> <http://dbpedia.org/property/office> ?uri  . }",
    "entity mapping": [
      {
        "label": "P Elmo Futrell Jr",
        "uri": "http://dbpedia.org/resource/P._Elmo_Futrell,_Jr."
      }
    ],
    "id": "6165d3f09df840a0920e30b60a8a66ed",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "What is the baseball team whose club manager\u0027s debut team is Houston Astros?",
    "SerialNumber": "1679",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?uri <http://dbpedia.org/ontology/manager> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "entity mapping": [
      {
        "label": "Houston Astros",
        "uri": "http://dbpedia.org/resource/Houston_Astros"
      }
    ],
    "id": "9a52bd8a34ec4f4ea8936de7ddaf2d47",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "club manager",
        "uri": "http://dbpedia.org/ontology/manager"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam"
      }
    ]
  },
  {
    "question": "List the producer of the television shows distributed by FremantleMedia.",
    "SerialNumber": "1680",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "FremantleMedia",
        "uri": "http://dbpedia.org/resource/FremantleMedia"
      }
    ],
    "id": "d9a5d02d87f1498995339381249f32ad",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What stadium\u0027s operator is Stan Kroenke",
    "SerialNumber": "1681",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Stan_Kroenke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Stan Kroenke",
        "uri": "http://dbpedia.org/resource/Stan_Kroenke"
      }
    ],
    "id": "fdff8ccca9db497f99b8d58a8528289e",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "List all binomial authority of the insects whose one of the  binomial authority is douard Mntries?",
    "SerialNumber": "1683",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/binomialAuthority> <http://dbpedia.org/resource/Édouard_Ménétries> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . }",
    "entity mapping": [
      {
        "label": "douard Mntries",
        "uri": "http://dbpedia.org/resource/Édouard_Ménétries"
      }
    ],
    "id": "2bb47e7a93f54b089d92f2822728eb97",
    "predicate mapping": [
      {
        "label": "binomial authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      },
      {
        "label": "binomial authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      }
    ]
  },
  {
    "question": "In which state is Red Willow Creek?",
    "SerialNumber": "1684",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_Willow_Creek> <http://dbpedia.org/ontology/state> ?uri } ",
    "entity mapping": [
      {
        "label": "Red Willow Creek",
        "uri": "http://dbpedia.org/resource/Red_Willow_Creek"
      }
    ],
    "id": "d173daed7ab8420da0c8c83b7327b298",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      }
    ]
  },
  {
    "question": "Where does Manu cornet work?",
    "SerialNumber": "1685",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Manu cornet",
        "uri": "http://dbpedia.org/resource/Manu_Cornet"
      }
    ],
    "id": "6b258a86694f43419d3c78e7aec3c3a7",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/employer"
      }
    ]
  },
  {
    "question": "Name the resting place of Fazlur Rahman Khan ?",
    "SerialNumber": "1686",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fazlur_Rahman_Khan> <http://dbpedia.org/ontology/restingPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "Fazlur Rahman Khan",
        "uri": "http://dbpedia.org/resource/Fazlur_Rahman_Khan"
      }
    ],
    "id": "51c70eaba07848f2a77e752b51b5d1d4",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "What is the famous relative of Mrunalini Kunte known for?",
    "SerialNumber": "1690",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Mrunalini_Kunte> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mrunalini Kunte",
        "uri": "http://dbpedia.org/resource/Mrunalini_Kunte"
      }
    ],
    "id": "7f3a0c2887a7423eb69732bbf1208c88",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "What is the resting place of the person who is the successor of James W. Hyatt ?",
    "SerialNumber": "1691",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/James_W._Hyatt> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "James W. Hyatt",
        "uri": "http://dbpedia.org/resource/James_W._Hyatt"
      }
    ],
    "id": "3c8f5b5976af40178208af0ac6ccae51",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What politician\u0027s partner is Diana Taylor ?",
    "SerialNumber": "1692",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Diana_Taylor_(superintendent)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Diana Taylor",
        "uri": "http://dbpedia.org/resource/Diana_Taylor_(superintendent)"
      }
    ],
    "id": "e8db37fb6c5445dbbbc87de13325c056",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "What is the district of Methodist Central Hall Westminster ?",
    "SerialNumber": "1694",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Methodist_Central_Hall_Westminster> <http://dbpedia.org/ontology/district> ?uri } ",
    "entity mapping": [
      {
        "label": "Methodist Central Hall Westminster",
        "uri": "http://dbpedia.org/resource/Methodist_Central_Hall_Westminster"
      }
    ],
    "id": "04f9e85f054f4225bed1717739a1e8f9",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district"
      }
    ]
  },
  {
    "question": "What is the academic journal whose editor is Stephen Law?",
    "SerialNumber": "1695",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Stephen_Law>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "Stephen Law",
        "uri": "http://dbpedia.org/resource/Stephen_Law"
      }
    ],
    "id": "dd004ede34464a0f82faca6742a25184",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "academic journal",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "List the people died in Hyderabad and are a member of political party ?",
    "SerialNumber": "1698",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Hyderabad> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Hyderabad",
        "uri": "http://dbpedia.org/resource/Hyderabad"
      }
    ],
    "id": "9eed6571d0a94fbb9a0cbca09a094a42",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Is Esther Alder the mayor of Geneva?",
    "SerialNumber": "1700",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Esther_Alder> }",
    "entity mapping": [
      {
        "label": "Geneva",
        "uri": "http://dbpedia.org/resource/Geneva"
      },
      {
        "label": "Esther Alder",
        "uri": "http://dbpedia.org/resource/Esther_Alder"
      }
    ],
    "id": "9e8f8ca6979d424ca40a9cad3ba2b841",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor"
      }
    ]
  },
  {
    "question": "What are the baseball players who played for San Francisco Giants?",
    "SerialNumber": "1701",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_Giants>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "entity mapping": [
      {
        "label": "San Francisco Giants",
        "uri": "http://dbpedia.org/resource/San_Francisco_Giants"
      }
    ],
    "id": "4d2c398f35de4c2891ccc4c3b77e1ed6",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer"
      }
    ]
  },
  {
    "question": "Which architect of Marine Corps Air Station Kaneohe Bay was also tenant of New Sanno hotel /\u0027",
    "SerialNumber": "1702",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri. <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri} ",
    "entity mapping": [
      {
        "label": "Marine Corps Air Station Kaneohe Bay",
        "uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay"
      },
      {
        "label": "New Sanno hotel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel"
      }
    ],
    "id": "4a64f2d15b0b43d8a9e07d44a7be8966",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "Where does the Jerusalem Institute of Justice render their services?",
    "SerialNumber": "1704",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerusalem_Institute_of_Justice> <http://dbpedia.org/ontology/service> ?uri } ",
    "entity mapping": [
      {
        "label": "Jerusalem Institute of Justice",
        "uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice"
      }
    ],
    "id": "69c1b8315bfc45bc8d7001b2207bf482",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service"
      }
    ]
  },
  {
    "question": "Which political party got elected in First Legislative Assembly of Uttar Pradesh ?",
    "SerialNumber": "1706",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh> <http://dbpedia.org/property/party> ?uri } ",
    "entity mapping": [
      {
        "label": "First Legislative Assembly of Uttar Pradesh",
        "uri": "http://dbpedia.org/resource/First_Legislative_Assembly_of_Uttar_Pradesh"
      }
    ],
    "id": "adb445039dba499fb87254b5db15cf1d",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "How many companies were founded in Menlo Park, California?",
    "SerialNumber": "1707",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Menlo_Park,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Menlo Park, California",
        "uri": "http://dbpedia.org/resource/Menlo_Park,_California"
      }
    ],
    "id": "5e35e8af2b984b51b235bbe13703c939",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the television show whose channel\u0027s parent organisation is Fox Sports?",
    "SerialNumber": "1708",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Fox_Sports_(United_States)> . ?uri <http://dbpedia.org/ontology/channel> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Fox Sports",
        "uri": "http://dbpedia.org/resource/Fox_Sports_(United_States)"
      }
    ],
    "id": "ccb09f2a248b46a6bbc34abf3022e4f2",
    "predicate mapping": [
      {
        "label": "parent organisation",
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which bands are associated to David Paton?",
    "SerialNumber": "1709",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Paton> <http://dbpedia.org/ontology/associatedBand> ?uri } ",
    "entity mapping": [
      {
        "label": "David Paton",
        "uri": "http://dbpedia.org/resource/David_Paton"
      }
    ],
    "id": "bed5afa37566420489106a8f8da38bb0",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "Who wrote a streetcar named desire?",
    "SerialNumber": "1710",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)> <http://dbpedia.org/property/writer> ?uri } ",
    "entity mapping": [
      {
        "label": "a streetcar named desire",
        "uri": "http://dbpedia.org/resource/A_Streetcar_Named_Desire_(play)"
      }
    ],
    "id": "39c7d79acd6a4c698df99c2cf360fdee",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "Who is the president when Loretta Ucelli used to work for Democratic party?",
    "SerialNumber": "1714",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Loretta_Ucelli> <http://dbpedia.org/ontology/president> ?uri } ",
    "entity mapping": [
      {
        "label": "Loretta Ucelli",
        "uri": "http://dbpedia.org/resource/Loretta_Ucelli"
      }
    ],
    "id": "23b82966a26e4e568066583eee6da399",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "What are the players whose former teams are Carolina Panthers and Indianapolis Colts?",
    "SerialNumber": "1716",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . }",
    "entity mapping": [
      {
        "label": "Carolina Panthers",
        "uri": "http://dbpedia.org/resource/Carolina_Panthers"
      },
      {
        "label": "Indianapolis Colts",
        "uri": "http://dbpedia.org/resource/Indianapolis_Colts"
      }
    ],
    "id": "739fbedde305453abbfed585e00e09b1",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "How many basketball players studied in the Midland College?",
    "SerialNumber": "1718",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Midland_College>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "Midland College",
        "uri": "http://dbpedia.org/resource/Midland_College"
      }
    ],
    "id": "a74dc03be29c445da9b7b70e054546d1",
    "predicate mapping": [
      {
        "label": "College",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "Rickenbacker is a musical instrument played by which artists?",
    "SerialNumber": "1719",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Rickenbacker>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Rickenbacker",
        "uri": "http://dbpedia.org/resource/Rickenbacker"
      }
    ],
    "id": "f40c1a2ee9c24177ad87206df71211e0",
    "predicate mapping": [
      {
        "label": "musical instrument",
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Deion sanders and Hinkey haines debuted their career with which common team?",
    "SerialNumber": "1720",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hinkey_Haines> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Deion_Sanders> <http://dbpedia.org/property/debutteam> ?uri . }",
    "entity mapping": [
      {
        "label": "Hinkey haines",
        "uri": "http://dbpedia.org/resource/Hinkey_Haines"
      },
      {
        "label": "Deion sanders",
        "uri": "http://dbpedia.org/resource/Deion_Sanders"
      }
    ],
    "id": "b8602cf66ce54d7480a3cf07b2d2329f",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "Is Liang Chow the headcoach of Shawn Johnson?",
    "SerialNumber": "1721",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shawn_Johnson> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Liang_Chow> }",
    "entity mapping": [
      {
        "label": "Shawn Johnson",
        "uri": "http://dbpedia.org/resource/Shawn_Johnson"
      },
      {
        "label": "Liang Chow",
        "uri": "http://dbpedia.org/resource/Liang_Chow"
      }
    ],
    "id": "1bfa3acdacdd4b798f6e8cf072d4ed54",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach"
      }
    ]
  },
  {
    "question": "In which television shows has Eliza Schneider given her voice?",
    "SerialNumber": "1724",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Eliza Schneider",
        "uri": "http://dbpedia.org/resource/Eliza_Schneider"
      }
    ],
    "id": "7b86db7dd4c14d2e8d914ef82ac4044e",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "From which country is Lawrence Okoye\u0027s nationality ?",
    "SerialNumber": "1726",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lawrence_Okoye> <http://dbpedia.org/property/nationality> ?uri } ",
    "entity mapping": [
      {
        "label": "Lawrence Okoye",
        "uri": "http://dbpedia.org/resource/Lawrence_Okoye"
      }
    ],
    "id": "75956ea1ffb748f7b9bb48794ac65260",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      }
    ]
  },
  {
    "question": "What is the base currency of Benelux ?",
    "SerialNumber": "1729",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri } ",
    "entity mapping": [
      {
        "label": "Benelux",
        "uri": "http://dbpedia.org/resource/Benelux"
      }
    ],
    "id": "0d7b3b1e1ef24b64bb14f8a88bb3ba16",
    "predicate mapping": [
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/property/currency"
      }
    ]
  },
  {
    "question": "Where did Steve Romeo dies ?",
    "SerialNumber": "1732",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Romeo> <http://dbpedia.org/ontology/deathPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "Steve Romeo",
        "uri": "http://dbpedia.org/resource/Steve_Romeo"
      }
    ],
    "id": "8e45bd7253a74f70beef10fbff653824",
    "predicate mapping": [
      {
        "label": "dies",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "What is the government type of Ancient Rome ?",
    "SerialNumber": "1734",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ancient_Rome> <http://dbpedia.org/ontology/governmentType> ?uri } ",
    "entity mapping": [
      {
        "label": "Ancient Rome",
        "uri": "http://dbpedia.org/resource/Ancient_Rome"
      }
    ],
    "id": "81717b01e68a4e36876d59157b0c01d9",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/ontology/governmentType"
      }
    ]
  },
  {
    "question": "Who are the animator of The Skeleton Dance?",
    "SerialNumber": "1735",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri } ",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance"
      }
    ],
    "id": "58f1836b2739462a8eee1fb265dfabf3",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator"
      }
    ]
  },
  {
    "question": "What is the birth location of the pope who was canonized by Agatha of Sicily?",
    "SerialNumber": "1736",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Agatha_of_Sicily> <http://dbpedia.org/ontology/canonizedBy> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}",
    "entity mapping": [
      {
        "label": "Agatha of Sicily",
        "uri": "http://dbpedia.org/resource/Agatha_of_Sicily"
      }
    ],
    "id": "80b6db330714404da1f2443e719d62f4",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/ontology/canonizedBy"
      },
      {
        "label": "birth location",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "pope",
        "uri": "http://dbpedia.org/ontology/Pope"
      }
    ]
  },
  {
    "question": "Which destination of the Novair International Airways is also the  predecessor of the Chevrolet Caprice?",
    "SerialNumber": "1741",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Chevrolet_Caprice> <http://dbpedia.org/ontology/predecessor> ?uri} ",
    "entity mapping": [
      {
        "label": "Novair International Airways",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways"
      },
      {
        "label": "Chevrolet Caprice",
        "uri": "http://dbpedia.org/resource/Chevrolet_Caprice"
      }
    ],
    "id": "691a84e5e7b3486aa5ff297feb1d534b",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      }
    ]
  },
  {
    "question": "What are some scientists who have stateless citizenship?",
    "SerialNumber": "1742",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "stateless",
        "uri": "http://dbpedia.org/resource/Statelessness"
      }
    ],
    "id": "11b93f9e8ea74606a3e6e0e6f6e55a21",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "List the doctoral students of Harry Harlow ?",
    "SerialNumber": "1743",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Harlow> <http://dbpedia.org/property/doctoralStudents> ?uri } ",
    "entity mapping": [
      {
        "label": "Harry Harlow",
        "uri": "http://dbpedia.org/resource/Harry_Harlow"
      }
    ],
    "id": "53ed8e82e6ec49d0b9e1762d781e71d4",
    "predicate mapping": [
      {
        "label": "doctoral students",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      }
    ]
  },
  {
    "question": "Name whose youth club was FC Barcelona ?",
    "SerialNumber": "1748",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona>  . }",
    "entity mapping": [
      {
        "label": "FC Barcelona",
        "uri": "http://dbpedia.org/resource/FC_Barcelona"
      }
    ],
    "id": "444c3a8fb88747a4bce43c1d413b2b26",
    "predicate mapping": [
      {
        "label": "youth club",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "Which religion does the leader of Church and Wellesley follow?",
    "SerialNumber": "1749",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Church_and_Wellesley> <http://dbpedia.org/property/leaderName> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Church and Wellesley",
        "uri": "http://dbpedia.org/resource/Church_and_Wellesley"
      }
    ],
    "id": "7991781a1984410b9f4707dd643830a3",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What is the citizenship of Erastus Wiman ?",
    "SerialNumber": "1750",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erastus_Wiman> <http://dbpedia.org/ontology/citizenship> ?uri } ",
    "entity mapping": [
      {
        "label": "Erastus Wiman",
        "uri": "http://dbpedia.org/resource/Erastus_Wiman"
      }
    ],
    "id": "92dea938b59a49b88d62bed248dc6a4c",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship"
      }
    ]
  },
  {
    "question": "Does the Amazon River start in Arequipa Region?",
    "SerialNumber": "1751",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Amazon_River> <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region> }",
    "entity mapping": [
      {
        "label": "Amazon River",
        "uri": "http://dbpedia.org/resource/Amazon_River"
      },
      {
        "label": "Arequipa Region",
        "uri": "http://dbpedia.org/resource/Arequipa_Region"
      }
    ],
    "id": "7e9e2be8376e470bbfbe44d535fd2b65",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/sourceRegion"
      }
    ]
  },
  {
    "question": "Which is the nearest city to Elliott Bay ?",
    "SerialNumber": "1752",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Elliott Bay",
        "uri": "http://dbpedia.org/resource/Elliott_Bay"
      }
    ],
    "id": "24b98ce65ef6434f9ea0fdbc61657261",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      }
    ]
  },
  {
    "question": "What are the movies whose screenplay is done by Eric Roth?",
    "SerialNumber": "1754",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Eric_Roth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Eric Roth",
        "uri": "http://dbpedia.org/resource/Eric_Roth"
      }
    ],
    "id": "8575d9a3b2064c21985eeeeb57e60eb4",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "List the movie whose music was given by Geoffrey Burgon and distributed by Cinema International Corporation?",
    "SerialNumber": "1755",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Geoffrey Burgon",
        "uri": "http://dbpedia.org/resource/Geoffrey_Burgon"
      },
      {
        "label": "Cinema International Corporation",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation"
      }
    ],
    "id": "dd43bcfacc674fb8980f943492e44533",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which series has an episode called The lost special and also a character named Sherlock Holmes ?",
    "SerialNumber": "1756",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri. <http://dbpedia.org/resource/Sherlock_Holmes_(play)> <http://dbpedia.org/property/characters> ?uri} ",
    "entity mapping": [
      {
        "label": "The lost special",
        "uri": "http://dbpedia.org/resource/The_Lost_Special"
      },
      {
        "label": "Sherlock Holmes",
        "uri": "http://dbpedia.org/resource/Sherlock_Holmes_(play)"
      }
    ],
    "id": "e8c5049fd8a743ee8d0faf76a10ae000",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/series"
      },
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters"
      }
    ]
  },
  {
    "question": "What cities are near to Nihoa which is also known as Bird Island ?",
    "SerialNumber": "1758",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nihoa> <http://dbpedia.org/property/nearestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Nihoa",
        "uri": "http://dbpedia.org/resource/Nihoa"
      }
    ],
    "id": "ffc2d9ad79e947ae95f0e8795dad6214",
    "predicate mapping": [
      {
        "label": "near are",
        "uri": "http://dbpedia.org/property/nearestCity"
      }
    ]
  },
  {
    "question": "How many cities are around the sea in which the the fig tree bay meets?",
    "SerialNumber": "1760",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fig_Tree_Bay> <http://dbpedia.org/ontology/inflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "fig tree bay",
        "uri": "http://dbpedia.org/resource/Fig_Tree_Bay"
      }
    ],
    "id": "51982b316423405bb8b05661dd691bff",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/inflow"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Count the number of families of the Animal kingdom.",
    "SerialNumber": "1762",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/family> ?uri  . }",
    "entity mapping": [
      {
        "label": "Animal",
        "uri": "http://dbpedia.org/resource/Animal"
      }
    ],
    "id": "002b171e559d44dab3ae234723824bac",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "Which magazine has publisher as Jann Wenner?",
    "SerialNumber": "1763",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Jann_Wenner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Jann Wenner",
        "uri": "http://dbpedia.org/resource/Jann_Wenner"
      }
    ],
    "id": "da9e64c20e50473fb7df93281a4a2d44",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "What are the broadcast areas of Mauritius Broadcasting Corporation?",
    "SerialNumber": "1766",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation> <http://dbpedia.org/property/broadcastArea> ?uri } ",
    "entity mapping": [
      {
        "label": "Mauritius Broadcasting Corporation",
        "uri": "http://dbpedia.org/resource/Mauritius_Broadcasting_Corporation"
      }
    ],
    "id": "ca66ad5b2f544c31a6254b0ba2808274",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      }
    ]
  },
  {
    "question": "Where is the ground of the soccer club, which has Alan Kusov as a team member ?",
    "SerialNumber": "1767",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alan_Kusov__11> <http://dbpedia.org/ontology/team> ?x . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "Alan Kusov",
        "uri": "http://dbpedia.org/resource/Alan_Kusov__11"
      }
    ],
    "id": "c4cb772e25ba433582020a0bf1bea228",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "which president was served by Joseph Stiglitz?",
    "SerialNumber": "1768",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri } ",
    "entity mapping": [
      {
        "label": "Joseph Stiglitz",
        "uri": "http://dbpedia.org/resource/Joseph_Stiglitz"
      }
    ],
    "id": "9c91b4cd6e5341e08778831ad38a79d3",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "What is the nickname of the club managed by Piotr baron?",
    "SerialNumber": "1769",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manager> <http://dbpedia.org/resource/Piotr_Baron> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "entity mapping": [
      {
        "label": "Piotr baron",
        "uri": "http://dbpedia.org/resource/Piotr_Baron"
      }
    ],
    "id": "eba614f60dae40f98002cee1a97d644a",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/manager"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "Did Trish Stratus train Christina Crawford?",
    "SerialNumber": "1771",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christina_Crawford_(wrestler)> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Trish_Stratus> }",
    "entity mapping": [
      {
        "label": "Christina Crawford",
        "uri": "http://dbpedia.org/resource/Christina_Crawford_(wrestler)"
      },
      {
        "label": "Trish Stratus",
        "uri": "http://dbpedia.org/resource/Trish_Stratus"
      }
    ],
    "id": "4a61c257cb3c4649a59faec69a5bab87",
    "predicate mapping": [
      {
        "label": "train",
        "uri": "http://dbpedia.org/property/trainer"
      }
    ]
  },
  {
    "question": "Who is the writer of the Cavalcade of America and The United States Steel Hour ?",
    "SerialNumber": "1772",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cavalcade_of_America> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/The_United_States_Steel_Hour> <http://dbpedia.org/ontology/writer> ?uri . }",
    "entity mapping": [
      {
        "label": "Cavalcade of America",
        "uri": "http://dbpedia.org/resource/Cavalcade_of_America"
      },
      {
        "label": "The United States Steel Hour",
        "uri": "http://dbpedia.org/resource/The_United_States_Steel_Hour"
      }
    ],
    "id": "6abff67222f640f98134a1d608370fc0",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      }
    ]
  },
  {
    "question": "To what nation do Victor Gunasekara and Anuruddha Ratwatte owe their allegiance?",
    "SerialNumber": "1773",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victor_Gunasekara> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Anuruddha_Ratwatte> <http://dbpedia.org/property/allegiance> ?uri . }",
    "entity mapping": [
      {
        "label": "Victor Gunasekara",
        "uri": "http://dbpedia.org/resource/Victor_Gunasekara"
      },
      {
        "label": "Anuruddha Ratwatte",
        "uri": "http://dbpedia.org/resource/Anuruddha_Ratwatte"
      }
    ],
    "id": "d98921970a2643a8b9b1d8863e275faf",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      }
    ]
  },
  {
    "question": "Name the cover artist of the adventure of Tom sawyer ?",
    "SerialNumber": "1777",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri } ",
    "entity mapping": [
      {
        "label": "the adventure of Tom sawyer",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer"
      }
    ],
    "id": "9496ce7155814acaac417eb27fd22cc1",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/ontology/coverArtist"
      }
    ]
  },
  {
    "question": "What is the nationality of the golf player who won the  2002 Players Championship ?",
    "SerialNumber": "1779",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/2002_Players_Championship> <http://dbpedia.org/ontology/champion> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}",
    "entity mapping": [
      {
        "label": "2002 Players Championship",
        "uri": "http://dbpedia.org/resource/2002_Players_Championship"
      }
    ],
    "id": "1bbb3a798a1f410986aeee42f900f74b",
    "predicate mapping": [
      {
        "label": "Champion",
        "uri": "http://dbpedia.org/ontology/champion"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "golf player",
        "uri": "http://dbpedia.org/ontology/GolfPlayer"
      }
    ]
  },
  {
    "question": "Which companies are founded in the city of which Collin County Texas is a part?",
    "SerialNumber": "1781",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Collin_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Collin County",
        "uri": "http://dbpedia.org/resource/Collin_County,_Texas"
      }
    ],
    "id": "96886b0fa50b4ecebcc44d15c8c59b37",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who is the former partner of Chris Knierim ?",
    "SerialNumber": "1784",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Knierim> <http://dbpedia.org/ontology/formerPartner> ?uri } ",
    "entity mapping": [
      {
        "label": "Chris Knierim",
        "uri": "http://dbpedia.org/resource/Chris_Knierim"
      }
    ],
    "id": "d742a7e01f4c4ee48d60d542ecc2fb42",
    "predicate mapping": [
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      }
    ]
  },
  {
    "question": "What is the predecessor of BMW M40 ?",
    "SerialNumber": "1785",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BMW_M40> <http://dbpedia.org/property/predecessor> ?uri } ",
    "entity mapping": [
      {
        "label": "BMW M40",
        "uri": "http://dbpedia.org/resource/BMW_M40"
      }
    ],
    "id": "443f406a43a149918fa7e12a6326a81e",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      }
    ]
  },
  {
    "question": "What is the former team of the football player who is the coach of 2006 Oakland Raiders season ?",
    "SerialNumber": "1787",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/2006_Oakland_Raiders_season> <http://dbpedia.org/property/coach> ?x . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "2006 Oakland Raiders season",
        "uri": "http://dbpedia.org/resource/2006_Oakland_Raiders_season"
      }
    ],
    "id": "74971790782c4927ab2f8321c4e322a3",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "Who is the partner of Rob Patterson?",
    "SerialNumber": "1793",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Rob_Patterson>  . }",
    "entity mapping": [
      {
        "label": "Rob Patterson",
        "uri": "http://dbpedia.org/resource/Rob_Patterson"
      }
    ],
    "id": "51484b4dd82e47e9838bd6ae4d77c67a",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/property/partner"
      }
    ]
  },
  {
    "question": "What are all the TV shows which are related to the ones produced by Julie Gardner?",
    "SerialNumber": "1794",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Julie_Gardner> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Julie Gardner",
        "uri": "http://dbpedia.org/resource/Julie_Gardner"
      }
    ],
    "id": "7e6d0482a40245e6bf7602e2ad0d65ed",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the parent company of  Ford Air Transport Service ?",
    "SerialNumber": "1795",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/ontology/parentCompany> ?uri } ",
    "entity mapping": [
      {
        "label": "Ford Air Transport Service",
        "uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service"
      }
    ],
    "id": "d96691130f534245a4d69a4dcbc67391",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      }
    ]
  },
  {
    "question": "Which football teams are in a city where Oakland Athletics were the tenants?",
    "SerialNumber": "1796",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?uri <http://dbpedia.org/ontology/locationCity> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "entity mapping": [
      {
        "label": "Oakland Athletics",
        "uri": "http://dbpedia.org/resource/Oakland_Athletics"
      }
    ],
    "id": "c077c60d66924d99ad283dbd4078d564",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "football",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam"
      }
    ]
  },
  {
    "question": "Which companies published Super Mario Adventures?",
    "SerialNumber": "1800",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Super_Mario_Adventures> <http://dbpedia.org/property/publisher> ?uri } ",
    "entity mapping": [
      {
        "label": "Super Mario Adventures",
        "uri": "http://dbpedia.org/resource/Super_Mario_Adventures"
      }
    ],
    "id": "1ef8cd8959f34ef2b16979eec3a75888",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher"
      }
    ]
  },
  {
    "question": "Is william doyle the chairman of Georgetown university?",
    "SerialNumber": "1802",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Georgetown_University> <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/William_Doyle_(businessman)> }",
    "entity mapping": [
      {
        "label": "Georgetown university",
        "uri": "http://dbpedia.org/resource/Georgetown_University"
      },
      {
        "label": "william doyle",
        "uri": "http://dbpedia.org/resource/William_Doyle_(businessman)"
      }
    ],
    "id": "a9081790bb784c2da0983b1fa106ab2c",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman"
      }
    ]
  },
  {
    "question": "who developed google videos?",
    "SerialNumber": "1803",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Videos> <http://dbpedia.org/property/developer> ?uri } ",
    "entity mapping": [
      {
        "label": "google videos",
        "uri": "http://dbpedia.org/resource/Google_Videos"
      }
    ],
    "id": "965e3f4581784cb492f2fe92677b9928",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer"
      }
    ]
  },
  {
    "question": "Count me all the video game distributor whose parent company is Warner Bros ?",
    "SerialNumber": "1804",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Warner_Bros.> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Warner Bros ",
        "uri": "http://dbpedia.org/resource/Warner_Bros."
      }
    ],
    "id": "582f1c08834e4bbd825c551add0365e4",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Was Elizabeth Ann Seton canonized by Pope Paul VI?",
    "SerialNumber": "1805",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elizabeth_Ann_Seton> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Paul_VI> }",
    "entity mapping": [
      {
        "label": "Elizabeth Ann Seton",
        "uri": "http://dbpedia.org/resource/Elizabeth_Ann_Seton"
      },
      {
        "label": "Paul VI",
        "uri": "http://dbpedia.org/resource/Pope_Paul_VI"
      }
    ],
    "id": "409f7fe7f1614782a7c0a3659521a50b",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy"
      }
    ]
  },
  {
    "question": "Is Sao Paulo the largest city of Brazil?",
    "SerialNumber": "1806",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Brazil> <http://dbpedia.org/property/largestCity> <http://dbpedia.org/resource/São_Paulo> }",
    "entity mapping": [
      {
        "label": "Brazil",
        "uri": "http://dbpedia.org/resource/Brazil"
      },
      {
        "label": "Sao Paulo",
        "uri": "http://dbpedia.org/resource/São_Paulo"
      }
    ],
    "id": "1d9d0611f1a341ddb067c01fc356f3dd",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity"
      }
    ]
  },
  {
    "question": "Was David Gilmour a former member of Pink Floyd?",
    "SerialNumber": "1809",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pink_Floyd> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/David_Gilmour> }",
    "entity mapping": [
      {
        "label": "Pink Floyd",
        "uri": "http://dbpedia.org/resource/Pink_Floyd"
      },
      {
        "label": "David Gilmour",
        "uri": "http://dbpedia.org/resource/David_Gilmour"
      }
    ],
    "id": "f56af3f27ab94106a92cb2337b8c73ad",
    "predicate mapping": [
      {
        "label": "member former",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      }
    ]
  },
  {
    "question": "Name the sstadium of 2015 Pro Duta FC season ?",
    "SerialNumber": "1812",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Pro_Duta_FC_season> <http://dbpedia.org/property/stadium> ?uri } ",
    "entity mapping": [
      {
        "label": "2015 Pro Duta FC season",
        "uri": "http://dbpedia.org/resource/2015_Pro_Duta_FC_season"
      }
    ],
    "id": "fc8f458df57d49c1a584f223702f336f",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium"
      }
    ]
  },
  {
    "question": "What is the region served by Toll Global Express and also borders Siberia ?",
    "SerialNumber": "1813",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri} ",
    "entity mapping": [
      {
        "label": "Toll Global Express",
        "uri": "http://dbpedia.org/resource/Toll_Global_Express"
      },
      {
        "label": "Siberia",
        "uri": "http://dbpedia.org/resource/Siberia"
      }
    ],
    "id": "3d37be8adf384987ad3f198bd18908f2",
    "predicate mapping": [
      {
        "label": "region served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      }
    ]
  },
  {
    "question": "Which writer is famous for works written by Neil Gaiman?",
    "SerialNumber": "1815",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Neil_Gaiman> . ?uri <http://dbpedia.org/ontology/notableWork> ?x  . }",
    "entity mapping": [
      {
        "label": "Neil Gaiman",
        "uri": "http://dbpedia.org/resource/Neil_Gaiman"
      }
    ],
    "id": "536fa92bfb0c4a26bdd1546cbbbc9030",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writers"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "What awards have been given to citizens of the Ottoman Empire?",
    "SerialNumber": "1816",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Ottoman_Empire> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ottoman Empire",
        "uri": "http://dbpedia.org/resource/Ottoman_Empire"
      }
    ],
    "id": "63ed80a6c6304f309c4370cd47649349",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/citizenship"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Who are the shareholder of the broadcast networks whose owning company is Jamie Kellner?",
    "SerialNumber": "1818",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Jamie_Kellner> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "entity mapping": [
      {
        "label": "Jamie Kellner",
        "uri": "http://dbpedia.org/resource/Jamie_Kellner"
      }
    ],
    "id": "105a1052c4e54d828a4f8b08aca03408",
    "predicate mapping": [
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "shareholder",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "broadcast network",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork"
      }
    ]
  },
  {
    "question": "List the state of the universities whose nation is United States ?",
    "SerialNumber": "1819",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "United States",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "9b05edb125ad445c826406a7e5bad001",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Which destination of Emerald Air is also the city served by houston Fort Bend Airport ?",
    "SerialNumber": "1820",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emerald_Air_(United_States)> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Houston_Fort_Bend_Airport> <http://dbpedia.org/property/cityServed> ?uri} ",
    "entity mapping": [
      {
        "label": "Emerald Air",
        "uri": "http://dbpedia.org/resource/Emerald_Air_(United_States)"
      },
      {
        "label": "houston Fort Bend Airport",
        "uri": "http://dbpedia.org/resource/Houston_Fort_Bend_Airport"
      }
    ],
    "id": "a8ffab72a4f64753b5a7c3ff38c48057",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination"
      },
      {
        "label": "served city",
        "uri": "http://dbpedia.org/property/cityServed"
      }
    ]
  },
  {
    "question": "What are the software whose operating systems are Mac OS and Microsoft Windows?",
    "SerialNumber": "1822",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Mac OS",
        "uri": "http://dbpedia.org/resource/Mac_OS"
      },
      {
        "label": "Microsoft Windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      }
    ],
    "id": "a7c33137e9004883871a9e2a4a7eddb9",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Does the Utah State Route 162 end at Colorado?",
    "SerialNumber": "1823",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Utah_State_Route_162> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Colorado> }",
    "entity mapping": [
      {
        "label": "State Route 162",
        "uri": "http://dbpedia.org/resource/Utah_State_Route_162"
      },
      {
        "label": "Colorado",
        "uri": "http://dbpedia.org/resource/Colorado"
      }
    ],
    "id": "c18a6d5e8e5849f2b9a305dce85ad014",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "List the debut team of the baseball player who born in Houston.",
    "SerialNumber": "1824",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Houston> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "entity mapping": [
      {
        "label": "Houston",
        "uri": "http://dbpedia.org/resource/Houston"
      }
    ],
    "id": "898f2a6888704c2b843822e4e7ef60d1",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer"
      }
    ]
  },
  {
    "question": "Was christina crawford trained by Booker T?",
    "SerialNumber": "1829",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christina_Crawford_(wrestler)> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Booker_T_(wrestler)> }",
    "entity mapping": [
      {
        "label": "christina crawford",
        "uri": "http://dbpedia.org/resource/Christina_Crawford_(wrestler)"
      },
      {
        "label": "Booker T",
        "uri": "http://dbpedia.org/resource/Booker_T_(wrestler)"
      }
    ],
    "id": "da77bfa505514635bfea5b12d1f3b075",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/trainer"
      }
    ]
  },
  {
    "question": "What award was won by executive producer of Shaun the Sheep?",
    "SerialNumber": "1831",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Shaun_the_Sheep> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Shaun the Sheep",
        "uri": "http://dbpedia.org/resource/Shaun_the_Sheep"
      }
    ],
    "id": "5d0e2659e4b0492fb4530be48fa720db",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Name the current club of Abdelhameed Amarri ?",
    "SerialNumber": "1832",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abdelhameed_Amarri> <http://dbpedia.org/property/currentclub> ?uri } ",
    "entity mapping": [
      {
        "label": "Abdelhameed Amarri",
        "uri": "http://dbpedia.org/resource/Abdelhameed_Amarri"
      }
    ],
    "id": "4c68e37c40ea4e44950037ef974d5879",
    "predicate mapping": [
      {
        "label": "current club",
        "uri": "http://dbpedia.org/property/currentclub"
      }
    ]
  },
  {
    "question": "What is the television show whose opening theme\u0027s album is Cheers?",
    "SerialNumber": "1838",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Cheers> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Cheers",
        "uri": "http://dbpedia.org/resource/Cheers"
      }
    ],
    "id": "aedcce3300544a758c309617ae9a6643",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which driver had the pole position in 1994 Spanish Grand Prix ?",
    "SerialNumber": "1839",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri } ",
    "entity mapping": [
      {
        "label": "1994 Spanish Grand Prix",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix"
      }
    ],
    "id": "9869859173884cf5b5ce1628b5ff947c",
    "predicate mapping": [
      {
        "label": "driver pole",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      }
    ]
  },
  {
    "question": "Who is the producer of album, which has the song Eclipse ?",
    "SerialNumber": "1842",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Eclipse_(song)> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Eclipse",
        "uri": "http://dbpedia.org/resource/Eclipse_(song)"
      }
    ],
    "id": "077d0f48ef144f898f729892e65c7e91",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "What is the automobile platform of Chiva bus ?",
    "SerialNumber": "1844",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri } ",
    "entity mapping": [
      {
        "label": "Chiva bus",
        "uri": "http://dbpedia.org/resource/Chiva_bus"
      }
    ],
    "id": "7548aa9412d4455198e5c71f7383e131",
    "predicate mapping": [
      {
        "label": "automobile platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      }
    ]
  },
  {
    "question": "What borders siberia?",
    "SerialNumber": "1845",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri } ",
    "entity mapping": [
      {
        "label": "siberia",
        "uri": "http://dbpedia.org/resource/Siberia"
      }
    ],
    "id": "67b466a2660f466f99bcd5f3bb96785a",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      }
    ]
  },
  {
    "question": "List the producers who produced movies starring Michael Jackson.",
    "SerialNumber": "1847",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Michael_Jackson> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Michael Jackson",
        "uri": "http://dbpedia.org/resource/Michael_Jackson"
      }
    ],
    "id": "2d8b81a320094537aa88cb937f7b7676",
    "predicate mapping": [
      {
        "label": "starring",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Jeff Munn is the president of which basketball team ?",
    "SerialNumber": "1850",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Jeff_Munn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "entity mapping": [
      {
        "label": "Jeff Munn",
        "uri": "http://dbpedia.org/resource/Jeff_Munn"
      }
    ],
    "id": "204a5a67d76344009f7ee3711bb79292",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam"
      }
    ]
  },
  {
    "question": "What is the city  of the 2015 MLS All-Star Game and birthplace of the The Okee Dokee Brothers",
    "SerialNumber": "1851",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_MLS_All-Star_Game> <http://dbpedia.org/property/city> ?uri. <http://dbpedia.org/resource/The_Okee_Dokee_Brothers> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "2015 MLS All-Star Game",
        "uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game"
      },
      {
        "label": "The Okee Dokee Brothers",
        "uri": "http://dbpedia.org/resource/The_Okee_Dokee_Brothers"
      }
    ],
    "id": "a7858c99b352427d9f96227ed65fe2bb",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "How many had their debut team coached by Chip Kelly?",
    "SerialNumber": "1852",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Chip_Kelly> . ?uri <http://dbpedia.org/ontology/debutTeam> ?x  . }",
    "entity mapping": [
      {
        "label": "Chip Kelly",
        "uri": "http://dbpedia.org/resource/Chip_Kelly"
      }
    ],
    "id": "4ead31ba05b240b792523ee77e1c2d85",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      }
    ]
  },
  {
    "question": "Did John Byrne create Emma Frost?",
    "SerialNumber": "1854",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Emma_Frost> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/John_Byrne_(comics)> }",
    "entity mapping": [
      {
        "label": "Emma Frost",
        "uri": "http://dbpedia.org/resource/Emma_Frost"
      },
      {
        "label": "John Byrne",
        "uri": "http://dbpedia.org/resource/John_Byrne_(comics)"
      }
    ],
    "id": "2aec8ac28a254b8a8edbbb921aae4ef0",
    "predicate mapping": [
      {
        "label": "create",
        "uri": "http://dbpedia.org/property/creators"
      }
    ]
  },
  {
    "question": "Name the champion of National League ?",
    "SerialNumber": "1856",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/National_League> <http://dbpedia.org/property/champion> ?uri } ",
    "entity mapping": [
      {
        "label": "National League",
        "uri": "http://dbpedia.org/resource/National_League"
      }
    ],
    "id": "1916515a00a74f8b951851aa671a3b0a",
    "predicate mapping": [
      {
        "label": "champion",
        "uri": "http://dbpedia.org/property/champion"
      }
    ]
  },
  {
    "question": "What is the device whose successor\u0027s CPU is by AMD?",
    "SerialNumber": "1859",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Advanced_Micro_Devices> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}",
    "entity mapping": [
      {
        "label": "AMD",
        "uri": "http://dbpedia.org/resource/Advanced_Micro_Devices"
      }
    ],
    "id": "4a31ab37401a4ef5ad33539030e1f079",
    "predicate mapping": [
      {
        "label": "CPU",
        "uri": "http://dbpedia.org/ontology/cpu"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "device",
        "uri": "http://dbpedia.org/ontology/Device"
      }
    ]
  },
  {
    "question": "Name the TV show whose producer is Stephen E. Ambrose and company is HBO ?",
    "SerialNumber": "1862",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Stephen E. Ambrose",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose"
      },
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      }
    ],
    "id": "5be47b8830304a13bc505638e513ee8e",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are the movies whose musicians\u0027s home town is Volos?",
    "SerialNumber": "1863",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Volos> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Volos",
        "uri": "http://dbpedia.org/resource/Volos"
      }
    ],
    "id": "15bff090fc0748d79b3ae1c06235f0ab",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and is of species American Pekin duck?",
    "SerialNumber": "1864",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Huey, Dewey, and Louie",
        "uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie"
      },
      {
        "label": "American Pekin duck",
        "uri": "http://dbpedia.org/resource/American_Pekin_duck"
      }
    ],
    "id": "15578900e719497ea0e89f95818a753a",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "List the school of Bobby Skinstad?",
    "SerialNumber": "1865",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Skinstad> <http://dbpedia.org/property/school> ?uri } ",
    "entity mapping": [
      {
        "label": "Bobby Skinstad",
        "uri": "http://dbpedia.org/resource/Bobby_Skinstad"
      }
    ],
    "id": "05e8ba378fa84157a0c3163e2e5a29bb",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school"
      }
    ]
  },
  {
    "question": "Who authored the work illustrated by Hiroyuki Takei?",
    "SerialNumber": "1867",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Hiroyuki_Takei> . ?x <http://dbpedia.org/property/author> ?uri  . }",
    "entity mapping": [
      {
        "label": "Hiroyuki Takei",
        "uri": "http://dbpedia.org/resource/Hiroyuki_Takei"
      }
    ],
    "id": "2bc92d2e97e4487786a07b6f8ae592b4",
    "predicate mapping": [
      {
        "label": "illustrated by",
        "uri": "http://dbpedia.org/ontology/illustrator"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "List the saints venerated in Islam having major shrine as Tomb of Joshua ?",
    "SerialNumber": "1871",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Tomb_of_Joshua> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "entity mapping": [
      {
        "label": "Tomb of Joshua",
        "uri": "http://dbpedia.org/resource/Tomb_of_Joshua"
      },
      {
        "label": "Islam",
        "uri": "http://dbpedia.org/resource/Islam"
      }
    ],
    "id": "893492c37b564d4d9e1ce129547ed023",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine"
      },
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint"
      }
    ]
  },
  {
    "question": "List the former team of the american football players born in Pennsylvania ?",
    "SerialNumber": "1875",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Pennsylvania> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Pennsylvania",
        "uri": "http://dbpedia.org/resource/Pennsylvania"
      }
    ],
    "id": "f65d311739804cc7b1db894c7af0704f",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "List the relatives of the children of Jon Voight ?",
    "SerialNumber": "1878",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jon_Voight> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/relative> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jon Voight",
        "uri": "http://dbpedia.org/resource/Jon_Voight"
      }
    ],
    "id": "c7dbb6a48a8840779ff9be16709df500",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "who are the managers of england national under 20 football team?",
    "SerialNumber": "1879",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> } ",
    "entity mapping": [
      {
        "label": "england national under 20 football team",
        "uri": "http://dbpedia.org/resource/England_national_under-20_football_team"
      }
    ],
    "id": "56eb8602184a4434af0162a88397b937",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/property/managerclubs"
      }
    ]
  },
  {
    "question": "Did Jim Kiick do his highschool in New Jersey?",
    "SerialNumber": "1881",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jim_Kiick> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/New_Jersey> }",
    "entity mapping": [
      {
        "label": "Jim Kiick",
        "uri": "http://dbpedia.org/resource/Jim_Kiick"
      },
      {
        "label": "New Jersey",
        "uri": "http://dbpedia.org/resource/New_Jersey"
      }
    ],
    "id": "0572e71a8200411493afdbc1072f5dc1",
    "predicate mapping": [
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/property/highSchool"
      }
    ]
  },
  {
    "question": "Was the song The Boy is Mine recorded in Atlanta?",
    "SerialNumber": "1884",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Boy_Is_Mine_(song)> <http://dbpedia.org/property/recorded> <http://dbpedia.org/resource/Atlanta> }",
    "entity mapping": [
      {
        "label": "The Boy is Mine",
        "uri": "http://dbpedia.org/resource/The_Boy_Is_Mine_(song)"
      },
      {
        "label": "Atlanta",
        "uri": "http://dbpedia.org/resource/Atlanta"
      }
    ],
    "id": "b70fa433f4dd4ed88a72bdc33714a9fd",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "How many things do bridges designed by the UEM group go over?",
    "SerialNumber": "1886",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/UEM_Group> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "entity mapping": [
      {
        "label": "UEM group",
        "uri": "http://dbpedia.org/resource/UEM_Group"
      }
    ],
    "id": "80e23668ba59456699b2f0017dc1d2f0",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "Who is the fictional character who portrayed in Terminator 2: Judgment Day?",
    "SerialNumber": "1887",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Terminator 2",
        "uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day"
      }
    ],
    "id": "3938c7827542407499282f308306e854",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Name the river which flows through the closest city of Mount Raimer ?",
    "SerialNumber": "1888",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mount_Raimer> <http://dbpedia.org/property/nearestCity> ?x . ?x <http://dbpedia.org/ontology/river> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mount Raimer",
        "uri": "http://dbpedia.org/resource/Mount_Raimer"
      }
    ],
    "id": "48c8905bf346458bb8aa3e01c93dce7e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/nearestCity"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "Who composed songs in the Mr Tambourine Man album?",
    "SerialNumber": "1889",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Mr._Tambourine_Man_(album)> . ?x <http://dbpedia.org/ontology/composer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
    "entity mapping": [
      {
        "label": "Tambourine Man album",
        "uri": "http://dbpedia.org/resource/Mr._Tambourine_Man_(album)"
      }
    ],
    "id": "a4854eb52d9844c99427d80f90751a22",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/Song"
      }
    ]
  },
  {
    "question": "Which movies\u0027 music is composed by people associated with the band Yes?",
    "SerialNumber": "1891",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Yes_(band)> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Yes",
        "uri": "http://dbpedia.org/resource/Yes_(band)"
      }
    ],
    "id": "149bc5e1fd2444619dd328bac52f849b",
    "predicate mapping": [
      {
        "label": "associated music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the death place of the Marina Pankova and Viktor Ulyanich?",
    "SerialNumber": "1892",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marina_Pankova> <http://dbpedia.org/ontology/deathPlace> ?uri. <http://dbpedia.org/resource/Viktor_Ulyanich> <http://dbpedia.org/ontology/deathPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "Marina Pankova",
        "uri": "http://dbpedia.org/resource/Marina_Pankova"
      },
      {
        "label": "Viktor Ulyanich",
        "uri": "http://dbpedia.org/resource/Viktor_Ulyanich"
      }
    ],
    "id": "d0b29d9d5808405fa11f801b8506338d",
    "predicate mapping": [
      {
        "label": "death place",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "death place",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "How many services are there of the companies whose services is Web hosting service ?",
    "SerialNumber": "1895",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Web_hosting_service> . ?x <http://dbpedia.org/property/services> ?uri }",
    "entity mapping": [
      {
        "label": "Web hosting service",
        "uri": "http://dbpedia.org/resource/Web_hosting_service"
      }
    ],
    "id": "6e341f9757994d368143a578965e0a0f",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "In which region is the rival school of Somerset, Massachusetts located?",
    "SerialNumber": "1896",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/rival> <http://dbpedia.org/resource/Somerset,_Massachusetts> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Somerset, Massachusetts",
        "uri": "http://dbpedia.org/resource/Somerset,_Massachusetts"
      }
    ],
    "id": "7b84eeaeb31143dba0d74b20dcc60e1c",
    "predicate mapping": [
      {
        "label": "rival",
        "uri": "http://dbpedia.org/property/rival"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "What is the ethnicity of Linda Hogan ?",
    "SerialNumber": "1897",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/property/ethnicity> ?uri } ",
    "entity mapping": [
      {
        "label": "Linda Hogan",
        "uri": "http://dbpedia.org/resource/Linda_Hogan"
      }
    ],
    "id": "38fa1e3c921240608e748ef6ccca70f0",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity"
      }
    ]
  },
  {
    "question": "By which university is the literary magazine named Stone Canoe published?",
    "SerialNumber": "1899",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stone_Canoe> <http://dbpedia.org/ontology/publisher> ?uri } ",
    "entity mapping": [
      {
        "label": "Stone Canoe",
        "uri": "http://dbpedia.org/resource/Stone_Canoe"
      }
    ],
    "id": "ef3ade53eec84b978013bf8a36b43ddd",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher"
      }
    ]
  },
  {
    "question": "Who is the relative of Jim Farley (businessman) ?",
    "SerialNumber": "1900",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Farley_(businessman)> <http://dbpedia.org/property/relatives> ?uri } ",
    "entity mapping": [
      {
        "label": "Jim Farley (businessman)",
        "uri": "http://dbpedia.org/resource/Jim_Farley_(businessman)"
      }
    ],
    "id": "069c73f4c6c84f3b8bed56b9f7dd229d",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      }
    ]
  },
  {
    "question": "Name the rivers whose source country\u0027s capital is Lusaka?",
    "SerialNumber": "1902",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Lusaka> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Lusaka",
        "uri": "http://dbpedia.org/resource/Lusaka"
      }
    ],
    "id": "16b3d3743de342dbb6297978d57410bc",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "From where is Quinn Ojinnaka billed?",
    "SerialNumber": "1904",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Quinn_Ojinnaka> <http://dbpedia.org/property/billed> ?uri } ",
    "entity mapping": [
      {
        "label": "Quinn Ojinnaka",
        "uri": "http://dbpedia.org/resource/Quinn_Ojinnaka"
      }
    ],
    "id": "457b03f072e94856ae7b41637c9176a2",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed"
      }
    ]
  },
  {
    "question": "What are the movies produced by Michael Deeley?",
    "SerialNumber": "1905",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "uri": "http://dbpedia.org/resource/Michael_Deeley"
      }
    ],
    "id": "13935f6f7c0546b48d83d2817eeb3a84",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who is the narrator of The Price of Beauty ?",
    "SerialNumber": "1907",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Price_of_Beauty> <http://dbpedia.org/ontology/narrator> ?uri } ",
    "entity mapping": [
      {
        "label": "The Price of Beauty",
        "uri": "http://dbpedia.org/resource/The_Price_of_Beauty"
      }
    ],
    "id": "ef9ffe8b32f046acbf228229922d57c8",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator"
      }
    ]
  },
  {
    "question": "What is the area of the Tar Heel Sports Network which is  official residence of the Michael Nichols (photographer) ?",
    "SerialNumber": "1909",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tar_Heel_Sports_Network> <http://dbpedia.org/property/area> ?uri. <http://dbpedia.org/resource/Michael_Nichols_(photographer)> <http://dbpedia.org/ontology/residence> ?uri} ",
    "entity mapping": [
      {
        "label": "Tar Heel Sports Network",
        "uri": "http://dbpedia.org/resource/Tar_Heel_Sports_Network"
      },
      {
        "label": "Michael Nichols (photographer)",
        "uri": "http://dbpedia.org/resource/Michael_Nichols_(photographer)"
      }
    ],
    "id": "f5a49295f8c54b9da9ec95751c275127",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Who are the writers of South Park: The Stick of Truth?",
    "SerialNumber": "1911",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth> <http://dbpedia.org/property/writer> ?uri } ",
    "entity mapping": [
      {
        "label": "South Park: The Stick of Truth",
        "uri": "http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth"
      }
    ],
    "id": "49882217618b4878acdbf10713ec47c8",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "Enumerate all those who are in the Board of companies founded in New York?",
    "SerialNumber": "1912",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/ontology/board> ?x  . }",
    "entity mapping": [
      {
        "label": "New York",
        "uri": "http://dbpedia.org/resource/New_York"
      }
    ],
    "id": "26be0e284521464d866cfe4b6038a5fe",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "Board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "Name the television show developed by J. Michael Straczynski and distributed by Warner Bros. Television?",
    "SerialNumber": "1913",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros._Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "J. Michael Straczynski",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski"
      },
      {
        "label": "Warner Bros. Television",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Television"
      }
    ],
    "id": "56262987cc8244aa8df969f4fb5a322e",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who did Bruce Bochy play for ? ",
    "SerialNumber": "1914",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bruce_Bochy> <http://dbpedia.org/ontology/team> ?uri } ",
    "entity mapping": [
      {
        "label": "Bruce Bochy",
        "uri": "http://dbpedia.org/resource/Bruce_Bochy"
      }
    ],
    "id": "ab2e96b28d8345188ec38444b7b5d986",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "Who directed the albums recorded in Anaheim?",
    "SerialNumber": "1917",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Anaheim,_California> . ?x <http://dbpedia.org/property/director> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Anaheim",
        "uri": "http://dbpedia.org/resource/Anaheim,_California"
      }
    ],
    "id": "ee9d772c72a44b26b65fd5441aca57f9",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "List few Swedish language movies ?",
    "SerialNumber": "1918",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Swedish language",
        "uri": "http://dbpedia.org/resource/Swedish_language"
      }
    ],
    "id": "6deb0bfd163845caab7f56dfb4320204",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the home town of the band which is the artist of Your Ice Cream\u0027s Dirty ?",
    "SerialNumber": "1919",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Your_Ice_Cream\u0027s_Dirty> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Your Ice Cream\u0027s Dirty",
        "uri": "http://dbpedia.org/resource/Your_Ice_Cream\u0027s_Dirty"
      }
    ],
    "id": "3b09ae63d05f4be68bc5b4f1851a85b3",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "How many religion\u0027s people have died in Malaysia?",
    "SerialNumber": "1921",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Malaysia> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Malaysia",
        "uri": "http://dbpedia.org/resource/Malaysia"
      }
    ],
    "id": "b829cf441b9c42dbb820113b2e8f0f95",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which river\u0027s source mountain is Baikal Mountains and it\u0027s mouth is Lena Delta Wildlife Reserve?",
    "SerialNumber": "1923",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Lena_Delta_Wildlife_Reserve>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Baikal Mountains",
        "uri": "http://dbpedia.org/resource/Baikal_Mountains"
      },
      {
        "label": "Lena Delta Wildlife Reserve",
        "uri": "http://dbpedia.org/resource/Lena_Delta_Wildlife_Reserve"
      }
    ],
    "id": "2b8a8b2d5eaf46d0b7aa820e04fefcb9",
    "predicate mapping": [
      {
        "label": "source mountain",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Name the person whose daughter is Rohan Marley and also another children named Sharon Marley ?",
    "SerialNumber": "1924",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Rohan_Marley> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sharon_Marley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Rohan Marley",
        "uri": "http://dbpedia.org/resource/Rohan_Marley"
      },
      {
        "label": "Sharon Marley",
        "uri": "http://dbpedia.org/resource/Sharon_Marley"
      }
    ],
    "id": "84a295da828b427a813fe17472240251",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the members of European Go Federation?",
    "SerialNumber": "1925",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> ?uri } ",
    "entity mapping": [
      {
        "label": "European Go Federation",
        "uri": "http://dbpedia.org/resource/European_Go_Federation"
      }
    ],
    "id": "a93043e0abc847e0856bff25d6507a08",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "What is the state of origin of the person who is the successor of Tetsugen Bernard Glassman?",
    "SerialNumber": "1926",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Tetsugen_Bernard_Glassman> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Tetsugen Bernard Glassman",
        "uri": "http://dbpedia.org/resource/Tetsugen_Bernard_Glassman"
      }
    ],
    "id": "d1cfe025d3704ab1a2fa9008bb6ee9fa",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many other wine region are there of the grapes whose one of the wine region is Michigan ?",
    "SerialNumber": "1927",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Michigan> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri }",
    "entity mapping": [
      {
        "label": "Michigan",
        "uri": "http://dbpedia.org/resource/Michigan"
      }
    ],
    "id": "eb2766085bd746d89dd712c21ee272c6",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      }
    ]
  },
  {
    "question": "Where was WiZeefa founded ?",
    "SerialNumber": "1928",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WiZeefa> <http://dbpedia.org/property/foundation> ?uri } ",
    "entity mapping": [
      {
        "label": "WiZeefa",
        "uri": "http://dbpedia.org/resource/WiZeefa"
      }
    ],
    "id": "20f92144bb5446848093e63a491a213f",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      }
    ]
  },
  {
    "question": "To which families does the Koolakamba belong ?",
    "SerialNumber": "1929",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Koolakamba> <http://dbpedia.org/ontology/family> ?uri } ",
    "entity mapping": [
      {
        "label": "Koolakamba",
        "uri": "http://dbpedia.org/resource/Koolakamba"
      }
    ],
    "id": "687c79c0439d4ae698063ce7d8192262",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "Which publisher of Lucifer\u0027s hammer is also known for Jo Garcia ?",
    "SerialNumber": "1931",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucifer\u0027s_Hammer> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri} ",
    "entity mapping": [
      {
        "label": "Lucifer\u0027s hammer",
        "uri": "http://dbpedia.org/resource/Lucifer\u0027s_Hammer"
      },
      {
        "label": "Jo Garcia",
        "uri": "http://dbpedia.org/resource/Jo_Garcia"
      }
    ],
    "id": "fc2b57a997ea496fa59b59645c999611",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Which place founded by Penobscot Island Air is also the location fo Ellei Johndro ?",
    "SerialNumber": "1935",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Penobscot_Island_Air> <http://dbpedia.org/property/founded> ?uri. <http://dbpedia.org/resource/Ellei_Johndro> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Penobscot Island Air",
        "uri": "http://dbpedia.org/resource/Penobscot_Island_Air"
      },
      {
        "label": "Ellei Johndro",
        "uri": "http://dbpedia.org/resource/Ellei_Johndro"
      }
    ],
    "id": "a27e4cca5be64ee1a9b027ad15d8e2d9",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founded"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "How many people work at the FBI?",
    "SerialNumber": "1937",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Federal_Bureau_of_Investigation>  . }",
    "entity mapping": [
      {
        "label": "FBI",
        "uri": "http://dbpedia.org/resource/Federal_Bureau_of_Investigation"
      }
    ],
    "id": "3b5cc7aa7419456797aae6a58176eea2",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Name the hockey team whose head coach is Alain Vigneault?",
    "SerialNumber": "1938",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Alain_Vigneault>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
    "entity mapping": [
      {
        "label": "Alain Vigneault",
        "uri": "http://dbpedia.org/resource/Alain_Vigneault"
      }
    ],
    "id": "c83d6063d4884c32bb551e7905d704d9",
    "predicate mapping": [
      {
        "label": "head coach",
        "uri": "http://dbpedia.org/property/headCoach"
      },
      {
        "label": "hockey team",
        "uri": "http://dbpedia.org/ontology/HockeyTeam"
      }
    ]
  },
  {
    "question": "In which state is Dorchester Bay (Boston Harbor) ?",
    "SerialNumber": "1939",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)> <http://dbpedia.org/property/state> ?uri } ",
    "entity mapping": [
      {
        "label": "Dorchester Bay",
        "uri": "http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)"
      }
    ],
    "id": "fc6a428c69f44439b0c0594e95f8f2a8",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "To which political party do the children of Sonia Gandhi belong?",
    "SerialNumber": "1940",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sonia_Gandhi> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sonia Gandhi",
        "uri": "http://dbpedia.org/resource/Sonia_Gandhi"
      }
    ],
    "id": "1211b3f99aab4dc185ce380c1579a8e0",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Which religion followers are the members of Janata Dal?",
    "SerialNumber": "1941",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Janata Dal",
        "uri": "http://dbpedia.org/resource/Janata_Dal"
      }
    ],
    "id": "fe726ec84eda43a7aa4725b1811e6540",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Count the nearest city to the historic palce whose one of the nearest city is Wisconsin ?",
    "SerialNumber": "1942",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/property/nearestCity> ?uri }",
    "entity mapping": [
      {
        "label": "Wisconsin",
        "uri": "http://dbpedia.org/resource/Wisconsin"
      }
    ],
    "id": "78f8aae7da294e14b5bfdff2bb35d039",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity"
      }
    ]
  },
  {
    "question": "What is the airline company has its headquarters in Dublin Airport?",
    "SerialNumber": "1943",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Dublin_Airport> } ",
    "entity mapping": [
      {
        "label": "Dublin Airport",
        "uri": "http://dbpedia.org/resource/Dublin_Airport"
      }
    ],
    "id": "5c04724cd502432197623d0c85e4cd8d",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "What are the teams for which Wilfred McDonald played for?",
    "SerialNumber": "1944",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri } ",
    "entity mapping": [
      {
        "label": "Wilfred McDonald",
        "uri": "http://dbpedia.org/resource/Wilfred_McDonald"
      }
    ],
    "id": "7424ae95bf2f42f5a33391da3da194a8",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "Is Dave Schulz a band member of Berlin?",
    "SerialNumber": "1947",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Berlin_(band)> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Dave_Schulz_(musician)> }",
    "entity mapping": [
      {
        "label": "Berlin",
        "uri": "http://dbpedia.org/resource/Berlin_(band)"
      },
      {
        "label": "Dave Schulz",
        "uri": "http://dbpedia.org/resource/Dave_Schulz_(musician)"
      }
    ],
    "id": "e14a10dfcbdb4da48072fcb7256cdf88",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      }
    ]
  },
  {
    "question": "Does MSX BASIC have a license of microsoft?",
    "SerialNumber": "1948",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/Microsoft> }",
    "entity mapping": [
      {
        "label": "MSX BASIC",
        "uri": "http://dbpedia.org/resource/MSX_BASIC"
      },
      {
        "label": "microsoft",
        "uri": "http://dbpedia.org/resource/Microsoft"
      }
    ],
    "id": "d5927c0324be4e2d8fa01205bb38a09e",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license"
      }
    ]
  },
  {
    "question": "List the subsequent work of the albums whose one of the subsequent work is Planet Waves?",
    "SerialNumber": "1949",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Planet_Waves> . ?x <http://dbpedia.org/ontology/subsequentWork> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Planet Waves",
        "uri": "http://dbpedia.org/resource/Planet_Waves"
      }
    ],
    "id": "ed1295a0e7e74eedae807b925a9ffc34",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "In which mountain Inyo National Forest and California are located?",
    "SerialNumber": "1950",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Inyo National Forest",
        "uri": "http://dbpedia.org/resource/Inyo_National_Forest"
      },
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "6e226915fc37413b8740c3a74cc977c5",
    "predicate mapping": [
      {
        "label": "Nation",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "Nation",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "What are some licensees of the stations playing in Nashville, Tennessee?",
    "SerialNumber": "1952",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/property/licensee> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "Nashville, Tennessee",
        "uri": "http://dbpedia.org/resource/Nashville,_Tennessee"
      }
    ],
    "id": "e486eea0f7ff4cf899bb864fd58f6f3a",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      },
      {
        "label": "stations",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "List the American MEditerranean Sea city is also the place of death of Laszlo Bellak ?",
    "SerialNumber": "1954",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Laszlo_Bellak> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "American MEditerranean Sea",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea"
      },
      {
        "label": "Laszlo Bellak",
        "uri": "http://dbpedia.org/resource/Laszlo_Bellak"
      }
    ],
    "id": "e45f92ad9a4348f4b762dff1b9350929",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "place death",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Which professional fighter, who is also a politician and was elected to House of Representatives of the Philippines?",
    "SerialNumber": "1956",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines> } ",
    "entity mapping": [
      {
        "label": "House of Representatives of the Philippines",
        "uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines"
      }
    ],
    "id": "700bcd617886425282255b4748de26f6",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/property/occupation"
      }
    ]
  },
  {
    "question": "Isaac Hayes has acted in which movies ?",
    "SerialNumber": "1957",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Isaac_Hayes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Isaac Hayes",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes"
      }
    ],
    "id": "66867f2d03ca4db8b5d199cad01a7dee",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the television show whose related with  Doctor Who Confidential?",
    "SerialNumber": "1959",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Doctor Who Confidential",
        "uri": "http://dbpedia.org/resource/Doctor_Who_Confidential"
      }
    ],
    "id": "1c9a76e118864c9c95e250236798f5fa",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name all those buried in a place governed by a city council.",
    "SerialNumber": "1960",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/City_council> . ?uri <http://dbpedia.org/property/restingPlace> ?x  . }",
    "entity mapping": [
      {
        "label": "city council",
        "uri": "http://dbpedia.org/resource/City_council"
      }
    ],
    "id": "c155dc611cc0417fa2b5841635593617",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/restingPlace"
      }
    ]
  },
  {
    "question": "What are the last two studio albums of Moondog Matinee ?",
    "SerialNumber": "1961",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri } ",
    "entity mapping": [
      {
        "label": "Moondog Matinee",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee"
      }
    ],
    "id": "7b9e8db8a3234def93777d9786fa9db7",
    "predicate mapping": [
      {
        "label": "two",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      }
    ]
  },
  {
    "question": "List the battles fought by Roh Tae-woo ?",
    "SerialNumber": "1963",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roh_Tae-woo> <http://dbpedia.org/property/battles> ?uri } ",
    "entity mapping": [
      {
        "label": "Roh Tae-woo",
        "uri": "http://dbpedia.org/resource/Roh_Tae-woo"
      }
    ],
    "id": "8a0781ae3e9644709d33491564bbab50",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Which educational institution has Kaplan, Inc as it\u0027s affiliation?",
    "SerialNumber": "1965",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "entity mapping": [
      {
        "label": "Kaplan, Inc ",
        "uri": "http://dbpedia.org/resource/Kaplan,_Inc."
      }
    ],
    "id": "6224c64d6d3b40529a2999e42371cac2",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "educational institution",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution"
      }
    ]
  },
  {
    "question": "Whose wife is a presenter at WWE?",
    "SerialNumber": "1966",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/WWE> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }",
    "entity mapping": [
      {
        "label": "WWE",
        "uri": "http://dbpedia.org/resource/WWE"
      }
    ],
    "id": "812fb89fca9641a4a51e6bda1fec74ca",
    "predicate mapping": [
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "wife",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "What is the parent company of company which owns Sony Bank?",
    "SerialNumber": "1968",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sony_Bank> <http://dbpedia.org/property/parent> ?x . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Sony Bank",
        "uri": "http://dbpedia.org/resource/Sony_Bank"
      }
    ],
    "id": "541c5ade920c4308934784b55bbabc52",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the total number of writers whose singles are recorded in Miami?",
    "SerialNumber": "1969",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/writer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Miami",
        "uri": "http://dbpedia.org/resource/Miami"
      }
    ],
    "id": "f301fa4d3e7043f0a10bcbd3b6fa41d3",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "What is the common nationality of Viveka Babajee anad Ronny Vencatachellum ?",
    "SerialNumber": "1971",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Viveka_Babajee> <http://dbpedia.org/property/citizenship> ?uri. <http://dbpedia.org/resource/Ronny_Vencatachellum> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "Viveka Babajee",
        "uri": "http://dbpedia.org/resource/Viveka_Babajee"
      },
      {
        "label": "Ronny Vencatachellum",
        "uri": "http://dbpedia.org/resource/Ronny_Vencatachellum"
      }
    ],
    "id": "af555bca8edd4d7ba2850d9d4b99f6e1",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/citizenship"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What is the city nearest to the historic place whose architect is Joseph Dion?",
    "SerialNumber": "1972",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Joseph_Dion> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}",
    "entity mapping": [
      {
        "label": "Joseph Dion",
        "uri": "http://dbpedia.org/resource/Joseph_Dion"
      }
    ],
    "id": "7f8414559c5f475ead1ee872da7dd371",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "historic place",
        "uri": "http://dbpedia.org/ontology/HistoricPlace"
      }
    ]
  },
  {
    "question": "Who are the employer of Don R. Berlin?",
    "SerialNumber": "1973",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri } ",
    "entity mapping": [
      {
        "label": "Don R. Berlin",
        "uri": "http://dbpedia.org/resource/Don_R._Berlin"
      }
    ],
    "id": "8b40533f058843bdb80b6c7f4e829f19",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer"
      }
    ]
  },
  {
    "question": "Name the office holder whose constituency is Haight-Ashbury?",
    "SerialNumber": "1976",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Haight-Ashbury",
        "uri": "http://dbpedia.org/resource/Haight-Ashbury"
      }
    ],
    "id": "ac389328974d4442bd2e216aa4b43812",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What is the river whose tributary is Zarqa River?",
    "SerialNumber": "1978",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Zarqa_River>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Zarqa River",
        "uri": "http://dbpedia.org/resource/Zarqa_River"
      }
    ],
    "id": "807d486a431f48a38d65b567d7f19374",
    "predicate mapping": [
      {
        "label": "tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many home stadiums are there of the seasons whose chairman in Merritt Paulson?",
    "SerialNumber": "1979",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "entity mapping": [
      {
        "label": "Merritt Paulson",
        "uri": "http://dbpedia.org/resource/Merritt_Paulson"
      }
    ],
    "id": "4a249054ec63491c84cf76d9d1aff14e",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      }
    ]
  },
  {
    "question": "Give me the count of all the names of characters created by Frank Miller",
    "SerialNumber": "1982",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Frank_Miller_(comics)> . ?x <http://dbpedia.org/property/characterName> ?uri  . }",
    "entity mapping": [
      {
        "label": "Frank Miller",
        "uri": "http://dbpedia.org/resource/Frank_Miller_(comics)"
      }
    ],
    "id": "032949490f454dbabd4797646d3e840d",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characterName"
      }
    ]
  },
  {
    "question": "list the founders of Bream Bay ?",
    "SerialNumber": "1983",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bream_Bay> <http://dbpedia.org/property/founder> ?uri } ",
    "entity mapping": [
      {
        "label": "Bream Bay",
        "uri": "http://dbpedia.org/resource/Bream_Bay"
      }
    ],
    "id": "4af1cb3060f14095a5ac3b96593361a4",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder"
      }
    ]
  },
  {
    "question": "Give me a count of bridges located in California ?",
    "SerialNumber": "1984",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "e91ada2d11fb415a90f5214a4568ae9a",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Name the country whose leader\u0027s deputy is Piotr Glinski?",
    "SerialNumber": "1987",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Piotr_Gliński> . ?uri <http://dbpedia.org/property/leaderName> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Piotr Glinski",
        "uri": "http://dbpedia.org/resource/Piotr_Gliński"
      }
    ],
    "id": "16031b0772124f5996cbdab932ed9852",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      },
      {
        "label": "leader\u0027s",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Companies founded in Taiwan have typically which divisions?",
    "SerialNumber": "1991",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Taiwan> . ?x <http://dbpedia.org/ontology/division> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Taiwan",
        "uri": "http://dbpedia.org/resource/Taiwan"
      }
    ],
    "id": "3624e029fd0e45c29e54521e58359db5",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the debut team of ngel Escobar ?",
    "SerialNumber": "1993",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ángel_Escobar> <http://dbpedia.org/property/debutteam> ?uri } ",
    "entity mapping": [
      {
        "label": "ngel Escobar",
        "uri": "http://dbpedia.org/resource/Ángel_Escobar"
      }
    ],
    "id": "5308076f247f416480c268da88eb6df0",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "What is the hub airport of Pawan Hans, and is also the largest city of India?",
    "SerialNumber": "1994",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pawan_Hans> <http://dbpedia.org/ontology/hubAirport> ?uri. <http://dbpedia.org/resource/India> <http://dbpedia.org/ontology/largestCity> ?uri} ",
    "entity mapping": [
      {
        "label": "Pawan Hans",
        "uri": "http://dbpedia.org/resource/Pawan_Hans"
      },
      {
        "label": "India",
        "uri": "http://dbpedia.org/resource/India"
      }
    ],
    "id": "70568d51ea3b40fa9b6e40baba80e4fc",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "What is the mascot of Galatasaray Handball Team ?",
    "SerialNumber": "2000",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri } ",
    "entity mapping": [
      {
        "label": "Galatasaray Handball Team",
        "uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team"
      }
    ],
    "id": "a2f40f5069d544e0a258bc31e4b48533",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Was Nick Jonas a member of the Jonas Brothers?",
    "SerialNumber": "2001",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jonas_Brothers> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> }",
    "entity mapping": [
      {
        "label": "Jonas Brothers",
        "uri": "http://dbpedia.org/resource/Jonas_Brothers"
      },
      {
        "label": "Nick Jonas",
        "uri": "http://dbpedia.org/resource/Nick_Jonas"
      }
    ],
    "id": "f64ea5a5f2dc48fd8988423ab27e5f5f",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/pastMembers"
      }
    ]
  },
  {
    "question": "Who represent the constituencies of Noe Valley and Duboce Triangle ?",
    "SerialNumber": "2003",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . }",
    "entity mapping": [
      {
        "label": "Noe Valley",
        "uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco"
      },
      {
        "label": "Duboce Triangle",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco"
      }
    ],
    "id": "609bdd6c95834ba0b808371bb01cb589",
    "predicate mapping": [
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency"
      }
    ]
  },
  {
    "question": "Which key person of maryland jockey club is the appointer of Joseph Clay ?",
    "SerialNumber": "2005",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/Maryland_Jockey_Club> <http://dbpedia.org/property/keyPeople> ?uri} ",
    "entity mapping": [
      {
        "label": "Joseph Clay",
        "uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)"
      },
      {
        "label": "maryland jockey club",
        "uri": "http://dbpedia.org/resource/Maryland_Jockey_Club"
      }
    ],
    "id": "5f874cdc5f2749c298a7a13fabc7859a",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/ontology/appointer"
      },
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "Which cities have the river one of whose Tributary is the Missouri\u0027s big spring?",
    "SerialNumber": "2006",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Big_Spring_(Missouri)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "big spring",
        "uri": "http://dbpedia.org/resource/Big_Spring_(Missouri)"
      }
    ],
    "id": "1c6538227a4d41fdbcdb11eda17bce21",
    "predicate mapping": [
      {
        "label": "tributary",
        "uri": "http://dbpedia.org/ontology/rightTributary"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the currency of Republic of Montenegro (1992-2006) ?",
    "SerialNumber": "2008",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)> <http://dbpedia.org/property/currency> ?uri } ",
    "entity mapping": [
      {
        "label": "Republic of Montenegro",
        "uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)"
      }
    ],
    "id": "3cade710572444c297c339d6443854ed",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency"
      }
    ]
  },
  {
    "question": "Which band was left by Kevin Jonas?",
    "SerialNumber": "2010",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Kevin_Jonas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Kevin Jonas",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas"
      }
    ],
    "id": "9cda2b2237914ed59d7fe4aae8bc2c1d",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "List all the presidents of the school which had atleast one of the president as Queen Noor of Jordan ?",
    "SerialNumber": "2011",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Queen_Noor_of_Jordan> . ?x <http://dbpedia.org/ontology/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Queen Noor of Jordan",
        "uri": "http://dbpedia.org/resource/Queen_Noor_of_Jordan"
      }
    ],
    "id": "eecf29a370f5461f864f33e580e9eaaa",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Name the nearest city to Tennie and Laura ?",
    "SerialNumber": "2014",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tennie_and_Laura_(schooner)> <http://dbpedia.org/property/nearestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Tennie and Laura",
        "uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)"
      }
    ],
    "id": "dc586a5d041844feb7a1d08718b05042",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity"
      }
    ]
  },
  {
    "question": "Name the home Stadium of Kenya national under-20 football team ?",
    "SerialNumber": "2015",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_national_under-20_football_team> <http://dbpedia.org/property/homeStadium> ?uri } ",
    "entity mapping": [
      {
        "label": "Kenya national under-20 football team",
        "uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team"
      }
    ],
    "id": "a5e0d47ce7c24a0ea619a0edcaad11e8",
    "predicate mapping": [
      {
        "label": "home Stadium",
        "uri": "http://dbpedia.org/property/homeStadium"
      }
    ]
  },
  {
    "question": "How many have been venerateds in Islam and Judaism?",
    "SerialNumber": "2016",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism>} ",
    "entity mapping": [
      {
        "label": "Islam",
        "uri": "http://dbpedia.org/resource/Islam"
      },
      {
        "label": "Judaism",
        "uri": "http://dbpedia.org/resource/Judaism"
      }
    ],
    "id": "00d4f5a80a1c49a1bcf053b454f4547f",
    "predicate mapping": [
      {
        "label": "venerateds",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      },
      {
        "label": "venerateds",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      }
    ]
  },
  {
    "question": "Is Amharic the official language of Ethiopia?",
    "SerialNumber": "2018",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ethiopia> <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Amharic> }",
    "entity mapping": [
      {
        "label": "Ethiopia",
        "uri": "http://dbpedia.org/resource/Ethiopia"
      },
      {
        "label": "Amharic",
        "uri": "http://dbpedia.org/resource/Amharic"
      }
    ],
    "id": "297f153071e94b52b485cc7758d5bda7",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      }
    ]
  },
  {
    "question": "Name the river whose mouth country is Mozambique and source region is North-Western Province, Zambia?",
    "SerialNumber": "2019",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique> . ?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Mozambique",
        "uri": "http://dbpedia.org/resource/Mozambique"
      },
      {
        "label": "North-Western Province, Zambia",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia"
      }
    ],
    "id": "0f6a8f881bad42279b23a45e3316c4e1",
    "predicate mapping": [
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/property/mouthCountry"
      },
      {
        "label": "source region",
        "uri": "http://dbpedia.org/property/sourceRegion"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "List the people who influenced the comedian who acted in Good Hair ?",
    "SerialNumber": "2020",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Good_Hair> <http://dbpedia.org/property/starring> ?x . ?x <http://dbpedia.org/ontology/influencedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comedian>}",
    "entity mapping": [
      {
        "label": "Good Hair",
        "uri": "http://dbpedia.org/resource/Good_Hair"
      }
    ],
    "id": "574ba8734196413da81a96d3ec250fcc",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/ontology/influencedBy"
      },
      {
        "label": "comedian",
        "uri": "http://dbpedia.org/ontology/Comedian"
      }
    ]
  },
  {
    "question": "Which religion did both anupong paochinda and udit raj follow?",
    "SerialNumber": "2021",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anupong_Paochinda> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri . }",
    "entity mapping": [
      {
        "label": "anupong paochinda",
        "uri": "http://dbpedia.org/resource/Anupong_Paochinda"
      },
      {
        "label": "udit raj",
        "uri": "http://dbpedia.org/resource/Udit_Raj"
      }
    ],
    "id": "adc7d53883de42c6be0600b7cace1446",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What is the source country of reg Lake ?",
    "SerialNumber": "2022",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Üüreg_Lake> <http://dbpedia.org/ontology/sourceCountry> ?uri } ",
    "entity mapping": [
      {
        "label": "reg Lake",
        "uri": "http://dbpedia.org/resource/Üüreg_Lake"
      }
    ],
    "id": "7b47485d6943488fa5e56c5987062679",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      }
    ]
  },
  {
    "question": "Is God Save the Queen the national anthem of United Kingdom?",
    "SerialNumber": "2027",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_Kingdom> <http://dbpedia.org/property/nationalAnthem> <http://dbpedia.org/resource/God_Save_the_Queen> }",
    "entity mapping": [
      {
        "label": "United Kingdom",
        "uri": "http://dbpedia.org/resource/United_Kingdom"
      },
      {
        "label": "God Save the Queen",
        "uri": "http://dbpedia.org/resource/God_Save_the_Queen"
      }
    ],
    "id": "e408531d8dfb48d5af806122fb2e865b",
    "predicate mapping": [
      {
        "label": "national anthem",
        "uri": "http://dbpedia.org/property/nationalAnthem"
      }
    ]
  },
  {
    "question": "GetTV is owned by which organisation?",
    "SerialNumber": "2028",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri } ",
    "entity mapping": [
      {
        "label": "GetTV",
        "uri": "http://dbpedia.org/resource/GetTV"
      }
    ],
    "id": "e2b55df745ed48acb96b3572ab3e72e3",
    "predicate mapping": [
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      }
    ]
  },
  {
    "question": "Name the commanders of military conflicts where Roundhead was one of the commander ?",
    "SerialNumber": "2030",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Roundhead_(Wyandot)> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Roundhead",
        "uri": "http://dbpedia.org/resource/Roundhead_(Wyandot)"
      }
    ],
    "id": "3e8b38a9e2204976a87534f098523f05",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Was saddam hussein at the rank of Mushir ever?",
    "SerialNumber": "2031",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saddam_Hussein> <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Mushir> }",
    "entity mapping": [
      {
        "label": "saddam hussein",
        "uri": "http://dbpedia.org/resource/Saddam_Hussein"
      },
      {
        "label": "Mushir",
        "uri": "http://dbpedia.org/resource/Mushir"
      }
    ],
    "id": "b75f8d3b6f504199a40530df99c12f74",
    "predicate mapping": [
      {
        "label": "rank",
        "uri": "http://dbpedia.org/property/rank"
      }
    ]
  },
  {
    "question": "Which mountain is located in inyo National Forest and has a parent peak named Nevado de Toluca ?",
    "SerialNumber": "2032",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "inyo National Forest",
        "uri": "http://dbpedia.org/resource/Inyo_National_Forest"
      },
      {
        "label": "Nevado de Toluca",
        "uri": "http://dbpedia.org/resource/Nevado_de_Toluca"
      }
    ],
    "id": "ae33dcf324974e5a8a97acf8260a43ec",
    "predicate mapping": [
      {
        "label": "is located in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain parent",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "Whihc state of Timothy J. Roemer is also the location city of Dad\u0027s Root Beer ?",
    "SerialNumber": "2033",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dad\u0027s_Root_Beer> <http://dbpedia.org/property/locationCity> ?uri. <http://dbpedia.org/resource/Timothy_J._Roemer> <http://dbpedia.org/property/state> ?uri} ",
    "entity mapping": [
      {
        "label": "Dad\u0027s Root Beer",
        "uri": "http://dbpedia.org/resource/Dad\u0027s_Root_Beer"
      },
      {
        "label": "Timothy J. Roemer",
        "uri": "http://dbpedia.org/resource/Timothy_J._Roemer"
      }
    ],
    "id": "7f0f74a296d6433abb524ea51574af2b",
    "predicate mapping": [
      {
        "label": "location city",
        "uri": "http://dbpedia.org/property/locationCity"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "List borders of the admin region bordering Arctic ocean ?",
    "SerialNumber": "2035",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Arctic_Ocean> . ?x <http://dbpedia.org/ontology/border> ?uri  . }",
    "entity mapping": [
      {
        "label": "Arctic ocean",
        "uri": "http://dbpedia.org/resource/Arctic_Ocean"
      }
    ],
    "id": "93149b69fa094becaa9a340eee7edad7",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      }
    ]
  },
  {
    "question": "Who composed the music for Tonight\u0027s the Night ?",
    "SerialNumber": "2036",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonight\u0027s_the_Night_(2003_musical)> <http://dbpedia.org/property/music> ?uri } ",
    "entity mapping": [
      {
        "label": "Tonight\u0027s the Night",
        "uri": "http://dbpedia.org/resource/Tonight\u0027s_the_Night_(2003_musical)"
      }
    ],
    "id": "6138681c5c4b40edae512667d67db3cb",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      }
    ]
  },
  {
    "question": "Is Giorgos Kaminis the mayor of Athens?",
    "SerialNumber": "2037",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Athens> <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis> }",
    "entity mapping": [
      {
        "label": "Athens",
        "uri": "http://dbpedia.org/resource/Athens"
      },
      {
        "label": "Giorgos Kaminis",
        "uri": "http://dbpedia.org/resource/Giorgos_Kaminis"
      }
    ],
    "id": "f93336205ff849d79ef737b987936d56",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor"
      }
    ]
  },
  {
    "question": "Bantam Spectra is the publisher of which series?",
    "SerialNumber": "2039",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Bantam_Spectra> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bantam Spectra",
        "uri": "http://dbpedia.org/resource/Bantam_Spectra"
      }
    ],
    "id": "f0d39660f1f94a2098c5ecae0c7159ff",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "List the soccer players whose current team has the ground Stoke-on-Trent.",
    "SerialNumber": "2040",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Stoke-on-Trent> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "entity mapping": [
      {
        "label": "Stoke-on-Trent",
        "uri": "http://dbpedia.org/resource/Stoke-on-Trent"
      }
    ],
    "id": "6da84c298eee46d9bb136c460ff99bb0",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/property/ground"
      },
      {
        "label": "current",
        "uri": "http://dbpedia.org/property/currentclub"
      },
      {
        "label": "soccer player",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer"
      }
    ]
  },
  {
    "question": "Which operator of New Sanno Hotel is also the  governing body of the Oahu Railway and Land Company ?",
    "SerialNumber": "2042",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/property/operator> ?uri. <http://dbpedia.org/resource/Oahu_Railway_and_Land_Company> <http://dbpedia.org/property/governingBody> ?uri} ",
    "entity mapping": [
      {
        "label": "New Sanno Hotel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel"
      },
      {
        "label": "Oahu Railway and Land Company",
        "uri": "http://dbpedia.org/resource/Oahu_Railway_and_Land_Company"
      }
    ],
    "id": "ce5909f4af904a12a1ffea92d437ff16",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      }
    ]
  },
  {
    "question": "List the music of Open House (American Horror Story)?",
    "SerialNumber": "2045",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Open_House_(American_Horror_Story)> <http://dbpedia.org/property/music> ?uri } ",
    "entity mapping": [
      {
        "label": "Open House (American Horror Story)",
        "uri": "http://dbpedia.org/resource/Open_House_(American_Horror_Story)"
      }
    ],
    "id": "00691ec829834dd08cec97419d51eb4c",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      }
    ]
  },
  {
    "question": "What movies have been written by authors of Monty Python ?",
    "SerialNumber": "2048",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Monty Python",
        "uri": "http://dbpedia.org/resource/Monty_Python"
      }
    ],
    "id": "9199869451414c5da79221a37f5ffefd",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "List the things for which the relatives of Mrunalini Kunte are known?",
    "SerialNumber": "2049",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mrunalini_Kunte> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mrunalini Kunte",
        "uri": "http://dbpedia.org/resource/Mrunalini_Kunte"
      }
    ],
    "id": "3fbefd4c3d514688b85789042b0b5376",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "What was founded by pina Records which has name of Geography of Puerto Rico ?",
    "SerialNumber": "2052",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_of_Puerto_Rico> <http://dbpedia.org/property/name> ?uri. <http://dbpedia.org/resource/Pina_Records> <http://dbpedia.org/property/founded> ?uri} ",
    "entity mapping": [
      {
        "label": "Geography of Puerto Rico",
        "uri": "http://dbpedia.org/resource/Geography_of_Puerto_Rico"
      },
      {
        "label": "pina Records",
        "uri": "http://dbpedia.org/resource/Pina_Records"
      }
    ],
    "id": "544df16ef59d472a8e6a01d0854aa485",
    "predicate mapping": [
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founded"
      }
    ]
  },
  {
    "question": "How many saints have been venerated in Judaism?",
    "SerialNumber": "2053",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "entity mapping": [
      {
        "label": "Judaism",
        "uri": "http://dbpedia.org/resource/Judaism"
      }
    ],
    "id": "3faefccf7050420780e9fac0a46abe38",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint"
      }
    ]
  },
  {
    "question": "List the outflows of the lake which has Benu river as one of it ?",
    "SerialNumber": "2054",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Benué_River> . ?x <http://dbpedia.org/property/outflow> ?uri  . }",
    "entity mapping": [
      {
        "label": "Benu river",
        "uri": "http://dbpedia.org/resource/Benué_River"
      }
    ],
    "id": "14eaf63728994ec89e6ab5dcfc7e4446",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow"
      }
    ]
  },
  {
    "question": "Who is a religious figure titled superior general?",
    "SerialNumber": "2056",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Superior_general>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Religious>}",
    "entity mapping": [
      {
        "label": "superior general",
        "uri": "http://dbpedia.org/resource/Superior_general"
      }
    ],
    "id": "a1d198db24e842999eeb72b803b34c69",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title"
      },
      {
        "label": "religious",
        "uri": "http://dbpedia.org/ontology/Religious"
      }
    ]
  },
  {
    "question": "What is the military unit whose command structures are United States Department of the Navy and United States Department of Defense?",
    "SerialNumber": "2057",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "United States Department of the Navy",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy"
      },
      {
        "label": "United States Department of Defense",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense"
      }
    ],
    "id": "225b40988f164cd18ab023c044dc99d0",
    "predicate mapping": [
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      },
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Is James Wong Howe the cinematographer of Behave Yourself?",
    "SerialNumber": "2058",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Behave_Yourself!> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/James_Wong_Howe> }",
    "entity mapping": [
      {
        "label": "Behave Yourself?",
        "uri": "http://dbpedia.org/resource/Behave_Yourself!"
      },
      {
        "label": "James Wong Howe",
        "uri": "http://dbpedia.org/resource/James_Wong_Howe"
      }
    ],
    "id": "6c551ce5e8ac471295a34da950408fa8",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography"
      }
    ]
  },
  {
    "question": "Who are the children of Abigail Adams?",
    "SerialNumber": "2059",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abigail_Adams> <http://dbpedia.org/property/children> ?uri } ",
    "entity mapping": [
      {
        "label": "Abigail Adams",
        "uri": "http://dbpedia.org/resource/Abigail_Adams"
      }
    ],
    "id": "4ffdaa76aa994139b18edf277f905fed",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      }
    ]
  },
  {
    "question": "Which are the predecessor of Chevrolet Caprice?",
    "SerialNumber": "2062",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chevrolet_Caprice> <http://dbpedia.org/ontology/predecessor> ?uri } ",
    "entity mapping": [
      {
        "label": "Chevrolet Caprice",
        "uri": "http://dbpedia.org/resource/Chevrolet_Caprice"
      }
    ],
    "id": "843e418ed3c44ed7b63ee93d377e146a",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      }
    ]
  },
  {
    "question": "What was recorded by Live in Detroit, MI and also palce of birth of the Bodhin Kjolhede?",
    "SerialNumber": "2063",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Bodhin_Kjolhede> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Live in Detroit, MI",
        "uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI"
      },
      {
        "label": "Bodhin Kjolhede",
        "uri": "http://dbpedia.org/resource/Bodhin_Kjolhede"
      }
    ],
    "id": "4842524c47d4401f85295095f0e9c4bf",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Which animal is the mascot of the 1502nd Infantry Brigade (Ready Reserve) and Galatasaray Handball Team ?",
    "SerialNumber": "2064",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1502nd_Infantry_Brigade_(Ready_Reserve)> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Animal>}",
    "entity mapping": [
      {
        "label": "1502nd Infantry Brigade (Ready Reserve)",
        "uri": "http://dbpedia.org/resource/1502nd_Infantry_Brigade_(Ready_Reserve)"
      },
      {
        "label": "Galatasaray Handball Team",
        "uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team"
      }
    ],
    "id": "85880ecb1ad440bf90276a657471d64b",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "animal",
        "uri": "http://dbpedia.org/ontology/Animal"
      }
    ]
  },
  {
    "question": "What are other famous works of the writer who created the Sarah Jane Adventures?",
    "SerialNumber": "2065",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "the Sarah Jane Adventures",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures"
      }
    ],
    "id": "2c23a7087748489bacf1940fc992f121",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Which key person of the Clinton Foundation is also the president of Edward J. Perkins ?",
    "SerialNumber": "2067",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edward_J._Perkins> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri} ",
    "entity mapping": [
      {
        "label": "Edward J. Perkins",
        "uri": "http://dbpedia.org/resource/Edward_J._Perkins"
      },
      {
        "label": "Clinton Foundation",
        "uri": "http://dbpedia.org/resource/Clinton_Foundation"
      }
    ],
    "id": "571ba10a407648e387c5b247b38c3175",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "Name the sports played by Fr. Agnel Multipurpose School and Junior College?",
    "SerialNumber": "2068",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri } ",
    "entity mapping": [
      {
        "label": "Fr. Agnel Multipurpose School and Junior College",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College"
      }
    ],
    "id": "dd56b34774864c2f898e20007c193984",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Which are the comics characters painted by Bruce Timm and created by  Paul Dini?",
    "SerialNumber": "2070",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bruce_Timm> . ?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "entity mapping": [
      {
        "label": "Bruce Timm",
        "uri": "http://dbpedia.org/resource/Bruce_Timm"
      },
      {
        "label": "Paul Dini",
        "uri": "http://dbpedia.org/resource/Paul_Dini"
      }
    ],
    "id": "268bbb26a2164faf852c530fc8ae5320",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators"
      },
      {
        "label": "comics character",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter"
      }
    ]
  },
  {
    "question": "What is a common nickname given to both Lyons Township high school and the wheaton college in massachusetts?",
    "SerialNumber": "2071",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Wheaton_College_(Massachusetts)> <http://dbpedia.org/property/nickname> ?uri . }",
    "entity mapping": [
      {
        "label": "Lyons Township high school",
        "uri": "http://dbpedia.org/resource/Lyons_Township_High_School"
      },
      {
        "label": "wheaton college",
        "uri": "http://dbpedia.org/resource/Wheaton_College_(Massachusetts)"
      }
    ],
    "id": "0dbe25e3f60b4874ad6bbbde0b92db79",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "List the scientists whose doctoral advisor is Ernest Rutherford and are known for Manhattan Project?",
    "SerialNumber": "2074",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford> . ?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford"
      },
      {
        "label": "Manhattan Project",
        "uri": "http://dbpedia.org/resource/Manhattan_Project"
      }
    ],
    "id": "f152c9e6bda2455781b4900277175979",
    "predicate mapping": [
      {
        "label": "doctoral advisor",
        "uri": "http://dbpedia.org/ontology/doctoralAdvisor"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What is the layout of the automobiles whose designer company is Olivier Boulay?",
    "SerialNumber": "2075",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Olivier_Boulay> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Olivier Boulay",
        "uri": "http://dbpedia.org/resource/Olivier_Boulay"
      }
    ],
    "id": "b109f73fd21a466b80b5e96bbd12b4a3",
    "predicate mapping": [
      {
        "label": "designer company",
        "uri": "http://dbpedia.org/ontology/designCompany"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Who was on the boards of Freedom of the City and Royal Society?",
    "SerialNumber": "2078",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Freedom_of_the_City> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Royal_Society> . }",
    "entity mapping": [
      {
        "label": "Freedom of the City",
        "uri": "http://dbpedia.org/resource/Freedom_of_the_City"
      },
      {
        "label": "Royal Society",
        "uri": "http://dbpedia.org/resource/Royal_Society"
      }
    ],
    "id": "181669e0211e4d799df81237c72d9b39",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "What is the almamater of the president whose vice president was Enrique Jos Varona?",
    "SerialNumber": "2080",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/Enrique_José_Varona> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Enrique Jos Varona",
        "uri": "http://dbpedia.org/resource/Enrique_José_Varona"
      }
    ],
    "id": "07ac58be90694523be7a9ad593d82ef4",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      },
      {
        "label": "almamater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "What is the architecture of First National Bank and Trust Building (Lima, Ohio) ?",
    "SerialNumber": "2081",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ",
    "entity mapping": [
      {
        "label": "First National Bank and Trust Building (Lima, Ohio)",
        "uri": "http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)"
      }
    ],
    "id": "d3c142c23fcd445e8acfe1320c5cddfb",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      }
    ]
  },
  {
    "question": "Directors of which movies are buried in Ronda?",
    "SerialNumber": "2082",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Ronda> . ?uri <http://dbpedia.org/property/director> ?x  . }",
    "entity mapping": [
      {
        "label": "Ronda",
        "uri": "http://dbpedia.org/resource/Ronda"
      }
    ],
    "id": "30b207243bc34347a7cc38bb8cb88fd0",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "Director",
        "uri": "http://dbpedia.org/property/director"
      }
    ]
  },
  {
    "question": "In which states does the river flow whose left tributary is Toms Creek?",
    "SerialNumber": "2083",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Toms_Creek_(Monocacy_River)> <http://dbpedia.org/ontology/leftTributary> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
    "entity mapping": [
      {
        "label": "Toms Creek",
        "uri": "http://dbpedia.org/resource/Toms_Creek_(Monocacy_River)"
      }
    ],
    "id": "c1958e8eaa264ab58264e8dbc6849720",
    "predicate mapping": [
      {
        "label": "left tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      }
    ]
  },
  {
    "question": "Which animator of the The Skeleton Dance is also the director of The Haunted House (1929 film) ?",
    "SerialNumber": "2084",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri} ",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance"
      },
      {
        "label": "The Haunted House (1929 film)",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)"
      }
    ],
    "id": "093a1659d85d4b9cab08915271c4e918",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/ontology/director"
      }
    ]
  },
  {
    "question": "What basketball league\u0027s champion is Golden State Warriors",
    "SerialNumber": "2085",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/Golden_State_Warriors>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballLeague>}",
    "entity mapping": [
      {
        "label": "Golden State Warriors",
        "uri": "http://dbpedia.org/resource/Golden_State_Warriors"
      }
    ],
    "id": "7515efe0523a46909195354f0fb0838b",
    "predicate mapping": [
      {
        "label": "champion",
        "uri": "http://dbpedia.org/property/champion"
      },
      {
        "label": "basketball league",
        "uri": "http://dbpedia.org/ontology/BasketballLeague"
      }
    ]
  },
  {
    "question": "Which high school of the Jerry Tagge also was the palce hwer Temptation Waits was recorded ?",
    "SerialNumber": "2087",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri. <http://dbpedia.org/resource/Temptation_Waits> <http://dbpedia.org/ontology/recordedIn> ?uri} ",
    "entity mapping": [
      {
        "label": "Jerry Tagge",
        "uri": "http://dbpedia.org/resource/Jerry_Tagge"
      },
      {
        "label": "Temptation Waits",
        "uri": "http://dbpedia.org/resource/Temptation_Waits"
      }
    ],
    "id": "09c521f0f65e49c5b02014c8d62cb12f",
    "predicate mapping": [
      {
        "label": "high school",
        "uri": "http://dbpedia.org/property/highSchool"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      }
    ]
  },
  {
    "question": "Stockholm is the HQ of how many things?",
    "SerialNumber": "2089",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . }",
    "entity mapping": [
      {
        "label": "Stockholm",
        "uri": "http://dbpedia.org/resource/Stockholm"
      }
    ],
    "id": "33984af5c01b4427b7af87f294ee0f1c",
    "predicate mapping": [
      {
        "label": "HQ",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "Who is married to Susan Weber Soros?",
    "SerialNumber": "2091",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Susan_Weber_Soros>  . }",
    "entity mapping": [
      {
        "label": "Susan Weber Soros",
        "uri": "http://dbpedia.org/resource/Susan_Weber_Soros"
      }
    ],
    "id": "6adadd03b3254e5386b3c4bd1680b99d",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse"
      }
    ]
  },
  {
    "question": "What is the state of origin of Abbas Jafri ?",
    "SerialNumber": "2093",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abbas_Jafri> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ",
    "entity mapping": [
      {
        "label": "Abbas Jafri",
        "uri": "http://dbpedia.org/resource/Abbas_Jafri"
      }
    ],
    "id": "ac851fcc762c4a0abda96bed81bef120",
    "predicate mapping": [
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Name the battle fought by the military persons who also fought in Algeria ?",
    "SerialNumber": "2094",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Algeria> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "Algeria",
        "uri": "http://dbpedia.org/resource/Algeria"
      }
    ],
    "id": "fe5cca52ae464cf8901728f58148bac7",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "military person",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "does the journal of cancer have the creative commons license?",
    "SerialNumber": "2095",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Journal_of_Cancer> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/Creative_Commons_license> }",
    "entity mapping": [
      {
        "label": "journal of cancer",
        "uri": "http://dbpedia.org/resource/Journal_of_Cancer"
      },
      {
        "label": "creative commons license",
        "uri": "http://dbpedia.org/resource/Creative_Commons_license"
      }
    ],
    "id": "8a3ce84f8932457284713d13f23eae30",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license"
      }
    ]
  },
  {
    "question": "What is debut team of the baseball players who died in Los Angeles?",
    "SerialNumber": "2097",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Los_Angeles> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "entity mapping": [
      {
        "label": "Los Angeles",
        "uri": "http://dbpedia.org/resource/Los_Angeles"
      }
    ],
    "id": "43e2baff638546e2a1d68bc013f30e65",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer"
      }
    ]
  },
  {
    "question": "Who are the associated musical artist of the  artists of band Shorty Rogers?",
    "SerialNumber": "2098",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Shorty_Rogers> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Shorty Rogers",
        "uri": "http://dbpedia.org/resource/Shorty_Rogers"
      }
    ],
    "id": "b4ccb08854ad40d48a962e5bc8319a51",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "What is the region of the ethnic group which speaks the language of Arkansas?",
    "SerialNumber": "2100",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Arkansas> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "entity mapping": [
      {
        "label": "Arkansas",
        "uri": "http://dbpedia.org/resource/Arkansas"
      }
    ],
    "id": "d999286c2f1b4750b667f53ecdf21be0",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup"
      }
    ]
  },
  {
    "question": "Does Silver Airways have a hub at the Washington Dulles International Airport?",
    "SerialNumber": "2108",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Silver_Airways> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Washington_Dulles_International_Airport> }",
    "entity mapping": [
      {
        "label": "Silver Airways",
        "uri": "http://dbpedia.org/resource/Silver_Airways"
      },
      {
        "label": "Washington Dulles International Airport",
        "uri": "http://dbpedia.org/resource/Washington_Dulles_International_Airport"
      }
    ],
    "id": "c8eb320ce07140629b07a873aa8a1f66",
    "predicate mapping": [
      {
        "label": "airport hub",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      }
    ]
  },
  {
    "question": "What is the profession of William Luther Hill ?",
    "SerialNumber": "2109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri } ",
    "entity mapping": [
      {
        "label": "William Luther Hill",
        "uri": "http://dbpedia.org/resource/William_Luther_Hill"
      }
    ],
    "id": "07aeedead69840918b458b085e80e817",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      }
    ]
  },
  {
    "question": "What are the source of the streams whose one of the source is Calera, Oklahoma?",
    "SerialNumber": "2111",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Calera,_Oklahoma> . ?x <http://dbpedia.org/ontology/source> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}",
    "entity mapping": [
      {
        "label": "Calera, Oklahoma",
        "uri": "http://dbpedia.org/resource/Calera,_Oklahoma"
      }
    ],
    "id": "6050cd3ccfcc4dfdb3d70fce8b1c3c92",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "stream",
        "uri": "http://dbpedia.org/ontology/Stream"
      }
    ]
  },
  {
    "question": "What is the serving railway line of Rostov-Glavny ?",
    "SerialNumber": "2113",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rostov-Glavny> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ",
    "entity mapping": [
      {
        "label": "Rostov-Glavny",
        "uri": "http://dbpedia.org/resource/Rostov-Glavny"
      }
    ],
    "id": "176e2c67c12547b9bad7e6dff1452cb4",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      }
    ]
  },
  {
    "question": "What is the genre for the developer of Interplay Entertainment?",
    "SerialNumber": "2116",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "Interplay Entertainment",
        "uri": "http://dbpedia.org/resource/Interplay_Entertainment"
      }
    ],
    "id": "9b31b9b3c89f471bafa57e35da9f566b",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "What is the official residence of Sarah Kazemy ?",
    "SerialNumber": "2119",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sarah_Kazemy> <http://dbpedia.org/property/residence> ?uri } ",
    "entity mapping": [
      {
        "label": "Sarah Kazemy",
        "uri": "http://dbpedia.org/resource/Sarah_Kazemy"
      }
    ],
    "id": "46b80622ce374a06a4553cc91038560a",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "Which state of Tendaho dam is the headquarters of Ethiopian People\u0027s revolutionary democratic Front located ?",
    "SerialNumber": "2121",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ethiopian_People\u0027s_Revolutionary_Democratic_Front> <http://dbpedia.org/property/headquarters> ?uri. <http://dbpedia.org/resource/Tendaho_Dam> <http://dbpedia.org/property/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Ethiopian People\u0027s revolutionary democratic Front",
        "uri": "http://dbpedia.org/resource/Ethiopian_People\u0027s_Revolutionary_Democratic_Front"
      },
      {
        "label": "Tendaho dam",
        "uri": "http://dbpedia.org/resource/Tendaho_Dam"
      }
    ],
    "id": "94437269d7074fa589ba7d6325c07e24",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "Did Paul Weatherwax an editor of Behave Yourself?",
    "SerialNumber": "2124",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Behave_Yourself!> <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Paul_Weatherwax> }",
    "entity mapping": [
      {
        "label": "Behave Yourself?",
        "uri": "http://dbpedia.org/resource/Behave_Yourself!"
      },
      {
        "label": "Paul Weatherwax",
        "uri": "http://dbpedia.org/resource/Paul_Weatherwax"
      }
    ],
    "id": "d610ad560d0a413083759ecc7b270c9e",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing"
      }
    ]
  },
  {
    "question": "What ingredients are used in preparing the dish of Ragout fin?",
    "SerialNumber": "2125",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri } ",
    "entity mapping": [
      {
        "label": "Ragout fin",
        "uri": "http://dbpedia.org/resource/Ragout_fin"
      }
    ],
    "id": "f2fd76539712496f89d28c3d4448d5d8",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "What is the order of George Frisbie Hoar?",
    "SerialNumber": "2134",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Frisbie_Hoar> <http://dbpedia.org/property/order> ?uri } ",
    "entity mapping": [
      {
        "label": "George Frisbie Hoar",
        "uri": "http://dbpedia.org/resource/George_Frisbie_Hoar"
      }
    ],
    "id": "5515c31e477642508f2333e66a7124e6",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/property/order"
      }
    ]
  },
  {
    "question": "Who are the opponents of graduates of the Middle Temple?",
    "SerialNumber": "2135",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Middle_Temple> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . }",
    "entity mapping": [
      {
        "label": "Middle Temple",
        "uri": "http://dbpedia.org/resource/Middle_Temple"
      }
    ],
    "id": "db38999d5a924a30bf35df8596c3cedc",
    "predicate mapping": [
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      }
    ]
  },
  {
    "question": "How many movies were directed by the graduate of Burbank High School ?",
    "SerialNumber": "2136",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Burbank_High_School_(Burbank,_California)> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Burbank High School",
        "uri": "http://dbpedia.org/resource/Burbank_High_School_(Burbank,_California)"
      }
    ],
    "id": "458d42b5dd84407f9c58816fa06defdd",
    "predicate mapping": [
      {
        "label": "graduate of",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name the company whose products is Boeing F/A-18E/F Super Hornet and key person is Raymond Conner?",
    "SerialNumber": "2138",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "uri": "http://dbpedia.org/resource/Raymond_Conner"
      }
    ],
    "id": "4795bf86bb3c409aa3c9750d6092aa2f",
    "predicate mapping": [
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "hornet super",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet"
      },
      {
        "label": "key person",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the common architecture of the Grand Serail of Aleppo and Shaheed Minar, Kolkata ?",
    "SerialNumber": "2140",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grand_Serail_of_Aleppo> <http://dbpedia.org/ontology/architecturalStyle> ?uri. <http://dbpedia.org/resource/Shaheed_Minar,_Kolkata> <http://dbpedia.org/ontology/architecturalStyle> ?uri . }",
    "entity mapping": [
      {
        "label": "Grand Serail of Aleppo",
        "uri": "http://dbpedia.org/resource/Grand_Serail_of_Aleppo"
      },
      {
        "label": "Shaheed Minar, Kolkata",
        "uri": "http://dbpedia.org/resource/Shaheed_Minar,_Kolkata"
      }
    ],
    "id": "a57fac7c18cc43cf9acdec289160a3f6",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      },
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      }
    ]
  },
  {
    "question": "Name the company founded in New Mexico and provides Outlook.com as services ?",
    "SerialNumber": "2142",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "New Mexico",
        "uri": "http://dbpedia.org/resource/New_Mexico"
      },
      {
        "label": "Outlook.com",
        "uri": "http://dbpedia.org/resource/Outlook.com"
      }
    ],
    "id": "d91e9b0f8f0b4a2e8ebfa336a54bdde1",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who edited Easy street ?",
    "SerialNumber": "2144",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Easy_Street_(film)> <http://dbpedia.org/ontology/editing> ?uri } ",
    "entity mapping": [
      {
        "label": "Easy street",
        "uri": "http://dbpedia.org/resource/Easy_Street_(film)"
      }
    ],
    "id": "781e6cc08f044c428d77cc3790f657eb",
    "predicate mapping": [
      {
        "label": "edited",
        "uri": "http://dbpedia.org/ontology/editing"
      }
    ]
  },
  {
    "question": "Name everyone working for a company owned by Roman Abramovich.",
    "SerialNumber": "2147",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Roman_Abramovich> . ?uri <http://dbpedia.org/ontology/occupation> ?x  . }",
    "entity mapping": [
      {
        "label": "Roman Abramovich",
        "uri": "http://dbpedia.org/resource/Roman_Abramovich"
      }
    ],
    "id": "16bea2bafce74ca2990221d956a47fa0",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Was Robert Burns from the Romanticist School of thought?",
    "SerialNumber": "2155",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Burns> <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Romanticism> }",
    "entity mapping": [
      {
        "label": "Robert Burns",
        "uri": "http://dbpedia.org/resource/Robert_Burns"
      },
      {
        "label": "Romanticist",
        "uri": "http://dbpedia.org/resource/Romanticism"
      }
    ],
    "id": "fc4ee0bdf9ae4487ac6fc5f5dbdf452c",
    "predicate mapping": [
      {
        "label": "School",
        "uri": "http://dbpedia.org/property/movement"
      }
    ]
  },
  {
    "question": "Name the sea whose inflow is Kemijoki and outflow is Danish straits?",
    "SerialNumber": "2156",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Kemijoki> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Kemijoki",
        "uri": "http://dbpedia.org/resource/Kemijoki"
      },
      {
        "label": "Danish straits",
        "uri": "http://dbpedia.org/resource/Danish_straits"
      }
    ],
    "id": "519d34ace38b4ea093d283425bef109e",
    "predicate mapping": [
      {
        "label": "inflow",
        "uri": "http://dbpedia.org/ontology/inflow"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Count the number of region of AN/FSQ-7 Combat Direction Central?",
    "SerialNumber": "2157",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central> <http://dbpedia.org/ontology/region> ?uri  . }",
    "entity mapping": [],
    "id": "2d254f44524040f49a25092be3e4f942",
    "predicate mapping": [
      {
        "label": "direction central combat",
        "uri": "http://dbpedia.org/resource/AN/FSQ-7_Combat_Direction_Central"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Where was Special 26 recorded ?",
    "SerialNumber": "2159",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Special_26> <http://dbpedia.org/property/recorded> ?uri } ",
    "entity mapping": [
      {
        "label": "Special 26",
        "uri": "http://dbpedia.org/resource/Special_26"
      }
    ],
    "id": "9e8d0173dbb749c3a9861e1887894afe",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "List the awards won by the wife of Ingrid von Rosen.",
    "SerialNumber": "2160",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ingrid_von_Rosen> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ingrid von Rosen",
        "uri": "http://dbpedia.org/resource/Ingrid_von_Rosen"
      }
    ],
    "id": "ade7e2b4ed804a43a9a124fe2f3e4efc",
    "predicate mapping": [
      {
        "label": "wife",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "List common systems are developed by of the Google Videos and written by of the Google Web Toolkit ?",
    "SerialNumber": "2162",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Videos> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri} ",
    "entity mapping": [
      {
        "label": "Google Videos",
        "uri": "http://dbpedia.org/resource/Google_Videos"
      },
      {
        "label": "Google Web Toolkit",
        "uri": "http://dbpedia.org/resource/Google_Web_Toolkit"
      }
    ],
    "id": "3720d9f7161b4dbba314e15c50a74922",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "Name hte builder of Baku Olympic Stadium ?",
    "SerialNumber": "2164",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baku_Olympic_Stadium_(BOS)> <http://dbpedia.org/ontology/builder> ?uri } ",
    "entity mapping": [
      {
        "label": "Baku Olympic Stadium",
        "uri": "http://dbpedia.org/resource/Baku_Olympic_Stadium_(BOS)"
      }
    ],
    "id": "4311e02017fd4760a06569b9821a2411",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      }
    ]
  },
  {
    "question": "Who is the animator of Tommy Tucker\u0027s Tooth ?",
    "SerialNumber": "2165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth> <http://dbpedia.org/property/animator> ?uri } ",
    "entity mapping": [
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth"
      }
    ],
    "id": "4294fa2db28d45f1933f8c4347b84964",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator"
      }
    ]
  },
  {
    "question": "What is the national origin of Focke-Wulf Fw 260 ?",
    "SerialNumber": "2167",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Focke-Wulf_Fw_260> <http://dbpedia.org/property/nationalOrigin> ?uri } ",
    "entity mapping": [
      {
        "label": "Focke-Wulf Fw 260",
        "uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260"
      }
    ],
    "id": "fd1f031446b74ac481667ae2904eb14f",
    "predicate mapping": [
      {
        "label": "national origin",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      }
    ]
  },
  {
    "question": "Who is known for are War of 1812 and Battle of the Thames?",
    "SerialNumber": "2171",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/War_of_1812> . ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Battle_of_the_Thames> . }",
    "entity mapping": [
      {
        "label": "War of 1812",
        "uri": "http://dbpedia.org/resource/War_of_1812"
      },
      {
        "label": "Battle of the Thames",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Thames"
      }
    ],
    "id": "db906608706f4028b90fa657a76a2fce",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Count everything garrisoned at the pentagon?",
    "SerialNumber": "2172",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . }",
    "entity mapping": [
      {
        "label": "the pentagon",
        "uri": "http://dbpedia.org/resource/The_Pentagon"
      }
    ],
    "id": "b5297f4033954bbebf99e83717abf862",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      }
    ]
  },
  {
    "question": "List few schools situated in Reading, Berkshire ?",
    "SerialNumber": "2173",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Reading, Berkshire",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire"
      }
    ],
    "id": "96e065865fdc4334b92125a47b7afc00",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "How many rivers end in the Indian Ocean?",
    "SerialNumber": "2174",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Indian Ocean",
        "uri": "http://dbpedia.org/resource/Indian_Ocean"
      }
    ],
    "id": "2b813b2612884ca0b83b6347da69b776",
    "predicate mapping": [
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What non fiction subjects are covered in books by Doubleday publishers?",
    "SerialNumber": "2175",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Doubleday_(publisher)> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Doubleday",
        "uri": "http://dbpedia.org/resource/Doubleday_(publisher)"
      }
    ],
    "id": "44f0efbc081546a0be93ab03cbed3e68",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "fiction",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Find the total number of tenants of the stadium whose tenants was Toronto Marlies?",
    "SerialNumber": "2176",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Toronto_Marlies> . ?x <http://dbpedia.org/property/tenants> ?uri }",
    "entity mapping": [
      {
        "label": "Toronto Marlies",
        "uri": "http://dbpedia.org/resource/Toronto_Marlies"
      }
    ],
    "id": "24853dbf6de64eb1951cbc2cb6673cf5",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      },
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "Who voiced in Peanuts Motion Comics and The Peanuts Movie?",
    "SerialNumber": "2177",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/Peanuts_Motion_Comics> . ?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Peanuts_Movie> . }",
    "entity mapping": [
      {
        "label": "Peanuts Motion Comics",
        "uri": "http://dbpedia.org/resource/Peanuts_Motion_Comics"
      },
      {
        "label": "The Peanuts Movie",
        "uri": "http://dbpedia.org/resource/The_Peanuts_Movie"
      }
    ],
    "id": "712c9dd545ed457698ecdaee86202d3e",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      }
    ]
  },
  {
    "question": "Is Rain Over me in the planet pit album?",
    "SerialNumber": "2178",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Rain_Over_Me> <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Planet_Pit> }",
    "entity mapping": [
      {
        "label": "Rain Over me",
        "uri": "http://dbpedia.org/resource/Rain_Over_Me"
      },
      {
        "label": "planet pit",
        "uri": "http://dbpedia.org/resource/Planet_Pit"
      }
    ],
    "id": "a12b0138676940388abb030a095b99cf",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      }
    ]
  },
  {
    "question": "List the honorary title given to the spouse of Lillian Disney ?",
    "SerialNumber": "2180",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lillian_Disney> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lillian Disney",
        "uri": "http://dbpedia.org/resource/Lillian_Disney"
      }
    ],
    "id": "3ab803a589804dd8b296cbe19777f8dc",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "honorary title",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What is the total number of other restingplace of the politicians whose one of the restingplace is East Norwalk Historical Cemetery?",
    "SerialNumber": "2182",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/East_Norwalk_Historical_Cemetery> . ?x <http://dbpedia.org/property/restingplace> ?uri }",
    "entity mapping": [
      {
        "label": "East Norwalk Historical Cemetery",
        "uri": "http://dbpedia.org/resource/East_Norwalk_Historical_Cemetery"
      }
    ],
    "id": "1c8cf55dda6444e69a79532b4cb471f2",
    "predicate mapping": [
      {
        "label": "restingplace",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "restingplace",
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "Stan Van Gundy serves as a head coach and president for which basketball team?",
    "SerialNumber": "2185",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Stan_Van_Gundy> } ",
    "entity mapping": [
      {
        "label": "Stan Van Gundy",
        "uri": "http://dbpedia.org/resource/Stan_Van_Gundy"
      }
    ],
    "id": "2afab07b2dac4282909806c34e40c6f5",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": " Wringer (novel) and Maniac Magee is the notable work of which author?",
    "SerialNumber": "2186",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wringer_(novel)> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Wringer (novel)",
        "uri": "http://dbpedia.org/resource/Wringer_(novel)"
      },
      {
        "label": "Maniac Magee",
        "uri": "http://dbpedia.org/resource/Maniac_Magee"
      }
    ],
    "id": "ab50944245784dce87146a8d1f1cc756",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Was Liliya Lobanova born in Ukraine?",
    "SerialNumber": "2187",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Ukraine> }",
    "entity mapping": [
      {
        "label": "Liliya Lobanova",
        "uri": "http://dbpedia.org/resource/Liliya_Lobanova"
      },
      {
        "label": "Ukraine",
        "uri": "http://dbpedia.org/resource/Ukraine"
      }
    ],
    "id": "504cb25e8e274fb68f21b73610569d7a",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthplace"
      }
    ]
  },
  {
    "question": "List all the major shrines of the saints which has one of the shrines as Debre Libanos ?",
    "SerialNumber": "2190",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Debre_Libanos> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "entity mapping": [
      {
        "label": "Debre Libanos",
        "uri": "http://dbpedia.org/resource/Debre_Libanos"
      }
    ],
    "id": "b3401936fc1a491ebfa11cbeeda2c9b5",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint"
      }
    ]
  },
  {
    "question": "Who is the owner of  Chelsea F.C. ?",
    "SerialNumber": "2191",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chelsea_F.C.> <http://dbpedia.org/property/owner> ?uri } ",
    "entity mapping": [
      {
        "label": "Chelsea F.C.",
        "uri": "http://dbpedia.org/resource/Chelsea_F.C."
      }
    ],
    "id": "1f6027121a154845a301780b46413756",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Which associate musical artist of Carolyn Dennis is also the composer of Motorpsycho Nitemare ?",
    "SerialNumber": "2192",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carolyn_Dennis> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri. <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri} ",
    "entity mapping": [
      {
        "label": "Carolyn Dennis",
        "uri": "http://dbpedia.org/resource/Carolyn_Dennis"
      },
      {
        "label": "Motorpsycho Nitemare",
        "uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare"
      }
    ],
    "id": "34f371d04a104a0d846d5cbab6231a08",
    "predicate mapping": [
      {
        "label": "associate musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer"
      }
    ]
  },
  {
    "question": "What is the political party of Arun Chandra Guha and Indira Gandhi?",
    "SerialNumber": "2193",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arun_Chandra_Guha> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Indira_Gandhi> <http://dbpedia.org/ontology/party> ?uri . }",
    "entity mapping": [
      {
        "label": "Arun Chandra Guha",
        "uri": "http://dbpedia.org/resource/Arun_Chandra_Guha"
      },
      {
        "label": "Indira Gandhi",
        "uri": "http://dbpedia.org/resource/Indira_Gandhi"
      }
    ],
    "id": "13d323edfef5499a85c7cb144d5d4793",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "How many bacterias are there whose division is Firmicutes?",
    "SerialNumber": "2194",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "entity mapping": [
      {
        "label": "Firmicutes",
        "uri": "http://dbpedia.org/resource/Firmicutes"
      }
    ],
    "id": "f867edc1ebd04f73a619ade4c87800e0",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria"
      }
    ]
  },
  {
    "question": "List things developed by Autoconf ?",
    "SerialNumber": "2196",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Autoconf> <http://dbpedia.org/ontology/developer> ?uri } ",
    "entity mapping": [
      {
        "label": "Autoconf",
        "uri": "http://dbpedia.org/resource/Autoconf"
      }
    ],
    "id": "d7d6a471f045411d88c97b34e458c2c9",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Was His New Job edited by Charlie Chaplin?",
    "SerialNumber": "2198",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/His_New_Job> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Charlie_Chaplin> }",
    "entity mapping": [
      {
        "label": "His New Job",
        "uri": "http://dbpedia.org/resource/His_New_Job"
      },
      {
        "label": "Charlie Chaplin",
        "uri": "http://dbpedia.org/resource/Charlie_Chaplin"
      }
    ],
    "id": "ccd7bfe91df242cba413e7b850bdff5e",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editing"
      }
    ]
  },
  {
    "question": "Which person belongs to the board of Howard Hughes Medical Institute?",
    "SerialNumber": "2199",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Howard_Hughes_Medical_Institute>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Howard Hughes Medical Institute",
        "uri": "http://dbpedia.org/resource/Howard_Hughes_Medical_Institute"
      }
    ],
    "id": "c1a70be915f046f688328bccc9b5e78c",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which hockey team is coached by mike babcock?",
    "SerialNumber": "2203",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
    "entity mapping": [
      {
        "label": "mike babcock",
        "uri": "http://dbpedia.org/resource/Mike_Babcock"
      }
    ],
    "id": "e03711f1cbfc4364aed4f709337e0f46",
    "predicate mapping": [
      {
        "label": "coached",
        "uri": "http://dbpedia.org/property/headCoach"
      },
      {
        "label": "hockey team",
        "uri": "http://dbpedia.org/ontology/HockeyTeam"
      }
    ]
  },
  {
    "question": "Name the mountain whose parent peak is located in Mexico.",
    "SerialNumber": "2205",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/State_of_Mexico> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Mexico",
        "uri": "http://dbpedia.org/resource/State_of_Mexico"
      }
    ],
    "id": "66ae293ce48e42c183df4a5acf2e684c",
    "predicate mapping": [
      {
        "label": "is located in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain parent peak",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "Where was Ne daj se, Nina first aired ?",
    "SerialNumber": "2206",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> ?uri } ",
    "entity mapping": [
      {
        "label": "Ne daj se, Nina",
        "uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina"
      }
    ],
    "id": "eea1a931ec7b42c3bbcb1273d1b870cd",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired"
      }
    ]
  },
  {
    "question": "In which state is Colemanville Covered Bridge located ?",
    "SerialNumber": "2209",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Colemanville_Covered_Bridge> <http://dbpedia.org/ontology/state> ?uri } ",
    "entity mapping": [
      {
        "label": "Colemanville Covered Bridge",
        "uri": "http://dbpedia.org/resource/Colemanville_Covered_Bridge"
      }
    ],
    "id": "85c76306bdca404d9198823c7f039b6e",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      }
    ]
  },
  {
    "question": "What is the Team Name  of the Cristo Rey Jesuit High School (Chicago) and is also the nickname of the Lyons Township High School ?",
    "SerialNumber": "2212",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)> <http://dbpedia.org/property/teamName> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri} ",
    "entity mapping": [
      {
        "label": "Cristo Rey Jesuit High School (Chicago)",
        "uri": "http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)"
      },
      {
        "label": "Lyons Township High School",
        "uri": "http://dbpedia.org/resource/Lyons_Township_High_School"
      }
    ],
    "id": "7402ac71f855482d9acd335dbad8e3b1",
    "predicate mapping": [
      {
        "label": "Team Name",
        "uri": "http://dbpedia.org/property/teamName"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "Is the song Only the Good Die Young from The Stranger?",
    "SerialNumber": "2214",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Only_the_Good_Die_Young> <http://dbpedia.org/property/fromAlbum> <http://dbpedia.org/resource/The_Stranger_(album)> }",
    "entity mapping": [
      {
        "label": "Only the Good Die Young",
        "uri": "http://dbpedia.org/resource/Only_the_Good_Die_Young"
      },
      {
        "label": "The Stranger",
        "uri": "http://dbpedia.org/resource/The_Stranger_(album)"
      }
    ],
    "id": "eb019f4872c64a79b87db465172c36a8",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/property/fromAlbum"
      }
    ]
  },
  {
    "question": "Name the office holders whose successor died in Morristown, New Jersey?",
    "SerialNumber": "2217",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Morristown,_New_Jersey> . ?uri <http://dbpedia.org/ontology/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Morristown, New Jersey",
        "uri": "http://dbpedia.org/resource/Morristown,_New_Jersey"
      }
    ],
    "id": "8a79a42afec446ec8c50537ada39a7f3",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What is the total number of other non-fiction subject of the books whose one of the subject is Racism?",
    "SerialNumber": "2218",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Racism> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri }",
    "entity mapping": [
      {
        "label": "Racism",
        "uri": "http://dbpedia.org/resource/Racism"
      }
    ],
    "id": "9c14d984d9b44eda8acb73656552d3dc",
    "predicate mapping": [
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      },
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      }
    ]
  },
  {
    "question": "Who operates twin Cities 400 ?",
    "SerialNumber": "2220",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "twin Cities 400",
        "uri": "http://dbpedia.org/resource/Twin_Cities_400"
      }
    ],
    "id": "9c2755a6ad1a44e6b2fae15bb6dda2fa",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      }
    ]
  },
  {
    "question": "Name the broadcast area of  Radio Philippines Network ?",
    "SerialNumber": "2221",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Radio_Philippines_Network> <http://dbpedia.org/property/area> ?uri } ",
    "entity mapping": [
      {
        "label": "Radio Philippines Network",
        "uri": "http://dbpedia.org/resource/Radio_Philippines_Network"
      }
    ],
    "id": "67e7b4cfd56449dd8e16839eb9d8325c",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      }
    ]
  },
  {
    "question": "What is pitro Gruszka hometown ?",
    "SerialNumber": "2223",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Piotr_Gruszka> <http://dbpedia.org/property/hometown> ?uri } ",
    "entity mapping": [
      {
        "label": "pitro Gruszka",
        "uri": "http://dbpedia.org/resource/Piotr_Gruszka"
      }
    ],
    "id": "30599ffcad334bcc8b320111644de813",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown"
      }
    ]
  },
  {
    "question": "Is Angola Avante the anthem of Angola?",
    "SerialNumber": "2226",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Angola> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Angola_Avante> }",
    "entity mapping": [
      {
        "label": "Angola",
        "uri": "http://dbpedia.org/resource/Angola"
      },
      {
        "label": "Angola Avante",
        "uri": "http://dbpedia.org/resource/Angola_Avante"
      }
    ],
    "id": "96b3c05711324ad7b27f67b505eb0ef3",
    "predicate mapping": [
      {
        "label": "anthem",
        "uri": "http://dbpedia.org/ontology/anthem"
      }
    ]
  },
  {
    "question": "What sport activities are available at Polytechnic University of the Philippines Bataan?",
    "SerialNumber": "2227",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan> <http://dbpedia.org/ontology/sport> ?uri } ",
    "entity mapping": [
      {
        "label": "Polytechnic University of the Philippines Bataan",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan"
      }
    ],
    "id": "7b4b7b0484e344288b493a941b5ccf38",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Which awards have been given to both Ingmar Bergman and Charles LeMaire?",
    "SerialNumber": "2233",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri . }",
    "entity mapping": [
      {
        "label": "Ingmar Bergman",
        "uri": "http://dbpedia.org/resource/Ingmar_Bergman"
      },
      {
        "label": "Charles LeMaire",
        "uri": "http://dbpedia.org/resource/Charles_LeMaire"
      }
    ],
    "id": "2697998cbbd64b4aa7973251dcdd3b6d",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Count the water bodies that flow into the North Sea?",
    "SerialNumber": "2238",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/North_Sea> <http://dbpedia.org/property/inflow> ?uri  . }",
    "entity mapping": [
      {
        "label": "North Sea",
        "uri": "http://dbpedia.org/resource/North_Sea"
      }
    ],
    "id": "daf410687a35451bbcf9909871db61f3",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/property/inflow"
      }
    ]
  },
  {
    "question": "What is the television show whose theme music is by Primus?",
    "SerialNumber": "2241",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Primus",
        "uri": "http://dbpedia.org/resource/Primus_(band)"
      }
    ],
    "id": "1c9cc2c14b38405a9af09ae095be1c88",
    "predicate mapping": [
      {
        "label": "theme music",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Was Ne Daj Se, Nina first aired in Croatia?",
    "SerialNumber": "2243",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/Croatia> }",
    "entity mapping": [
      {
        "label": "Ne Daj Se, Nina",
        "uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina"
      },
      {
        "label": "Croatia",
        "uri": "http://dbpedia.org/resource/Croatia"
      }
    ],
    "id": "f3ac616f8c0643cf88335eb3083c700d",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired"
      }
    ]
  },
  {
    "question": "What is the military rank of the important commander of Peruvian Army?",
    "SerialNumber": "2245",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Peruvian_Army> <http://dbpedia.org/ontology/notableCommander> ?x . ?x <http://dbpedia.org/ontology/militaryRank> ?uri  . }",
    "entity mapping": [
      {
        "label": "Peruvian Army",
        "uri": "http://dbpedia.org/resource/Peruvian_Army"
      }
    ],
    "id": "e0fcf7ea42184328aedd3b110006c43c",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander"
      },
      {
        "label": "military rank",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      }
    ]
  },
  {
    "question": "What mammals fall into the biological family Canidae?",
    "SerialNumber": "2246",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Canidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "Canidae",
        "uri": "http://dbpedia.org/resource/Canidae"
      }
    ],
    "id": "2e8e7385936a4f1ab5740f608898155f",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "Name the writer of South Park: The Stick of Truth ?",
    "SerialNumber": "2247",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth> <http://dbpedia.org/ontology/writer> ?uri } ",
    "entity mapping": [
      {
        "label": "South Park: The Stick of Truth",
        "uri": "http://dbpedia.org/resource/South_Park:_The_Stick_of_Truth"
      }
    ],
    "id": "984b82270182472b9d8f250fe7d3aafc",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      }
    ]
  },
  {
    "question": "Who is the authority of Maine School of Science and Mathematics ?",
    "SerialNumber": "2248",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics> <http://dbpedia.org/ontology/authority> ?uri } ",
    "entity mapping": [
      {
        "label": "Maine School of Science and Mathematics",
        "uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics"
      }
    ],
    "id": "57ab787a271f4c28b2a0dca69d5e9068",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/authority"
      }
    ]
  },
  {
    "question": "How many titles have been won by the beauty queens which had brown hair?",
    "SerialNumber": "2252",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/property/title> ?uri  . }",
    "entity mapping": [
      {
        "label": "brown hair",
        "uri": "http://dbpedia.org/resource/Brown_hair"
      }
    ],
    "id": "0e64b5f73d5946c4b4e32140b22caf00",
    "predicate mapping": [
      {
        "label": "hair",
        "uri": "http://dbpedia.org/property/hairColor"
      },
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title"
      }
    ]
  },
  {
    "question": "Who worked at  A Goon\u0027s Deed in a Weary World and CBS?",
    "SerialNumber": "2253",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/A_Goon\u0027s_Deed_in_a_Weary_World> . ?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/CBS> . }",
    "entity mapping": [
      {
        "label": "A Goon\u0027s Deed in a Weary World",
        "uri": "http://dbpedia.org/resource/A_Goon\u0027s_Deed_in_a_Weary_World"
      },
      {
        "label": "CBS",
        "uri": "http://dbpedia.org/resource/CBS"
      }
    ],
    "id": "e8e40d229e4d47308482febc1c021b8d",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "How many things are manufactured by the company whose subsidiary is Sony Corporation shareholders and subsidiaries?",
    "SerialNumber": "2254",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "entity mapping": [
      {
        "label": "Sony Corporation shareholders and subsidiaries",
        "uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries"
      }
    ],
    "id": "2fb9c1e8780b4dd4a0c7734363590ed6",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Ford Air Transport Service and Falcon cobra are both owned by which company?",
    "SerialNumber": "2255",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri . }",
    "entity mapping": [
      {
        "label": "Ford Air Transport Service",
        "uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service"
      },
      {
        "label": "Falcon cobra",
        "uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra"
      }
    ],
    "id": "a2f27d8c0508441cafed36479e7362a6",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      }
    ]
  },
  {
    "question": "Name the movies directed by Stanley Kubrick and edited by Anthony Harvey?",
    "SerialNumber": "2256",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick"
      },
      {
        "label": "Anthony Harvey",
        "uri": "http://dbpedia.org/resource/Anthony_Harvey"
      }
    ],
    "id": "e6e8ea74524445e38326aadc3d4a8c33",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who trained the wrestlers who are billed in Wisconsin?",
    "SerialNumber": "2258",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/billed> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/ontology/trainer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}",
    "entity mapping": [
      {
        "label": "Wisconsin",
        "uri": "http://dbpedia.org/resource/Wisconsin"
      }
    ],
    "id": "bf425a8b2f6146f3b9e4bbbf61dfb270",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/ontology/billed"
      },
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/trainer"
      },
      {
        "label": "wrestler",
        "uri": "http://dbpedia.org/ontology/Wrestler"
      }
    ]
  },
  {
    "question": "Who developed the software which is used as operating system of Magic Trackpad ?",
    "SerialNumber": "2259",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Magic_Trackpad> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Magic Trackpad",
        "uri": "http://dbpedia.org/resource/Magic_Trackpad"
      }
    ],
    "id": "c5f2208531a94e90b3704d2666657f5c",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Did Umkhonto we Sizwe had Nelson Mandela as a commander?",
    "SerialNumber": "2262",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Umkhonto_we_Sizwe> <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Nelson_Mandela> }",
    "entity mapping": [
      {
        "label": "Umkhonto we Sizwe",
        "uri": "http://dbpedia.org/resource/Umkhonto_we_Sizwe"
      },
      {
        "label": "Nelson Mandela",
        "uri": "http://dbpedia.org/resource/Nelson_Mandela"
      }
    ],
    "id": "9f26789aeb6146feaff2e24761ec083a",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/notableCommanders"
      }
    ]
  },
  {
    "question": "Whichlocation city of the Denver Broncos is the palce of birth of Steven Clark Cunningham ?",
    "SerialNumber": "2263",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri. <http://dbpedia.org/resource/Steven_Clark_Cunningham> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Denver Broncos",
        "uri": "http://dbpedia.org/resource/Denver_Broncos"
      },
      {
        "label": "Steven Clark Cunningham",
        "uri": "http://dbpedia.org/resource/Steven_Clark_Cunningham"
      }
    ],
    "id": "5dbda61a444645df948f9da412547003",
    "predicate mapping": [
      {
        "label": "location city",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Name the office holder whose Governor is Charles Willing Byrd and has resting place as North Bend, Ohio?",
    "SerialNumber": "2270",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Charles Willing Byrd",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd"
      },
      {
        "label": "North Bend, Ohio",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio"
      }
    ],
    "id": "b49493ba48cb4704923543e074afb5c6",
    "predicate mapping": [
      {
        "label": "Governor",
        "uri": "http://dbpedia.org/property/governor"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Rostock and Oulu is the shore cities on which sea ?",
    "SerialNumber": "2273",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Rostock",
        "uri": "http://dbpedia.org/resource/Rostock"
      },
      {
        "label": "Oulu",
        "uri": "http://dbpedia.org/resource/Oulu"
      }
    ],
    "id": "4d7ac749c1ed4d359c857449cd3bfcd7",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Count the number of broadcast area of the TV stations which serves in Agalga ?",
    "SerialNumber": "2274",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Agaléga> . ?x <http://dbpedia.org/property/broadcastArea> ?uri }",
    "entity mapping": [
      {
        "label": "Agalga",
        "uri": "http://dbpedia.org/resource/Agaléga"
      }
    ],
    "id": "925fba8fe99f4fd68594b4e4ca58f5ba",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      },
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      }
    ]
  },
  {
    "question": "Name the kingdom with currency Solidus (coin) and administrative headquarters in Nicomedia?",
    "SerialNumber": "2275",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia>  . }",
    "entity mapping": [
      {
        "label": "Solidus (coin)",
        "uri": "http://dbpedia.org/resource/Solidus_(coin)"
      },
      {
        "label": "Nicomedia",
        "uri": "http://dbpedia.org/resource/Nicomedia"
      }
    ],
    "id": "f32a9202283b4b51a57f25e1e59661f4",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "administrative headquarters",
        "uri": "http://dbpedia.org/ontology/capital"
      }
    ]
  },
  {
    "question": "What are the baseball teams who belongs to  Guggenheim Partners?",
    "SerialNumber": "2276",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Guggenheim_Partners>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "entity mapping": [
      {
        "label": "Guggenheim Partners",
        "uri": "http://dbpedia.org/resource/Guggenheim_Partners"
      }
    ],
    "id": "d80be4c2f6b7412d9bf97bfb7b793ae6",
    "predicate mapping": [
      {
        "label": "belongs to",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam"
      }
    ]
  },
  {
    "question": "What are the television shows whose network\u0027s stockholder is Warner Bros. Television?",
    "SerialNumber": "2279",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Warner Bros. Television",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Television"
      }
    ],
    "id": "6d88e417c33d49cd85eaa5b9dc7b1174",
    "predicate mapping": [
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are some music artists whose bands have signed up with Entertainment One Music?",
    "SerialNumber": "2281",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Entertainment_One_Music> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Entertainment One Music",
        "uri": "http://dbpedia.org/resource/Entertainment_One_Music"
      }
    ],
    "id": "4224e0b4c1b448f3b24c6ed62d2b7575",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "bands",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Do Ctenochaetus Binotatus lie in the cActinopterygii class?",
    "SerialNumber": "2282",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ctenochaetus_binotatus> <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Actinopterygii> }",
    "entity mapping": [
      {
        "label": "Ctenochaetus Binotatus",
        "uri": "http://dbpedia.org/resource/Ctenochaetus_binotatus"
      },
      {
        "label": "Actinopterygii",
        "uri": "http://dbpedia.org/resource/Actinopterygii"
      }
    ],
    "id": "f17ff46a28de491a93859a94e3046480",
    "predicate mapping": [
      {
        "label": "class",
        "uri": "http://dbpedia.org/ontology/class"
      }
    ]
  },
  {
    "question": "How many movies have had a cinematographer who died in US?",
    "SerialNumber": "2284",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/cinematography> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "77b265d0903641b2b810680c1bd2bb67",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which owner of Chelsea F.C also owns Evraz ?",
    "SerialNumber": "2287",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Evraz> <http://dbpedia.org/ontology/owningCompany> ?uri. <http://dbpedia.org/resource/Chelsea_F.C.> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "Evraz",
        "uri": "http://dbpedia.org/resource/Evraz"
      },
      {
        "label": "Chelsea F.C",
        "uri": "http://dbpedia.org/resource/Chelsea_F.C."
      }
    ],
    "id": "9b45f5f43c2340bf8e4670188fdf164c",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Name the largest city of the country where the body of Amit Saigal was discovered?",
    "SerialNumber": "2289",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amit_Saigal> <http://dbpedia.org/ontology/bodyDiscovered> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Amit Saigal",
        "uri": "http://dbpedia.org/resource/Amit_Saigal"
      }
    ],
    "id": "635e0b878e574ae6af542fd1e1a9cdac",
    "predicate mapping": [
      {
        "label": "discovered body",
        "uri": "http://dbpedia.org/ontology/bodyDiscovered"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Where is the hometown of A Bartlett Giamatti?",
    "SerialNumber": "2290",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A._Bartlett_Giamatti> <http://dbpedia.org/ontology/hometown> ?uri } ",
    "entity mapping": [
      {
        "label": "Bartlett Giamatti",
        "uri": "http://dbpedia.org/resource/A._Bartlett_Giamatti"
      }
    ],
    "id": "3f8ac10edaaa4c4cbbde422c79de3c6d",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown"
      }
    ]
  },
  {
    "question": "Which major shrine of Tekle haymanot is the palce of death of Haile Selassie Gugsa ?",
    "SerialNumber": "2291",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tekle_Haymanot> <http://dbpedia.org/ontology/majorShrine> ?uri. <http://dbpedia.org/resource/Haile_Selassie_Gugsa> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "Tekle haymanot",
        "uri": "http://dbpedia.org/resource/Tekle_Haymanot"
      },
      {
        "label": "Haile Selassie Gugsa",
        "uri": "http://dbpedia.org/resource/Haile_Selassie_Gugsa"
      }
    ],
    "id": "101dfea643e24d1483797bfb175000f1",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "List the ethnicity of Riley Reid?",
    "SerialNumber": "2292",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri } ",
    "entity mapping": [
      {
        "label": "Riley Reid",
        "uri": "http://dbpedia.org/resource/Riley_Reid"
      }
    ],
    "id": "e63144a282cb442497406a9b189093f7",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity"
      }
    ]
  },
  {
    "question": "List the fields of the scientists with Sanskrit as one of the interest ?",
    "SerialNumber": "2293",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Sanskrit> . ?x <http://dbpedia.org/property/fields> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Sanskrit",
        "uri": "http://dbpedia.org/resource/Sanskrit"
      }
    ],
    "id": "09a6fbecddd347ed8eb1e9af79aa1a07",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Who won the silver medal when the bronze was won by Yang Yilin?",
    "SerialNumber": "2295",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/bronzeMedalist> <http://dbpedia.org/resource/Yang_Yilin> . ?x <http://dbpedia.org/ontology/silverMedalist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Yang Yilin",
        "uri": "http://dbpedia.org/resource/Yang_Yilin"
      }
    ],
    "id": "dbd52395559b4c3cbf5446916a925b89",
    "predicate mapping": [
      {
        "label": "bronze medal",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist"
      },
      {
        "label": "silver medal",
        "uri": "http://dbpedia.org/ontology/silverMedalist"
      }
    ]
  },
  {
    "question": "List the work  edited by  Mark Stevens and directed by Joel Schumacher?",
    "SerialNumber": "2296",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
    "entity mapping": [
      {
        "label": "Mark Stevens",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)"
      },
      {
        "label": "Joel Schumacher",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher"
      }
    ],
    "id": "6f642ee5a00048ecaeff1c0e0412e4b6",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Work"
      }
    ]
  },
  {
    "question": "Name the office holder with associate as Marcus Calpurnius Bibulus and has a kid named Augustus?",
    "SerialNumber": "2297",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Augustus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Marcus Calpurnius Bibulus",
        "uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus"
      },
      {
        "label": "Augustus",
        "uri": "http://dbpedia.org/resource/Augustus"
      }
    ],
    "id": "f728bbb501354155898026a4cef7730c",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "kid",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "List the popular works of the author of Luther: The Calling ?",
    "SerialNumber": "2298",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Luther:_The_Calling> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "entity mapping": [
      {
        "label": "Luther: The Calling",
        "uri": "http://dbpedia.org/resource/Luther:_The_Calling"
      }
    ],
    "id": "41dbdb533af748c4968df7b35a1cb8ac",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "Who are the predecessors of John Randolph of Roanoke?",
    "SerialNumber": "2299",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/John_Randolph_of_Roanoke>  . }",
    "entity mapping": [
      {
        "label": "John Randolph",
        "uri": "http://dbpedia.org/resource/John_Randolph_of_Roanoke"
      }
    ],
    "id": "3f758b0a0ad24d339835902878769609",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      }
    ]
  },
  {
    "question": "Is fox belong to the phylum of Chordate?",
    "SerialNumber": "2301",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fox> <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate> }",
    "entity mapping": [
      {
        "label": "fox",
        "uri": "http://dbpedia.org/resource/Fox"
      },
      {
        "label": "Chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      }
    ],
    "id": "d4b5df324bec450b833f8f4c1145992c",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum"
      }
    ]
  },
  {
    "question": "Who were the first drivers in Grand Prixes where the first team was Scuderia Ferrari?",
    "SerialNumber": "2302",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Scuderia_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "entity mapping": [
      {
        "label": "Scuderia Ferrari",
        "uri": "http://dbpedia.org/resource/Scuderia_Ferrari"
      }
    ],
    "id": "1ef735b540d24d54a41b5f259cd99fbd",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver"
      },
      {
        "label": "Grand Prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix"
      }
    ]
  },
  {
    "question": "List the alma mater of the congressmen who attended Nashville, Tennessee ?",
    "SerialNumber": "2304",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Congressman>}",
    "entity mapping": [
      {
        "label": "Nashville, Tennessee",
        "uri": "http://dbpedia.org/resource/Nashville,_Tennessee"
      }
    ],
    "id": "b9fce2f9e56242169dae47d4d9dbf91a",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "congressmen",
        "uri": "http://dbpedia.org/ontology/Congressman"
      }
    ]
  },
  {
    "question": "List TV shows with producer as Erik Bork and company is DreamWorks Television ?",
    "SerialNumber": "2306",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "DreamWorks Television",
        "uri": "http://dbpedia.org/resource/DreamWorks_Television"
      },
      {
        "label": "Erik Bork",
        "uri": "http://dbpedia.org/resource/Erik_Bork"
      }
    ],
    "id": "af7cd0b6cb6a40969a0ea593539894cc",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which sports are played in the alma mater of Habib Boromand Dashghapu?",
    "SerialNumber": "2310",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Habib_Boromand_Dashghapu> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "Habib Boromand Dashghapu",
        "uri": "http://dbpedia.org/resource/Habib_Boromand_Dashghapu"
      }
    ],
    "id": "98482e0e16ea482f9030d6b2d9cb000f",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "List the television shows whose network\u0027s owning company is Turner Broadcasting System?",
    "SerialNumber": "2311",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Turner_Broadcasting_System> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Turner Broadcasting System",
        "uri": "http://dbpedia.org/resource/Turner_Broadcasting_System"
      }
    ],
    "id": "4aaaa78384af465b8af13b2217f0ef66",
    "predicate mapping": [
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Give me a count on associates of Johnny Cash?",
    "SerialNumber": "2312",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash>  . }",
    "entity mapping": [
      {
        "label": "Johnny Cash",
        "uri": "http://dbpedia.org/resource/Johnny_Cash"
      }
    ],
    "id": "8a89ec10f625479ab78c031ce60bdb2e",
    "predicate mapping": [
      {
        "label": "associates",
        "uri": "http://dbpedia.org/property/associatedActs"
      }
    ]
  },
  {
    "question": "What country provides a citizenship too Newin Chidchob and Seni Pramoj?",
    "SerialNumber": "2313",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Seni_Pramoj> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "Newin Chidchob",
        "uri": "http://dbpedia.org/resource/Newin_Chidchob"
      },
      {
        "label": "Seni Pramoj",
        "uri": "http://dbpedia.org/resource/Seni_Pramoj"
      }
    ],
    "id": "0edab4967312457b82a5c2fc9c82b662",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "Who is the musician of Before I let you Go ?",
    "SerialNumber": "2316",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Before_I_Let_You_Go> <http://dbpedia.org/ontology/musicalArtist> ?uri } ",
    "entity mapping": [
      {
        "label": "Before I let you Go",
        "uri": "http://dbpedia.org/resource/Before_I_Let_You_Go"
      }
    ],
    "id": "146cb6a075864ab787660a7fa34af21a",
    "predicate mapping": [
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      }
    ]
  },
  {
    "question": "Which admin center of pulau Ujong is also the largest city of Pulau Ubin ?",
    "SerialNumber": "2317",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> ?uri. <http://dbpedia.org/resource/Pulau_Ujong> <http://dbpedia.org/ontology/capital> ?uri} ",
    "entity mapping": [
      {
        "label": "Pulau Ubin",
        "uri": "http://dbpedia.org/resource/Pulau_Ubin"
      },
      {
        "label": "pulau Ujong",
        "uri": "http://dbpedia.org/resource/Pulau_Ujong"
      }
    ],
    "id": "26fa2c8e027f4a21a5d176e264f493db",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/capital"
      }
    ]
  },
  {
    "question": "What is the Ceremonial County of Port of Tilbury ?",
    "SerialNumber": "2318",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Port_of_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri } ",
    "entity mapping": [
      {
        "label": "Port of Tilbury",
        "uri": "http://dbpedia.org/resource/Port_of_Tilbury"
      }
    ],
    "id": "2bb0d338072d46e2b06b40c9f3b8f84d",
    "predicate mapping": [
      {
        "label": "Ceremonial County",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty"
      }
    ]
  },
  {
    "question": "What is the current team of John McGuinness (motorcycle racer) ?",
    "SerialNumber": "2319",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)> <http://dbpedia.org/property/currentTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "John McGuinness",
        "uri": "http://dbpedia.org/resource/John_McGuinness_(motorcycle_racer)"
      }
    ],
    "id": "9a71167ed51b4c7da57c4724f82effdf",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam"
      }
    ]
  },
  {
    "question": "What is the ideology of the Union of Cambodian Democrats which is also the ideology of Palang Dharma Party ?",
    "SerialNumber": "2320",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_of_Cambodian_Democrats> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri . }",
    "entity mapping": [
      {
        "label": "Union of Cambodian Democrats",
        "uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats"
      },
      {
        "label": "Palang Dharma Party",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party"
      }
    ],
    "id": "1231ff04697c489994c5fa0f61486d2e",
    "predicate mapping": [
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology"
      },
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology"
      }
    ]
  },
  {
    "question": "What is the honorary title of the narrator of Everything Will Be OK?",
    "SerialNumber": "2321",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Everything_Will_Be_OK> <http://dbpedia.org/ontology/narrator> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Everything Will Be OK",
        "uri": "http://dbpedia.org/resource/Everything_Will_Be_OK"
      }
    ],
    "id": "72496fef2635425da6c20915c894072f",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator"
      },
      {
        "label": "honorary title",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Who is the famous relative of Kelly Osbourne?",
    "SerialNumber": "2323",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne>  . }",
    "entity mapping": [
      {
        "label": "Kelly Osbourne",
        "uri": "http://dbpedia.org/resource/Kelly_Osbourne"
      }
    ],
    "id": "d8afce1fd4aa4a2580832293b1d0d318",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      }
    ]
  },
  {
    "question": "What is the total number of other destinations of the airlines whose one of the destinations is Mediterranean Sea?",
    "SerialNumber": "2325",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/property/destinations> ?uri }",
    "entity mapping": [
      {
        "label": "Mediterranean Sea",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea"
      }
    ],
    "id": "c025e34523ad4f878edcceb8291c9d56",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      }
    ]
  },
  {
    "question": "List the software developed by Shawn Fanning ?",
    "SerialNumber": "2327",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Shawn_Fanning>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Shawn Fanning",
        "uri": "http://dbpedia.org/resource/Shawn_Fanning"
      }
    ],
    "id": "0ed54b0efa694946800d7e772920ffce",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Count the number of things people who know linguistics are known for ?",
    "SerialNumber": "2328",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Linguistics> . ?x <http://dbpedia.org/ontology/knownFor> ?uri }",
    "entity mapping": [
      {
        "label": "linguistics",
        "uri": "http://dbpedia.org/resource/Linguistics"
      }
    ],
    "id": "1b0d7ff1c88044248561bde3b1c452da",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Who is the employer of Michael M. Sears ?",
    "SerialNumber": "2330",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/property/employer> ?uri } ",
    "entity mapping": [
      {
        "label": "Michael M. Sears",
        "uri": "http://dbpedia.org/resource/Michael_M._Sears"
      }
    ],
    "id": "5347e3d7e51348bb814413a5707b97f3",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/property/employer"
      }
    ]
  },
  {
    "question": "What awards were given to the producer of Chicken Little?",
    "SerialNumber": "2336",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chicken_Little_(1943_film)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Chicken Little",
        "uri": "http://dbpedia.org/resource/Chicken_Little_(1943_film)"
      }
    ],
    "id": "d966774a4f744b009b17755dbd061e11",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What is the home stadium of the club coached by Justine Omojong?",
    "SerialNumber": "2337",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Justine_Omojong> . ?x <http://dbpedia.org/property/homeStadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "Justine Omojong",
        "uri": "http://dbpedia.org/resource/Justine_Omojong"
      }
    ],
    "id": "87c34662138f4e4b911440985824435c",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/property/homeStadium"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "Whose children died in North Bend, Ohio?",
    "SerialNumber": "2339",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/North_Bend,_Ohio> . ?uri <http://dbpedia.org/ontology/child> ?x  . }",
    "entity mapping": [
      {
        "label": "North Bend, Ohio",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio"
      }
    ],
    "id": "db0ceedbcf0e4e1ca708191b92dc2b59",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/ontology/child"
      }
    ]
  },
  {
    "question": "What is the governing body of Burro Flats Painted Cave ?",
    "SerialNumber": "2340",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri } ",
    "entity mapping": [
      {
        "label": "Burro Flats Painted Cave",
        "uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave"
      }
    ],
    "id": "732a9efd20d74796b8805987d0bcf033",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/ontology/governingBody"
      }
    ]
  },
  {
    "question": "whose is famous works are Maniac Magee and Wringer ?",
    "SerialNumber": "2341",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wringer_(novel)> . }",
    "entity mapping": [
      {
        "label": "Maniac Magee",
        "uri": "http://dbpedia.org/resource/Maniac_Magee"
      },
      {
        "label": "Wringer",
        "uri": "http://dbpedia.org/resource/Wringer_(novel)"
      }
    ],
    "id": "2b1b78d738c7454dbc224bdc6ccf3ff2",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/notableworks"
      }
    ]
  },
  {
    "question": "Is Lieutenant general (United States) the superintendent of United States Air Force Academy?",
    "SerialNumber": "2342",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Air_Force_Academy> <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)> }",
    "entity mapping": [
      {
        "label": "United States Air Force Academy",
        "uri": "http://dbpedia.org/resource/United_States_Air_Force_Academy"
      },
      {
        "label": "Lieutenant general (United States)",
        "uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)"
      }
    ],
    "id": "b9c19bf4a7b2452184d20d0130556a0f",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/property/superintendent"
      }
    ]
  },
  {
    "question": "Who is the owner of the website which has the label Seed Eight ?",
    "SerialNumber": "2344",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Seed_Eight> <http://dbpedia.org/property/label> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Website>}",
    "entity mapping": [
      {
        "label": "Seed Eight",
        "uri": "http://dbpedia.org/resource/Seed_Eight"
      }
    ],
    "id": "5f0366cd125f4976a4b7362c81b098cd",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "website",
        "uri": "http://dbpedia.org/ontology/Website"
      }
    ]
  },
  {
    "question": "What is the venerated in of the Abraham and religion of the Saima Chowdhury",
    "SerialNumber": "2345",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abraham> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/property/religion> ?uri} ",
    "entity mapping": [
      {
        "label": "Abraham",
        "uri": "http://dbpedia.org/resource/Abraham"
      },
      {
        "label": "Saima Chowdhury",
        "uri": "http://dbpedia.org/resource/Saima_Chowdhury"
      }
    ],
    "id": "2c0f7eee1b634f1895cbd246bd8c6e3c",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/property/veneratedIn"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "To which label did The Producers and I pray on Christmas sign up?",
    "SerialNumber": "2346",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri . }",
    "entity mapping": [
      {
        "label": "The Producers",
        "uri": "http://dbpedia.org/resource/The_Producers_(2005_film)"
      },
      {
        "label": "I pray on Christmas",
        "uri": "http://dbpedia.org/resource/I_Pray_on_Christmas"
      }
    ],
    "id": "6ea80116b84f49ef9ac58da5151f1fea",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "What is the organisation whose purposes are Environmentalism and Peace?",
    "SerialNumber": "2350",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism> . ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Environmentalism",
        "uri": "http://dbpedia.org/resource/Environmentalism"
      },
      {
        "label": "Peace",
        "uri": "http://dbpedia.org/resource/Peace"
      }
    ],
    "id": "08b90a2d429c4706bb5362d8b58190a7",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Which sports by Polytechnic University of the Philippines Taguig is the discipline of The Chess Monthly ?",
    "SerialNumber": "2351",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "The Chess Monthly",
        "uri": "http://dbpedia.org/resource/The_Chess_Monthly"
      },
      {
        "label": "Polytechnic University of the Philippines Taguig",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig"
      }
    ],
    "id": "bac245d8e39a47c1829470a9261b80c3",
    "predicate mapping": [
      {
        "label": "discipline",
        "uri": "http://dbpedia.org/property/discipline"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Name the series of Doctor Who: Evacuation Earth ?",
    "SerialNumber": "2352",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth> <http://dbpedia.org/ontology/series> ?uri } ",
    "entity mapping": [
      {
        "label": "Doctor Who: Evacuation Earth",
        "uri": "http://dbpedia.org/resource/Doctor_Who:_Evacuation_Earth"
      }
    ],
    "id": "93c37c563c8b4f0f9b070340f1fa1630",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "Name a royalty whose one of the child is Augustus  and is associated with Publius Servilius Vatia Isauricus?",
    "SerialNumber": "2354",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Augustus> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)>  . }",
    "entity mapping": [
      {
        "label": "Augustus",
        "uri": "http://dbpedia.org/resource/Augustus"
      },
      {
        "label": "Publius Servilius Vatia Isauricus",
        "uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)"
      }
    ],
    "id": "daa90042f4ff4210a603ae0931b2e92d",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      }
    ]
  },
  {
    "question": "What water bodies have primary inflows sa Kemijoki?",
    "SerialNumber": "2357",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Kemijoki> } ",
    "entity mapping": [
      {
        "label": "Kemijoki",
        "uri": "http://dbpedia.org/resource/Kemijoki"
      }
    ],
    "id": "cc83b16990044389a146f6d649f878d8",
    "predicate mapping": [
      {
        "label": "inflows",
        "uri": "http://dbpedia.org/ontology/inflow"
      }
    ]
  },
  {
    "question": "In which nation does the league take place where C.D. Primeiro de Agosto play?",
    "SerialNumber": "2359",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/C.D._Primeiro_de_Agosto_(basketball)> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>}",
    "entity mapping": [
      {
        "label": "C.D. Primeiro de Agosto",
        "uri": "http://dbpedia.org/resource/C.D._Primeiro_de_Agosto_(basketball)"
      }
    ],
    "id": "dcec37f25d32481aa9f9ed53d204e888",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/SportsLeague"
      }
    ]
  },
  {
    "question": "Colin Powell was the commander of which military conflict ?",
    "SerialNumber": "2360",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Colin Powell",
        "uri": "http://dbpedia.org/resource/Colin_Powell"
      }
    ],
    "id": "83382bb589c04cbcb6617f67fc123310",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Name the garrison of the Western Naval Command and line of the Vadodara Junction railway station ?",
    "SerialNumber": "2361",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_Naval_Command> <http://dbpedia.org/property/garrison> ?uri. <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri} ",
    "entity mapping": [
      {
        "label": "Western Naval Command",
        "uri": "http://dbpedia.org/resource/Western_Naval_Command"
      },
      {
        "label": "Vadodara Junction railway station",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station"
      }
    ],
    "id": "3f4e1777926347a99cba52bdca19ce51",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      },
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line"
      }
    ]
  },
  {
    "question": "Which cloud platform of Google cloud connect also provides services to 21Vianet ?",
    "SerialNumber": "2363",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri. <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri} ",
    "entity mapping": [
      {
        "label": "21Vianet",
        "uri": "http://dbpedia.org/resource/21Vianet"
      },
      {
        "label": "Google cloud connect",
        "uri": "http://dbpedia.org/resource/Google_Cloud_Connect"
      }
    ],
    "id": "f05f216ef164453abedf0403b3b1eedc",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      }
    ]
  },
  {
    "question": "List all areas served by the radio station serving South carolina ?",
    "SerialNumber": "2365",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/South_Carolina> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "South carolina",
        "uri": "http://dbpedia.org/resource/South_Carolina"
      }
    ],
    "id": "b880859b1271437abc4a9eb3d7e1e368",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "Malaysian highway authority has designed bridges over what things?",
    "SerialNumber": "2366",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Highway_Authority> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Malaysian highway authority",
        "uri": "http://dbpedia.org/resource/Malaysian_Highway_Authority"
      }
    ],
    "id": "54a6aa13eada429ab1b9d56d49a087ec",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "What artists are associated with the members of the Catalin Maruta?",
    "SerialNumber": "2374",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Cătălin_Măruță> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Catalin Maruta",
        "uri": "http://dbpedia.org/resource/Cătălin_Măruță"
      }
    ],
    "id": "d93f15c842c845829c54b1d588a83f82",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "How many people are buried in the Mausoleum of Augustus?",
    "SerialNumber": "2376",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus>  . }",
    "entity mapping": [
      {
        "label": "Mausoleum of Augustus",
        "uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus"
      }
    ],
    "id": "f3916ff99c6d498498ec98407decac8f",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      }
    ]
  },
  {
    "question": "How many soccer manager have been in the Spain nation football team?",
    "SerialNumber": "2377",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>}",
    "entity mapping": [
      {
        "label": "Spain nation football team",
        "uri": "http://dbpedia.org/resource/Spain_national_football_team"
      }
    ],
    "id": "7f1aa7621a7b4850b65ae46159adfa1b",
    "predicate mapping": [
      {
        "label": "nation team",
        "uri": "http://dbpedia.org/property/nationalteam"
      },
      {
        "label": "soccer manager",
        "uri": "http://dbpedia.org/ontology/SoccerManager"
      }
    ]
  },
  {
    "question": "List bacteria whose order (taxonomy) is Bacillales and domain is Bacteria?",
    "SerialNumber": "2378",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "entity mapping": [
      {
        "label": "Bacillales",
        "uri": "http://dbpedia.org/resource/Bacillales"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/resource/Bacteria"
      }
    ],
    "id": "243a759bcba94cc98226ca3477da618a",
    "predicate mapping": [
      {
        "label": "order (taxonomy)",
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria"
      }
    ]
  },
  {
    "question": "Name the writer whose one of the notable work is Adventures of Huckleberry Finn and died in Redding, Connecticut?",
    "SerialNumber": "2379",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn> . ?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Redding,_Connecticut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Huckleberry Finn",
        "uri": "http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn"
      },
      {
        "label": "Redding, Connecticut",
        "uri": "http://dbpedia.org/resource/Redding,_Connecticut"
      }
    ],
    "id": "64a685047e5d4bee91966f92474abfdf",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Name the broadcast area of ITV (Thailand) ?",
    "SerialNumber": "2380",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/broadcastArea> ?uri } ",
    "entity mapping": [
      {
        "label": "ITV (Thailand)",
        "uri": "http://dbpedia.org/resource/ITV_(Thailand)"
      }
    ],
    "id": "e6e376c1a4f14e9abe7402a8a5f35816",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      }
    ]
  },
  {
    "question": "What sports are played in schools in Vashi?",
    "SerialNumber": "2381",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Vashi> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Vashi",
        "uri": "http://dbpedia.org/resource/Vashi"
      }
    ],
    "id": "ef13c41037dc4f3a91ab5ec30d53ffa0",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Who owns the radio stations in Alabama?",
    "SerialNumber": "2382",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Alabama> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "Alabama",
        "uri": "http://dbpedia.org/resource/Alabama"
      }
    ],
    "id": "d9a4e4e556544ea0b794d7fbab357cef",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "Was Johnny Depp a member of Skull Gang?",
    "SerialNumber": "2383",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Johnny_Depp> }",
    "entity mapping": [
      {
        "label": "Skull Gang",
        "uri": "http://dbpedia.org/resource/Skull_Gang"
      },
      {
        "label": "Johnny Depp",
        "uri": "http://dbpedia.org/resource/Johnny_Depp"
      }
    ],
    "id": "c766098f1479492fb8d4e687ad9ea182",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      }
    ]
  },
  {
    "question": "How many sports are played at the university whose president is Emanuel de Guzman?",
    "SerialNumber": "2384",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sport>}",
    "entity mapping": [
      {
        "label": "Emanuel de Guzman",
        "uri": "http://dbpedia.org/resource/Emanuel_de_Guzman"
      }
    ],
    "id": "083343f08ded4af6b8fabe50e2600b71",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/Sport"
      }
    ]
  },
  {
    "question": "Who is the owner of  Latvian Wikipedia and Wiktionary ?",
    "SerialNumber": "2386",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Latvian_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Wiktionary> <http://dbpedia.org/ontology/owner> ?uri . }",
    "entity mapping": [
      {
        "label": "Latvian Wikipedia",
        "uri": "http://dbpedia.org/resource/Latvian_Wikipedia"
      },
      {
        "label": "Wiktionary",
        "uri": "http://dbpedia.org/resource/Wiktionary"
      }
    ],
    "id": "80c973d818ed45dfbaaaf86dd592f053",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "Philadelphia City Council is the governing body of which city?",
    "SerialNumber": "2387",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Philadelphia_City_Council> } ",
    "entity mapping": [
      {
        "label": "Philadelphia City Council",
        "uri": "http://dbpedia.org/resource/Philadelphia_City_Council"
      }
    ],
    "id": "3c55183d437f49039e6d568fb6623c8f",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      }
    ]
  },
  {
    "question": "What are the television shows whose Composer is Stewart Copeland?",
    "SerialNumber": "2388",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Stewart Copeland",
        "uri": "http://dbpedia.org/resource/Stewart_Copeland"
      }
    ],
    "id": "ccfbcef8a6b643ca81124ab5f600bcdd",
    "predicate mapping": [
      {
        "label": "Composer",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the television show whose opening theme is Where Everybody Knows Your Name?",
    "SerialNumber": "2389",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Where Everybody Knows Your Name",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name"
      }
    ],
    "id": "c2faa296b9ad4e5387981be381e83c53",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who follow religions led by David Miscavige?",
    "SerialNumber": "2390",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/David_Miscavige> . ?uri <http://dbpedia.org/ontology/religion> ?x  . }",
    "entity mapping": [
      {
        "label": "David Miscavige",
        "uri": "http://dbpedia.org/resource/David_Miscavige"
      }
    ],
    "id": "b3cd59226f27478faeb65afb4ba0b123",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which country had the county seats as History of Trier and Mediolanum?",
    "SerialNumber": "2393",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Mediolanum> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "History of Trier",
        "uri": "http://dbpedia.org/resource/History_of_Trier"
      },
      {
        "label": "Mediolanum",
        "uri": "http://dbpedia.org/resource/Mediolanum"
      }
    ],
    "id": "0d13e24003bc48eb9d6db732d5e11931",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "How many shows belong to the network one of whose sister station is Cartoonite?",
    "SerialNumber": "2395",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/Cartoonito> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Cartoonite",
        "uri": "http://dbpedia.org/resource/Cartoonito"
      }
    ],
    "id": "7581b52f96f34e7cafd94f2af924760e",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Moscow-Kazan high speed railway starts from which station?",
    "SerialNumber": "2397",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri } ",
    "entity mapping": [
      {
        "label": "Moscow-Kazan high speed railway",
        "uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway"
      }
    ],
    "id": "6fea069c838141f8842dd0965d1d918c",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/routeStart"
      }
    ]
  },
  {
    "question": "What is the common university iof vanderbilt Commodores and also the college of hubert Wiggs ?",
    "SerialNumber": "2401",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_Commodores> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Hubert_Wiggs> <http://dbpedia.org/ontology/college> ?uri} ",
    "entity mapping": [
      {
        "label": "vanderbilt Commodores",
        "uri": "http://dbpedia.org/resource/Vanderbilt_Commodores"
      },
      {
        "label": "hubert Wiggs",
        "uri": "http://dbpedia.org/resource/Hubert_Wiggs"
      }
    ],
    "id": "f413c412b8084c02a0a9a82589b5c916",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college"
      }
    ]
  },
  {
    "question": "Which royal people are buried in Rome?",
    "SerialNumber": "2402",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Rome",
        "uri": "http://dbpedia.org/resource/Rome"
      }
    ],
    "id": "7e85b0de27ab4b60aeca0149dd793305",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "royal",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Give me a count on scientist who are known for garrison is Tennessee ?",
    "SerialNumber": "2404",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Tennessee> . ?uri <http://dbpedia.org/property/knownFor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Tennessee",
        "uri": "http://dbpedia.org/resource/Tennessee"
      }
    ],
    "id": "e53671fb7bb643e7a161cbd7560e68f6",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What is the state of origin of Thomas Pfyl ?",
    "SerialNumber": "2407",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Pfyl> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ",
    "entity mapping": [
      {
        "label": "Thomas Pfyl",
        "uri": "http://dbpedia.org/resource/Thomas_Pfyl"
      }
    ],
    "id": "524ba88720054e1081b4086303afd9db",
    "predicate mapping": [
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "How many movies have been cinematographed by Jordan Cronenweth?",
    "SerialNumber": "2408",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Jordan Cronenweth",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth"
      }
    ],
    "id": "e8f04ab2f1d04379945b8d384d9b4c44",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/property/cinematography"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "For what is Abhijit Kunte known ?",
    "SerialNumber": "2409",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri } ",
    "entity mapping": [
      {
        "label": "Abhijit Kunte",
        "uri": "http://dbpedia.org/resource/Abhijit_Kunte"
      }
    ],
    "id": "841f3a4e3ade44b1b407f7b1382dc92a",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "List the language of Kunsten Museum of moder art Aalborg ?",
    "SerialNumber": "2410",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/KUNSTEN_Museum_of_Modern_Art_Aalborg> <http://dbpedia.org/ontology/language> ?uri } ",
    "entity mapping": [
      {
        "label": "Kunsten Museum of moder art Aalborg",
        "uri": "http://dbpedia.org/resource/KUNSTEN_Museum_of_Modern_Art_Aalborg"
      }
    ],
    "id": "7d067f0ccaed45b9b5bcb80f169566cc",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language"
      }
    ]
  },
  {
    "question": "Name a military unit whose command structure is United States Department of the Navy and garrison is Arlington County, Virginia?",
    "SerialNumber": "2413",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> . ?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "United States Department of the Navy",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy"
      },
      {
        "label": "Arlington County, Virginia",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia"
      }
    ],
    "id": "fc8842a830044f4c9bc255c1f3031969",
    "predicate mapping": [
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      },
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "What are the things built by Eristoff ?",
    "SerialNumber": "2415",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri } ",
    "entity mapping": [
      {
        "label": "Eristoff",
        "uri": "http://dbpedia.org/resource/Eristoff"
      }
    ],
    "id": "4dc12f67b9bf40f1ad3ea69a7d6ddc7f",
    "predicate mapping": [
      {
        "label": "built by",
        "uri": "http://dbpedia.org/property/manufacturer"
      }
    ]
  },
  {
    "question": "List the relative of Tim Nanai-Williams ?",
    "SerialNumber": "2416",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tim_Nanai-Williams> <http://dbpedia.org/ontology/relative> ?uri } ",
    "entity mapping": [
      {
        "label": "Tim Nanai-Williams",
        "uri": "http://dbpedia.org/resource/Tim_Nanai-Williams"
      }
    ],
    "id": "06661ab5e6804e1c8206072e2bb02395",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "Where is the station whose sister channel is the Channel 3 in Thailand?",
    "SerialNumber": "2418",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Channel_3_(Thailand)> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "entity mapping": [
      {
        "label": "Channel 3",
        "uri": "http://dbpedia.org/resource/Channel_3_(Thailand)"
      }
    ],
    "id": "b8b5452850cc482eb87779a8ed2c2159",
    "predicate mapping": [
      {
        "label": "station sister",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/TelevisionStation"
      }
    ]
  },
  {
    "question": "Count the  origin of the beverages which have been originated in england /",
    "SerialNumber": "2419",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/origin> ?uri }",
    "entity mapping": [
      {
        "label": "england",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "9f517b6fe6cf44339df470bcabf4069d",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      }
    ]
  },
  {
    "question": "What is the alma mater of the Marshall Fletcher McCallie and has affiliation with  Vanderbilt University Medical Center ?",
    "SerialNumber": "2422",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marshall_Fletcher_McCallie> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri} ",
    "entity mapping": [
      {
        "label": "Marshall Fletcher McCallie",
        "uri": "http://dbpedia.org/resource/Marshall_Fletcher_McCallie"
      },
      {
        "label": "Vanderbilt University Medical Center",
        "uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center"
      }
    ],
    "id": "01df09084d764ebd8875ff3b881349f7",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "What is the river that falls into North Sea and Thames Estuary?",
    "SerialNumber": "2424",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "North Sea",
        "uri": "http://dbpedia.org/resource/North_Sea"
      },
      {
        "label": "Thames Estuary",
        "uri": "http://dbpedia.org/resource/Thames_Estuary"
      }
    ],
    "id": "90876c6682394f56ba6183425f3025ba",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Name the university whose teams have been managed by Albertin Montoya?",
    "SerialNumber": "2425",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Albertin_Montoya> <http://dbpedia.org/property/managerclubs> ?x . ?x <http://dbpedia.org/ontology/university> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Albertin Montoya",
        "uri": "http://dbpedia.org/resource/Albertin_Montoya"
      }
    ],
    "id": "9dc93749dd3e4b619cbd8fc34311f6d9",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/managerclubs"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Name the newspaper owned by Schibsted and headquartered at Stockholm?",
    "SerialNumber": "2426",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "Schibsted",
        "uri": "http://dbpedia.org/resource/Schibsted"
      },
      {
        "label": "Stockholm",
        "uri": "http://dbpedia.org/resource/Stockholm"
      }
    ],
    "id": "6db02b173fff4b64bb309fb45500cd93",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners"
      },
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "State the religion of the person known for People\u0027s Bank (Sri Lanka) ?",
    "SerialNumber": "2429",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/People\u0027s_Bank_(Sri_Lanka)> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "People\u0027s Bank (Sri Lanka)",
        "uri": "http://dbpedia.org/resource/People\u0027s_Bank_(Sri_Lanka)"
      }
    ],
    "id": "6ddddbe9746248c1ad7bf21a4e745094",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Name the television show distributed by Broadcast syndication and voiced by Eliza Schneider?",
    "SerialNumber": "2430",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Broadcast syndication",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication"
      },
      {
        "label": "Eliza Schneider",
        "uri": "http://dbpedia.org/resource/Eliza_Schneider"
      }
    ],
    "id": "f296e394f71346d8835fe88f4e572782",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where were Justina Machado and John Englehard born?",
    "SerialNumber": "2431",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Justina_Machado> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/John_Englehart> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "Justina Machado",
        "uri": "http://dbpedia.org/resource/Justina_Machado"
      },
      {
        "label": "John Englehard",
        "uri": "http://dbpedia.org/resource/John_Englehart"
      }
    ],
    "id": "18b1a0fcbd154906ad63f1310bcb8356",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Who is the successor of Quest Software ?",
    "SerialNumber": "2432",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Quest_Software> <http://dbpedia.org/property/successor> ?uri } ",
    "entity mapping": [
      {
        "label": "Quest Software",
        "uri": "http://dbpedia.org/resource/Quest_Software"
      }
    ],
    "id": "5a5f08cd19484d219d04ef85d42c4a4f",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      }
    ]
  },
  {
    "question": "Which scientist\u0027s academic advisor is Georg Meissner and is known for invention of Anthrax ?",
    "SerialNumber": "2435",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Anthrax",
        "uri": "http://dbpedia.org/resource/Anthrax"
      },
      {
        "label": "Georg Meissner",
        "uri": "http://dbpedia.org/resource/Georg_Meissner"
      }
    ],
    "id": "7b37e481b5fe4b1ea46954b65bbc9fc3",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Who is the developer of the software which distributes Batman: Arkham City Lockdown ?",
    "SerialNumber": "2437",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Batman:_Arkham_City_Lockdown> <http://dbpedia.org/property/distributor> ?x . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Batman: Arkham City Lockdown",
        "uri": "http://dbpedia.org/resource/Batman:_Arkham_City_Lockdown"
      }
    ],
    "id": "ec9f7e686ab1438693a7da09f8164304",
    "predicate mapping": [
      {
        "label": "distributes",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "what are some neighboring cities of Pregny Chambsy?",
    "SerialNumber": "2438",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chambésy> } ",
    "entity mapping": [
      {
        "label": "Pregny",
        "uri": "http://dbpedia.org/resource/Pregny-Chambésy"
      }
    ],
    "id": "e0d7814a403041dfbdb60c84e19ff1b6",
    "predicate mapping": [
      {
        "label": "neighboring",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality"
      }
    ]
  },
  {
    "question": "How many honorary title are there of the scientists who has  Australian of the Year award  ?",
    "SerialNumber": "2439",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Australian_of_the_Year> . ?x <http://dbpedia.org/ontology/award> ?uri }",
    "entity mapping": [
      {
        "label": "Australian of the Year",
        "uri": "http://dbpedia.org/resource/Australian_of_the_Year"
      }
    ],
    "id": "69eda413b32a4ef18311180654f38ad1",
    "predicate mapping": [
      {
        "label": "honorary title",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "honorary title",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What is the total number of companies who use a language designed by Bjarne Stroustrup?",
    "SerialNumber": "2440",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Bjarne_Stroustrup> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Bjarne Stroustrup",
        "uri": "http://dbpedia.org/resource/Bjarne_Stroustrup"
      }
    ],
    "id": "959815b6184e4dd9a68135af4125df83",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which job of Irving Chernev is the non-fiction subject of the Thud ?",
    "SerialNumber": "2441",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Irving_Chernev> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri} ",
    "entity mapping": [
      {
        "label": "Irving Chernev",
        "uri": "http://dbpedia.org/resource/Irving_Chernev"
      },
      {
        "label": "Thud ",
        "uri": "http://dbpedia.org/resource/Thud!"
      }
    ],
    "id": "a5e14b00bb094b6ba270285e1c075055",
    "predicate mapping": [
      {
        "label": "job",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      }
    ]
  },
  {
    "question": "What are the musicals of the people died in California?",
    "SerialNumber": "2442",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "2ee5f92bf7dd42e6aa5a5c2aa1848abd",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "What is the workplace of Christopher S. Stewart ?",
    "SerialNumber": "2443",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Christopher_S._Stewart> <http://dbpedia.org/property/employer> ?uri } ",
    "entity mapping": [
      {
        "label": "Christopher S. Stewart",
        "uri": "http://dbpedia.org/resource/Christopher_S._Stewart"
      }
    ],
    "id": "3b865ce9d2c64aa2bf2eea2036094742",
    "predicate mapping": [
      {
        "label": "workplace",
        "uri": "http://dbpedia.org/property/employer"
      }
    ]
  },
  {
    "question": "What is the political party of the daughter of Jawaharlal Nehru ?",
    "SerialNumber": "2444",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jawaharlal_Nehru> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jawaharlal Nehru",
        "uri": "http://dbpedia.org/resource/Jawaharlal_Nehru"
      }
    ],
    "id": "f7c7d94c2c7a4893a0ac5c5c40b26106",
    "predicate mapping": [
      {
        "label": "daughter",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Where was david Scherman trained ?",
    "SerialNumber": "2445",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Scherman> <http://dbpedia.org/property/training> ?uri } ",
    "entity mapping": [
      {
        "label": "david Scherman",
        "uri": "http://dbpedia.org/resource/David_Scherman"
      }
    ],
    "id": "b52d907f0f3444b1b31e1eaadb9012e3",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training"
      }
    ]
  },
  {
    "question": "Which units are garrisoned at Arlington County, Virginia?",
    "SerialNumber": "2446",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> } ",
    "entity mapping": [
      {
        "label": "Arlington County, Virginia",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia"
      }
    ],
    "id": "b12bebc48be04ef39ad59257df7b1387",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      }
    ]
  },
  {
    "question": "What are the mountains in the Sequoia National Park?",
    "SerialNumber": "2447",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Sequoia_National_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Sequoia National Park",
        "uri": "http://dbpedia.org/resource/Sequoia_National_Park"
      }
    ],
    "id": "735485ac406a44709508e55720a723fc",
    "predicate mapping": [
      {
        "label": "Nation",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "Name the city of Duwamish River ?",
    "SerialNumber": "2448",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duwamish_River> <http://dbpedia.org/ontology/city> ?uri } ",
    "entity mapping": [
      {
        "label": "Duwamish River",
        "uri": "http://dbpedia.org/resource/Duwamish_River"
      }
    ],
    "id": "2ba39b2193c84d1eaafccd6a537a338e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city"
      }
    ]
  },
  {
    "question": "What is the administrative headquarters of Pulau Ujong ?",
    "SerialNumber": "2449",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pulau_Ujong> <http://dbpedia.org/ontology/capital> ?uri } ",
    "entity mapping": [
      {
        "label": "Pulau Ujong",
        "uri": "http://dbpedia.org/resource/Pulau_Ujong"
      }
    ],
    "id": "a1526eadfd4c4d5d915dee4a3c8c1dd9",
    "predicate mapping": [
      {
        "label": "administrative headquarters",
        "uri": "http://dbpedia.org/ontology/capital"
      }
    ]
  },
  {
    "question": "In which country is Sierra del Merendin?",
    "SerialNumber": "2450",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sierra_del_Merendón> <http://dbpedia.org/ontology/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sierra del Merendin",
        "uri": "http://dbpedia.org/resource/Sierra_del_Merendón"
      }
    ],
    "id": "aaa9856758804b05ae5363e65a3bd2a7",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "What are the other band member of the Bands whose current members is Hynief?",
    "SerialNumber": "2452",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Hynief> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Hynief",
        "uri": "http://dbpedia.org/resource/Hynief"
      }
    ],
    "id": "c7330887101d408296fa00ddf2262458",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Who is the vice president of Jared Bernstein ?",
    "SerialNumber": "2453",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jared_Bernstein> <http://dbpedia.org/ontology/vicePresident> ?uri } ",
    "entity mapping": [
      {
        "label": "Jared Bernstein",
        "uri": "http://dbpedia.org/resource/Jared_Bernstein"
      }
    ],
    "id": "cc5743cc510f4eeb9cfa516a427b3d7c",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      }
    ]
  },
  {
    "question": "What is the birthplace of Ludovic Boi which is also the residence of Fernando Augustin?",
    "SerialNumber": "2456",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ludovic_Boi> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Fernando_Augustin> <http://dbpedia.org/property/residence> ?uri . }",
    "entity mapping": [
      {
        "label": "Ludovic Boi",
        "uri": "http://dbpedia.org/resource/Ludovic_Boi"
      },
      {
        "label": "Fernando Augustin",
        "uri": "http://dbpedia.org/resource/Fernando_Augustin"
      }
    ],
    "id": "82bfaafaf5d5457190f547f5a8690190",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "How many non-fiction subject are there of the books whose one of the non-fiction subject is Ankh-Morpork City Watch ?",
    "SerialNumber": "2457",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Ankh-Morpork_City_Watch> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri }",
    "entity mapping": [
      {
        "label": "Ankh-Morpork City Watch",
        "uri": "http://dbpedia.org/resource/Ankh-Morpork_City_Watch"
      }
    ],
    "id": "110683d750084bc587eb5dd36775e6ef",
    "predicate mapping": [
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      },
      {
        "label": "non-fiction subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      }
    ]
  },
  {
    "question": "Name the show whose theme composing band previously also had Bryan Mantia?",
    "SerialNumber": "2458",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Bryan_Mantia> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Bryan Mantia",
        "uri": "http://dbpedia.org/resource/Bryan_Mantia"
      }
    ],
    "id": "c8e8897629e34648b1aeb77826873038",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      },
      {
        "label": "composing",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List all the settlements which has a part named Seguin,Texas ?",
    "SerialNumber": "2460",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Seguin,_Texas> . ?x <http://dbpedia.org/ontology/part> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "Seguin",
        "uri": "http://dbpedia.org/resource/Seguin,_Texas"
      }
    ],
    "id": "19f47e5edc444d50a2b75d0cffbf0bcb",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "List all the wine regions of the grapes whose one of the wine region is Mississippi ?",
    "SerialNumber": "2461",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Mississippi> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
    "entity mapping": [
      {
        "label": "Mississippi",
        "uri": "http://dbpedia.org/resource/Mississippi"
      }
    ],
    "id": "1655c6bb438f414f8b6a6c12f3470473",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape"
      }
    ]
  },
  {
    "question": "Name the university whose affiliations\u0027s foundation is in Washington, D.C.?",
    "SerialNumber": "2463",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Washington,_D.C.> . ?uri <http://dbpedia.org/property/affiliations> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Washington, D.C.",
        "uri": "http://dbpedia.org/resource/Washington,_D.C."
      }
    ],
    "id": "fa48e10d45b245ad97a7c3e1691f2f85",
    "predicate mapping": [
      {
        "label": "foundation",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Who has Kelly Osbourne and Ozzy Osbourne as relatives?",
    "SerialNumber": "2467",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Kelly_Osbourne> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Ozzy_Osbourne> . }",
    "entity mapping": [
      {
        "label": "Kelly Osbourne",
        "uri": "http://dbpedia.org/resource/Kelly_Osbourne"
      },
      {
        "label": "Ozzy Osbourne",
        "uri": "http://dbpedia.org/resource/Ozzy_Osbourne"
      }
    ],
    "id": "c29965dde83947ffa5b1a736dd8ea8bf",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "Who were the founders of Sea Gayle Music?",
    "SerialNumber": "2468",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri } ",
    "entity mapping": [
      {
        "label": "Sea Gayle Music",
        "uri": "http://dbpedia.org/resource/Sea_Gayle_Music"
      }
    ],
    "id": "ee5bcfdd212b4f548f1556e3f2d442a8",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder"
      }
    ]
  },
  {
    "question": "Name the president who has relations with Clinton family and had a lieutenant named Winston Bryant?",
    "SerialNumber": "2470",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Clinton_family> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Clinton family",
        "uri": "http://dbpedia.org/resource/Clinton_family"
      },
      {
        "label": "Winston Bryant",
        "uri": "http://dbpedia.org/resource/Winston_Bryant"
      }
    ],
    "id": "90a0886308b64939add943ce02984650",
    "predicate mapping": [
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "Who is the manager of the club whose homeground is the riverside stadium?",
    "SerialNumber": "2474",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Riverside_Stadium> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>}",
    "entity mapping": [
      {
        "label": "riverside stadium",
        "uri": "http://dbpedia.org/resource/Riverside_Stadium"
      }
    ],
    "id": "9bc2338edfc24fc7a0d8d7cfe88d0ccd",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/property/ground"
      },
      {
        "label": "manager club",
        "uri": "http://dbpedia.org/ontology/managerClub"
      },
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/SportsManager"
      }
    ]
  },
  {
    "question": "What are the organisation founded in Texas and Dallas?",
    "SerialNumber": "2475",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Dallas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Texas",
        "uri": "http://dbpedia.org/resource/Texas"
      },
      {
        "label": "Dallas",
        "uri": "http://dbpedia.org/resource/Dallas"
      }
    ],
    "id": "abe825df40f846beb07f2ad29ebe9e8a",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "List the members of Skull Gang?",
    "SerialNumber": "2476",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> ?uri } ",
    "entity mapping": [
      {
        "label": "Skull Gang",
        "uri": "http://dbpedia.org/resource/Skull_Gang"
      }
    ],
    "id": "3893e0c34af5499f992e3e068e2b4394",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/bandMember"
      }
    ]
  },
  {
    "question": "Count the movies directed by Tim Burton and music composer Danny Elfman ?",
    "SerialNumber": "2478",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Danny_Elfman> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton> } ",
    "entity mapping": [
      {
        "label": "Danny Elfman",
        "uri": "http://dbpedia.org/resource/Danny_Elfman"
      },
      {
        "label": "Tim Burton",
        "uri": "http://dbpedia.org/resource/Tim_Burton"
      }
    ],
    "id": "94109f8a38244b3d8a1dc4cfb6ba55b2",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      }
    ]
  },
  {
    "question": "What are the american football players whose former team\u0027s coach is Jason Maas?",
    "SerialNumber": "2479",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Jason_Maas> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Jason Maas",
        "uri": "http://dbpedia.org/resource/Jason_Maas"
      }
    ],
    "id": "b6c11bc5758b40768cc7bd60cbf09fd3",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "Name the appointer of William Clark ?",
    "SerialNumber": "2480",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri } ",
    "entity mapping": [
      {
        "label": "William Clark",
        "uri": "http://dbpedia.org/resource/William_Clark"
      }
    ],
    "id": "bae14da898b343a4a0b319d75b992c2c",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "What is the city  of the television station whose affiliations is LATV?",
    "SerialNumber": "2481",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/LATV> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "entity mapping": [
      {
        "label": "LATV",
        "uri": "http://dbpedia.org/resource/LATV"
      }
    ],
    "id": "660aad2b85ce42fdbf4dd20e86dee609",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "television station",
        "uri": "http://dbpedia.org/ontology/TelevisionStation"
      }
    ]
  },
  {
    "question": "Foxy Brown was associated with which band?",
    "SerialNumber": "2485",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Foxy_Brown_(rapper)> } ",
    "entity mapping": [
      {
        "label": "Foxy Brown",
        "uri": "http://dbpedia.org/resource/Foxy_Brown_(rapper)"
      }
    ],
    "id": "c838dc07c8ba4000a51426ddb603d08d",
    "predicate mapping": [
      {
        "label": "associated band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "Whose military units are VMF-218 and VMF-155?",
    "SerialNumber": "2486",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-218> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155> . }",
    "entity mapping": [
      {
        "label": "VMF-218",
        "uri": "http://dbpedia.org/resource/VMF-218"
      },
      {
        "label": "VMF-155",
        "uri": "http://dbpedia.org/resource/VMF-155"
      }
    ],
    "id": "6fb72d6e48a849faa3d1dd3d45300bf7",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      }
    ]
  },
  {
    "question": "Name the team of Michael springer ?",
    "SerialNumber": "2487",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri } ",
    "entity mapping": [
      {
        "label": "Michael springer",
        "uri": "http://dbpedia.org/resource/Michael_Springer"
      }
    ],
    "id": "7d875a1bbc994ad68254365c69d782e6",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team"
      }
    ]
  },
  {
    "question": "How many non fiction topics does Thud! deals with?",
    "SerialNumber": "2488",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
    "entity mapping": [
      {
        "label": "Thud!",
        "uri": "http://dbpedia.org/resource/Thud!"
      }
    ],
    "id": "4a08674a7ddd496fbbc5ad26b5aed56d",
    "predicate mapping": [
      {
        "label": "fiction",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      }
    ]
  },
  {
    "question": "Is Steve Nash the chairman of Vancouver Whitecaps FC?",
    "SerialNumber": "2489",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vancouver_Whitecaps_FC> <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Steve_Nash> }",
    "entity mapping": [
      {
        "label": "Vancouver Whitecaps FC",
        "uri": "http://dbpedia.org/resource/Vancouver_Whitecaps_FC"
      },
      {
        "label": "Steve Nash",
        "uri": "http://dbpedia.org/resource/Steve_Nash"
      }
    ],
    "id": "9787a89dac1648ee8bd80857d7c4060c",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman"
      }
    ]
  },
  {
    "question": "What is the origin of the musical artist of A Todo Romantic Style ?",
    "SerialNumber": "2490",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Todo_Romantic_Style> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/property/origin> ?uri  . }",
    "entity mapping": [
      {
        "label": "A Todo Romantic Style",
        "uri": "http://dbpedia.org/resource/A_Todo_Romantic_Style"
      }
    ],
    "id": "62eee24679714722a6a54a0063088a1d",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      }
    ]
  },
  {
    "question": "Name all the products produced by the producer of United States dollar ?",
    "SerialNumber": "2492",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/United_States_dollar> . ?x <http://dbpedia.org/ontology/product> ?uri  . }",
    "entity mapping": [
      {
        "label": "United States dollar",
        "uri": "http://dbpedia.org/resource/United_States_dollar"
      }
    ],
    "id": "04206d63a4654e48a0f4514cbccba82f",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "What is the affiliation of the hospital where Alfred Blalock works?",
    "SerialNumber": "2493",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alfred_Blalock> <http://dbpedia.org/property/workInstitutions> ?x . ?x <http://dbpedia.org/property/affiliation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Alfred Blalock",
        "uri": "http://dbpedia.org/resource/Alfred_Blalock"
      }
    ],
    "id": "a4cb9ae6b84c4fcd846991699d10ed7f",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "Is the national anthem of Mauritius motherland?",
    "SerialNumber": "2494",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mauritius> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Motherland_(anthem)> }",
    "entity mapping": [
      {
        "label": "Mauritius",
        "uri": "http://dbpedia.org/resource/Mauritius"
      },
      {
        "label": "motherland",
        "uri": "http://dbpedia.org/resource/Motherland_(anthem)"
      }
    ],
    "id": "873bd1108ced400a95d4ad3f59959e8f",
    "predicate mapping": [
      {
        "label": "national anthem",
        "uri": "http://dbpedia.org/ontology/anthem"
      }
    ]
  },
  {
    "question": "What software is developed by GNOWSYS and is licensed by Frontaccounting?",
    "SerialNumber": "2496",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frontaccounting> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/GNOWSYS> <http://dbpedia.org/ontology/developer> ?uri} ",
    "entity mapping": [
      {
        "label": "Frontaccounting",
        "uri": "http://dbpedia.org/resource/Frontaccounting"
      },
      {
        "label": "GNOWSYS",
        "uri": "http://dbpedia.org/resource/GNOWSYS"
      }
    ],
    "id": "f05d4dee977d4a7292b08b8fa40d165e",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license"
      },
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Who was the president at the time when both Carl Stokes and Joseph Stiglitz held a position in US political framework?",
    "SerialNumber": "2497",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri . }",
    "entity mapping": [
      {
        "label": "Carl Stokes",
        "uri": "http://dbpedia.org/resource/Carl_Stokes"
      },
      {
        "label": "Joseph Stiglitz",
        "uri": "http://dbpedia.org/resource/Joseph_Stiglitz"
      }
    ],
    "id": "b9146fbecbc9471a828508410f06ee30",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "What is the municipality of the Homestead Grays Bridge and Roberto Clemente Bridge?",
    "SerialNumber": "2498",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Homestead_Grays_Bridge> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/Roberto_Clemente_Bridge> <http://dbpedia.org/ontology/municipality> ?uri . }",
    "entity mapping": [
      {
        "label": "Homestead Grays Bridge",
        "uri": "http://dbpedia.org/resource/Homestead_Grays_Bridge"
      },
      {
        "label": "Roberto Clemente Bridge",
        "uri": "http://dbpedia.org/resource/Roberto_Clemente_Bridge"
      }
    ],
    "id": "8827a33491654d18998e17489e221cac",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      },
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      }
    ]
  },
  {
    "question": "Name the language of I Love How You Love Me ?",
    "SerialNumber": "2500",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Love_How_You_Love_Me> <http://dbpedia.org/property/language> ?uri } ",
    "entity mapping": [
      {
        "label": "I Love How You Love Me",
        "uri": "http://dbpedia.org/resource/I_Love_How_You_Love_Me"
      }
    ],
    "id": "5d35202b7de94c2aa0a76efeb59ec38d",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      }
    ]
  },
  {
    "question": "How many teams have someone playing at the defenceman position?",
    "SerialNumber": "2502",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "defenceman",
        "uri": "http://dbpedia.org/resource/Defenceman"
      }
    ],
    "id": "87139c01ff3a485e8daa2d80a4a8365f",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "What are the awards won by the person who wrote the screen play for Lost in Rio ?",
    "SerialNumber": "2505",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/OSS_117:_Lost_in_Rio> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lost in Rio",
        "uri": "http://dbpedia.org/resource/OSS_117:_Lost_in_Rio"
      }
    ],
    "id": "fdd2ce7fef37417499ab18df58b1e86a",
    "predicate mapping": [
      {
        "label": "screen play",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "List the main ingredient of Pizza-ghetti ?",
    "SerialNumber": "2506",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pizza-ghetti> <http://dbpedia.org/property/mainIngredient> ?uri } ",
    "entity mapping": [
      {
        "label": "Pizza-ghetti",
        "uri": "http://dbpedia.org/resource/Pizza-ghetti"
      }
    ],
    "id": "e4e94532543f4998a1a6bd210e7ba091",
    "predicate mapping": [
      {
        "label": "main ingredient",
        "uri": "http://dbpedia.org/property/mainIngredient"
      }
    ]
  },
  {
    "question": "What is the governing body of Fort Monroe ?",
    "SerialNumber": "2507",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Monroe> <http://dbpedia.org/property/governingBody> ?uri } ",
    "entity mapping": [
      {
        "label": "Fort Monroe",
        "uri": "http://dbpedia.org/resource/Fort_Monroe"
      }
    ],
    "id": "e9551dcd2cd543ddb53914df27958278",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      }
    ]
  },
  {
    "question": "Did Annie Leibovitz do the cover of The Road Ahead?",
    "SerialNumber": "2509",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)> <http://dbpedia.org/ontology/coverArtist> <http://dbpedia.org/resource/Annie_Leibovitz> }",
    "entity mapping": [
      {
        "label": "The Road Ahead",
        "uri": "http://dbpedia.org/resource/The_Road_Ahead_(Bill_Gates_book)"
      },
      {
        "label": "Annie Leibovitz",
        "uri": "http://dbpedia.org/resource/Annie_Leibovitz"
      }
    ],
    "id": "f3e6a145912e4850b3f93dbc9342c2b0",
    "predicate mapping": [
      {
        "label": "cover",
        "uri": "http://dbpedia.org/ontology/coverArtist"
      }
    ]
  },
  {
    "question": "What is the stylistic origin of Wizard rock ?",
    "SerialNumber": "2510",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizard_rock> <http://dbpedia.org/ontology/stylisticOrigin> ?uri } ",
    "entity mapping": [
      {
        "label": "Wizard rock",
        "uri": "http://dbpedia.org/resource/Wizard_rock"
      }
    ],
    "id": "d4dd2c6ad55449e2974b79ecbbf14f2c",
    "predicate mapping": [
      {
        "label": "stylistic origin",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      }
    ]
  },
  {
    "question": "Count the  area of the radio stations whose serves in South Carolina ?",
    "SerialNumber": "2511",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/South_Carolina> . ?x <http://dbpedia.org/property/area> ?uri }",
    "entity mapping": [
      {
        "label": "South Carolina",
        "uri": "http://dbpedia.org/resource/South_Carolina"
      }
    ],
    "id": "53234a36b1e64f05834fd09948fa22bc",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      }
    ]
  },
  {
    "question": "Who  has these major shrines  : Emmitsburg, Maryland and Shrine of St. Elizabeth Ann Bayley Seton?",
    "SerialNumber": "2512",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Emmitsburg,_Maryland> . ?uri <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton> . }",
    "entity mapping": [
      {
        "label": "Emmitsburg, Maryland",
        "uri": "http://dbpedia.org/resource/Emmitsburg,_Maryland"
      },
      {
        "label": "Shrine of St. Elizabeth Ann Bayley Seton",
        "uri": "http://dbpedia.org/resource/Shrine_of_St._Elizabeth_Ann_Bayley_Seton"
      }
    ],
    "id": "444fa4b359354a5ea47e8d33ef5d0d05",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      }
    ]
  },
  {
    "question": "What is the constituency of Santo Versace?",
    "SerialNumber": "2514",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Santo_Versace> <http://dbpedia.org/property/constituency> ?uri } ",
    "entity mapping": [
      {
        "label": "Santo Versace",
        "uri": "http://dbpedia.org/resource/Santo_Versace"
      }
    ],
    "id": "9ad5c616c0cd4c3b93ceb93ad5150b11",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      }
    ]
  },
  {
    "question": "What is the television show whose developer is J. Michael Straczynski?",
    "SerialNumber": "2515",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "J. Michael Straczynski",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski"
      }
    ],
    "id": "7cb26f57f9304355832fe7c4e7d30a8d",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the person who died in Fair Lane ?",
    "SerialNumber": "2517",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Fair_Lane>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Fair Lane",
        "uri": "http://dbpedia.org/resource/Fair_Lane"
      }
    ],
    "id": "eae36241b9974a45a5febf554a4aac80",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List the import people of Maryland Jockey Club ?",
    "SerialNumber": "2519",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maryland_Jockey_Club> <http://dbpedia.org/property/keyPeople> ?uri } ",
    "entity mapping": [
      {
        "label": "Maryland Jockey Club",
        "uri": "http://dbpedia.org/resource/Maryland_Jockey_Club"
      }
    ],
    "id": "d3075ce3184440eaaa8b1f8728a78053",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "From what american football teams did Carlos Emmons play?",
    "SerialNumber": "2520",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carlos_Emmons_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Carlos Emmons",
        "uri": "http://dbpedia.org/resource/Carlos_Emmons_(American_football)"
      }
    ],
    "id": "8d0f6e4862cc499e909b0bc805585305",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "Name the TV show whose company is Playtone and written by Graham Yost?",
    "SerialNumber": "2521",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Graham_Yost>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Playtone",
        "uri": "http://dbpedia.org/resource/Playtone"
      },
      {
        "label": "Graham Yost",
        "uri": "http://dbpedia.org/resource/Graham_Yost"
      }
    ],
    "id": "bb91e0c70abe4131a829b7d72b517d80",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the person whose alma mater is Harvard-Westlake School?",
    "SerialNumber": "2523",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School"
      }
    ],
    "id": "8db8117a78a84ce68ab1c0b38dd505fe",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the homeport of INS Viraat (R22) ?",
    "SerialNumber": "2527",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri } ",
    "entity mapping": [
      {
        "label": "INS Viraat (R22)",
        "uri": "http://dbpedia.org/resource/INS_Viraat_(R22)"
      }
    ],
    "id": "86be3981c7d04ea6aa8aec6949f00bc4",
    "predicate mapping": [
      {
        "label": "homeport",
        "uri": "http://dbpedia.org/ontology/homeport"
      }
    ]
  },
  {
    "question": "Count the different places where the people died, who were born in England?",
    "SerialNumber": "2529",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "356e419a3c3947e692e81dbbf4e09a69",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "What is the name of the television show whose company is Paramount Television and theme music composer is Gary Portnoy?",
    "SerialNumber": "2532",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "uri": "http://dbpedia.org/resource/Paramount_Television"
      },
      {
        "label": "Gary Portnoy",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy"
      }
    ],
    "id": "4e7b8e865254408aa15a2e4010eda993",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the territory of the conflict whose commander is Feng Zicai?",
    "SerialNumber": "2534",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Feng_Zicai> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Feng Zicai",
        "uri": "http://dbpedia.org/resource/Feng_Zicai"
      }
    ],
    "id": "f6130d29a11e4614958ebca1871f33f7",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Who influenced the author of The Shooting of Dan McGrew ?",
    "SerialNumber": "2538",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/property/influences> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Shooting of Dan McGrew",
        "uri": "http://dbpedia.org/resource/The_Shooting_of_Dan_McGrew_(1924_film)"
      }
    ],
    "id": "6a768d256a514c93b3a1e2afa6908be3",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/property/influences"
      }
    ]
  },
  {
    "question": "What is the parent company of the airline whose hub is in Detroit?",
    "SerialNumber": "2540",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Detroit> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Detroit",
        "uri": "http://dbpedia.org/resource/Detroit"
      }
    ],
    "id": "578cf8ec42c6409aaa3c25d463a0c4e1",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "For which band did Dave Hollister perform in the past?",
    "SerialNumber": "2541",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Dave_Hollister> } ",
    "entity mapping": [
      {
        "label": "Dave Hollister",
        "uri": "http://dbpedia.org/resource/Dave_Hollister"
      }
    ],
    "id": "1d30861aa35d4f9b8ece033370c4e15c",
    "predicate mapping": [
      {
        "label": "past",
        "uri": "http://dbpedia.org/property/pastMembers"
      }
    ]
  },
  {
    "question": "Name the television show whose voice is given by  April Stewart and theme music composer is Primus (band)?",
    "SerialNumber": "2543",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "April Stewart",
        "uri": "http://dbpedia.org/resource/April_Stewart"
      },
      {
        "label": "Primus (band)",
        "uri": "http://dbpedia.org/resource/Primus_(band)"
      }
    ],
    "id": "175487b495244a41974ebc41170631a9",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the actor of Soylent Green to which Lydia Clarke is married ?",
    "SerialNumber": "2549",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lydia_Clarke> <http://dbpedia.org/property/spouse> ?uri. <http://dbpedia.org/resource/Soylent_Green> <http://dbpedia.org/ontology/starring> ?uri . }",
    "entity mapping": [
      {
        "label": "Lydia Clarke",
        "uri": "http://dbpedia.org/resource/Lydia_Clarke"
      },
      {
        "label": "Soylent Green",
        "uri": "http://dbpedia.org/resource/Soylent_Green"
      }
    ],
    "id": "94ad1de3618a4ae29fd2fa2ac111f8a0",
    "predicate mapping": [
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "actor",
        "uri": "http://dbpedia.org/ontology/starring"
      }
    ]
  },
  {
    "question": "Name the artist who made Dream Dancing and is often associated with Joe Pass?",
    "SerialNumber": "2550",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joe_Pass> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Dream_Dancing_(album)> <http://dbpedia.org/property/artist> ?uri . }",
    "entity mapping": [
      {
        "label": "Joe Pass",
        "uri": "http://dbpedia.org/resource/Joe_Pass"
      },
      {
        "label": "Dream Dancing",
        "uri": "http://dbpedia.org/resource/Dream_Dancing_(album)"
      }
    ],
    "id": "9fdd8478c6d84d1291fb875beff000f6",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "Name the notable commanders of Army Group Oberrhein ?",
    "SerialNumber": "2551",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> ?uri } ",
    "entity mapping": [
      {
        "label": "Army Group Oberrhein",
        "uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)"
      }
    ],
    "id": "73d747e2e00649c48cc57a5f5c1594be",
    "predicate mapping": [
      {
        "label": "notable commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      }
    ]
  },
  {
    "question": "In which mountain range does the Rochers De Naye lie?",
    "SerialNumber": "2553",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Rochers_de_Naye> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }",
    "entity mapping": [
      {
        "label": "Rochers De Naye",
        "uri": "http://dbpedia.org/resource/Rochers_de_Naye"
      }
    ],
    "id": "f717accc0ab04b15bed31ee97a11045f",
    "predicate mapping": [
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak"
      },
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      }
    ]
  },
  {
    "question": "Murray Gold has composed music for how many things?",
    "SerialNumber": "2554",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Murray_Gold>  . }",
    "entity mapping": [
      {
        "label": "Murray Gold",
        "uri": "http://dbpedia.org/resource/Murray_Gold"
      }
    ],
    "id": "1baf73ee859f4a678e907f2e806738b0",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/composer"
      }
    ]
  },
  {
    "question": "Count the number of other product of the banks whose one of the product is Wealth management ?",
    "SerialNumber": "2555",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Wealth_management> . ?x <http://dbpedia.org/ontology/product> ?uri }",
    "entity mapping": [
      {
        "label": "Wealth management",
        "uri": "http://dbpedia.org/resource/Wealth_management"
      }
    ],
    "id": "33ffcadb8ef94c4893dfca8fa2e74e43",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "What is the citizenship of Saima Chowdhury?",
    "SerialNumber": "2558",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saima_Chowdhury> <http://dbpedia.org/ontology/citizenship> ?uri } ",
    "entity mapping": [
      {
        "label": "Saima Chowdhury",
        "uri": "http://dbpedia.org/resource/Saima_Chowdhury"
      }
    ],
    "id": "c3949eda0f05470ca1d7effadac95392",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship"
      }
    ]
  },
  {
    "question": "Who is the writer of The Sandman (Vertigo) ?",
    "SerialNumber": "2560",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Sandman_(Vertigo)> <http://dbpedia.org/property/writers> ?uri } ",
    "entity mapping": [
      {
        "label": "The Sandman (Vertigo)",
        "uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)"
      }
    ],
    "id": "c365bc2a449849d4999e1836c37e7e20",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writers"
      }
    ]
  },
  {
    "question": "What religion do the politicians follow, who graduated from the Yokkohama Nationaal University?",
    "SerialNumber": "2561",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Yokohama_National_University> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Yokkohama Nationaal University",
        "uri": "http://dbpedia.org/resource/Yokohama_National_University"
      }
    ],
    "id": "dea08c4d67c84b478d0adb5e063dd3c9",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "Which battles were fought under the president when Chung Won Shik was the prime minister?",
    "SerialNumber": "2564",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Won-shik> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Chung Won Shik",
        "uri": "http://dbpedia.org/resource/Chung_Won-shik"
      }
    ],
    "id": "add7e467bfd94a21bacd2d251e10ae2e",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "Which are the  automobile platform whose one of the automobile platform is Dodge ?",
    "SerialNumber": "2566",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Dodge> . ?x <http://dbpedia.org/ontology/automobilePlatform> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Dodge",
        "uri": "http://dbpedia.org/resource/Dodge"
      }
    ],
    "id": "4a9e53dfc73f4627925582fac0d63ad5",
    "predicate mapping": [
      {
        "label": "automobile platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      },
      {
        "label": "automobile platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      },
      {
        "label": "automobile",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Which battle of  Khalid bin Sultan was also the conflict of Steve Buyer ?",
    "SerialNumber": "2567",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khalid_bin_Sultan> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Steve_Buyer> <http://dbpedia.org/ontology/battle> ?uri} ",
    "entity mapping": [
      {
        "label": "Khalid bin Sultan",
        "uri": "http://dbpedia.org/resource/Khalid_bin_Sultan"
      },
      {
        "label": "Steve Buyer",
        "uri": "http://dbpedia.org/resource/Steve_Buyer"
      }
    ],
    "id": "ee822c36d62d4486b3e5bfe19c785a6d",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "How many molluscas are there whose families are Buccinidae and Buccinoidea?",
    "SerialNumber": "2568",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea>} ",
    "entity mapping": [
      {
        "label": "Buccinidae",
        "uri": "http://dbpedia.org/resource/Buccinidae"
      },
      {
        "label": "Buccinoidea",
        "uri": "http://dbpedia.org/resource/Buccinoidea"
      }
    ],
    "id": "c28b4d6ba982461894b0af6413f4dae3",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "Name the islands that belong to the archipelago whose largest city is Papeete?",
    "SerialNumber": "2569",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Papeete> . ?uri <http://dbpedia.org/property/archipelago> ?x  . }",
    "entity mapping": [
      {
        "label": "Papeete",
        "uri": "http://dbpedia.org/resource/Papeete"
      }
    ],
    "id": "f8b4b4e3f56d470eaa30548567ac76bc",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago"
      }
    ]
  },
  {
    "question": "Name the person whose parent is Pattie Mallette?",
    "SerialNumber": "2570",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Pattie_Mallette>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Pattie Mallette",
        "uri": "http://dbpedia.org/resource/Pattie_Mallette"
      }
    ],
    "id": "d50f136d62424735841bbbaf2f071598",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Was Mark Twain a character of Mark Twain Tonight?",
    "SerialNumber": "2571",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Mark_Twain> }",
    "entity mapping": [
      {
        "label": "Mark Twain Tonight",
        "uri": "http://dbpedia.org/resource/Mark_Twain_Tonight"
      },
      {
        "label": "Mark Twain",
        "uri": "http://dbpedia.org/resource/Mark_Twain"
      }
    ],
    "id": "da7765ddd30747a8a4f9e56b2c133576",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters"
      }
    ]
  },
  {
    "question": "What is the county of Saint Lucia national cricket team ?",
    "SerialNumber": "2574",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saint_Lucia_national_cricket_team> <http://dbpedia.org/ontology/county> ?uri } ",
    "entity mapping": [
      {
        "label": "Saint Lucia national cricket team",
        "uri": "http://dbpedia.org/resource/Saint_Lucia_national_cricket_team"
      }
    ],
    "id": "f0b68ec815f04f8fbcfa6fb21869435b",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/county"
      }
    ]
  },
  {
    "question": "List the destinations to which the airlines headquartered at the Gatwick Airport fly to?",
    "SerialNumber": "2576",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/ontology/destination> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Gatwick Airport",
        "uri": "http://dbpedia.org/resource/Gatwick_Airport"
      }
    ],
    "id": "b69308b751094ac1abc810fdb238f53a",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Who is the publisher of The Rolling Stone Album Guide ?",
    "SerialNumber": "2579",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Rolling_Stone_Album_Guide> <http://dbpedia.org/ontology/publisher> ?uri } ",
    "entity mapping": [
      {
        "label": "The Rolling Stone Album Guide",
        "uri": "http://dbpedia.org/resource/The_Rolling_Stone_Album_Guide"
      }
    ],
    "id": "738238521e7e47f79c03ba81880544ce",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      }
    ]
  },
  {
    "question": "What is the hometown of the volleyball player whose club is VC Lokomotiv Novosibirsk ?",
    "SerialNumber": "2581",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/VC_Lokomotiv_Novosibirsk> . ?x <http://dbpedia.org/property/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VolleyballPlayer>}",
    "entity mapping": [
      {
        "label": "VC Lokomotiv Novosibirsk",
        "uri": "http://dbpedia.org/resource/VC_Lokomotiv_Novosibirsk"
      }
    ],
    "id": "8dcdd9886b0d4eb38b3a78d1d8f7bf55",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/club"
      },
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown"
      },
      {
        "label": "volleyball player",
        "uri": "http://dbpedia.org/ontology/VolleyballPlayer"
      }
    ]
  },
  {
    "question": "What are some books whose cover illustration is designed by Marshall Arisman?",
    "SerialNumber": "2582",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/Marshall_Arisman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Marshall Arisman",
        "uri": "http://dbpedia.org/resource/Marshall_Arisman"
      }
    ],
    "id": "0003a5d7358848dda07272e9779abb3b",
    "predicate mapping": [
      {
        "label": "cover",
        "uri": "http://dbpedia.org/property/coverArtist"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "What religion do people of the country of Mahbuba Islam Rakhi follow?",
    "SerialNumber": "2583",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mahbuba_Islam_Rakhi> <http://dbpedia.org/ontology/nationality> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mahbuba Islam Rakhi",
        "uri": "http://dbpedia.org/resource/Mahbuba_Islam_Rakhi"
      }
    ],
    "id": "aef45b1c0926436fbf9066333c15dd4c",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Name the people who were in a youth club managed by Luis Enrique ?",
    "SerialNumber": "2584",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Luis_Enrique_(footballer)> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "entity mapping": [
      {
        "label": "Luis Enrique",
        "uri": "http://dbpedia.org/resource/Luis_Enrique_(footballer)"
      }
    ],
    "id": "7bf3155c798f4ab8976ec7b18d4a3336",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/manager"
      },
      {
        "label": "youth club",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "What is the state of the administrative region where Oscoda, Michigan is located?",
    "SerialNumber": "2585",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Oscoda,_Michigan> <http://dbpedia.org/ontology/isPartOf> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "entity mapping": [
      {
        "label": "Oscoda, Michigan",
        "uri": "http://dbpedia.org/resource/Oscoda,_Michigan"
      }
    ],
    "id": "1a388e6d4b5349899a856a6c6b9c322d",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/isPartOf"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "administrative region",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion"
      }
    ]
  },
  {
    "question": "Which  institution of the Alton Ochsner is the alma mater of the Michael Hahn ?",
    "SerialNumber": "2586",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Michael_Hahn> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Alton Ochsner",
        "uri": "http://dbpedia.org/resource/Alton_Ochsner"
      },
      {
        "label": "Michael Hahn",
        "uri": "http://dbpedia.org/resource/Michael_Hahn"
      }
    ],
    "id": "e6b415fc865449c3bf841f09716c5099",
    "predicate mapping": [
      {
        "label": "institution",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Kendall Jenner has how many relatives?",
    "SerialNumber": "2589",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Kendall_Jenner> <http://dbpedia.org/property/relatives> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kendall Jenner",
        "uri": "http://dbpedia.org/resource/Kendall_Jenner"
      }
    ],
    "id": "0823c2c40ec44ed38548274caa96984d",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      }
    ]
  },
  {
    "question": "List the affiliations of Wikipedia Zero ?",
    "SerialNumber": "2593",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wikipedia_Zero> <http://dbpedia.org/property/affiliations> ?uri } ",
    "entity mapping": [
      {
        "label": "Wikipedia Zero",
        "uri": "http://dbpedia.org/resource/Wikipedia_Zero"
      }
    ],
    "id": "605df0ddfb63418781e9a290359006e5",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations"
      }
    ]
  },
  {
    "question": "What is the region served by the governor of Stephen L.R. McNichols ?",
    "SerialNumber": "2594",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Stephen_L.R._McNichols> <http://dbpedia.org/property/governor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
    "entity mapping": [
      {
        "label": "Stephen L.R. McNichols",
        "uri": "http://dbpedia.org/resource/Stephen_L.R._McNichols"
      }
    ],
    "id": "a121c71fd9734b5fad1cd2f9d8699b62",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Who is the chancellor of the university whose campus is in Woodlane, New Jersey ?",
    "SerialNumber": "2598",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Woodlane,_New_Jersey> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Woodlane, New Jersey",
        "uri": "http://dbpedia.org/resource/Woodlane,_New_Jersey"
      }
    ],
    "id": "c714added3ea49fd8d6f4ee3d6fd96f0",
    "predicate mapping": [
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What fictional character\u0027s species is American Pekin duck",
    "SerialNumber": "2600",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck> } ",
    "entity mapping": [
      {
        "label": "American Pekin duck",
        "uri": "http://dbpedia.org/resource/American_Pekin_duck"
      }
    ],
    "id": "f1deb0821db74c36b4d4e3febc19fb74",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      }
    ]
  },
  {
    "question": "Name the television show whose creator is Simon Fuller and presented by Ryan Seacrest?",
    "SerialNumber": "2601",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "uri": "http://dbpedia.org/resource/Simon_Fuller"
      },
      {
        "label": "Ryan Seacrest",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest"
      }
    ],
    "id": "2430cb5fcc7e4de09250aa3d4cf84c00",
    "predicate mapping": [
      {
        "label": "creator",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many books are there whose author\u0027s tomb is in Madrid?",
    "SerialNumber": "2602",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Madrid",
        "uri": "http://dbpedia.org/resource/Madrid"
      }
    ],
    "id": "1ae78ac410444930afaf70da6b8c4492",
    "predicate mapping": [
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "What are the bridges whose located in California?",
    "SerialNumber": "2603",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "f0a84962196f46ad8f2bff1e5ee68e33",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Purnima Banerjee and Rishang Keishing are politicians of what party ?",
    "SerialNumber": "2606",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rishang_Keishing> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Purnima_Banerjee> <http://dbpedia.org/ontology/party> ?uri} ",
    "entity mapping": [
      {
        "label": "Rishang Keishing",
        "uri": "http://dbpedia.org/resource/Rishang_Keishing"
      },
      {
        "label": "Purnima Banerjee",
        "uri": "http://dbpedia.org/resource/Purnima_Banerjee"
      }
    ],
    "id": "ccb1cb5ab424424d952a58dae998bc1f",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Ryan Seacrest has been the presenter of how many things?",
    "SerialNumber": "2607",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . }",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest"
      }
    ],
    "id": "1c0073aa4e3142589ffd0e487b5742da",
    "predicate mapping": [
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/ontology/presenter"
      }
    ]
  },
  {
    "question": "Did the New Way party merge in the One Israel party?",
    "SerialNumber": "2609",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/New_Way_(Israel)> <http://dbpedia.org/ontology/mergedIntoParty> <http://dbpedia.org/resource/One_Israel> }",
    "entity mapping": [
      {
        "label": "New Way",
        "uri": "http://dbpedia.org/resource/New_Way_(Israel)"
      },
      {
        "label": "One Israel",
        "uri": "http://dbpedia.org/resource/One_Israel"
      }
    ],
    "id": "56f14869f43647c485fa58b23d2f9c2a",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/mergedIntoParty"
      }
    ]
  },
  {
    "question": "Name the organization which developed iPhone OS and the XNU?",
    "SerialNumber": "2610",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/IPhone_OS_1> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/XNU> <http://dbpedia.org/ontology/developer> ?uri . }",
    "entity mapping": [
      {
        "label": "iPhone OS a",
        "uri": "http://dbpedia.org/resource/IPhone_OS_1"
      },
      {
        "label": "XNU",
        "uri": "http://dbpedia.org/resource/XNU"
      }
    ],
    "id": "67071d7bb6a641018f186b4bab9377f8",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "What are the television shows whose network is BBC HD?",
    "SerialNumber": "2611",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC HD",
        "uri": "http://dbpedia.org/resource/BBC_HD"
      }
    ],
    "id": "2d0b48018f494c26a18b0026fdf92feb",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which stadium is owned by the team whose manager is Dimitris Terezopoulos?",
    "SerialNumber": "2615",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Dimitris_Terezopoulos> . ?x <http://dbpedia.org/property/stadium> ?uri  . }",
    "entity mapping": [
      {
        "label": "Dimitris Terezopoulos",
        "uri": "http://dbpedia.org/resource/Dimitris_Terezopoulos"
      }
    ],
    "id": "3ca98ea2b8ae43d6b96d28fc67c8d9ff",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/property/manager"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium"
      }
    ]
  },
  {
    "question": "Was John Muir the first one to ascend one of the peaks in the cathedral peak?",
    "SerialNumber": "2617",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Cathedral_Peak_(California)> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }",
    "entity mapping": [
      {
        "label": "cathedral peak",
        "uri": "http://dbpedia.org/resource/Cathedral_Peak_(California)"
      },
      {
        "label": "John Muir",
        "uri": "http://dbpedia.org/resource/John_Muir"
      }
    ],
    "id": "9b5143de94794385973ea90f3188b781",
    "predicate mapping": [
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "What is the television show whose previous work is The Spirit of Christmas (short film)?",
    "SerialNumber": "2618",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "The Spirit of Christmas (short film)",
        "uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)"
      }
    ],
    "id": "8ebe5072325a4339b8218b2a7943e4c6",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the series of the books whose author is K. W. Jeter.",
    "SerialNumber": "2619",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/K._W._Jeter> . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "K. W. Jeter",
        "uri": "http://dbpedia.org/resource/K._W._Jeter"
      }
    ],
    "id": "927cae9531214d50b42aa1950baa9486",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "List the authors of the musicals whose songwriter is Richard M. Sherman.",
    "SerialNumber": "2620",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Richard_M._Sherman> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "Richard M. Sherman",
        "uri": "http://dbpedia.org/resource/Richard_M._Sherman"
      }
    ],
    "id": "331d362a310946ae8a786c98ad75d8f4",
    "predicate mapping": [
      {
        "label": "songwriter",
        "uri": "http://dbpedia.org/ontology/musicBy"
      },
      {
        "label": "songwriter",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "What musicians are signed up with colpix records?",
    "SerialNumber": "2622",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Colpix_Records>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "colpix records",
        "uri": "http://dbpedia.org/resource/Colpix_Records"
      }
    ],
    "id": "27b52b633c2c44e280099149146f6a9d",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "What is the river whose source region is North-Western Province, Zambia and river mouth is Indian Ocean?",
    "SerialNumber": "2626",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "North-Western Province, Zambia",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia"
      },
      {
        "label": "Indian Ocean",
        "uri": "http://dbpedia.org/resource/Indian_Ocean"
      }
    ],
    "id": "1d0e592950334df5a65998987f995496",
    "predicate mapping": [
      {
        "label": "source region",
        "uri": "http://dbpedia.org/property/sourceRegion"
      },
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many things are people who died in St. Petersburg known for?",
    "SerialNumber": "2629",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Saint_Petersburg> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Petersburg",
        "uri": "http://dbpedia.org/resource/Saint_Petersburg"
      }
    ],
    "id": "9af0ed42078645f89b794641c5bf214f",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Where did ed podolak go to high school",
    "SerialNumber": "2630",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ed_Podolak> <http://dbpedia.org/ontology/highschool> ?uri } ",
    "entity mapping": [
      {
        "label": "ed podolak",
        "uri": "http://dbpedia.org/resource/Ed_Podolak"
      }
    ],
    "id": "1088fd5c6f2948faa4ca297bf58ca3eb",
    "predicate mapping": [
      {
        "label": "school high",
        "uri": "http://dbpedia.org/ontology/highschool"
      }
    ]
  },
  {
    "question": "Of which countries  does Viveka Babajee have citizenship?",
    "SerialNumber": "2631",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Viveka_Babajee> <http://dbpedia.org/property/citizenship> ?uri } ",
    "entity mapping": [
      {
        "label": "Viveka Babajee",
        "uri": "http://dbpedia.org/resource/Viveka_Babajee"
      }
    ],
    "id": "2fe53e1ad1f348669a1f92c6c35fbb53",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/property/citizenship"
      }
    ]
  },
  {
    "question": "Which university attended by Donn Barber and education institute of Jack McGregor ?",
    "SerialNumber": "2632",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Donn_Barber> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri} ",
    "entity mapping": [
      {
        "label": "Donn Barber",
        "uri": "http://dbpedia.org/resource/Donn_Barber"
      },
      {
        "label": "Jack McGregor",
        "uri": "http://dbpedia.org/resource/Jack_McGregor"
      }
    ],
    "id": "e2897f4781764c61aa25fd8a527347dd",
    "predicate mapping": [
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/ontology/education"
      }
    ]
  },
  {
    "question": "Count all those whose youth club was managed by Luis Enrique.",
    "SerialNumber": "2634",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/Luis_Enrique_(footballer)> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "entity mapping": [
      {
        "label": "Luis Enrique",
        "uri": "http://dbpedia.org/resource/Luis_Enrique_(footballer)"
      }
    ],
    "id": "c302f010d82f40b4819adce71cf9e672",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/manager"
      },
      {
        "label": "youth club",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "Which famous horserace has seen both Fergie sutherland and the illustrious War of Attrition?",
    "SerialNumber": "2638",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/War_Of_Attrition_(horse)> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Fergie_Sutherland> <http://dbpedia.org/property/race> ?uri . }",
    "entity mapping": [
      {
        "label": "War of Attrition",
        "uri": "http://dbpedia.org/resource/War_Of_Attrition_(horse)"
      },
      {
        "label": "Fergie sutherland",
        "uri": "http://dbpedia.org/resource/Fergie_Sutherland"
      }
    ],
    "id": "af27fd24d40c4af69bd62323f808d37f",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      }
    ]
  },
  {
    "question": "Who are in the liang chow club?",
    "SerialNumber": "2639",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Liang_Chow> } ",
    "entity mapping": [
      {
        "label": "liang chow",
        "uri": "http://dbpedia.org/resource/Liang_Chow"
      }
    ],
    "id": "42696b30838d4c98a18e0471fbda3572",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club"
      }
    ]
  },
  {
    "question": "What are the different religions followed by presidents whose prime minister was Surayud Chulanont?",
    "SerialNumber": "2642",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Surayud_Chulanont> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Surayud Chulanont",
        "uri": "http://dbpedia.org/resource/Surayud_Chulanont"
      }
    ],
    "id": "bce6e73ad4d543ab9e13b7845aea8d94",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "Does Heydar mean the same as a lion?",
    "SerialNumber": "2647",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Heydar> <http://dbpedia.org/property/meaning> <http://dbpedia.org/resource/Lion> }",
    "entity mapping": [
      {
        "label": "Heydar",
        "uri": "http://dbpedia.org/resource/Heydar"
      },
      {
        "label": "lion",
        "uri": "http://dbpedia.org/resource/Lion"
      }
    ],
    "id": "4543bb2bca244cacb770ea3f2277fef5",
    "predicate mapping": [
      {
        "label": "mean",
        "uri": "http://dbpedia.org/property/meaning"
      }
    ]
  },
  {
    "question": "List the fields of Sylvain Lvi ?",
    "SerialNumber": "2648",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sylvain_Lévi> <http://dbpedia.org/property/fields> ?uri } ",
    "entity mapping": [
      {
        "label": "Sylvain Lvi",
        "uri": "http://dbpedia.org/resource/Sylvain_Lévi"
      }
    ],
    "id": "8f28ab18a0db420a9c7403df42c1e14f",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "How many managers have managed Middlesbrough FC?",
    "SerialNumber": "2649",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.>  . }",
    "entity mapping": [
      {
        "label": "Middlesbrough FC",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C."
      }
    ],
    "id": "927df42625ef46c0a72657b93664568f",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/ontology/managerClub"
      }
    ]
  },
  {
    "question": "In what movies did Akira Ifukube compose the music?",
    "SerialNumber": "2652",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Akira Ifukube",
        "uri": "http://dbpedia.org/resource/Akira_Ifukube"
      }
    ],
    "id": "adb59836a217439ab637233a71390377",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many awards have been awarded to people who are buried in Glendale, California?",
    "SerialNumber": "2653",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Glendale,_California> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Glendale, California",
        "uri": "http://dbpedia.org/resource/Glendale,_California"
      }
    ],
    "id": "74ba4ac20ee641e9b1373420ec67138c",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "List all those whose relatives\u0027 nationality is United States.",
    "SerialNumber": "2655",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }",
    "entity mapping": [
      {
        "label": "United States",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "f24f21d65b5f4fdaa1f972261523fabd",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "How many people were in a youthclub which played in the Argentine Primera Division?",
    "SerialNumber": "2656",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Argentine_Primera_División> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "entity mapping": [
      {
        "label": "Argentine Primera Division",
        "uri": "http://dbpedia.org/resource/Argentine_Primera_División"
      }
    ],
    "id": "90b999b08b4b48b68d0ecc7def163056",
    "predicate mapping": [
      {
        "label": "Division",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "Did chris lebenzon edit Batman returns?",
    "SerialNumber": "2659",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Batman_Returns> <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Chris_Lebenzon> }",
    "entity mapping": [
      {
        "label": "Batman returns",
        "uri": "http://dbpedia.org/resource/Batman_Returns"
      },
      {
        "label": "chris lebenzon",
        "uri": "http://dbpedia.org/resource/Chris_Lebenzon"
      }
    ],
    "id": "6d98acc27b4e4a96ae51410061611f08",
    "predicate mapping": [
      {
        "label": "edit",
        "uri": "http://dbpedia.org/property/editing"
      }
    ]
  },
  {
    "question": "Name the TV show with distributor as Broadcast syndication and has theme music composed by Primus ?",
    "SerialNumber": "2660",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Broadcast syndication",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication"
      },
      {
        "label": "Primus",
        "uri": "http://dbpedia.org/resource/Primus_(band)"
      }
    ],
    "id": "c300cea324644ae39031003ca3d6aa2d",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which military unit garrison is Arlington County, Virginia and The Pentagon?",
    "SerialNumber": "2661",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> . ?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Arlington County, Virginia",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia"
      },
      {
        "label": "The Pentagon",
        "uri": "http://dbpedia.org/resource/The_Pentagon"
      }
    ],
    "id": "dc7c910336e842419f8645864f6156fc",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      },
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Was Let it Be written by Ringo Starr?",
    "SerialNumber": "2663",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Let_It_Be_(musical)> <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Ringo_Starr> }",
    "entity mapping": [
      {
        "label": "Let it Be",
        "uri": "http://dbpedia.org/resource/Let_It_Be_(musical)"
      },
      {
        "label": "Ringo Starr",
        "uri": "http://dbpedia.org/resource/Ringo_Starr"
      }
    ],
    "id": "24ebd4641f2a4aa9a2d94e60bf9478ec",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/musicBy"
      }
    ]
  },
  {
    "question": "How many artists are signed up with Celluloid Records?",
    "SerialNumber": "2664",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . }",
    "entity mapping": [
      {
        "label": "Celluloid Records",
        "uri": "http://dbpedia.org/resource/Celluloid_Records"
      }
    ],
    "id": "b48a6444785e448b83e9f9120e667014",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "Which country were the associates of Hilda Duhalde from?",
    "SerialNumber": "2665",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hilda_de_Duhalde> <http://dbpedia.org/ontology/associate> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }",
    "entity mapping": [
      {
        "label": "Hilda Duhalde",
        "uri": "http://dbpedia.org/resource/Hilda_de_Duhalde"
      }
    ],
    "id": "6bd4f6e0ff164d198b28c87bbdeb06c5",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "Which television shows have been produced by Erik Bork?",
    "SerialNumber": "2669",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Erik Bork",
        "uri": "http://dbpedia.org/resource/Erik_Bork"
      }
    ],
    "id": "6547856ca710456fbcb9872e8a03a4e2",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the university with mascot as Aubie and president as jay Gogue ?",
    "SerialNumber": "2671",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Aubie> . ?uri <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Jay_Gogue>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Aubie",
        "uri": "http://dbpedia.org/resource/Aubie"
      },
      {
        "label": "jay Gogue",
        "uri": "http://dbpedia.org/resource/Jay_Gogue"
      }
    ],
    "id": "35b0181dcf4d44abbc524b41da8eb11f",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What is the alma mater of the scientist  whose PhD advisor is Jean-Claude Latombe ?",
    "SerialNumber": "2676",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Jean-Claude_Latombe> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Jean-Claude Latombe",
        "uri": "http://dbpedia.org/resource/Jean-Claude_Latombe"
      }
    ],
    "id": "871856be77aa4a128b9fbaaad6176bb6",
    "predicate mapping": [
      {
        "label": "PhD advisor",
        "uri": "http://dbpedia.org/ontology/doctoralAdvisor"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Which magazine\u0027s editor\u0027s official residence is Playboy Mansion?",
    "SerialNumber": "2679",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Playboy_Mansion> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Playboy Mansion",
        "uri": "http://dbpedia.org/resource/Playboy_Mansion"
      }
    ],
    "id": "a869f86cad31408eb7ce2f7ec9cc6fad",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "What are the television shows telecasted on the network which has headquarters at Atlanta?",
    "SerialNumber": "2680",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Atlanta> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Atlanta",
        "uri": "http://dbpedia.org/resource/Atlanta"
      }
    ],
    "id": "64452a48e109452f8d7c44e99d505ae8",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "By whom is the broadcaster network Bounce TV founded?",
    "SerialNumber": "2683",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bounce_TV> <http://dbpedia.org/ontology/foundedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "Bounce TV",
        "uri": "http://dbpedia.org/resource/Bounce_TV"
      }
    ],
    "id": "1fe29c8d282c43c8ba68b809c317857b",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      }
    ]
  },
  {
    "question": "Where was William anthony trained ?",
    "SerialNumber": "2684",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/property/training> ?uri } ",
    "entity mapping": [
      {
        "label": "William anthony",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)"
      }
    ],
    "id": "12a72e0ad64a48f9bac59bc42cec75b8",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training"
      }
    ]
  },
  {
    "question": "How many other family of the mammals exists  whose family is also Hominidae ?",
    "SerialNumber": "2687",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Hominidae> . ?x <http://dbpedia.org/ontology/family> ?uri }",
    "entity mapping": [
      {
        "label": "Hominidae",
        "uri": "http://dbpedia.org/resource/Hominidae"
      }
    ],
    "id": "f3e83f69a08e4a5183ada408fca77850",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "Name the country with currency as Aureus ?",
    "SerialNumber": "2688",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Aureus",
        "uri": "http://dbpedia.org/resource/Aureus"
      }
    ],
    "id": "019a5359e534491181604839d176cdff",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "How many awards have royal designers for industry awardwinners got?",
    "SerialNumber": "2690",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Royal_Designers_for_Industry> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "royal designers for industry",
        "uri": "http://dbpedia.org/resource/Royal_Designers_for_Industry"
      }
    ],
    "id": "4ed98081a2ca43378ff4dc849b61d133",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "Which airlines fly to Gimhae International Airport?",
    "SerialNumber": "2696",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gimhae_International_Airport> } ",
    "entity mapping": [
      {
        "label": "Gimhae International Airport",
        "uri": "http://dbpedia.org/resource/Gimhae_International_Airport"
      }
    ],
    "id": "5b45dc70c91a4476b7bfee1e7fcd372f",
    "predicate mapping": [
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      }
    ]
  },
  {
    "question": "What is the alma mater of K. Terry Dornbush ?",
    "SerialNumber": "2701",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/K._Terry_Dornbush> <http://dbpedia.org/property/almaMater> ?uri } ",
    "entity mapping": [
      {
        "label": "K. Terry Dornbush",
        "uri": "http://dbpedia.org/resource/K._Terry_Dornbush"
      }
    ],
    "id": "05f59024c9ca4d59bc0dd7c19ebdc90c",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "Which country has the Carmel Winery and the Teperberg 1870 winery ?",
    "SerialNumber": "2703",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carmel_Winery> <http://dbpedia.org/property/locationCountry> ?uri. <http://dbpedia.org/resource/Teperberg_1870> <http://dbpedia.org/property/locationCountry> ?uri . }",
    "entity mapping": [
      {
        "label": "Carmel Winery",
        "uri": "http://dbpedia.org/resource/Carmel_Winery"
      },
      {
        "label": "Teperberg 1870",
        "uri": "http://dbpedia.org/resource/Teperberg_1870"
      }
    ],
    "id": "5cbde32223b249669ebf4fdde7f3ead9",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/locationCountry"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/locationCountry"
      }
    ]
  },
  {
    "question": "Name the river whose source is located in Itasca State Park and mouth is located in Pilottown, Louisiana?",
    "SerialNumber": "2705",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Itasca_State_Park> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Pilottown,_Louisiana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Itasca State Park",
        "uri": "http://dbpedia.org/resource/Itasca_State_Park"
      },
      {
        "label": "Pilottown, Louisiana",
        "uri": "http://dbpedia.org/resource/Pilottown,_Louisiana"
      }
    ],
    "id": "aa76b402511940a2887da5d4f704c9f3",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the river which comes from Southend-on-Sea mountain?",
    "SerialNumber": "2706",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Southend-on-Sea",
        "uri": "http://dbpedia.org/resource/Southend-on-Sea"
      }
    ],
    "id": "4c617796ad264521bad275ed96e3e71b",
    "predicate mapping": [
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Where did Meg McGuffin graduated ?",
    "SerialNumber": "2707",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Meg_McGuffin> <http://dbpedia.org/ontology/education> ?uri } ",
    "entity mapping": [
      {
        "label": "Meg McGuffin",
        "uri": "http://dbpedia.org/resource/Meg_McGuffin"
      }
    ],
    "id": "4c49002c50c740b69b9e310bb96d4c13",
    "predicate mapping": [
      {
        "label": "graduated",
        "uri": "http://dbpedia.org/ontology/education"
      }
    ]
  },
  {
    "question": "Name the movies for which music was given by  Geoffrey Burgon and distributed by  Cinema International Corporation?",
    "SerialNumber": "2709",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Geoffrey Burgon",
        "uri": "http://dbpedia.org/resource/Geoffrey_Burgon"
      },
      {
        "label": "Cinema International Corporation",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation"
      }
    ],
    "id": "cd70ac27443f476991974aca030f0ff2",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Count the total number of academic discipline of the journals whose one of the academic discipline is Neuroimaging ?",
    "SerialNumber": "2710",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Neuroimaging> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri }",
    "entity mapping": [
      {
        "label": "Neuroimaging",
        "uri": "http://dbpedia.org/resource/Neuroimaging"
      }
    ],
    "id": "ee4e4eda446b49beaab2d615cfcec423",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      },
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      }
    ]
  },
  {
    "question": "What is the faith of the Ajith Perera and religious affiliation of the Neungin High School?",
    "SerialNumber": "2714",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ajith_Perera> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri} ",
    "entity mapping": [
      {
        "label": "Ajith Perera",
        "uri": "http://dbpedia.org/resource/Ajith_Perera"
      },
      {
        "label": "Neungin High School",
        "uri": "http://dbpedia.org/resource/Neungin_High_School"
      }
    ],
    "id": "4d7bec0dba5d42e0982d9832d3a78971",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      }
    ]
  },
  {
    "question": "What is the mascot of the Royal Australian Air Force and Austin College?",
    "SerialNumber": "2715",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Royal_Australian_Air_Force> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Austin_College> <http://dbpedia.org/property/mascot> ?uri . }",
    "entity mapping": [
      {
        "label": "Royal Australian Air Force",
        "uri": "http://dbpedia.org/resource/Royal_Australian_Air_Force"
      },
      {
        "label": "Austin College",
        "uri": "http://dbpedia.org/resource/Austin_College"
      }
    ],
    "id": "3fa4525f3018491aa2d9184c48896159",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Who managed England national under-20 football team and Middlesbrough F.C.?",
    "SerialNumber": "2716",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> . ?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.>  . }",
    "entity mapping": [
      {
        "label": "England national under-20 football team",
        "uri": "http://dbpedia.org/resource/England_national_under-20_football_team"
      },
      {
        "label": "Middlesbrough F.C.",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C."
      }
    ],
    "id": "a294972b904444408a89d3e753d73332",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/managerclubs"
      },
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/managerClub"
      }
    ]
  },
  {
    "question": "What is the religion of the ethnic group to which Clara Ng belongs?",
    "SerialNumber": "2717",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Clara_Ng> <http://dbpedia.org/ontology/ethnicity> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "entity mapping": [
      {
        "label": "Clara Ng",
        "uri": "http://dbpedia.org/resource/Clara_Ng"
      }
    ],
    "id": "cfa6884352b444d8add91a623bbab10f",
    "predicate mapping": [
      {
        "label": "ethnic",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup"
      }
    ]
  },
  {
    "question": "What are the awards won by the film director of Saraband ?",
    "SerialNumber": "2718",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Saraband> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Saraband",
        "uri": "http://dbpedia.org/resource/Saraband"
      }
    ],
    "id": "973615440e0f471487e7bb99d0e2084c",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Was John of Damascus canonized by Anglican Communion?",
    "SerialNumber": "2719",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Anglican_Communion> }",
    "entity mapping": [
      {
        "label": "John of Damascus",
        "uri": "http://dbpedia.org/resource/John_of_Damascus"
      },
      {
        "label": "Anglican Communion",
        "uri": "http://dbpedia.org/resource/Anglican_Communion"
      }
    ],
    "id": "7ccf7bd3fd714601ac25679451fd3649",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy"
      }
    ]
  },
  {
    "question": "Who owns the horses which have won the Timeform award?",
    "SerialNumber": "2720",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Timeform> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Timeform",
        "uri": "http://dbpedia.org/resource/Timeform"
      }
    ],
    "id": "55bc4c30a46549d99ab814a0d7c38eb0",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "Was George Cash in the western australian parliament?",
    "SerialNumber": "2722",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/George_Cash> <http://dbpedia.org/property/parliament> <http://dbpedia.org/resource/Western_Australia> }",
    "entity mapping": [
      {
        "label": "George Cash",
        "uri": "http://dbpedia.org/resource/George_Cash"
      },
      {
        "label": "western australia",
        "uri": "http://dbpedia.org/resource/Western_Australia"
      }
    ],
    "id": "a05ef1ad73414574abe88a1bd70f5530",
    "predicate mapping": [
      {
        "label": "parliament",
        "uri": "http://dbpedia.org/property/parliament"
      }
    ]
  },
  {
    "question": "What are the notableworks of Russell T Davies?",
    "SerialNumber": "2725",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri } ",
    "entity mapping": [
      {
        "label": "Russell T Davies",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      }
    ],
    "id": "be9459f9eae64f38be49cf3573dc58c6",
    "predicate mapping": [
      {
        "label": "notableworks",
        "uri": "http://dbpedia.org/property/notableworks"
      }
    ]
  },
  {
    "question": "Horses grandsired by Sundridge  have won which awards?",
    "SerialNumber": "2730",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Sundridge_(horse)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Sundridge",
        "uri": "http://dbpedia.org/resource/Sundridge_(horse)"
      }
    ],
    "id": "b1f5915a9e9043c0b787d37137909a5a",
    "predicate mapping": [
      {
        "label": "grandsire",
        "uri": "http://dbpedia.org/ontology/grandsire"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours"
      },
      {
        "label": "Horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "What is the nickname of the home stadium of Angels Toru?",
    "SerialNumber": "2731",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Angels_Toruń> <http://dbpedia.org/ontology/homeStadium> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "entity mapping": [
      {
        "label": "Angels Toru?",
        "uri": "http://dbpedia.org/resource/Angels_Toruń"
      }
    ],
    "id": "9f3ba1ac5940461a82d87b74d861d913",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "What are the bands associated with the artists of My Favorite Girl  ?",
    "SerialNumber": "2732",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
    "entity mapping": [
      {
        "label": "My Favorite Girl",
        "uri": "http://dbpedia.org/resource/My_Favorite_Girl_(Dave_Hollister_song)"
      }
    ],
    "id": "00eb2acadaaa4344a0fff0a57e7ff91f",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "What is the layout of Subaru Legacy (second generation) ?",
    "SerialNumber": "2733",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Subaru_Legacy_(second_generation)> <http://dbpedia.org/ontology/layout> ?uri } ",
    "entity mapping": [
      {
        "label": "Subaru Legacy (second generation)",
        "uri": "http://dbpedia.org/resource/Subaru_Legacy_(second_generation)"
      }
    ],
    "id": "0ca28cd660a3450a9c67766dfe3ce288",
    "predicate mapping": [
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout"
      }
    ]
  },
  {
    "question": "Name an American football player whose debuted in Chicago Bears and former team is 1998 Baltimore Ravens season?",
    "SerialNumber": "2735",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Chicago_Bears> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/1998_Baltimore_Ravens_season>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Chicago Bears",
        "uri": "http://dbpedia.org/resource/Chicago_Bears"
      },
      {
        "label": "1998 Baltimore Ravens season",
        "uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season"
      }
    ],
    "id": "fb89e5eaefbd45b6abc72a2de3f1a88d",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "American football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "What is the deathplace of the Anatoly Kharlampiyev which is also the death place of  Lyudmila Buldakova?",
    "SerialNumber": "2737",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anatoly_Kharlampiyev> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Lyudmila_Buldakova> <http://dbpedia.org/property/deathPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "Anatoly Kharlampiyev",
        "uri": "http://dbpedia.org/resource/Anatoly_Kharlampiyev"
      },
      {
        "label": "Lyudmila Buldakova",
        "uri": "http://dbpedia.org/resource/Lyudmila_Buldakova"
      }
    ],
    "id": "2151bdd827224e77930d58070e08c1c6",
    "predicate mapping": [
      {
        "label": "death place",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "death place",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "What are the professions of Frederick Frelinghuysen (general) ?",
    "SerialNumber": "2741",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frederick_Frelinghuysen_(general)> <http://dbpedia.org/property/occupation> ?uri } ",
    "entity mapping": [
      {
        "label": "Frederick Frelinghuysen (general)",
        "uri": "http://dbpedia.org/resource/Frederick_Frelinghuysen_(general)"
      }
    ],
    "id": "8fcd17645d854494af5b6bbf9d11cc54",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/property/occupation"
      }
    ]
  },
  {
    "question": "List the starring of the movies whose label is T-Series ?",
    "SerialNumber": "2743",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/T-Series> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "T-Series",
        "uri": "http://dbpedia.org/resource/T-Series"
      }
    ],
    "id": "3d3c7cde66874980a0a5e54a7375ea1f",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "starring",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Is Pittsburgh Steelers the former team of Marv McFadden?",
    "SerialNumber": "2746",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> <http://dbpedia.org/resource/Pittsburgh_Steelers> }",
    "entity mapping": [
      {
        "label": "Marv McFadden",
        "uri": "http://dbpedia.org/resource/Marv_McFadden"
      },
      {
        "label": "Pittsburgh Steelers",
        "uri": "http://dbpedia.org/resource/Pittsburgh_Steelers"
      }
    ],
    "id": "5771b7d643f54d72a32152580a3e246a",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/pastteams"
      }
    ]
  },
  {
    "question": "What is the ideology of Palang Dharma Party ?",
    "SerialNumber": "2747",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri } ",
    "entity mapping": [
      {
        "label": "Palang Dharma Party",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party"
      }
    ],
    "id": "53b5c75907db4603977bf8ecd7de7eb9",
    "predicate mapping": [
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology"
      }
    ]
  },
  {
    "question": "Name the common record label of I pray on Christmas and Next Thing ?",
    "SerialNumber": "2749",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri} ",
    "entity mapping": [
      {
        "label": "I pray on Christmas",
        "uri": "http://dbpedia.org/resource/I_Pray_on_Christmas"
      },
      {
        "label": "Next Thing",
        "uri": "http://dbpedia.org/resource/Next_Thing"
      }
    ],
    "id": "9d360f44420b41f5af982a515dfc7fa6",
    "predicate mapping": [
      {
        "label": "record label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      }
    ]
  },
  {
    "question": "How many cities are around the sea in which the ionian sea flows?",
    "SerialNumber": "2753",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ionian_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "ionian sea",
        "uri": "http://dbpedia.org/resource/Ionian_Sea"
      }
    ],
    "id": "7a21a6d6f21d47d0b60283006ff13a51",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/outflow"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Which television show\u0027s theme music composer is Gary Portnoy and subsequent work is Frasier?",
    "SerialNumber": "2755",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Gary Portnoy",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy"
      },
      {
        "label": "Frasier",
        "uri": "http://dbpedia.org/resource/Frasier"
      }
    ],
    "id": "bb4e3f8507444b49894b8b309c5a3f0d",
    "predicate mapping": [
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the licensee of the TV station whose one of the licensee is Incorporation ?",
    "SerialNumber": "2756",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/licensee> <http://dbpedia.org/resource/Incorporation_(business)> . ?x <http://dbpedia.org/property/licensee> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "entity mapping": [
      {
        "label": "Incorporation",
        "uri": "http://dbpedia.org/resource/Incorporation_(business)"
      }
    ],
    "id": "5ad1ae78dccc48cf8191cdc793ed60b5",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      },
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/TelevisionStation"
      }
    ]
  },
  {
    "question": "Was James maker in the band Noko?",
    "SerialNumber": "2757",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Noko> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/James_Maker> }",
    "entity mapping": [
      {
        "label": "Noko",
        "uri": "http://dbpedia.org/resource/Noko"
      },
      {
        "label": "James maker",
        "uri": "http://dbpedia.org/resource/James_Maker"
      }
    ],
    "id": "dd1825b14155469b8f2931245fe6c188",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "Which awards did the parents of Anna Bergman win ?",
    "SerialNumber": "2758",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Anna_Bergman> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Anna Bergman",
        "uri": "http://dbpedia.org/resource/Anna_Bergman"
      }
    ],
    "id": "baf5c96273684029beba9ba7d893203e",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Does Lionel Messi play in the Argentina National Football Team?",
    "SerialNumber": "2764",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lionel_Messi> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Argentina_national_football_team> }",
    "entity mapping": [
      {
        "label": "Lionel Messi",
        "uri": "http://dbpedia.org/resource/Lionel_Messi"
      },
      {
        "label": "Argentina National Football Team",
        "uri": "http://dbpedia.org/resource/Argentina_national_football_team"
      }
    ],
    "id": "477fee2dbaf14427a27647739e512878",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "Was X the Unknown edited by James needs?",
    "SerialNumber": "2766",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/X_the_Unknown> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/James_Needs> }",
    "entity mapping": [
      {
        "label": "X the Unknown",
        "uri": "http://dbpedia.org/resource/X_the_Unknown"
      },
      {
        "label": "James needs",
        "uri": "http://dbpedia.org/resource/James_Needs"
      }
    ],
    "id": "959ab2e634754cfaa81e52b342c5d1c8",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editing"
      }
    ]
  },
  {
    "question": "Which company owns Sony bank ?",
    "SerialNumber": "2767",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sony_Bank> <http://dbpedia.org/ontology/owningCompany> ?uri } ",
    "entity mapping": [
      {
        "label": "Sony bank",
        "uri": "http://dbpedia.org/resource/Sony_Bank"
      }
    ],
    "id": "46ae4963123144699d4f6d11784e7bf9",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      }
    ]
  },
  {
    "question": "Martin AN/GSG-5 is a part of the building in which city?",
    "SerialNumber": "2768",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Martin_AN/GSG-5_Battery_Integration_and_Radar_Display_Equipment> . ?x <http://dbpedia.org/property/district> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [],
    "id": "bb54180751be476bb26a39120b330d55",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "an/gsg-5",
        "uri": "http://dbpedia.org/resource/Martin_AN/GSG-5_Battery_Integration_and_Radar_Display_Equipment"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/district"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Who is the president of United World College of Costa Rica ?",
    "SerialNumber": "2769",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_World_College_of_Costa_Rica> <http://dbpedia.org/ontology/president> ?uri } ",
    "entity mapping": [
      {
        "label": "United World College of Costa Rica",
        "uri": "http://dbpedia.org/resource/United_World_College_of_Costa_Rica"
      }
    ],
    "id": "a883dc6214124d909e2ec7f7cbd9729c",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "What party was in majority of Fourth Legislative Assembly of Delhi?",
    "SerialNumber": "2770",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi> <http://dbpedia.org/property/party> ?uri } ",
    "entity mapping": [
      {
        "label": "Fourth Legislative Assembly of Delhi",
        "uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi"
      }
    ],
    "id": "b091da8838fe41e0967e92add727c27d",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "What is the venue of Indy PopCon ?",
    "SerialNumber": "2771",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indy_PopCon> <http://dbpedia.org/property/venue> ?uri } ",
    "entity mapping": [
      {
        "label": "Indy PopCon",
        "uri": "http://dbpedia.org/resource/Indy_PopCon"
      }
    ],
    "id": "e0394ddbda3d42f994117e6e1ef5a131",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue"
      }
    ]
  },
  {
    "question": "Which non fictional subject of Thud is the athletics of PATTS College of Aeronautics ?",
    "SerialNumber": "2772",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thud!> <http://dbpedia.org/ontology/nonFictionSubject> ?uri. <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri} ",
    "entity mapping": [
      {
        "label": "Thud ",
        "uri": "http://dbpedia.org/resource/Thud!"
      },
      {
        "label": "PATTS College of Aeronautics",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics"
      }
    ],
    "id": "a2bd883db228481cb81969ed59dc68e8",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      },
      {
        "label": "athletics",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Where is the birthplace of Ferrel Harris ?",
    "SerialNumber": "2773",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ferrel_Harris> <http://dbpedia.org/property/birthplace> ?uri } ",
    "entity mapping": [
      {
        "label": "Ferrel Harris",
        "uri": "http://dbpedia.org/resource/Ferrel_Harris"
      }
    ],
    "id": "39562e37dcd645e8aa5d083018173381",
    "predicate mapping": [
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace"
      }
    ]
  },
  {
    "question": "who was the president under whom winston bryant served as a lieutenant?",
    "SerialNumber": "2774",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Winston_Bryant> } ",
    "entity mapping": [
      {
        "label": "winston bryant",
        "uri": "http://dbpedia.org/resource/Winston_Bryant"
      }
    ],
    "id": "0898b1c260b643f8be620cea3ccb7bbd",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      }
    ]
  },
  {
    "question": "Is Essex the Ceremonial County of West Tilbury?",
    "SerialNumber": "2775",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> <http://dbpedia.org/resource/Essex> }",
    "entity mapping": [
      {
        "label": "West Tilbury",
        "uri": "http://dbpedia.org/resource/West_Tilbury"
      },
      {
        "label": "Essex",
        "uri": "http://dbpedia.org/resource/Essex"
      }
    ],
    "id": "d30babe0e611482a8158fd9a37eabe35",
    "predicate mapping": [
      {
        "label": "Ceremonial County",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty"
      }
    ]
  },
  {
    "question": "What are the airlines whose hub airport is Los Angeles International Airport?",
    "SerialNumber": "2776",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Los Angeles International Airport",
        "uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport"
      }
    ],
    "id": "1635d75bc91149baba817e3b941d67db",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Name the common nationality of Georgina Theodora Wood and akwasi Oppong Fosu ?",
    "SerialNumber": "2780",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georgina_Theodora_Wood> <http://dbpedia.org/ontology/nationality> ?uri. <http://dbpedia.org/resource/Akwasi_Oppong_Fosu> <http://dbpedia.org/ontology/nationality> ?uri . }",
    "entity mapping": [
      {
        "label": "Georgina Theodora Wood",
        "uri": "http://dbpedia.org/resource/Georgina_Theodora_Wood"
      },
      {
        "label": "akwasi Oppong Fosu",
        "uri": "http://dbpedia.org/resource/Akwasi_Oppong_Fosu"
      }
    ],
    "id": "0e5778a4027c4c21981d48f093bad188",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What is the sovereign state of the Dafydd Benfras where Jasmine Lowson is also citizen of ?",
    "SerialNumber": "2783",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dafydd_Benfras> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Jasmine_Lowson> <http://dbpedia.org/ontology/citizenship> ?uri} ",
    "entity mapping": [
      {
        "label": "Dafydd Benfras",
        "uri": "http://dbpedia.org/resource/Dafydd_Benfras"
      },
      {
        "label": "Jasmine Lowson",
        "uri": "http://dbpedia.org/resource/Jasmine_Lowson"
      }
    ],
    "id": "bdf590911bf74c79ab82b8964a16d3d2",
    "predicate mapping": [
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "citizen of",
        "uri": "http://dbpedia.org/ontology/citizenship"
      }
    ]
  },
  {
    "question": "What are the nicknames given to the characters of The Wolves of the Mercy Falls?",
    "SerialNumber": "2784",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters> <http://dbpedia.org/property/nickname> ?uri } ",
    "entity mapping": [
      {
        "label": "The Wolves of the Mercy Falls",
        "uri": "http://dbpedia.org/resource/List_of_The_Wolves_of_Mercy_Falls_characters"
      }
    ],
    "id": "f3a26b9c5fb84504821433f49a62d31c",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "How many people are buried in the Winchester Cathedral?",
    "SerialNumber": "2785",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Winchester_Cathedral>  . }",
    "entity mapping": [
      {
        "label": "Winchester Cathedral",
        "uri": "http://dbpedia.org/resource/Winchester_Cathedral"
      }
    ],
    "id": "7d87576a21984b83898106db13ed5ae6",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "What is the colour of Red Marauder ?",
    "SerialNumber": "2786",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_Marauder> <http://dbpedia.org/ontology/colour> ?uri } ",
    "entity mapping": [
      {
        "label": "Red Marauder",
        "uri": "http://dbpedia.org/resource/Red_Marauder"
      }
    ],
    "id": "0ca53bf56bcb4b5f8a270a98c9c1c205",
    "predicate mapping": [
      {
        "label": "colour",
        "uri": "http://dbpedia.org/ontology/colour"
      }
    ]
  },
  {
    "question": "List the territory of Tonkin Campaign ?",
    "SerialNumber": "2787",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri } ",
    "entity mapping": [
      {
        "label": "Tonkin Campaign",
        "uri": "http://dbpedia.org/resource/Tonkin_Campaign"
      }
    ],
    "id": "853f4ee49ca64a6394f25dbcb0998674",
    "predicate mapping": [
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory"
      }
    ]
  },
  {
    "question": "What is the route start of Capitol 400 ?",
    "SerialNumber": "2789",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Capitol_400> <http://dbpedia.org/ontology/routeStart> ?uri } ",
    "entity mapping": [
      {
        "label": "Capitol 400",
        "uri": "http://dbpedia.org/resource/Capitol_400"
      }
    ],
    "id": "2578f19d55494d34b4c2cb71b5c72674",
    "predicate mapping": [
      {
        "label": "route start",
        "uri": "http://dbpedia.org/ontology/routeStart"
      }
    ]
  },
  {
    "question": "What other awards have been given to Golden Globe winners?",
    "SerialNumber": "2791",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Golden_Globe_Award> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Golden Globe",
        "uri": "http://dbpedia.org/resource/Golden_Globe_Award"
      }
    ],
    "id": "df2c6434c7714725be5766e707866ba8",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "With which musical artist is the music group which sung Mind Blowin\u0027 related to ?  ",
    "SerialNumber": "2792",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mind_Blowin\u0027_(Smooth_song)> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mind Blowin\u0027",
        "uri": "http://dbpedia.org/resource/Mind_Blowin\u0027_(Smooth_song)"
      }
    ],
    "id": "5c9545bdb6fa49c694b4e18b35e6bf8b",
    "predicate mapping": [
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "List the universities with athletics NCAA Division I Football Bowl Subdivision ?",
    "SerialNumber": "2794",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "NCAA Division I Football Bowl Subdivision",
        "uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision"
      }
    ],
    "id": "4bc850d823374bc79417ccaedbc85cc5",
    "predicate mapping": [
      {
        "label": "athletics",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "In which races does Coneygree compete?",
    "SerialNumber": "2795",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Coneygree> <http://dbpedia.org/property/race> ?uri } ",
    "entity mapping": [
      {
        "label": "Coneygree",
        "uri": "http://dbpedia.org/resource/Coneygree"
      }
    ],
    "id": "ef89ea65fb1e475d87bfd0d41dc3df4b",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      }
    ]
  },
  {
    "question": "Who was the designer of john madden Football \u002792 ?",
    "SerialNumber": "2796",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Madden_Football_\u002792> <http://dbpedia.org/property/designer> ?uri } ",
    "entity mapping": [
      {
        "label": "john madden Football \u002792",
        "uri": "http://dbpedia.org/resource/John_Madden_Football_\u002792"
      }
    ],
    "id": "0e401e47838c4dba988eda6a6838e8fe",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/property/designer"
      }
    ]
  },
  {
    "question": "Which ancient country had capital as Nicomedia and History of Trier?",
    "SerialNumber": "2797",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia> . ?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/History_of_Trier> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Nicomedia",
        "uri": "http://dbpedia.org/resource/Nicomedia"
      },
      {
        "label": "History of Trier",
        "uri": "http://dbpedia.org/resource/History_of_Trier"
      }
    ],
    "id": "3f8912118a034abd8267bab919afc00f",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Which sports are played in schools founded by Fr Almeida?",
    "SerialNumber": "2800",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Fr._Almeida> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Fr Almeida",
        "uri": "http://dbpedia.org/resource/Fr._Almeida"
      }
    ],
    "id": "49a721669f7342a6babb0b2875943b45",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "In which state is the alma mater of Ben Ysursa located ?",
    "SerialNumber": "2802",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ben_Ysursa> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ben Ysursa",
        "uri": "http://dbpedia.org/resource/Ben_Ysursa"
      }
    ],
    "id": "dc720b39588c4852a3086c7b106edad0",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      }
    ]
  },
  {
    "question": "Players from how many teams have participated in the National Hockey League?",
    "SerialNumber": "2803",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "National Hockey League",
        "uri": "http://dbpedia.org/resource/National_Hockey_League"
      }
    ],
    "id": "c1cec6b2504746e5b9e0a84cca31840d",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Who is on the board of Kate Spade and company?",
    "SerialNumber": "2806",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Kate_Spade_\u0026_Company>  . }",
    "entity mapping": [
      {
        "label": "Kate Spade and company",
        "uri": "http://dbpedia.org/resource/Kate_Spade_\u0026_Company"
      }
    ],
    "id": "009195815bfe4b2da02ac6c1f612ce32",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "Which awards have been given to scientists that graduated from NKU athens?",
    "SerialNumber": "2807",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "NKU athens",
        "uri": "http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens"
      }
    ],
    "id": "76434a3de4eb4e23946721c8976f33eb",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Name the club of Julie Hastings ?",
    "SerialNumber": "2809",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julie_Hastings> <http://dbpedia.org/ontology/club> ?uri } ",
    "entity mapping": [
      {
        "label": "Julie Hastings",
        "uri": "http://dbpedia.org/resource/Julie_Hastings"
      }
    ],
    "id": "8d63fe63027947458a867a5902c1c0e0",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/club"
      }
    ]
  },
  {
    "question": "What is the death location of the scientist who is the known authority of Hallopus ?",
    "SerialNumber": "2810",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hallopus> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Hallopus",
        "uri": "http://dbpedia.org/resource/Hallopus"
      }
    ],
    "id": "0af37d7da2d44dad82fdc851c7e9c38f",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      },
      {
        "label": "death location",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Whose creators are Jerry Seinfeld and Larry David?",
    "SerialNumber": "2812",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David> . }",
    "entity mapping": [
      {
        "label": "Jerry Seinfeld",
        "uri": "http://dbpedia.org/resource/Jerry_Seinfeld"
      },
      {
        "label": "Larry David",
        "uri": "http://dbpedia.org/resource/Larry_David"
      }
    ],
    "id": "536bed978e9d4db1bc5789baf5d939d0",
    "predicate mapping": [
      {
        "label": "creators",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "creators",
        "uri": "http://dbpedia.org/ontology/creator"
      }
    ]
  },
  {
    "question": "Who are the people who played for San Francisco 49ers?",
    "SerialNumber": "2813",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_49ers>  . }",
    "entity mapping": [
      {
        "label": "San Francisco 49ers",
        "uri": "http://dbpedia.org/resource/San_Francisco_49ers"
      }
    ],
    "id": "3aab103841c348e199c10879fa2b70d5",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "What is the Nickname of the school where Jeff Hornacek studied  ?",
    "SerialNumber": "2814",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jeff_Hornacek> <http://dbpedia.org/property/highschool> ?x . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Jeff Hornacek",
        "uri": "http://dbpedia.org/resource/Jeff_Hornacek"
      }
    ],
    "id": "bb90c58c414a4f819154ecb33586121d",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/highschool"
      },
      {
        "label": "Nickname",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Which artist married to Lee Krasner?",
    "SerialNumber": "2815",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Lee_Krasner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "Lee Krasner",
        "uri": "http://dbpedia.org/resource/Lee_Krasner"
      }
    ],
    "id": "dc3403a37b77457aafadb0b90e8ed62a",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Name all the doctoral student of the scientist who also supervised Mary Ainsworth ?",
    "SerialNumber": "2818",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Mary_Ainsworth> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Mary Ainsworth",
        "uri": "http://dbpedia.org/resource/Mary_Ainsworth"
      }
    ],
    "id": "a2bb1b6a34864a0fa79b65de6dcbe19b",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Who was in youth clubs of FC Barcelona and Newell\u0027s Old Boys?",
    "SerialNumber": "2819",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/FC_Barcelona> . ?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell\u0027s_Old_Boys> . }",
    "entity mapping": [
      {
        "label": "FC Barcelona",
        "uri": "http://dbpedia.org/resource/FC_Barcelona"
      },
      {
        "label": "Newell\u0027s Old Boys",
        "uri": "http://dbpedia.org/resource/Newell\u0027s_Old_Boys"
      }
    ],
    "id": "5edb220b2251465ba6759abfe2fe6e4f",
    "predicate mapping": [
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs"
      },
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "Which river\u0027s mouth is located in Gulf of Mexico and has source location as Itasca State Park ?",
    "SerialNumber": "2820",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Gulf_of_Mexico> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Itasca_State_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Gulf of Mexico",
        "uri": "http://dbpedia.org/resource/Gulf_of_Mexico"
      },
      {
        "label": "Itasca State Park",
        "uri": "http://dbpedia.org/resource/Itasca_State_Park"
      }
    ],
    "id": "288a095b6d584ca9be2d37ee510ddb4f",
    "predicate mapping": [
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Whose youth clubs used to participate in Argentine Primera Division?",
    "SerialNumber": "2821",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Argentine_Primera_División> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "entity mapping": [
      {
        "label": "Argentine Primera Division",
        "uri": "http://dbpedia.org/resource/Argentine_Primera_División"
      }
    ],
    "id": "948bff1369c74f2e80829f55fe947179",
    "predicate mapping": [
      {
        "label": "Division",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "Which prime ministers were served by the governor who appointed Murray Gleeson?",
    "SerialNumber": "2822",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Murray_Gleeson> <http://dbpedia.org/ontology/appointer> ?x . ?x <http://dbpedia.org/ontology/primeMinister> ?uri  . }",
    "entity mapping": [
      {
        "label": "Murray Gleeson",
        "uri": "http://dbpedia.org/resource/Murray_Gleeson"
      }
    ],
    "id": "8a54f285292b4890929cead57276b9b1",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "What are the movies whose music composer is Akira Ifukube?",
    "SerialNumber": "2823",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Akira Ifukube",
        "uri": "http://dbpedia.org/resource/Akira_Ifukube"
      }
    ],
    "id": "632fe10298ad4842bb28ca3404eec4b1",
    "predicate mapping": [
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which adminstrative region of Lawrence F. Cafero is also the resting place of Samuel Keeler ?",
    "SerialNumber": "2824",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lawrence_F._Cafero> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Samuel_Keeler> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Lawrence F. Cafero",
        "uri": "http://dbpedia.org/resource/Lawrence_F._Cafero"
      },
      {
        "label": "Samuel Keeler",
        "uri": "http://dbpedia.org/resource/Samuel_Keeler"
      }
    ],
    "id": "10e015b4b65b4de88ae622de46899157",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "Who appointed both John Drayton and William Clark to their respective offices?",
    "SerialNumber": "2825",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri. <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri . }",
    "entity mapping": [
      {
        "label": "John Drayton",
        "uri": "http://dbpedia.org/resource/John_Drayton"
      },
      {
        "label": "William Clark",
        "uri": "http://dbpedia.org/resource/William_Clark"
      }
    ],
    "id": "51652f5c18314876bfd28f3a00e53203",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "What is the mouth mountain of Current River (Missouri) ?",
    "SerialNumber": "2826",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Current_River_(Missouri)> <http://dbpedia.org/ontology/mouthMountain> ?uri } ",
    "entity mapping": [
      {
        "label": "Current River",
        "uri": "http://dbpedia.org/resource/Current_River_(Missouri)"
      }
    ],
    "id": "0e126d0d57d94ac59b74706ee95d40ef",
    "predicate mapping": [
      {
        "label": "mouth mountain",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      }
    ]
  },
  {
    "question": "Who all did their high school in Denbigh high School?",
    "SerialNumber": "2827",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Denbigh_High_School_(Newport_News,_Virginia)> } ",
    "entity mapping": [
      {
        "label": "Denbigh high School",
        "uri": "http://dbpedia.org/resource/Denbigh_High_School_(Newport_News,_Virginia)"
      }
    ],
    "id": "dc0fc69c4c2449c4a1a5b337f699d91c",
    "predicate mapping": [
      {
        "label": "high school",
        "uri": "http://dbpedia.org/property/highSchool"
      }
    ]
  },
  {
    "question": "Is Azerbaijan the membership of European Go Federation?",
    "SerialNumber": "2831",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Azerbaijan> }",
    "entity mapping": [
      {
        "label": "European Go Federation",
        "uri": "http://dbpedia.org/resource/European_Go_Federation"
      },
      {
        "label": "Azerbaijan",
        "uri": "http://dbpedia.org/resource/Azerbaijan"
      }
    ],
    "id": "8e279a9971084cb08ecf32bc378053d2",
    "predicate mapping": [
      {
        "label": "membership",
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "Who debuted their career in a team coached by Chip Kelly?",
    "SerialNumber": "2832",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Chip_Kelly> . ?uri <http://dbpedia.org/ontology/debutTeam> ?x  . }",
    "entity mapping": [
      {
        "label": "Chip Kelly",
        "uri": "http://dbpedia.org/resource/Chip_Kelly"
      }
    ],
    "id": "00a5ab1c4748474ab4f686de85c41cb9",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      }
    ]
  },
  {
    "question": "What is the religious affiliation of Hong Kong Taoist Association Tang Hin Memorial Secondary School ?",
    "SerialNumber": "2834",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hong_Kong_Taoist_Association_Tang_Hin_Memorial_Secondary_School> <http://dbpedia.org/property/religiousAffiliation> ?uri } ",
    "entity mapping": [
      {
        "label": "Hong Kong Taoist Association Tang Hin Memorial Secondary School",
        "uri": "http://dbpedia.org/resource/Hong_Kong_Taoist_Association_Tang_Hin_Memorial_Secondary_School"
      }
    ],
    "id": "b846e29b2bb74db29610cdbbbc7b1740",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      }
    ]
  },
  {
    "question": "Did Joe Namath did his highschool in Beaver Falls High School?",
    "SerialNumber": "2835",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Joe_Namath> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Beaver_Falls_High_School> }",
    "entity mapping": [
      {
        "label": "Joe Namath",
        "uri": "http://dbpedia.org/resource/Joe_Namath"
      },
      {
        "label": "Beaver Falls High School",
        "uri": "http://dbpedia.org/resource/Beaver_Falls_High_School"
      }
    ],
    "id": "cbfdaaad592b4ef7b08d5ad4d0d0ac09",
    "predicate mapping": [
      {
        "label": "High School",
        "uri": "http://dbpedia.org/property/highSchool"
      }
    ]
  },
  {
    "question": "Which work is both Neil Cross and Lars Pearson both known for ?",
    "SerialNumber": "2836",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri. <http://dbpedia.org/resource/Lars_Pearson> <http://dbpedia.org/ontology/notableWork> ?uri . }",
    "entity mapping": [
      {
        "label": "Neil Cross",
        "uri": "http://dbpedia.org/resource/Neil_Cross"
      },
      {
        "label": "Lars Pearson",
        "uri": "http://dbpedia.org/resource/Lars_Pearson"
      }
    ],
    "id": "bedb3683384446c4af8fa5348c967363",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "Which predecessor of the PlayStation 4 is also the developer of Oddworld: Munch\u0027s Oddysee?",
    "SerialNumber": "2838",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PlayStation_4> <http://dbpedia.org/property/predecessor> ?uri. <http://dbpedia.org/resource/Oddworld:_Munch\u0027s_Oddysee> <http://dbpedia.org/ontology/developer> ?uri} ",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "uri": "http://dbpedia.org/resource/PlayStation_4"
      },
      {
        "label": "Oddworld: Munch\u0027s Oddysee",
        "uri": "http://dbpedia.org/resource/Oddworld:_Munch\u0027s_Oddysee"
      }
    ],
    "id": "9f4d4fc45aaf46dda67ad836f45ecb66",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Name few movies directed by Tim Burton ?",
    "SerialNumber": "2839",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Tim Burton",
        "uri": "http://dbpedia.org/resource/Tim_Burton"
      }
    ],
    "id": "d3d3ee30a3314e28bcebf4cbac9d53e8",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What are the awards won by the producer of Puss in Boots (film)?",
    "SerialNumber": "2842",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Puss_in_Boots_(1922_film)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Puss in Boots",
        "uri": "http://dbpedia.org/resource/Puss_in_Boots_(1922_film)"
      }
    ],
    "id": "0f04c3c74476410791c8a43465ba6918",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Name the college of the Allama Matthews which also has affiliation with  Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt",
    "SerialNumber": "2843",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allama_Matthews> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri} ",
    "entity mapping": [
      {
        "label": "Allama Matthews",
        "uri": "http://dbpedia.org/resource/Allama_Matthews"
      },
      {
        "label": "Monroe Carell Jr. Children\u0027s Hospital at Vanderbilt",
        "uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children\u0027s_Hospital_at_Vanderbilt"
      }
    ],
    "id": "f0ce6eff38b647919c395acd2a7f7451",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "Name the debut team of Butch Metzger ?",
    "SerialNumber": "2844",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Butch Metzger",
        "uri": "http://dbpedia.org/resource/Butch_Metzger"
      }
    ],
    "id": "02172a58699f46568edf1ba7690b144d",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      }
    ]
  },
  {
    "question": "Name the common distributing label of the Chinga Chang Records and StandBy Records ?",
    "SerialNumber": "2845",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chinga_Chang_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri. <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri . }",
    "entity mapping": [
      {
        "label": "Chinga Chang Records",
        "uri": "http://dbpedia.org/resource/Chinga_Chang_Records"
      },
      {
        "label": "StandBy Records",
        "uri": "http://dbpedia.org/resource/StandBy_Records"
      }
    ],
    "id": "e91032d570294b618d1f2611d193276f",
    "predicate mapping": [
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel"
      },
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel"
      }
    ]
  },
  {
    "question": "What are some relatives of the spouse of Uncle henry from Oz?",
    "SerialNumber": "2846",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }",
    "entity mapping": [
      {
        "label": "Uncle henry",
        "uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)"
      }
    ],
    "id": "9e78a9d215f249178b9f58cab8cb0fd5",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "Which line of the Vadodara Junction railway station is the route end of Mumbai Vadodara Expressway ?",
    "SerialNumber": "2847",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/property/line> ?uri} ",
    "entity mapping": [
      {
        "label": "Mumbai Vadodara Expressway",
        "uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway"
      },
      {
        "label": "Vadodara Junction railway station",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station"
      }
    ],
    "id": "784c77a5d9a64f6fbb7878e159ba6549",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line"
      }
    ]
  },
  {
    "question": "In which racing championships did Bobby Beasley and Martin Molony participate?",
    "SerialNumber": "2849",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bobby_Beasley> <http://dbpedia.org/ontology/race> ?uri. <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri . }",
    "entity mapping": [
      {
        "label": "Bobby Beasley",
        "uri": "http://dbpedia.org/resource/Bobby_Beasley"
      },
      {
        "label": "Martin Molony",
        "uri": "http://dbpedia.org/resource/Martin_Molony"
      }
    ],
    "id": "87b5dbafb34246f28c50d4db01d2f791",
    "predicate mapping": [
      {
        "label": "racing",
        "uri": "http://dbpedia.org/ontology/race"
      },
      {
        "label": "racing",
        "uri": "http://dbpedia.org/ontology/race"
      }
    ]
  },
  {
    "question": "Name the ground of Al-Rayan SC ?",
    "SerialNumber": "2853",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al-Rayan_SC> <http://dbpedia.org/ontology/ground> ?uri } ",
    "entity mapping": [
      {
        "label": "Al-Rayan SC",
        "uri": "http://dbpedia.org/resource/Al-Rayan_SC"
      }
    ],
    "id": "6119ae45be054c5b8898d10978eae65d",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground"
      }
    ]
  },
  {
    "question": "Who is the owner of the bank which owns Bloomberg Radio?",
    "SerialNumber": "2854",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bloomberg_Radio> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "Bloomberg Radio",
        "uri": "http://dbpedia.org/resource/Bloomberg_Radio"
      }
    ],
    "id": "9776c037c6cd401c9c3234960d164750",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "Is Another Lonely Night in New York by the musical band Robin Gibb?",
    "SerialNumber": "2856",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Another_Lonely_Night_in_New_York> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Robin_Gibb> }",
    "entity mapping": [
      {
        "label": "Another Lonely Night in New York",
        "uri": "http://dbpedia.org/resource/Another_Lonely_Night_in_New_York"
      },
      {
        "label": "Robin Gibb",
        "uri": "http://dbpedia.org/resource/Robin_Gibb"
      }
    ],
    "id": "821d1baa1d594333a5e79d50c16efcb4",
    "predicate mapping": [
      {
        "label": "musical band",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "List all the developers of the Oddworld series?",
    "SerialNumber": "2857",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Oddworld> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Oddworld",
        "uri": "http://dbpedia.org/resource/Oddworld"
      }
    ],
    "id": "e60963b2ce1644e5859606046cdd4e4a",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "To which political party does the successor of Radhabinod Koijam belong?",
    "SerialNumber": "2858",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Radhabinod_Koijam> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Radhabinod Koijam",
        "uri": "http://dbpedia.org/resource/Radhabinod_Koijam"
      }
    ],
    "id": "7b7798e7120d496ba5b75daea48b5038",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "Which builder of Edwin Andrews Air Base isalso place of birth of the Akinoumi Setsuo ?",
    "SerialNumber": "2859",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_Andrews_Air_Base> <http://dbpedia.org/ontology/builder> ?uri. <http://dbpedia.org/resource/Akinoumi_Setsuo> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Edwin Andrews Air Base",
        "uri": "http://dbpedia.org/resource/Edwin_Andrews_Air_Base"
      },
      {
        "label": "Akinoumi Setsuo",
        "uri": "http://dbpedia.org/resource/Akinoumi_Setsuo"
      }
    ],
    "id": "d9360f5cca484dbbb1187e1348211288",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "is ANYway in the Quack album?",
    "SerialNumber": "2860",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/ANYway> <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Quack_(album)> }",
    "entity mapping": [
      {
        "label": "ANYway",
        "uri": "http://dbpedia.org/resource/ANYway"
      },
      {
        "label": "Quack",
        "uri": "http://dbpedia.org/resource/Quack_(album)"
      }
    ],
    "id": "ff7902dec19b42b6b2c0de2b2ddef72c",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      }
    ]
  },
  {
    "question": "What is a common ingredient used in boyt Blodpalt and Kaszanka ?",
    "SerialNumber": "2862",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blodpalt> <http://dbpedia.org/ontology/ingredient> ?uri. <http://dbpedia.org/resource/Kaszanka> <http://dbpedia.org/ontology/ingredient> ?uri . }",
    "entity mapping": [
      {
        "label": "Blodpalt",
        "uri": "http://dbpedia.org/resource/Blodpalt"
      },
      {
        "label": "Kaszanka",
        "uri": "http://dbpedia.org/resource/Kaszanka"
      }
    ],
    "id": "0225eb44cdbd4c7891e3d609bc8534cf",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "Give me the count of tenants of the stadia whose one of the tenants is Toronto Furies?",
    "SerialNumber": "2869",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Toronto_Furies> . ?x <http://dbpedia.org/property/tenants> ?uri }",
    "entity mapping": [
      {
        "label": "Toronto Furies",
        "uri": "http://dbpedia.org/resource/Toronto_Furies"
      }
    ],
    "id": "7901e474e8734da4b709fb1cae144d23",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      },
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "What is the serving railway line of Warwick railway station, Perth ?",
    "SerialNumber": "2871",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warwick_railway_station,_Perth> <http://dbpedia.org/ontology/servingRailwayLine> ?uri } ",
    "entity mapping": [
      {
        "label": "Warwick railway station",
        "uri": "http://dbpedia.org/resource/Warwick_railway_station,_Perth"
      }
    ],
    "id": "2da5041948fd42298c8b577eb241332c",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      }
    ]
  },
  {
    "question": "Who wrote the subsequent work of One Day at a Time (Em\u0027s Version) ?",
    "SerialNumber": "2873",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/One_Day_at_a_Time_(Em\u0027s_Version)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/writer> ?uri  . }",
    "entity mapping": [
      {
        "label": "One Day at a Time (Em\u0027s Version)",
        "uri": "http://dbpedia.org/resource/One_Day_at_a_Time_(Em\u0027s_Version)"
      }
    ],
    "id": "f6576ee287fd4a29b03077da31e64c44",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/writer"
      }
    ]
  },
  {
    "question": "Who is the architect of Red House, London ?",
    "SerialNumber": "2875",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Red_House,_London> <http://dbpedia.org/property/architect> ?uri } ",
    "entity mapping": [
      {
        "label": "Red House, London",
        "uri": "http://dbpedia.org/resource/Red_House,_London"
      }
    ],
    "id": "9464454dd9bc489387bee11d1e7cd022",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      }
    ]
  },
  {
    "question": "Count the number of tenants whose one of the tenant is Toronto Phantoms ?",
    "SerialNumber": "2876",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Toronto_Phantoms> . ?x <http://dbpedia.org/ontology/tenant> ?uri }",
    "entity mapping": [
      {
        "label": "Toronto Phantoms",
        "uri": "http://dbpedia.org/resource/Toronto_Phantoms"
      }
    ],
    "id": "3dcb4c11af2d4976b986ba6a9a9c1a47",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "Which company manufactured Delta III?",
    "SerialNumber": "2878",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri } ",
    "entity mapping": [
      {
        "label": "Delta III",
        "uri": "http://dbpedia.org/resource/Delta_III"
      }
    ],
    "id": "73d555e5b42f4fc1bb26a2e517a69e83",
    "predicate mapping": [
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Name the river whose mouth mountain is Essex and river mouth is North Sea?",
    "SerialNumber": "2880",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Essex> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Essex",
        "uri": "http://dbpedia.org/resource/Essex"
      },
      {
        "label": "North Sea",
        "uri": "http://dbpedia.org/resource/North_Sea"
      }
    ],
    "id": "491d86b9710241a78858ac924c0174bb",
    "predicate mapping": [
      {
        "label": "mouth mountain",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      },
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Who is the owner of Bloomberg L.P. ?",
    "SerialNumber": "2881",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomberg_L.P.> <http://dbpedia.org/property/owner> ?uri } ",
    "entity mapping": [
      {
        "label": "Bloomberg L.P.",
        "uri": "http://dbpedia.org/resource/Bloomberg_L.P."
      }
    ],
    "id": "dac617c2755144f597bf2de202f99777",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "List the houses of Parliament of India ?",
    "SerialNumber": "2882",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> ?uri } ",
    "entity mapping": [
      {
        "label": "Parliament of India",
        "uri": "http://dbpedia.org/resource/Parliament_of_India"
      }
    ],
    "id": "02d3e516190a49e19e0908eb2fa74bfe",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses"
      }
    ]
  },
  {
    "question": "Richard Gant did a guest appearance on which series?",
    "SerialNumber": "2883",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Richard_Gant> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "entity mapping": [
      {
        "label": "Richard Gant",
        "uri": "http://dbpedia.org/resource/Richard_Gant"
      }
    ],
    "id": "f397d4e121954f05be803892461d82f9",
    "predicate mapping": [
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "What is the home stadium of the soccer club seasons whose chairman is Merritt Paulson?",
    "SerialNumber": "2884",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Merritt_Paulson> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "entity mapping": [
      {
        "label": "Merritt Paulson",
        "uri": "http://dbpedia.org/resource/Merritt_Paulson"
      }
    ],
    "id": "f2231eb580854604aa08fc3651038117",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      },
      {
        "label": "soccer club season",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason"
      }
    ]
  },
  {
    "question": "What is the government type of Kumta ?",
    "SerialNumber": "2885",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri } ",
    "entity mapping": [
      {
        "label": "Kumta",
        "uri": "http://dbpedia.org/resource/Kumta"
      }
    ],
    "id": "3379d870f89c4e929e3ac6e1ab1a1301",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/property/governmentType"
      }
    ]
  },
  {
    "question": "What is the protected area whose nearest city is Kenya?",
    "SerialNumber": "2887",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Kenya>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}",
    "entity mapping": [
      {
        "label": "Kenya",
        "uri": "http://dbpedia.org/resource/Kenya"
      }
    ],
    "id": "dd2d9d77fea94fe9ad8bf7478cb2bc1d",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "protected area",
        "uri": "http://dbpedia.org/ontology/ProtectedArea"
      }
    ]
  },
  {
    "question": "Is Anne Hidalgo the mayor of Paris?",
    "SerialNumber": "2889",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Paris> <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Anne_Hidalgo> }",
    "entity mapping": [
      {
        "label": "Paris",
        "uri": "http://dbpedia.org/resource/Paris"
      },
      {
        "label": "Anne Hidalgo",
        "uri": "http://dbpedia.org/resource/Anne_Hidalgo"
      }
    ],
    "id": "7c64644ddbc24062b9a8133945fb5e7f",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor"
      }
    ]
  },
  {
    "question": "Name the driver who was at pole in 1997 Canadian Grand Prix and also 1994 Spanish Grand Prix ?",
    "SerialNumber": "2890",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri. <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri} ",
    "entity mapping": [
      {
        "label": "1997 Canadian Grand Prix",
        "uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix"
      },
      {
        "label": "1994 Spanish Grand Prix",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix"
      }
    ],
    "id": "0486c904f3684e70a2e91846a6e53640",
    "predicate mapping": [
      {
        "label": "driver pole",
        "uri": "http://dbpedia.org/property/poleDriver"
      },
      {
        "label": "driver pole",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      }
    ]
  },
  {
    "question": "Which college has been attended  by both Mr. Hubert Wiggs and Mr. Alvin Bell?",
    "SerialNumber": "2891",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hubert_Wiggs> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Alvin_Bell> <http://dbpedia.org/ontology/college> ?uri . }",
    "entity mapping": [
      {
        "label": "Hubert Wiggs",
        "uri": "http://dbpedia.org/resource/Hubert_Wiggs"
      },
      {
        "label": "Alvin Bell",
        "uri": "http://dbpedia.org/resource/Alvin_Bell"
      }
    ],
    "id": "90502631e5e7485cb032ce25c7048d48",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college"
      }
    ]
  },
  {
    "question": "What is the academic discipline of the Journal of Cerebral Blood Flow \u0026 Metabolism and also an ingredient of the Ragout fin ?",
    "SerialNumber": "2893",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri. <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri} ",
    "entity mapping": [
      {
        "label": "Journal of Cerebral Blood Flow \u0026 Metabolism",
        "uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism"
      },
      {
        "label": "Ragout fin",
        "uri": "http://dbpedia.org/resource/Ragout_fin"
      }
    ],
    "id": "7994a53ef73c46c1bfd20f5cc8bf85c6",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "Is Maldives a member ofof South Asia Subregional Economic Cooperation?",
    "SerialNumber": "2896",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Maldives> }",
    "entity mapping": [
      {
        "label": "South Asia Subregional Economic Cooperation",
        "uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation"
      },
      {
        "label": "Maldives",
        "uri": "http://dbpedia.org/resource/Maldives"
      }
    ],
    "id": "c86cb51bad5142dab46c6951545c296d",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "What are the settlements whose neighboring municipalities is Lancy?",
    "SerialNumber": "2897",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "Lancy",
        "uri": "http://dbpedia.org/resource/Lancy"
      }
    ],
    "id": "42cba0deb5884d97a7585b227afb2f03",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "What currencies are used in the country whose capital is Podgorica?",
    "SerialNumber": "2899",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Podgorica> . ?x <http://dbpedia.org/property/currency> ?uri  . }",
    "entity mapping": [
      {
        "label": "Podgorica",
        "uri": "http://dbpedia.org/resource/Podgorica"
      }
    ],
    "id": "e7f54b79284844b194bfdd2380efe154",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/property/currency"
      }
    ]
  },
  {
    "question": "What is the political party of the Satish Kumar Sharma which is also the political party of Manthena Venkata Raju?",
    "SerialNumber": "2900",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Satish_Kumar_Sharma> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Manthena_Venkata_Raju> <http://dbpedia.org/ontology/party> ?uri . }",
    "entity mapping": [
      {
        "label": "Satish Kumar Sharma",
        "uri": "http://dbpedia.org/resource/Satish_Kumar_Sharma"
      },
      {
        "label": "Manthena Venkata Raju",
        "uri": "http://dbpedia.org/resource/Manthena_Venkata_Raju"
      }
    ],
    "id": "01e2a4fa1cc04ea397cb1d14132317a8",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Which shows theme music is composed by a band which has Larry Lalonde in it?",
    "SerialNumber": "2901",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Larry_LaLonde> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Larry Lalonde",
        "uri": "http://dbpedia.org/resource/Larry_LaLonde"
      }
    ],
    "id": "3d55c35bafda4d048cec814081b7a280",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name a famous relative of barry voight",
    "SerialNumber": "2903",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Barry_Voight>  . }",
    "entity mapping": [
      {
        "label": "barry voight",
        "uri": "http://dbpedia.org/resource/Barry_Voight"
      }
    ],
    "id": "418aec71a0ad4d5594d5667a98921501",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "Which company developed both Dart and Go?",
    "SerialNumber": "2904",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/Go_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri . }",
    "entity mapping": [
      {
        "label": "Dart",
        "uri": "http://dbpedia.org/resource/Dart_(programming_language)"
      },
      {
        "label": "Go",
        "uri": "http://dbpedia.org/resource/Go_(programming_language)"
      }
    ],
    "id": "4f48838e3be94cb18dedb19550dae9de",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Georg Meissner was doctoral supervisor of which scientist ?",
    "SerialNumber": "2905",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Georg Meissner",
        "uri": "http://dbpedia.org/resource/Georg_Meissner"
      }
    ],
    "id": "4b6587fe43824a6385cac583915ac1cc",
    "predicate mapping": [
      {
        "label": "doctoral supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Which city near Nihoa is the place of death of jim Brady ?",
    "SerialNumber": "2907",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nihoa> <http://dbpedia.org/property/nearestCity> ?uri. <http://dbpedia.org/resource/Jim_Brady_(quarterback)> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Nihoa",
        "uri": "http://dbpedia.org/resource/Nihoa"
      },
      {
        "label": "jim Brady",
        "uri": "http://dbpedia.org/resource/Jim_Brady_(quarterback)"
      }
    ],
    "id": "723b13ce8be84e718d521789fae00823",
    "predicate mapping": [
      {
        "label": "near city",
        "uri": "http://dbpedia.org/property/nearestCity"
      },
      {
        "label": "place death",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "List the people who were the first one to climb a mountain in California?",
    "SerialNumber": "2908",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "f581bcd6971a4e1b85ef5da858b30163",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "Who are the local authority of Buckhurst Hill County High School ?",
    "SerialNumber": "2910",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri } ",
    "entity mapping": [
      {
        "label": "Buckhurst Hill County High School",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School"
      }
    ],
    "id": "5b08973e5ea1470fb3ce5ac04de8c3d6",
    "predicate mapping": [
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "Which peak was first scaled by Krzysztof Wielicki?",
    "SerialNumber": "2911",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Krzysztof_Wielicki> } ",
    "entity mapping": [
      {
        "label": "Krzysztof Wielicki",
        "uri": "http://dbpedia.org/resource/Krzysztof_Wielicki"
      }
    ],
    "id": "ef0ebaaa120f45e8a4db2e06afd28d56",
    "predicate mapping": [
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "What teams have Avangard Omsk\u0027s players played for?",
    "SerialNumber": "2914",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/playedFor> <http://dbpedia.org/resource/Avangard_Omsk> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
    "entity mapping": [
      {
        "label": "Avangard Omsk",
        "uri": "http://dbpedia.org/resource/Avangard_Omsk"
      }
    ],
    "id": "38d02dcbf93a42ab8f3f03c2a8c8f30b",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "What is the location country of Teperberg 1870 ?",
    "SerialNumber": "2915",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teperberg_1870> <http://dbpedia.org/property/locationCountry> ?uri } ",
    "entity mapping": [
      {
        "label": "Teperberg 1870",
        "uri": "http://dbpedia.org/resource/Teperberg_1870"
      }
    ],
    "id": "16a0b3c7cec84354940128b8d6b555b0",
    "predicate mapping": [
      {
        "label": "location country",
        "uri": "http://dbpedia.org/property/locationCountry"
      }
    ]
  },
  {
    "question": "Name the rivers in the hudson highlands state parts?",
    "SerialNumber": "2916",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hudson_Highlands_State_Park> <http://dbpedia.org/property/river> ?uri } ",
    "entity mapping": [
      {
        "label": "hudson highlands state part",
        "uri": "http://dbpedia.org/resource/Hudson_Highlands_State_Park"
      }
    ],
    "id": "d241c139de3a4bc08b233c5dcd18e3b7",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/property/river"
      }
    ]
  },
  {
    "question": "Is Ingo Steuer the formercoach of Stanislav Morozov?",
    "SerialNumber": "2917",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanislav_Morozov> <http://dbpedia.org/property/formercoach> <http://dbpedia.org/resource/Ingo_Steuer> }",
    "entity mapping": [
      {
        "label": "Stanislav Morozov",
        "uri": "http://dbpedia.org/resource/Stanislav_Morozov"
      },
      {
        "label": "Ingo Steuer",
        "uri": "http://dbpedia.org/resource/Ingo_Steuer"
      }
    ],
    "id": "6e4e6be9a3bd45b187c37dd99ee4284c",
    "predicate mapping": [
      {
        "label": "formercoach",
        "uri": "http://dbpedia.org/property/formercoach"
      }
    ]
  },
  {
    "question": "How many cars can I find related to the cars which have a V8 engine?",
    "SerialNumber": "2918",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/V8_engine> . ?x <http://dbpedia.org/property/related> ?uri  . }",
    "entity mapping": [
      {
        "label": "V8 engine",
        "uri": "http://dbpedia.org/resource/V8_engine"
      }
    ],
    "id": "4c7eac160c0d49c49f815792513f1c21",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/related"
      }
    ]
  },
  {
    "question": "Which destinations of the Air 2000 is also the location continent of the Falken Tire ?",
    "SerialNumber": "2919",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri. <http://dbpedia.org/resource/Falken_Tire> <http://dbpedia.org/ontology/locationCountry> ?uri} ",
    "entity mapping": [
      {
        "label": "Air 2000",
        "uri": "http://dbpedia.org/resource/Air_2000"
      },
      {
        "label": "Falken Tire",
        "uri": "http://dbpedia.org/resource/Falken_Tire"
      }
    ],
    "id": "39c73d39a7fb4e7bbf4b1b656e76ee22",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      }
    ]
  },
  {
    "question": "What show has Sirius XM Holdings and Fox Sports Radio as channels ?",
    "SerialNumber": "2922",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Sirius_XM_Holdings> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Sports_Radio> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Sirius XM Holdings",
        "uri": "http://dbpedia.org/resource/Sirius_XM_Holdings"
      },
      {
        "label": "Fox Sports Radio",
        "uri": "http://dbpedia.org/resource/Fox_Sports_Radio"
      }
    ],
    "id": "b8845f4e32974bfca57abbacda4140bc",
    "predicate mapping": [
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are Breann McGregor and Anika Knudsen, both known for?",
    "SerialNumber": "2923",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri. <http://dbpedia.org/resource/Anika_Knudsen> <http://dbpedia.org/property/knownFor> ?uri . }",
    "entity mapping": [
      {
        "label": "Breann McGregor",
        "uri": "http://dbpedia.org/resource/Breann_McGregor"
      },
      {
        "label": "Anika Knudsen",
        "uri": "http://dbpedia.org/resource/Anika_Knudsen"
      }
    ],
    "id": "404f0de8f6fe44649c68a7f991618244",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "List the movies produced by Michael Deeley ?",
    "SerialNumber": "2925",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "uri": "http://dbpedia.org/resource/Michael_Deeley"
      }
    ],
    "id": "ada933daf3c04f8093383e9131a06d2f",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "In which state is the team, which has John Roeslein?",
    "SerialNumber": "2930",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_Roeslein> <http://dbpedia.org/ontology/team> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }",
    "entity mapping": [
      {
        "label": "John Roeslein",
        "uri": "http://dbpedia.org/resource/John_Roeslein"
      }
    ],
    "id": "41d0346f044a40d4b92151328c691244",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "Which sport at Polytechnic University of the Philippines Taguig is the field of Jon speelman ?",
    "SerialNumber": "2932",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "Jon speelman",
        "uri": "http://dbpedia.org/resource/Jon_Speelman"
      },
      {
        "label": "Polytechnic University of the Philippines Taguig",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig"
      }
    ],
    "id": "afe5031d98294f048dbf9373e03f719b",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Which senator served in military units VMF-155 and VMF-218?",
    "SerialNumber": "2934",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-218> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "entity mapping": [
      {
        "label": "VMF-155",
        "uri": "http://dbpedia.org/resource/VMF-155"
      },
      {
        "label": "VMF-218",
        "uri": "http://dbpedia.org/resource/VMF-218"
      }
    ],
    "id": "8c4f8820a2574a60b70e80603a9af302",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator"
      }
    ]
  },
  {
    "question": "How many members are there of the organization headquartered at Amstelveen?",
    "SerialNumber": "2935",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Amstelveen> . ?x <http://dbpedia.org/property/membership> ?uri  . }",
    "entity mapping": [
      {
        "label": "Amstelveen",
        "uri": "http://dbpedia.org/resource/Amstelveen"
      }
    ],
    "id": "b895b7cc207c4aab8ca0c0bbf388a9a2",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "Does the Ontario International Airport serve the Inland Empire?",
    "SerialNumber": "2936",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ontario_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Inland_Empire> }",
    "entity mapping": [
      {
        "label": "Ontario International Airport",
        "uri": "http://dbpedia.org/resource/Ontario_International_Airport"
      },
      {
        "label": "Inland Empire",
        "uri": "http://dbpedia.org/resource/Inland_Empire"
      }
    ],
    "id": "1ac63487cbae44b6a9aa9350ab7302de",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/cityServed"
      }
    ]
  },
  {
    "question": "Who is the film director of Alice\u0027s Wonderland ?",
    "SerialNumber": "2940",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice\u0027s_Wonderland> <http://dbpedia.org/ontology/director> ?uri } ",
    "entity mapping": [
      {
        "label": "Alice\u0027s Wonderland",
        "uri": "http://dbpedia.org/resource/Alice\u0027s_Wonderland"
      }
    ],
    "id": "330a20b1b264498c86abcbd8608ab422",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director"
      }
    ]
  },
  {
    "question": "Who is the builder of Estadio Nacional de Costa Rica (2011) ?",
    "SerialNumber": "2941",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <http://dbpedia.org/ontology/builder> ?uri } ",
    "entity mapping": [
      {
        "label": "Estadio Nacional de Costa Rica",
        "uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)"
      }
    ],
    "id": "dbaca158d01d472baadbee2830f573d4",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      }
    ]
  },
  {
    "question": "What is the common award won by Charles LeMaire and Eric Roth",
    "SerialNumber": "2942",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Eric_Roth> <http://dbpedia.org/ontology/award> ?uri} ",
    "entity mapping": [
      {
        "label": "Charles LeMaire",
        "uri": "http://dbpedia.org/resource/Charles_LeMaire"
      },
      {
        "label": "Eric Roth",
        "uri": "http://dbpedia.org/resource/Eric_Roth"
      }
    ],
    "id": "2e30a3d7ccb84d08a52974770eae393f",
    "predicate mapping": [
      {
        "label": "award won",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "award won",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Count the number of first drivers in all the GPs where Mika Hakkinen was a first driver?",
    "SerialNumber": "2944",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/poleDriver> <http://dbpedia.org/resource/Mika_Häkkinen> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RacingDriver>}",
    "entity mapping": [
      {
        "label": "Mika Hakkinen",
        "uri": "http://dbpedia.org/resource/Mika_Häkkinen"
      }
    ],
    "id": "10db28c2f3964aa78fae4f3291f87ec4",
    "predicate mapping": [
      {
        "label": "driver",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver"
      },
      {
        "label": "driver",
        "uri": "http://dbpedia.org/ontology/RacingDriver"
      }
    ]
  },
  {
    "question": "Which river has its roots in Baikal Mountains?",
    "SerialNumber": "2946",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> } ",
    "entity mapping": [
      {
        "label": "Baikal Mountains",
        "uri": "http://dbpedia.org/resource/Baikal_Mountains"
      }
    ],
    "id": "bfffa1add5f64e0285af31cba61b8114",
    "predicate mapping": [
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      }
    ]
  },
  {
    "question": "Which musical artist collaborated with Tony Allen (musician) and label is Victor Entertainment?",
    "SerialNumber": "2953",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Tony Allen (musician)",
        "uri": "http://dbpedia.org/resource/Tony_Allen_(musician)"
      },
      {
        "label": "Victor Entertainment",
        "uri": "http://dbpedia.org/resource/Victor_Entertainment"
      }
    ],
    "id": "e776aeb7245e4e648fb5d4c4b61dbad6",
    "predicate mapping": [
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "What is the total number of regions served by the companies which also serves Australia?",
    "SerialNumber": "2955",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia> . ?x <http://dbpedia.org/ontology/regionServed> ?uri }",
    "entity mapping": [
      {
        "label": "Australia",
        "uri": "http://dbpedia.org/resource/Australia"
      }
    ],
    "id": "fbc34fb8d1464bec93cab57479d2ee9e",
    "predicate mapping": [
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      }
    ]
  },
  {
    "question": "Whose children are married to Fredric Joliot-Curie?",
    "SerialNumber": "2956",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Frédéric_Joliot-Curie> . ?uri <http://dbpedia.org/property/children> ?x  . }",
    "entity mapping": [
      {
        "label": "Fredric Joliot-Curie",
        "uri": "http://dbpedia.org/resource/Frédéric_Joliot-Curie"
      }
    ],
    "id": "57f94e194bbf47d2bc8df0b967c56d74",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      }
    ]
  },
  {
    "question": "Count the number of important works done by the writers of The Second Coming?",
    "SerialNumber": "2957",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Second_Coming_(TV_serial)> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Second Coming",
        "uri": "http://dbpedia.org/resource/The_Second_Coming_(TV_serial)"
      }
    ],
    "id": "e2ec831eeb1f4e64a787efc386939af6",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "Who is the composer of Girl from the North Country ?",
    "SerialNumber": "2958",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri } ",
    "entity mapping": [
      {
        "label": "Girl from the North Country",
        "uri": "http://dbpedia.org/resource/Girl_from_the_North_Country"
      }
    ],
    "id": "b82af01a7505419ea2a82b7f08f96650",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/composer"
      }
    ]
  },
  {
    "question": "who owns the ship Victoria?",
    "SerialNumber": "2959",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Victoria_(ship)> <http://dbpedia.org/ontology/owner> ?uri } ",
    "entity mapping": [
      {
        "label": "Victoria",
        "uri": "http://dbpedia.org/resource/Victoria_(ship)"
      }
    ],
    "id": "ba2effd8c834439e8eaf7dbfdf385fa5",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "What is the base currency of the Benelux and is also used as money in Kerguelen Islands?",
    "SerialNumber": "2960",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri. <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri} ",
    "entity mapping": [
      {
        "label": "Benelux",
        "uri": "http://dbpedia.org/resource/Benelux"
      },
      {
        "label": "Kerguelen Islands",
        "uri": "http://dbpedia.org/resource/Kerguelen_Islands"
      }
    ],
    "id": "1c76c6e7767f4aaf90c5a8e69371517f",
    "predicate mapping": [
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/property/currency"
      },
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "List the places where the relatives of Mark Donaldson died ?",
    "SerialNumber": "2962",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mark_Donaldson_(rugby_player)> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mark Donaldson",
        "uri": "http://dbpedia.org/resource/Mark_Donaldson_(rugby_player)"
      }
    ],
    "id": "6f35f83223854b9685bd0d658725f1a7",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Which appointer of the Joseph Clay (Georgia) is also the  President of the William Carmichael (diplomat) ?",
    "SerialNumber": "2963",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Clay_(Georgia)> <http://dbpedia.org/ontology/appointer> ?uri. <http://dbpedia.org/resource/William_Carmichael_(diplomat)> <http://dbpedia.org/property/president> ?uri} ",
    "entity mapping": [
      {
        "label": "Joseph Clay (Georgia)",
        "uri": "http://dbpedia.org/resource/Joseph_Clay_(Georgia)"
      },
      {
        "label": "William Carmichael (diplomat)",
        "uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)"
      }
    ],
    "id": "69c43006a66746dcaf96ba9e7229912c",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/ontology/appointer"
      },
      {
        "label": "President",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "For which teams did Ryan Powell play for?",
    "SerialNumber": "2968",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ryan_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri } ",
    "entity mapping": [
      {
        "label": "Ryan Powell",
        "uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)"
      }
    ],
    "id": "a08a81d7bc32418fa69f9ee7611d119c",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "Name the military units whose command structure\u0027s headquarters is The Pentagon?",
    "SerialNumber": "2970",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/The_Pentagon> . ?uri <http://dbpedia.org/ontology/commandStructure> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "The Pentagon",
        "uri": "http://dbpedia.org/resource/The_Pentagon"
      }
    ],
    "id": "c0f5e4506a7246bd925820748e927766",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "What is the mascot of Celal Bayar University ?",
    "SerialNumber": "2972",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Celal_Bayar_University> <http://dbpedia.org/property/mascot> ?uri } ",
    "entity mapping": [
      {
        "label": "Celal Bayar University",
        "uri": "http://dbpedia.org/resource/Celal_Bayar_University"
      }
    ],
    "id": "05514a08a6864dee82dff5c0b774d1cb",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "How many other ingredient are there in the foods whihh have one of the ingredient as Potato ?",
    "SerialNumber": "2975",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Potato> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }",
    "entity mapping": [
      {
        "label": "Potato",
        "uri": "http://dbpedia.org/resource/Potato"
      }
    ],
    "id": "6ded3670f2964a83a919b06c23de2ba6",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "Who are the founders of Iskra ?",
    "SerialNumber": "2978",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iskra> <http://dbpedia.org/ontology/foundedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "Iskra",
        "uri": "http://dbpedia.org/resource/Iskra"
      }
    ],
    "id": "e670b9053f4948428c08a9c6aa03f7e8",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      }
    ]
  },
  {
    "question": "What is the location country of the bank whose successor is Mauritius Bank ?",
    "SerialNumber": "2979",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Mauritius_Bank> . ?x <http://dbpedia.org/property/locationCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "Mauritius Bank",
        "uri": "http://dbpedia.org/resource/Mauritius_Bank"
      }
    ],
    "id": "67c9424bca4a4f17b443bab40503c9e8",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "location country",
        "uri": "http://dbpedia.org/property/locationCountry"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "Who is the manufacturer of engine of Jeep Forward Control ?",
    "SerialNumber": "2980",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jeep_Forward_Control> <http://dbpedia.org/property/engine> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jeep Forward Control",
        "uri": "http://dbpedia.org/resource/Jeep_Forward_Control"
      }
    ],
    "id": "611a7b738e4741f4af9e5b803c5e3183",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "What sports are played at Vishwajyot High School?",
    "SerialNumber": "2981",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri } ",
    "entity mapping": [
      {
        "label": "Vishwajyot High School",
        "uri": "http://dbpedia.org/resource/Vishwajyot_High_School"
      }
    ],
    "id": "be173cd13f024163b5777d971acdbe58",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Who is the person whose parent is Ptolemy XII Auletes?",
    "SerialNumber": "2982",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ptolemy XII Auletes",
        "uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes"
      }
    ],
    "id": "47c0b19e99344c79b588ce726af7b675",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who are in the board of Jimmy Wales ?",
    "SerialNumber": "2985",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmy_Wales> <http://dbpedia.org/ontology/board> ?uri } ",
    "entity mapping": [
      {
        "label": "Jimmy Wales",
        "uri": "http://dbpedia.org/resource/Jimmy_Wales"
      }
    ],
    "id": "7804405f8cd849a4acb60cf3df9a287c",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "What is the leading party in Baraily which Chandra Shekhar too is associated with?",
    "SerialNumber": "2986",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baraily> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri} ",
    "entity mapping": [
      {
        "label": "Baraily",
        "uri": "http://dbpedia.org/resource/Baraily"
      },
      {
        "label": "Chandra Shekhar",
        "uri": "http://dbpedia.org/resource/Chandra_Shekhar"
      }
    ],
    "id": "e3b7065032d74fe2b8b5956c42315e02",
    "predicate mapping": [
      {
        "label": "leading",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      }
    ]
  },
  {
    "question": "What are the tenants of Mercedes-Benz Superdome?",
    "SerialNumber": "2989",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mercedes-Benz_Superdome> <http://dbpedia.org/ontology/tenant> ?uri } ",
    "entity mapping": [
      {
        "label": "Mercedes-Benz Superdome",
        "uri": "http://dbpedia.org/resource/Mercedes-Benz_Superdome"
      }
    ],
    "id": "a789b3608b9a427f9908d49aed80ea50",
    "predicate mapping": [
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "Was elizabeth ann seton beatified by Pope John XXIII?",
    "SerialNumber": "2990",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elizabeth_Ann_Seton> <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_John_XXIII> }",
    "entity mapping": [
      {
        "label": "elizabeth ann seton",
        "uri": "http://dbpedia.org/resource/Elizabeth_Ann_Seton"
      },
      {
        "label": "Pope John XXIII",
        "uri": "http://dbpedia.org/resource/Pope_John_XXIII"
      }
    ],
    "id": "70f91098717e416c895d2d98eab6355c",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy"
      }
    ]
  },
  {
    "question": "Give me a count of all the producers of all the movies whose music was done by James Horner?",
    "SerialNumber": "2991",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/James_Horner> . ?x <http://dbpedia.org/property/producer> ?uri  . }",
    "entity mapping": [
      {
        "label": "James Horner",
        "uri": "http://dbpedia.org/resource/James_Horner"
      }
    ],
    "id": "1462640075fb4176a9db74b1e76bb1eb",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      }
    ]
  },
  {
    "question": "Name the musical artists whose label is given by Kobalt Label Services?",
    "SerialNumber": "2992",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Kobalt_Label_Services>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Kobalt Label Services",
        "uri": "http://dbpedia.org/resource/Kobalt_Label_Services"
      }
    ],
    "id": "316b176330564acfb5633baade63b8d7",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Count everyone who was in the military unit which is structured like the Marine Aircraft Group 13 ?",
    "SerialNumber": "2993",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commandStructure> <http://dbpedia.org/resource/Marine_Aircraft_Group_13> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }",
    "entity mapping": [
      {
        "label": "Marine Aircraft Group 13",
        "uri": "http://dbpedia.org/resource/Marine_Aircraft_Group_13"
      }
    ],
    "id": "19df3475de1a4ac0acb04e6252268f44",
    "predicate mapping": [
      {
        "label": "structured",
        "uri": "http://dbpedia.org/property/commandStructure"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      }
    ]
  },
  {
    "question": "Which state does Jerome B. Chaffee belong ?",
    "SerialNumber": "2994",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerome_B._Chaffee> <http://dbpedia.org/property/state> ?uri } ",
    "entity mapping": [
      {
        "label": "Jerome B. Chaffee",
        "uri": "http://dbpedia.org/resource/Jerome_B._Chaffee"
      }
    ],
    "id": "f848f4e81e654fe4b04988ba7a828da0",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "Who is the writer of Neverwhere (radio play) ?",
    "SerialNumber": "2997",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neverwhere_(radio_play)> <http://dbpedia.org/ontology/writer> ?uri } ",
    "entity mapping": [
      {
        "label": "Neverwhere (radio play)",
        "uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)"
      }
    ],
    "id": "ec1040a967d34f71a0082b96d8a3a4a1",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      }
    ]
  },
  {
    "question": "What is the musical whose music is by Jose Luis Narom,  based upon?",
    "SerialNumber": "2998",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/José_Luis_Narom> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "Jose Luis Narom",
        "uri": "http://dbpedia.org/resource/José_Luis_Narom"
      }
    ],
    "id": "1715062de00d44c4aefdcff294846af4",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/musicBy"
      },
      {
        "label": "based upon",
        "uri": "http://dbpedia.org/ontology/basedOn"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "List the bacterias whose division is Firmicutes and domain is bacteria?",
    "SerialNumber": "2999",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "entity mapping": [
      {
        "label": "Firmicutes",
        "uri": "http://dbpedia.org/resource/Firmicutes"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/resource/Bacteria"
      }
    ],
    "id": "17069693f36e48c2b403ea5ec4def682",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria"
      }
    ]
  },
  {
    "question": "How many TV shows\u0027 networks are headquarterd in NY?",
    "SerialNumber": "3000",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/resource/New_York"
      }
    ],
    "id": "5536ce539f2548709a11af855d2ca5c5",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "shows\u0027",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the university whose affiliations is Graham Holdings Company?",
    "SerialNumber": "3001",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Graham Holdings Company",
        "uri": "http://dbpedia.org/resource/Graham_Holdings_Company"
      }
    ],
    "id": "78aa880b91524dc297c804a6d91e1682",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Name the basketball player who played for Phoenix Suns and Los Angeles Clippers was his draft team?",
    "SerialNumber": "3003",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns> . ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "Phoenix Suns",
        "uri": "http://dbpedia.org/resource/Phoenix_Suns"
      },
      {
        "label": "Los Angeles Clippers",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Clippers"
      }
    ],
    "id": "30c6fa7e60404d89919aadfe483c66cc",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "Who are the key people of FWD.us?",
    "SerialNumber": "3004",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/FWD.us> <http://dbpedia.org/property/keyPeople> ?uri } ",
    "entity mapping": [
      {
        "label": "FWD.us",
        "uri": "http://dbpedia.org/resource/FWD.us"
      }
    ],
    "id": "50201a37de8648bb9cce96d0b4df557a",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "What is the birth place of the successor of Ella T. Grasso ?",
    "SerialNumber": "3005",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ella_T._Grasso> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ella T. Grasso",
        "uri": "http://dbpedia.org/resource/Ella_T._Grasso"
      }
    ],
    "id": "6780d5fc98994413b8244e37868d361f",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Which country is the birth place of Marcus Samuelsson and Samuel of Waldebba ?",
    "SerialNumber": "3007",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marcus_Samuelsson> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Samuel_of_Waldebba> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Marcus Samuelsson",
        "uri": "http://dbpedia.org/resource/Marcus_Samuelsson"
      },
      {
        "label": "Samuel of Waldebba",
        "uri": "http://dbpedia.org/resource/Samuel_of_Waldebba"
      }
    ],
    "id": "5bf931b59fb94b8c9cf432d2911170df",
    "predicate mapping": [
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "What is the television show whose executive producer is Steven Peterman?",
    "SerialNumber": "3008",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/executiveProducer> <http://dbpedia.org/resource/Steven_Peterman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Steven Peterman",
        "uri": "http://dbpedia.org/resource/Steven_Peterman"
      }
    ],
    "id": "3e1f362c96fe4cc592bfd13bfb855659",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which river\u0027s source place is Gloucestershire and mouth in North Sea?",
    "SerialNumber": "3009",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/North_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Gloucestershire",
        "uri": "http://dbpedia.org/resource/Gloucestershire"
      },
      {
        "label": "North Sea",
        "uri": "http://dbpedia.org/resource/North_Sea"
      }
    ],
    "id": "87a4b9a543cc448e89f2ed926a6144e1",
    "predicate mapping": [
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many schools have a bison as their mascot?",
    "SerialNumber": "3012",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Bison>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "bison",
        "uri": "http://dbpedia.org/resource/Bison"
      }
    ],
    "id": "0f2e35e2a21b45d1a22ba4c50b76c832",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Which institution of the Alton Ochsner is also the alma mater of John Michael Seabright ?",
    "SerialNumber": "3014",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/John_Michael_Seabright> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Alton Ochsner",
        "uri": "http://dbpedia.org/resource/Alton_Ochsner"
      },
      {
        "label": "John Michael Seabright",
        "uri": "http://dbpedia.org/resource/John_Michael_Seabright"
      }
    ],
    "id": "cb7ccfb1dddd4933883fb1176660d821",
    "predicate mapping": [
      {
        "label": "institution",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Who did the person whose predecessor is Arthur Slaght, play for?",
    "SerialNumber": "3015",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Arthur_Slaght> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Arthur Slaght",
        "uri": "http://dbpedia.org/resource/Arthur_Slaght"
      }
    ],
    "id": "176d35f9dad648dea853a6c7b831c5c9",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many ideologies do the political party of Boonchu Rojanastien hold?",
    "SerialNumber": "3017",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Boonchu_Rojanastien> <http://dbpedia.org/property/party> ?x . ?x <http://dbpedia.org/ontology/ideology> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "entity mapping": [
      {
        "label": "Boonchu Rojanastien",
        "uri": "http://dbpedia.org/resource/Boonchu_Rojanastien"
      }
    ],
    "id": "1c8b342278e246f6a44fa8f398c21094",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "ideologies",
        "uri": "http://dbpedia.org/ontology/ideology"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/PoliticalParty"
      }
    ]
  },
  {
    "question": "Who owns a bridge in Boston?",
    "SerialNumber": "3018",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Boston> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Boston",
        "uri": "http://dbpedia.org/resource/Boston"
      }
    ],
    "id": "3227b935ac2943ed9f5433d7109f816f",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Count the different types of Flatbread ?",
    "SerialNumber": "3019",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Flatbread>  . }",
    "entity mapping": [
      {
        "label": "Flatbread",
        "uri": "http://dbpedia.org/resource/Flatbread"
      }
    ],
    "id": "97c00c9886914a6ea5d5a811a4e1b225",
    "predicate mapping": [
      {
        "label": "type",
        "uri": "http://dbpedia.org/ontology/type"
      }
    ]
  },
  {
    "question": "Who is married to Gerard Piqu?",
    "SerialNumber": "3020",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Gerard_Piqué>  . }",
    "entity mapping": [
      {
        "label": "Gerard Piqu?",
        "uri": "http://dbpedia.org/resource/Gerard_Piqué"
      }
    ],
    "id": "543d46f942c04924bcee5a4c54543c6b",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/partner"
      }
    ]
  },
  {
    "question": "Which city near to Elliott Bay was the death place of George F. Moore ?",
    "SerialNumber": "3021",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/George_F._Moore_(lieutenant_governor)> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "Elliott Bay",
        "uri": "http://dbpedia.org/resource/Elliott_Bay"
      },
      {
        "label": "George F. Moore",
        "uri": "http://dbpedia.org/resource/George_F._Moore_(lieutenant_governor)"
      }
    ],
    "id": "a2f49798a84244cd9bf1dd675795ccb7",
    "predicate mapping": [
      {
        "label": "near city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "place death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "The Other Side has hosted how many guests?",
    "SerialNumber": "3023",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)> <http://dbpedia.org/property/guests> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Other Side",
        "uri": "http://dbpedia.org/resource/The_Other_Side_(The_Outer_Limits)"
      }
    ],
    "id": "2165408d4ec94d15a8cd6d639dffcfdc",
    "predicate mapping": [
      {
        "label": "guests",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "What is the deathplace of the rugby player who is the relatives of Anton Oliver ?",
    "SerialNumber": "3024",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Anton_Oliver> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Anton Oliver",
        "uri": "http://dbpedia.org/resource/Anton_Oliver"
      }
    ],
    "id": "96c1a8fa851c4e83b2444ba219f5352b",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "deathplace",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Who have children named James Roosevelt and Franklin Delano Roosevelt, Jr.?",
    "SerialNumber": "3025",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/James_Roosevelt> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.> . }",
    "entity mapping": [
      {
        "label": "James Roosevelt",
        "uri": "http://dbpedia.org/resource/James_Roosevelt"
      },
      {
        "label": "Franklin Delano Roosevelt, Jr.",
        "uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr."
      }
    ],
    "id": "73ba87c4b9fb40ee968f00a20022e04f",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      }
    ]
  },
  {
    "question": "Which scientist advised a doctoral student named Erban Ieica?",
    "SerialNumber": "3026",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Șerban_Țițeica>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Erban Ieica",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica"
      }
    ],
    "id": "9195104b821e430d93b815182ea75c44",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What are the houses of the Parliament Security Services and Parliament of India ?",
    "SerialNumber": "3028",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Parliament_Security_Services> <http://dbpedia.org/property/houses> ?uri. <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> ?uri . }",
    "entity mapping": [
      {
        "label": "Parliament Security Services",
        "uri": "http://dbpedia.org/resource/Parliament_Security_Services"
      },
      {
        "label": "Parliament of India",
        "uri": "http://dbpedia.org/resource/Parliament_of_India"
      }
    ],
    "id": "c84631401cb74a8483377f954e5989cd",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses"
      },
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses"
      }
    ]
  },
  {
    "question": "For which team did both Butch Metzger and Brian Horwitz debuted ? ",
    "SerialNumber": "3030",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Brian_Horwitz> <http://dbpedia.org/ontology/debutTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Butch Metzger",
        "uri": "http://dbpedia.org/resource/Butch_Metzger"
      },
      {
        "label": "Brian Horwitz",
        "uri": "http://dbpedia.org/resource/Brian_Horwitz"
      }
    ],
    "id": "2874d474d7134582be3c5ad5c4600b92",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      }
    ]
  },
  {
    "question": "Name the TV shows with network as NBC and company as Paramount Television ?",
    "SerialNumber": "3031",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "NBC",
        "uri": "http://dbpedia.org/resource/NBC"
      },
      {
        "label": "Paramount Television",
        "uri": "http://dbpedia.org/resource/Paramount_Television"
      }
    ],
    "id": "7c500d33868d4336a446b69df7d357c0",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who has composed songs produced by Terry Melcher?",
    "SerialNumber": "3032",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Terry_Melcher> . ?x <http://dbpedia.org/ontology/composer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
    "entity mapping": [
      {
        "label": "Terry Melcher",
        "uri": "http://dbpedia.org/resource/Terry_Melcher"
      }
    ],
    "id": "5cc4f7f24686439c9c74aa24e81b5414",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/Song"
      }
    ]
  },
  {
    "question": "List down the cinematographers of Mickey\u0027s Mellerdrammer?",
    "SerialNumber": "3033",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri } ",
    "entity mapping": [
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer"
      }
    ],
    "id": "60f077d104bb416caff97689ba8b4506",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography"
      }
    ]
  },
  {
    "question": "Bridge that starts at Seberang Perai crosses over what?",
    "SerialNumber": "3037",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Seberang_Perai> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "entity mapping": [
      {
        "label": "Seberang Perai",
        "uri": "http://dbpedia.org/resource/Seberang_Perai"
      }
    ],
    "id": "dcb880946a53419fbc8f9ae1d09a35be",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "crosses",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "Where was the deadbody discovered of one of the alumni of General Educational Development?",
    "SerialNumber": "3038",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/General_Educational_Development> . ?x <http://dbpedia.org/property/bodyDiscovered> ?uri  . }",
    "entity mapping": [
      {
        "label": "General Educational Development",
        "uri": "http://dbpedia.org/resource/General_Educational_Development"
      }
    ],
    "id": "3a4fadbc37434b5fb38032e9e21e5a9e",
    "predicate mapping": [
      {
        "label": "Education",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "body discovered",
        "uri": "http://dbpedia.org/property/bodyDiscovered"
      }
    ]
  },
  {
    "question": "To which senator did military unit VMF-155 belong?",
    "SerialNumber": "3039",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/VMF-155>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "entity mapping": [
      {
        "label": "VMF-155",
        "uri": "http://dbpedia.org/resource/VMF-155"
      }
    ],
    "id": "cf9cd4c9f5d64639ac21b712b3ead2e4",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator"
      }
    ]
  },
  {
    "question": "What awards did Jos Rivera (playwright) win?",
    "SerialNumber": "3040",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/José_Rivera_(playwright)> <http://dbpedia.org/property/awards> ?uri } ",
    "entity mapping": [
      {
        "label": "Jos Rivera (playwright)",
        "uri": "http://dbpedia.org/resource/José_Rivera_(playwright)"
      }
    ],
    "id": "b063dd30941243b2836623934589c121",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Who discovered Callisto ?",
    "SerialNumber": "3041",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/ontology/discoverer> ?uri } ",
    "entity mapping": [
      {
        "label": "Callisto",
        "uri": "http://dbpedia.org/resource/Callisto_(moon)"
      }
    ],
    "id": "1ec578b785684d0cbde64684ee3c7fbf",
    "predicate mapping": [
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/ontology/discoverer"
      }
    ]
  },
  {
    "question": "Which musical artist associated with Tony Allen has label with Celluloid Records ?",
    "SerialNumber": "3044",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Tony Allen",
        "uri": "http://dbpedia.org/resource/Tony_Allen_(musician)"
      },
      {
        "label": "Celluloid Records",
        "uri": "http://dbpedia.org/resource/Celluloid_Records"
      }
    ],
    "id": "fe996e9ac1574a1aa94ab07621bcc9f4",
    "predicate mapping": [
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Whose labels are Victor Entertainment and Celluloid Records?",
    "SerialNumber": "3045",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Victor_Entertainment> . ?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . }",
    "entity mapping": [
      {
        "label": "Victor Entertainment",
        "uri": "http://dbpedia.org/resource/Victor_Entertainment"
      },
      {
        "label": "Celluloid Records",
        "uri": "http://dbpedia.org/resource/Celluloid_Records"
      }
    ],
    "id": "01b888b9a2c541569160d22ed502b036",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "Where is the tombstone of the parliament members who served with James Roberts as the Vice President, US?",
    "SerialNumber": "3047",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/James_Roberts_(trade_unionist)> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "entity mapping": [
      {
        "label": "James Roberts",
        "uri": "http://dbpedia.org/resource/James_Roberts_(trade_unionist)"
      }
    ],
    "id": "1f6fd444f7bb47f3a2d9b177207bd93b",
    "predicate mapping": [
      {
        "label": "Vice President",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "parliament",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament"
      }
    ]
  },
  {
    "question": "Which school teams are there in schools of Arlington Heights, Illinois?",
    "SerialNumber": "3049",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Arlington_Heights,_Illinois> . ?x <http://dbpedia.org/property/teamName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Arlington Heights, Illinois",
        "uri": "http://dbpedia.org/resource/Arlington_Heights,_Illinois"
      }
    ],
    "id": "333d5cd5059b45d3962c5df06c13b5a8",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/teamName"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "List the academic discipline of the journals whose publisher is SAGE Publications.",
    "SerialNumber": "3053",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/SAGE_Publications> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "SAGE Publications",
        "uri": "http://dbpedia.org/resource/SAGE_Publications"
      }
    ],
    "id": "829a21985c7e487794927252d84f61ea",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      },
      {
        "label": "academic",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "Who is the producer of  Frampton\u0027s Camel ?",
    "SerialNumber": "3055",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frampton\u0027s_Camel> <http://dbpedia.org/property/producer> ?uri } ",
    "entity mapping": [
      {
        "label": "Frampton\u0027s Camel",
        "uri": "http://dbpedia.org/resource/Frampton\u0027s_Camel"
      }
    ],
    "id": "66e01d57a2df4c9f85521c5217cd6e8b",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      }
    ]
  },
  {
    "question": "Who founded the city at the end of the Pittsburgh Line route?",
    "SerialNumber": "3056",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pittsburgh_Line> <http://dbpedia.org/ontology/routeEnd> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }",
    "entity mapping": [
      {
        "label": "Pittsburgh Line",
        "uri": "http://dbpedia.org/resource/Pittsburgh_Line"
      }
    ],
    "id": "77ff380ac54845299a3af128262d754e",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/founder"
      }
    ]
  },
  {
    "question": "How many developers were involved in creating games whose score is composed by Gerard Marino?",
    "SerialNumber": "3057",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gerard Marino",
        "uri": "http://dbpedia.org/resource/Gerard_Marino"
      }
    ],
    "id": "ab9baa98e6fb4a059714923fda2f04d5",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Count the key people of the Clinton Foundation?",
    "SerialNumber": "3060",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Clinton_Foundation> <http://dbpedia.org/property/keyPeople> ?uri  . }",
    "entity mapping": [
      {
        "label": "Clinton Foundation",
        "uri": "http://dbpedia.org/resource/Clinton_Foundation"
      }
    ],
    "id": "7929405db86045639c914a7ee9838ebe",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "Give me someone on the board of trinity house?",
    "SerialNumber": "3061",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House>  . }",
    "entity mapping": [
      {
        "label": "trinity house",
        "uri": "http://dbpedia.org/resource/Trinity_House"
      }
    ],
    "id": "dcf0ebac4929414587aae36086a4e6e1",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "Count  the journals in the field of Philosophy.",
    "SerialNumber": "3062",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "Philosophy",
        "uri": "http://dbpedia.org/resource/Philosophy"
      }
    ],
    "id": "b4c8a3b66e0e4e5f84d3b105133a1a76",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/discipline"
      },
      {
        "label": "journals",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "Which former team of the Harry Parker (baseball) is the  debut team of the Carl Sitton?",
    "SerialNumber": "3063",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Parker_(baseball)> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Carl_Sitton> <http://dbpedia.org/property/debutteam> ?uri} ",
    "entity mapping": [
      {
        "label": "Harry Parker (baseball)",
        "uri": "http://dbpedia.org/resource/Harry_Parker_(baseball)"
      },
      {
        "label": "Carl Sitton",
        "uri": "http://dbpedia.org/resource/Carl_Sitton"
      }
    ],
    "id": "f0b3be48f76141be802e4a2acc00e427",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "Who designed the bridge over the Valaichchenai lagoon?",
    "SerialNumber": "3064",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/crosses> <http://dbpedia.org/resource/Valaichchenai_Lagoon> . ?x <http://dbpedia.org/property/designer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Valaichchenai lagoon",
        "uri": "http://dbpedia.org/resource/Valaichchenai_Lagoon"
      }
    ],
    "id": "8989b26f786b4644a8bd2c8d966c59a7",
    "predicate mapping": [
      {
        "label": "bridge over",
        "uri": "http://dbpedia.org/property/crosses"
      },
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "List all the artist of the TV shows which has McClain as one of the artist ?",
    "SerialNumber": "3065",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/McClain_(band)> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "McClain",
        "uri": "http://dbpedia.org/resource/McClain_(band)"
      }
    ],
    "id": "a82a76ab3a4e43b4b970a48f9341fa82",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which fictional character is portrayed by Roger Barton (film editor)?",
    "SerialNumber": "3066",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Roger Barton (film editor)",
        "uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)"
      }
    ],
    "id": "8a6304978223453caa7f58e579290646",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/property/portrayer"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Name the nearest city to the historic place which has Englewood, Colorado as one of them ?",
    "SerialNumber": "3071",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nearestCity> <http://dbpedia.org/resource/Englewood,_Colorado> . ?x <http://dbpedia.org/ontology/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HistoricPlace>}",
    "entity mapping": [
      {
        "label": "Englewood, Colorado",
        "uri": "http://dbpedia.org/resource/Englewood,_Colorado"
      }
    ],
    "id": "14b649e758114f038de6c1dad6027728",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "historic place",
        "uri": "http://dbpedia.org/ontology/HistoricPlace"
      }
    ]
  },
  {
    "question": "Which area operataed by the South Side Elevated Railroad is also the palce of death of the Sakari Suzuki ?",
    "SerialNumber": "3073",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Sakari_Suzuki> <http://dbpedia.org/property/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "South Side Elevated Railroad",
        "uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad"
      },
      {
        "label": "Sakari Suzuki",
        "uri": "http://dbpedia.org/resource/Sakari_Suzuki"
      }
    ],
    "id": "91aee5e1ffe6462bac764925234764de",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "List all the former partners of the figure skater whose one of the former partner was Andrea poapst ?",
    "SerialNumber": "3076",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/formerPartner> <http://dbpedia.org/resource/Andrea_Poapst> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "entity mapping": [
      {
        "label": "Andrea poapst",
        "uri": "http://dbpedia.org/resource/Andrea_Poapst"
      }
    ],
    "id": "6a4481eea53441dd93ec930653e08be0",
    "predicate mapping": [
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater"
      }
    ]
  },
  {
    "question": "Which band made the song Take me There, and has collaborated with Blayse in the past?",
    "SerialNumber": "3078",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)> <http://dbpedia.org/ontology/musicalBand> ?uri. <http://dbpedia.org/resource/Blayse> <http://dbpedia.org/ontology/associatedBand> ?uri} ",
    "entity mapping": [
      {
        "label": "Take me There",
        "uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_\u0026_Mýa_song)"
      },
      {
        "label": "Blayse",
        "uri": "http://dbpedia.org/resource/Blayse"
      }
    ],
    "id": "9463f20554d74722b20e3d92a0afb024",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "How many have order (taxonomy) as Bacillales and division as Firmicutes are there?",
    "SerialNumber": "3080",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> } ",
    "entity mapping": [
      {
        "label": "Bacillales",
        "uri": "http://dbpedia.org/resource/Bacillales"
      },
      {
        "label": "Firmicutes",
        "uri": "http://dbpedia.org/resource/Firmicutes"
      }
    ],
    "id": "b8635fcc40054be7ab13c01967f64197",
    "predicate mapping": [
      {
        "label": "order (taxonomy)",
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      }
    ]
  },
  {
    "question": "How many have company as Paramount Television and network as NBC are there?",
    "SerialNumber": "3082",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> } ",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "uri": "http://dbpedia.org/resource/Paramount_Television"
      },
      {
        "label": "NBC",
        "uri": "http://dbpedia.org/resource/NBC"
      }
    ],
    "id": "f7ac133498534de782ec5fb02ef8a8f2",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      }
    ]
  },
  {
    "question": "What is the birthplace of the office holder who is the predecessor of Brian Peddle ?",
    "SerialNumber": "3083",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Brian_Peddle> <http://dbpedia.org/property/predecessor> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Brian Peddle",
        "uri": "http://dbpedia.org/resource/Brian_Peddle"
      }
    ],
    "id": "d73d838df73b44d0a6ddab13ae678fc9",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What is the hometown of John Speraw ?",
    "SerialNumber": "3084",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Speraw> <http://dbpedia.org/property/hometown> ?uri } ",
    "entity mapping": [
      {
        "label": "John Speraw",
        "uri": "http://dbpedia.org/resource/John_Speraw"
      }
    ],
    "id": "86f65bd1385144dfb07dd940f6dc77de",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown"
      }
    ]
  },
  {
    "question": "What is the affiliation of Vanderbilt University Medical Center ?",
    "SerialNumber": "3085",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri } ",
    "entity mapping": [
      {
        "label": "Vanderbilt University Medical Center",
        "uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center"
      }
    ],
    "id": "53ffec1f77474312b866a1ef550836ec",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "Which awards has been given to both michel hazanavicius and geoffrey rush?",
    "SerialNumber": "3086",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michel_Hazanavicius> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Geoffrey_Rush> <http://dbpedia.org/property/awards> ?uri . }",
    "entity mapping": [
      {
        "label": "michel hazanavicius",
        "uri": "http://dbpedia.org/resource/Michel_Hazanavicius"
      },
      {
        "label": "geoffrey rush",
        "uri": "http://dbpedia.org/resource/Geoffrey_Rush"
      }
    ],
    "id": "9a35da4952d244529b72c489a452b9d1",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "What is the mascot of the rival school of Sullivan Central High?",
    "SerialNumber": "3087",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sullivan_Central_High_School> <http://dbpedia.org/property/rival> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sullivan Central High",
        "uri": "http://dbpedia.org/resource/Sullivan_Central_High_School"
      }
    ],
    "id": "9f0073c478fd4bf6a6bc808734ee4d21",
    "predicate mapping": [
      {
        "label": "rival",
        "uri": "http://dbpedia.org/property/rival"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "How many airlines have a hub at an airport run by LA World Airports?",
    "SerialNumber": "3089",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Los_Angeles_World_Airports> . ?uri <http://dbpedia.org/ontology/hubAirport> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "LA World Airports",
        "uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports"
      }
    ],
    "id": "9b92048679a944be937dd4f049c925cb",
    "predicate mapping": [
      {
        "label": "at",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "What are the main interests of Timothy Morton?",
    "SerialNumber": "3090",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> ?uri } ",
    "entity mapping": [
      {
        "label": "Timothy Morton",
        "uri": "http://dbpedia.org/resource/Timothy_Morton"
      }
    ],
    "id": "3e2e7e2477ca4d47a63eae5961eb232f",
    "predicate mapping": [
      {
        "label": "main interests",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "Whose network\u0027s parent organisation is Comcast?",
    "SerialNumber": "3091",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Comcast> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
    "entity mapping": [
      {
        "label": "Comcast",
        "uri": "http://dbpedia.org/resource/Comcast"
      }
    ],
    "id": "2c7b634c43f94007bee6aa23f424829c",
    "predicate mapping": [
      {
        "label": "parent organisation",
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      }
    ]
  },
  {
    "question": "List all the locations of the companies whose are also located in Rancho Cucamonga, California ?",
    "SerialNumber": "3092",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/Rancho_Cucamonga,_California> . ?x <http://dbpedia.org/ontology/locationCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Rancho Cucamonga, California",
        "uri": "http://dbpedia.org/resource/Rancho_Cucamonga,_California"
      }
    ],
    "id": "186bdaf5fbc04890bd2dcb3041776050",
    "predicate mapping": [
      {
        "label": "locations",
        "uri": "http://dbpedia.org/property/locationCountry"
      },
      {
        "label": "locations",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the common editor of Easy Street (film) and Work (film)?",
    "SerialNumber": "3093",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Easy_Street_(film)> <http://dbpedia.org/ontology/editing> ?uri. <http://dbpedia.org/resource/Work_(film)> <http://dbpedia.org/ontology/editing> ?uri . }",
    "entity mapping": [
      {
        "label": "Easy Street (film)",
        "uri": "http://dbpedia.org/resource/Easy_Street_(film)"
      },
      {
        "label": "Work (film)",
        "uri": "http://dbpedia.org/resource/Work_(film)"
      }
    ],
    "id": "4fc2bcb888944f50969d6131075914e7",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      }
    ]
  },
  {
    "question": "Which are the television show which have been created by Donald Wilson?",
    "SerialNumber": "3094",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Donald_Wilson_(writer_and_producer)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Donald Wilson",
        "uri": "http://dbpedia.org/resource/Donald_Wilson_(writer_and_producer)"
      }
    ],
    "id": "383f41d0dcfb442f8a4606d5de36ac08",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Whose successors are Robert P. Smith and Adrian A. Basora?",
    "SerialNumber": "3095",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Robert_P._Smith> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . }",
    "entity mapping": [
      {
        "label": "Robert P. Smith",
        "uri": "http://dbpedia.org/resource/Robert_P._Smith"
      },
      {
        "label": "Adrian A. Basora",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora"
      }
    ],
    "id": "5b273f2881264b6f9ad4004f1b82b9f4",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      }
    ]
  },
  {
    "question": "Did Jerry Siegel create Lois Lane?",
    "SerialNumber": "3097",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lois_Lane> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Jerry_Siegel> }",
    "entity mapping": [
      {
        "label": "Lois Lane",
        "uri": "http://dbpedia.org/resource/Lois_Lane"
      },
      {
        "label": "Jerry Siegel",
        "uri": "http://dbpedia.org/resource/Jerry_Siegel"
      }
    ],
    "id": "b7900ed86fb84fd7a7f479831e72bfcb",
    "predicate mapping": [
      {
        "label": "create",
        "uri": "http://dbpedia.org/property/creators"
      }
    ]
  },
  {
    "question": "Which awards did the writer, who is  the creator of Creature Comforts, won ?",
    "SerialNumber": "3098",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Creature_Comforts> <http://dbpedia.org/property/creator> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Creature Comforts",
        "uri": "http://dbpedia.org/resource/Creature_Comforts"
      }
    ],
    "id": "4b03656d18b848c5830c2015fa4a9cdd",
    "predicate mapping": [
      {
        "label": "creator",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Which team did Wilfred McDonalds and Cam Plante play for?",
    "SerialNumber": "3100",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri . }",
    "entity mapping": [
      {
        "label": "Wilfred McDonald",
        "uri": "http://dbpedia.org/resource/Wilfred_McDonald"
      },
      {
        "label": "Cam Plante",
        "uri": "http://dbpedia.org/resource/Cam_Plante"
      }
    ],
    "id": "0ea3f7d690c9488d82d9805a2e705cdc",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "Who is the former partner of the figure skater which was the former partner of Brynn Carman ?",
    "SerialNumber": "3101",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Brynn_Carman> <http://dbpedia.org/ontology/formerPartner> ?x . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "entity mapping": [
      {
        "label": "Brynn Carman",
        "uri": "http://dbpedia.org/resource/Brynn_Carman"
      }
    ],
    "id": "74c48daf3f3e40b8b2a9075494203130",
    "predicate mapping": [
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater"
      }
    ]
  },
  {
    "question": "England is the origin of how many things?",
    "SerialNumber": "3102",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/England>  . }",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "563b1fefc10e4618a5b680d3baa31037",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      }
    ]
  },
  {
    "question": "What is the common debut team of the Butch Metzger and Dan Otero?",
    "SerialNumber": "3103",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Butch_Metzger> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Dan_Otero> <http://dbpedia.org/ontology/debutTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Butch Metzger",
        "uri": "http://dbpedia.org/resource/Butch_Metzger"
      },
      {
        "label": "Dan Otero",
        "uri": "http://dbpedia.org/resource/Dan_Otero"
      }
    ],
    "id": "2502d9f7189e473992f6091f18a256fe",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      }
    ]
  },
  {
    "question": "What religion is followed by the commander of Defense Security Command?",
    "SerialNumber": "3104",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Defense_Security_Command> <http://dbpedia.org/ontology/notableCommander> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Defense Security Command",
        "uri": "http://dbpedia.org/resource/Defense_Security_Command"
      }
    ],
    "id": "bd1de460e21d4db4bf8e5065934b8bc6",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Where was Al-Muzaffar Umar buried ?",
    "SerialNumber": "3109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al-Muzaffar_Umar> <http://dbpedia.org/property/placeOfBurial> ?uri } ",
    "entity mapping": [
      {
        "label": "Al-Muzaffar Umar",
        "uri": "http://dbpedia.org/resource/Al-Muzaffar_Umar"
      }
    ],
    "id": "e83b9ec4abef418585e8a76f2dae15f4",
    "predicate mapping": [
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      }
    ]
  },
  {
    "question": "Which musical artists have collaborated with Waylon Jennings?",
    "SerialNumber": "3113",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Waylon_Jennings>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Waylon Jennings",
        "uri": "http://dbpedia.org/resource/Waylon_Jennings"
      }
    ],
    "id": "004432a58e614e89a30c84e3df4164e0",
    "predicate mapping": [
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "where did soccer bowl take place in 76?",
    "SerialNumber": "3114",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_\u002776> <http://dbpedia.org/ontology/city> ?uri } ",
    "entity mapping": [
      {
        "label": "soccer bowl",
        "uri": "http://dbpedia.org/resource/Soccer_Bowl_\u002776"
      }
    ],
    "id": "5bc7320186b842359a554f9fe14298dd",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      }
    ]
  },
  {
    "question": "How many movies were cinematographed by Jordan Cronenweth?",
    "SerialNumber": "3116",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Jordan Cronenweth",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth"
      }
    ],
    "id": "443a00fd2e584e189bc1bd31ac97b83f",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/ontology/cinematography"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who is the producer of album which has the song Money?",
    "SerialNumber": "3118",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Money_(Pink_Floyd_song)> <http://dbpedia.org/property/album> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Money",
        "uri": "http://dbpedia.org/resource/Money_(Pink_Floyd_song)"
      }
    ],
    "id": "19d1d7a22c4a4cbc8b813fc291a6142f",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      }
    ]
  },
  {
    "question": "Give me a count of airlines whose hub airport is Los Angeles International Airport?",
    "SerialNumber": "3120",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Los_Angeles_International_Airport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Los Angeles International Airport",
        "uri": "http://dbpedia.org/resource/Los_Angeles_International_Airport"
      }
    ],
    "id": "3d5efd9583804ec4b72267a23374e76c",
    "predicate mapping": [
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Did Alexandre Tichonov study at the Moscow university?",
    "SerialNumber": "3121",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alexandre_Tichonov> <http://dbpedia.org/property/university> <http://dbpedia.org/resource/Moscow> }",
    "entity mapping": [
      {
        "label": "Alexandre Tichonov",
        "uri": "http://dbpedia.org/resource/Alexandre_Tichonov"
      },
      {
        "label": "Moscow university",
        "uri": "http://dbpedia.org/resource/Moscow"
      }
    ],
    "id": "e3a008c553da49fd876ece5a7c775750",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/property/university"
      }
    ]
  },
  {
    "question": "Name the river whose source place is Gloucestershire and mouth place is Southend-on-Sea ?",
    "SerialNumber": "3122",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Gloucestershire",
        "uri": "http://dbpedia.org/resource/Gloucestershire"
      },
      {
        "label": "Southend-on-Sea",
        "uri": "http://dbpedia.org/resource/Southend-on-Sea"
      }
    ],
    "id": "9909bc6ab5e94d539ff2c98c952e5800",
    "predicate mapping": [
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many members are there in the European Go Federation?",
    "SerialNumber": "3123",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/European_Go_Federation> <http://dbpedia.org/property/membership> ?uri  . }",
    "entity mapping": [
      {
        "label": "European Go Federation",
        "uri": "http://dbpedia.org/resource/European_Go_Federation"
      }
    ],
    "id": "1f086bdd8ed24312b65cf9f137499a64",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "Momoko Kchi has acted in which movie ?",
    "SerialNumber": "3124",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Momoko_Kōchi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Momoko Kchi",
        "uri": "http://dbpedia.org/resource/Momoko_Kōchi"
      }
    ],
    "id": "612fd54a14cf4ea1bd327ac4ab6a3475",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "List all the notable works of  Russell T Davies?",
    "SerialNumber": "3125",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri } ",
    "entity mapping": [
      {
        "label": "Russell T Davies",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      }
    ],
    "id": "2380fcd83c494a80927f6825ba436c94",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "How many movies did Michael Deeley produce?",
    "SerialNumber": "3128",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "uri": "http://dbpedia.org/resource/Michael_Deeley"
      }
    ],
    "id": "398001dda0f745a3a783b7916f2b2376",
    "predicate mapping": [
      {
        "label": "produce",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which college of the Luke List (golfer) is the alma mater of the Park Trammell ?",
    "SerialNumber": "3129",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Luke_List_(golfer)> <http://dbpedia.org/property/college> ?uri. <http://dbpedia.org/resource/Park_Trammell> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Luke List",
        "uri": "http://dbpedia.org/resource/Luke_List_(golfer)"
      },
      {
        "label": "Park Trammell",
        "uri": "http://dbpedia.org/resource/Park_Trammell"
      }
    ],
    "id": "f06758ad9c714bf490f784dcceb3ba90",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Spanish harlem incident was composed by whom ?",
    "SerialNumber": "3130",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spanish_Harlem_Incident> <http://dbpedia.org/ontology/composer> ?uri } ",
    "entity mapping": [
      {
        "label": "Spanish harlem incident",
        "uri": "http://dbpedia.org/resource/Spanish_Harlem_Incident"
      }
    ],
    "id": "daa582dfaf1a4472bddfa0b0a4deb1e5",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer"
      }
    ]
  },
  {
    "question": "Count the movies edited by  Mark Stevens (film editor) and were directed by Joel Schumacher?",
    "SerialNumber": "3132",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher> } ",
    "entity mapping": [
      {
        "label": "Mark Stevens (film editor)",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)"
      },
      {
        "label": "Joel Schumacher",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher"
      }
    ],
    "id": "ef08c3edfb5e4c85ba7a33a77a5f0119",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      }
    ]
  },
  {
    "question": "List some songwriters whose work has been recorded in Miami?",
    "SerialNumber": "3134",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Miami> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
    "entity mapping": [
      {
        "label": "Miami",
        "uri": "http://dbpedia.org/resource/Miami"
      }
    ],
    "id": "707d9bdd0d8e44a1bae79286521ce0fc",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Work"
      }
    ]
  },
  {
    "question": "Which fictional character portrayed by Roger barton has Darth Vader as family member ?",
    "SerialNumber": "3135",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Darth_Vader> . ?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Darth Vader",
        "uri": "http://dbpedia.org/resource/Darth_Vader"
      },
      {
        "label": "Roger barton",
        "uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)"
      }
    ],
    "id": "d5c3a119f9f8443584725cba541904f6",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/property/family"
      },
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/property/portrayer"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Elizabeth Alexander and Jared Bernstein served under which Vice President?",
    "SerialNumber": "3136",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)> <http://dbpedia.org/ontology/vicePresident> ?uri. <http://dbpedia.org/resource/Jared_Bernstein> <http://dbpedia.org/ontology/vicePresident> ?uri . }",
    "entity mapping": [
      {
        "label": "Elizabeth Alexander",
        "uri": "http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)"
      },
      {
        "label": "Jared Bernstein",
        "uri": "http://dbpedia.org/resource/Jared_Bernstein"
      }
    ],
    "id": "3375a4f07f5548d1ae047a3fa248dd11",
    "predicate mapping": [
      {
        "label": "Vice President",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      },
      {
        "label": "Vice President",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      }
    ]
  },
  {
    "question": "To which country does Peter Blay owe his allegiance?",
    "SerialNumber": "3137",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Peter_Blay> <http://dbpedia.org/property/allegiance> ?uri } ",
    "entity mapping": [
      {
        "label": "Peter Blay",
        "uri": "http://dbpedia.org/resource/Peter_Blay"
      }
    ],
    "id": "c43db2cba5e24a05bdfa5d77aa3667ed",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      }
    ]
  },
  {
    "question": "Which citys mayor is anne hidalgo?",
    "SerialNumber": "3138",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Anne_Hidalgo>  . }",
    "entity mapping": [
      {
        "label": "anne hidalgo",
        "uri": "http://dbpedia.org/resource/Anne_Hidalgo"
      }
    ],
    "id": "ce5857e30c24478bacad831b90eb559c",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor"
      }
    ]
  },
  {
    "question": "What is the division of Serbia national American football team ?",
    "SerialNumber": "3140",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Serbia_national_American_football_team> <http://dbpedia.org/ontology/division> ?uri } ",
    "entity mapping": [
      {
        "label": "Serbia national American football team",
        "uri": "http://dbpedia.org/resource/Serbia_national_American_football_team"
      }
    ],
    "id": "90065788c32f4906aa5614759fb3917e",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      }
    ]
  },
  {
    "question": "List the regions served by the company which serves in Pacific Ocean ?",
    "SerialNumber": "3145",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Pacific_Ocean> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Pacific Ocean",
        "uri": "http://dbpedia.org/resource/Pacific_Ocean"
      }
    ],
    "id": "22b3592acd354c4d99ea51f040e1cd0f",
    "predicate mapping": [
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who are the biological parents of Dannielynn Birkhead?",
    "SerialNumber": "3146",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dannielynn_Birkhead> <http://dbpedia.org/ontology/parent> ?uri } ",
    "entity mapping": [
      {
        "label": "Dannielynn",
        "uri": "http://dbpedia.org/resource/Dannielynn_Birkhead"
      }
    ],
    "id": "320124cd584843c6908f36b25c0bb181",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      }
    ]
  },
  {
    "question": "Was Morrissey a member of the Smiths?",
    "SerialNumber": "3147",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Smiths> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Morrissey> }",
    "entity mapping": [
      {
        "label": "the Smiths",
        "uri": "http://dbpedia.org/resource/The_Smiths"
      },
      {
        "label": "Morrissey",
        "uri": "http://dbpedia.org/resource/Morrissey"
      }
    ],
    "id": "10c98449b32b44b2bc010f8eb7df50b0",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      }
    ]
  },
  {
    "question": "Who are the producers of Marie Sisters?",
    "SerialNumber": "3148",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marie_Sisters> <http://dbpedia.org/property/producer> ?uri } ",
    "entity mapping": [
      {
        "label": "Marie Sisters",
        "uri": "http://dbpedia.org/resource/Marie_Sisters"
      }
    ],
    "id": "f928abbb8f11455eb05de0b4ec4c82d0",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      }
    ]
  },
  {
    "question": "Give me a count of movies whose music composer is Bernard Herrmann?",
    "SerialNumber": "3150",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Bernard Herrmann",
        "uri": "http://dbpedia.org/resource/Bernard_Herrmann"
      }
    ],
    "id": "587c7b022e6f43c58d30747018299a1f",
    "predicate mapping": [
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the common product of the Apple Productivity Experience Group and services of the 21Vianet ?",
    "SerialNumber": "3152",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/21Vianet> <http://dbpedia.org/property/services> ?uri} ",
    "entity mapping": [
      {
        "label": "Apple Productivity Experience Group",
        "uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group"
      },
      {
        "label": "21Vianet",
        "uri": "http://dbpedia.org/resource/21Vianet"
      }
    ],
    "id": "eb14dd948f6f4df8b68c0a0f036a8957",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "List the comic characters created by Joe Shuster ?",
    "SerialNumber": "3153",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Joe_Shuster>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "entity mapping": [
      {
        "label": "Joe Shuster",
        "uri": "http://dbpedia.org/resource/Joe_Shuster"
      }
    ],
    "id": "e1e158c4b3c5462c9f9254f77b33ebde",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter"
      }
    ]
  },
  {
    "question": "Name the sovereign state of Wallington railway station ?",
    "SerialNumber": "3154",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wallington_railway_station> <http://dbpedia.org/ontology/country> ?uri } ",
    "entity mapping": [
      {
        "label": "Wallington railway station",
        "uri": "http://dbpedia.org/resource/Wallington_railway_station"
      }
    ],
    "id": "09b5ed743c6440648ec7e00b30bbeb60",
    "predicate mapping": [
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Which TV show\u0027s theme was composed by a band in which Todd Huth used to perform?",
    "SerialNumber": "3155",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Todd_Huth> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Todd Huth",
        "uri": "http://dbpedia.org/resource/Todd_Huth"
      }
    ],
    "id": "295609af44de49ffadaa466cfbfbc719",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where is the main ground of soccer seasons whose chairman is Ronaldo?",
    "SerialNumber": "3157",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Ronaldo> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "entity mapping": [
      {
        "label": "Ronaldo",
        "uri": "http://dbpedia.org/resource/Ronaldo"
      }
    ],
    "id": "fb9f45d8a2c24892b3e90b56c7fe8b34",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground"
      },
      {
        "label": "soccer",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason"
      }
    ]
  },
  {
    "question": "Which destination of the Novair International Airway is the source origin of Spaghetti squash ?",
    "SerialNumber": "3159",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri. <http://dbpedia.org/resource/Spaghetti_squash> <http://dbpedia.org/ontology/origin> ?uri} ",
    "entity mapping": [
      {
        "label": "Novair International Airway ",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways"
      },
      {
        "label": "Spaghetti squash",
        "uri": "http://dbpedia.org/resource/Spaghetti_squash"
      }
    ],
    "id": "63f44ae612544346aa0fe59e52be8806",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "Who all have been canonized by Pope Paul VI",
    "SerialNumber": "3160",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Paul_VI> } ",
    "entity mapping": [
      {
        "label": "Paul VI",
        "uri": "http://dbpedia.org/resource/Pope_Paul_VI"
      }
    ],
    "id": "86de244495ad4682bba72845f387f090",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy"
      }
    ]
  },
  {
    "question": "Who are the parent  of the people that  has POD as Redding, Connecticut ?",
    "SerialNumber": "3161",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Redding,_Connecticut> . ?x <http://dbpedia.org/ontology/parent> ?uri  . }",
    "entity mapping": [
      {
        "label": "Redding, Connecticut",
        "uri": "http://dbpedia.org/resource/Redding,_Connecticut"
      }
    ],
    "id": "f51a76363b8a4f4289af2e25cf5ae7c5",
    "predicate mapping": [
      {
        "label": "POD",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      }
    ]
  },
  {
    "question": "What religion did the spouse of Richie Aprile follow?",
    "SerialNumber": "3163",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Richie_Aprile> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Richie Aprile",
        "uri": "http://dbpedia.org/resource/Richie_Aprile"
      }
    ],
    "id": "06cd798687b746528a43245de0c8ab00",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Who developed games based on the Cars series?",
    "SerialNumber": "3169",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Cars_(film)> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Cars",
        "uri": "http://dbpedia.org/resource/Cars_(film)"
      }
    ],
    "id": "ccd5a59625d24531920a585c93e208e3",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/series"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Give me the count of artist in the company whose Artist is Jean- François Coté ?",
    "SerialNumber": "3173",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Jean-François_Coté> . ?x <http://dbpedia.org/property/artist> ?uri }",
    "entity mapping": [
      {
        "label": "Jean - François Coté",
        "uri": "http://dbpedia.org/resource/Jean-François_Coté"
      }
    ],
    "id": "e0d8fe804adf4feab999453c822c20e4",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "How many universities are located in a country led by Olemic Thommessen?",
    "SerialNumber": "3174",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Olemic_Thommessen> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Olemic Thommessen",
        "uri": "http://dbpedia.org/resource/Olemic_Thommessen"
      }
    ],
    "id": "53137c944cee49bea72f3c3542173081",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "To which family does korean fox belongs to ?",
    "SerialNumber": "3177",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_fox> <http://dbpedia.org/ontology/family> ?uri } ",
    "entity mapping": [
      {
        "label": "korean fox",
        "uri": "http://dbpedia.org/resource/Korean_fox"
      }
    ],
    "id": "26da9117036746eaa136ee24f55908f5",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "Who is the compiler of British Gazette whose prime minister is also Peter Thorneycroft ?",
    "SerialNumber": "3179",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri. <http://dbpedia.org/resource/Peter_Thorneycroft> <http://dbpedia.org/property/primeminister> ?uri} ",
    "entity mapping": [
      {
        "label": "British Gazette",
        "uri": "http://dbpedia.org/resource/British_Gazette"
      },
      {
        "label": "Peter Thorneycroft",
        "uri": "http://dbpedia.org/resource/Peter_Thorneycroft"
      }
    ],
    "id": "30f137f544404a14b30465f5c542a71c",
    "predicate mapping": [
      {
        "label": "compiler",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "What is the route end of NorthSouth Transport Corridor ?",
    "SerialNumber": "3180",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North–South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri } ",
    "entity mapping": [
      {
        "label": "NorthSouth Transport Corridor",
        "uri": "http://dbpedia.org/resource/North–South_Transport_Corridor"
      }
    ],
    "id": "aaa9ab64e1524e34b7451782aca41736",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "What are the musical performances whose label is Celluloid Records?",
    "SerialNumber": "3184",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records>  . }",
    "entity mapping": [
      {
        "label": "Celluloid Records",
        "uri": "http://dbpedia.org/resource/Celluloid_Records"
      }
    ],
    "id": "3816603ac6fd4377a4f32806c3821255",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "To which company is Michael Dell a father company? ",
    "SerialNumber": "3185",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Michael_Dell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Michael Dell",
        "uri": "http://dbpedia.org/resource/Michael_Dell"
      }
    ],
    "id": "df9d1c5e29c84fbe86c5e6135265ba82",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the common region of the braod cast area of ITV and nationality of Ajahn Thate ?",
    "SerialNumber": "3187",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/broadcastArea> ?uri. <http://dbpedia.org/resource/Ajahn_Thate> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "ITV",
        "uri": "http://dbpedia.org/resource/ITV_(Thailand)"
      },
      {
        "label": "Ajahn Thate",
        "uri": "http://dbpedia.org/resource/Ajahn_Thate"
      }
    ],
    "id": "980685643c634f59b6a8c2114e5f6b75",
    "predicate mapping": [
      {
        "label": "cast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What work has been directed by Orson Welles and distributed by  RKO Pictures?",
    "SerialNumber": "3191",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
    "entity mapping": [
      {
        "label": "Orson Welles",
        "uri": "http://dbpedia.org/resource/Orson_Welles"
      },
      {
        "label": "RKO Pictures",
        "uri": "http://dbpedia.org/resource/RKO_Pictures"
      }
    ],
    "id": "0551936fa2424f109acea056733b00bf",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Work"
      }
    ]
  },
  {
    "question": "Was andy warhol a part of Pop Art movement?",
    "SerialNumber": "3192",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Andy_Warhol> <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Pop_art> }",
    "entity mapping": [
      {
        "label": "andy warhol",
        "uri": "http://dbpedia.org/resource/Andy_Warhol"
      },
      {
        "label": "Pop Art",
        "uri": "http://dbpedia.org/resource/Pop_art"
      }
    ],
    "id": "3668ef04a8a54a4b8d0c17338d67b95a",
    "predicate mapping": [
      {
        "label": "movement",
        "uri": "http://dbpedia.org/property/movement"
      }
    ]
  },
  {
    "question": "Which nearest city of LoDaisKa Site is also the location of Oskar Blues Brewery ?",
    "SerialNumber": "3194",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/Oskar_Blues_Brewery> <http://dbpedia.org/property/location> ?uri} ",
    "entity mapping": [
      {
        "label": "LoDaisKa Site",
        "uri": "http://dbpedia.org/resource/LoDaisKa_Site"
      },
      {
        "label": "Oskar Blues Brewery",
        "uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery"
      }
    ],
    "id": "8146bc4b31d649cf8c5a1f34417b8be4",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "What city is the place of birth of Alexander Morozevich which is also the official residence of Dmitri Nossov ?",
    "SerialNumber": "3195",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alexander_Morozevich> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Dmitri_Nossov> <http://dbpedia.org/property/residence> ?uri} ",
    "entity mapping": [
      {
        "label": "Alexander Morozevich",
        "uri": "http://dbpedia.org/resource/Alexander_Morozevich"
      },
      {
        "label": "Dmitri Nossov",
        "uri": "http://dbpedia.org/resource/Dmitri_Nossov"
      }
    ],
    "id": "6b924d982c704745af8ea66d7f15e044",
    "predicate mapping": [
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "What is that show whose theme was composed by Joel Goodman?",
    "SerialNumber": "3198",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Joel_Goodman> . ?x <http://dbpedia.org/property/showName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Joel Goodman",
        "uri": "http://dbpedia.org/resource/Joel_Goodman"
      }
    ],
    "id": "14307a9d57c5428a9076bc5d123a7434",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/property/showName"
      },
      {
        "label": "show is",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the academic discipline of Journal of Cerebral Blood Flow \u0026 Metabolism ?",
    "SerialNumber": "3199",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> ?uri } ",
    "entity mapping": [
      {
        "label": "Journal of Cerebral Blood Flow \u0026 Metabolism",
        "uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_\u0026_Metabolism"
      }
    ],
    "id": "ced7ff32a8304b9f8c8ae77c3386bdc0",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      }
    ]
  },
  {
    "question": "What are some gymnasts coached by Amanda Reddin?",
    "SerialNumber": "3201",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Amanda_Reddin>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Gymnast>}",
    "entity mapping": [
      {
        "label": "Amanda Reddin",
        "uri": "http://dbpedia.org/resource/Amanda_Reddin"
      }
    ],
    "id": "d33e78b19afd4676bd77c8ed990b9982",
    "predicate mapping": [
      {
        "label": "coached",
        "uri": "http://dbpedia.org/property/headcoach"
      },
      {
        "label": "gymnast",
        "uri": "http://dbpedia.org/ontology/Gymnast"
      }
    ]
  },
  {
    "question": "Which TV show whose theme is composed by someone signed up with ATO records?",
    "SerialNumber": "3203",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/ATO_Records> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "ATO records",
        "uri": "http://dbpedia.org/resource/ATO_Records"
      }
    ],
    "id": "b32f0ffff06741eab6c71835a504396d",
    "predicate mapping": [
      {
        "label": "records",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which gadgets are made by companies of New Taipei City?",
    "SerialNumber": "3204",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/New_Taipei_City> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "entity mapping": [
      {
        "label": "New Taipei City",
        "uri": "http://dbpedia.org/resource/New_Taipei_City"
      }
    ],
    "id": "0467f0dd444c4584994587e88693f8e9",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/locationCity"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "What are the universities where athletics is regulated by National Collegiate Athletic Association?",
    "SerialNumber": "3207",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association"
      }
    ],
    "id": "84b711ae9a0341ab8a7187c256dfcd33",
    "predicate mapping": [
      {
        "label": "athletics",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Was Don\u0027t Bring Me Down recorded in West Germany?",
    "SerialNumber": "3209",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Don\u0027t_Bring_Me_Down> <http://dbpedia.org/property/recorded> <http://dbpedia.org/resource/West_Germany> }",
    "entity mapping": [
      {
        "label": "Don\u0027t Bring Me Down",
        "uri": "http://dbpedia.org/resource/Don\u0027t_Bring_Me_Down"
      },
      {
        "label": "West Germany",
        "uri": "http://dbpedia.org/resource/West_Germany"
      }
    ],
    "id": "1ddd01b8170e460bb30fdd9e80c7c495",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "Name the person whose relation is Dee Dee Warwick?",
    "SerialNumber": "3210",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Dee_Dee_Warwick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Dee Dee Warwick",
        "uri": "http://dbpedia.org/resource/Dee_Dee_Warwick"
      }
    ],
    "id": "38300a71b0e74bfaa7606386e0d846b5",
    "predicate mapping": [
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Give the name of the  managers of England national under-20 football team and England national under-21 football team?",
    "SerialNumber": "3213",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-20_football_team> . ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team> . }",
    "entity mapping": [
      {
        "label": "England national under-20 football team",
        "uri": "http://dbpedia.org/resource/England_national_under-20_football_team"
      },
      {
        "label": "England national under-21 football team",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team"
      }
    ],
    "id": "aa39669014fd44328c99e0cd54b58afb",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/property/managerclubs"
      },
      {
        "label": "managers",
        "uri": "http://dbpedia.org/property/managerclubs"
      }
    ]
  },
  {
    "question": "What is the draft team of the ice hockey players whose position is Centre ?",
    "SerialNumber": "3214",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Centre_(ice_hockey)> . ?x <http://dbpedia.org/ontology/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
    "entity mapping": [
      {
        "label": "Centre",
        "uri": "http://dbpedia.org/resource/Centre_(ice_hockey)"
      }
    ],
    "id": "943486aa334042229b3e66696250c698",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/ontology/draftTeam"
      },
      {
        "label": "ice hockey player",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer"
      }
    ]
  },
  {
    "question": "Harry Huston and Dick Spalding played their first match for which team?",
    "SerialNumber": "3215",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harry_Huston> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Dick_Spalding> <http://dbpedia.org/property/debutteam> ?uri . }",
    "entity mapping": [
      {
        "label": "Harry Huston",
        "uri": "http://dbpedia.org/resource/Harry_Huston"
      },
      {
        "label": "Dick Spalding",
        "uri": "http://dbpedia.org/resource/Dick_Spalding"
      }
    ],
    "id": "afa75d6b6d03454f9b688dd0080985fb",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "What are some neighboring cities of cologny?",
    "SerialNumber": "3217",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny>  . }",
    "entity mapping": [
      {
        "label": "cologny",
        "uri": "http://dbpedia.org/resource/Cologny"
      }
    ],
    "id": "cab0c79d0f10458ca8a01d1facfdbced",
    "predicate mapping": [
      {
        "label": "neighboring",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      }
    ]
  },
  {
    "question": "Whose relatives are Uncle Henry (Oz) and Aunt Em?",
    "SerialNumber": "3218",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Aunt_Em> . }",
    "entity mapping": [
      {
        "label": "Uncle Henry (Oz)",
        "uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)"
      },
      {
        "label": "Aunt Em",
        "uri": "http://dbpedia.org/resource/Aunt_Em"
      }
    ],
    "id": "69451801bb474b41ae95ff1273c0b4d2",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "Give me the count of interests of the philosopher whose primary interest is Metaphysics ?",
    "SerialNumber": "3219",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Metaphysics> . ?x <http://dbpedia.org/property/mainInterests> ?uri }",
    "entity mapping": [
      {
        "label": "Metaphysics",
        "uri": "http://dbpedia.org/resource/Metaphysics"
      }
    ],
    "id": "7aa6c46d1605414485fffc097389e224",
    "predicate mapping": [
      {
        "label": "interests",
        "uri": "http://dbpedia.org/property/mainInterests"
      },
      {
        "label": "interests",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "Which ceremonial County of the East Tilbury is also the local authority of the Trinity School, Brentwood?",
    "SerialNumber": "3220",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri. <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
    "entity mapping": [
      {
        "label": "East Tilbury",
        "uri": "http://dbpedia.org/resource/East_Tilbury"
      },
      {
        "label": "Trinity School, Brentwood",
        "uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood"
      }
    ],
    "id": "bf75ca76a0bf455abcdc7d52f38f4686",
    "predicate mapping": [
      {
        "label": "ceremonial County",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty"
      },
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "List the common prime minister of the Robert Ray and graham richardson ?",
    "SerialNumber": "3222",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Ray_(Australian_politician)> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Graham_Richardson> <http://dbpedia.org/ontology/primeMinister> ?uri . }",
    "entity mapping": [
      {
        "label": "Robert Ray",
        "uri": "http://dbpedia.org/resource/Robert_Ray_(Australian_politician)"
      },
      {
        "label": "graham richardson",
        "uri": "http://dbpedia.org/resource/Graham_Richardson"
      }
    ],
    "id": "45920161e8044711a58a25da89962f81",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "Name the television show where Mona Marshall has given voice and is distributed by Comedy Central?",
    "SerialNumber": "3223",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Mona Marshall",
        "uri": "http://dbpedia.org/resource/Mona_Marshall"
      },
      {
        "label": "Comedy Central",
        "uri": "http://dbpedia.org/resource/Comedy_Central"
      }
    ],
    "id": "7529473b5740452abc142ddb60132ef3",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What does the bridge go over, which is in Katima Mulilo?",
    "SerialNumber": "3225",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Katima_Mulilo> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Katima Mulilo",
        "uri": "http://dbpedia.org/resource/Katima_Mulilo"
      }
    ],
    "id": "9d6f9d9b1c1e422e9a87fbf9f54e9197",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "What are the television shows whose distributor is a division of Warner Bros. International TV?",
    "SerialNumber": "3226",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Warner_Bros._International_Television> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Warner Bros. International TV",
        "uri": "http://dbpedia.org/resource/Warner_Bros._International_Television"
      }
    ],
    "id": "e679996aa101404d8a234c41e60c57ae",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/divisions"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which founder of sea Gayle Music is also the judge of Rising Star ?",
    "SerialNumber": "3228",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri. <http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)> <http://dbpedia.org/property/judges> ?uri} ",
    "entity mapping": [
      {
        "label": "sea Gayle Music",
        "uri": "http://dbpedia.org/resource/Sea_Gayle_Music"
      },
      {
        "label": "Rising Star",
        "uri": "http://dbpedia.org/resource/Rising_Star_(U.S._TV_series)"
      }
    ],
    "id": "b7a431005ad44021a254dc1844b76d13",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges"
      }
    ]
  },
  {
    "question": "What city has the football team in which Lee Robinson debuted?",
    "SerialNumber": "3229",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lee_Robinson_(American_football)> <http://dbpedia.org/ontology/debutTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lee Robinson",
        "uri": "http://dbpedia.org/resource/Lee_Robinson_(American_football)"
      }
    ],
    "id": "f2bd28b0ae0d4238b782d5243a20d893",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/locationCity"
      }
    ]
  },
  {
    "question": "Name the award given in Norway and presented by Swedish Academy ?",
    "SerialNumber": "3230",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Swedish_Academy> . ?uri <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Norway>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "Swedish Academy",
        "uri": "http://dbpedia.org/resource/Swedish_Academy"
      },
      {
        "label": "Norway",
        "uri": "http://dbpedia.org/resource/Norway"
      }
    ],
    "id": "f7268d056d044b5a83b553245a5e37fc",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "How many people have been canonized by Pope Benedict XVI?",
    "SerialNumber": "3233",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_Benedict_XVI>  . }",
    "entity mapping": [
      {
        "label": "Pope Benedict XVI",
        "uri": "http://dbpedia.org/resource/Pope_Benedict_XVI"
      }
    ],
    "id": "31834099320540148da2f04b847413ce",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy"
      }
    ]
  },
  {
    "question": "List the total number of awards of the musicals who have won Tony Award?",
    "SerialNumber": "3234",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Tony_Award> . ?x <http://dbpedia.org/property/awards> ?uri }",
    "entity mapping": [
      {
        "label": "Tony Award",
        "uri": "http://dbpedia.org/resource/Tony_Award"
      }
    ],
    "id": "4a746d60634147519a4030473d50732c",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Who is the chancellor of Falmouth University ?",
    "SerialNumber": "3235",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Falmouth_University> <http://dbpedia.org/property/chancellor> ?uri } ",
    "entity mapping": [
      {
        "label": "Falmouth University",
        "uri": "http://dbpedia.org/resource/Falmouth_University"
      }
    ],
    "id": "4c46eefb71c64a1ba553158813943097",
    "predicate mapping": [
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor"
      }
    ]
  },
  {
    "question": "What are the binomial authority of Menetries\u0027s warbler?",
    "SerialNumber": "3237",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menetries\u0027s_warbler> <http://dbpedia.org/ontology/binomialAuthority> ?uri } ",
    "entity mapping": [
      {
        "label": "Menetries\u0027s warbler",
        "uri": "http://dbpedia.org/resource/Menetries\u0027s_warbler"
      }
    ],
    "id": "4f3bdd919e6d4880be68979047b407dc",
    "predicate mapping": [
      {
        "label": "binomial authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      }
    ]
  },
  {
    "question": "Does Sonny Bill Williams belong in the Canterbury Bankstown Bulldogs club?",
    "SerialNumber": "3238",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sonny_Bill_Williams> <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Canterbury-Bankstown_Bulldogs> }",
    "entity mapping": [
      {
        "label": "Sonny Bill Williams",
        "uri": "http://dbpedia.org/resource/Sonny_Bill_Williams"
      },
      {
        "label": "Canterbury Bankstown Bulldogs",
        "uri": "http://dbpedia.org/resource/Canterbury-Bankstown_Bulldogs"
      }
    ],
    "id": "000f216ee4234a449366505231378897",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club"
      }
    ]
  },
  {
    "question": "Humes High School is alma mater to which person?",
    "SerialNumber": "3241",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Humes_High_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Humes High School",
        "uri": "http://dbpedia.org/resource/Humes_High_School"
      }
    ],
    "id": "99bb100d636f41afa90e89897f1a45f9",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the birth place of music artists which were associated with Albert Ayler ?",
    "SerialNumber": "3242",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Albert_Ayler> <http://dbpedia.org/property/associatedActs> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Albert Ayler",
        "uri": "http://dbpedia.org/resource/Albert_Ayler"
      }
    ],
    "id": "8cfa18c8ce664564a067feacf22a384e",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "List all the houses of United States Congress ?",
    "SerialNumber": "3244",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_Congress> <http://dbpedia.org/property/houses> ?uri } ",
    "entity mapping": [
      {
        "label": "United States Congress",
        "uri": "http://dbpedia.org/resource/United_States_Congress"
      }
    ],
    "id": "b03177d39e1c4d88be790e3782f841b9",
    "predicate mapping": [
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses"
      }
    ]
  },
  {
    "question": "Mota Engil built bridges over which rivers?",
    "SerialNumber": "3246",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/builder> <http://dbpedia.org/resource/Mota-Engil> . ?x <http://dbpedia.org/ontology/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Mota Engil",
        "uri": "http://dbpedia.org/resource/Mota-Engil"
      }
    ],
    "id": "441c7a0159b046ba94bec61882574380",
    "predicate mapping": [
      {
        "label": "built",
        "uri": "http://dbpedia.org/property/builder"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/ontology/crosses"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Which television show \u0027s producer is Stephen E. Ambrose and written by Erik Jendresen?",
    "SerialNumber": "3247",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Stephen E. Ambrose",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose"
      },
      {
        "label": "Erik Jendresen",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen"
      }
    ],
    "id": "aa4776a47306400884ee92fe3a010fed",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which university provides license for WRVU ?",
    "SerialNumber": "3248",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri } ",
    "entity mapping": [
      {
        "label": "WRVU",
        "uri": "http://dbpedia.org/resource/WRVU"
      }
    ],
    "id": "6912db9bbb7f4886ab6ecf4dc2bc15ed",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/licensee"
      }
    ]
  },
  {
    "question": "What is the area of Tar Heel Sports Network ?",
    "SerialNumber": "3251",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tar_Heel_Sports_Network> <http://dbpedia.org/property/area> ?uri } ",
    "entity mapping": [
      {
        "label": "Tar Heel Sports Network",
        "uri": "http://dbpedia.org/resource/Tar_Heel_Sports_Network"
      }
    ],
    "id": "099f8973922c4781bdf4854d70c385f9",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      }
    ]
  },
  {
    "question": "What is the alma mater of the scientists  known for  String theory?",
    "SerialNumber": "3252",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/String_theory> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "String theory",
        "uri": "http://dbpedia.org/resource/String_theory"
      }
    ],
    "id": "92db7b7d272f443ab8aed456c783d7d4",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "List the party of the office holder which also has the affiliation with Congress Socialist party ?",
    "SerialNumber": "3253",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Congress_Socialist_Party> . ?x <http://dbpedia.org/ontology/otherParty> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Congress Socialist party",
        "uri": "http://dbpedia.org/resource/Congress_Socialist_Party"
      }
    ],
    "id": "a3dc84be931049af977eedf2f543e0de",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Whose deputy was Franz von Papen?",
    "SerialNumber": "3255",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Franz_von_Papen> } ",
    "entity mapping": [
      {
        "label": "Franz von Papen",
        "uri": "http://dbpedia.org/resource/Franz_von_Papen"
      }
    ],
    "id": "8e0ff8947d7541bcbd888c8a301c6565",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      }
    ]
  },
  {
    "question": "Gamini Seneviratne and Katyayana are two followers of which religion?",
    "SerialNumber": "3257",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gamini_Seneviratne> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri . }",
    "entity mapping": [
      {
        "label": "Gamini Seneviratne",
        "uri": "http://dbpedia.org/resource/Gamini_Seneviratne"
      },
      {
        "label": "Katyayana",
        "uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)"
      }
    ],
    "id": "9202aee754b8461bbb83aef174429e8a",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Whose artworks are in Sao Paulo Museum of Art?",
    "SerialNumber": "3259",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/São_Paulo_Museum_of_Art> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artwork>}",
    "entity mapping": [
      {
        "label": "Sao Paulo Museum of Art",
        "uri": "http://dbpedia.org/resource/São_Paulo_Museum_of_Art"
      }
    ],
    "id": "a1f6a0f1f36d4e55881ef792f416db91",
    "predicate mapping": [
      {
        "label": "Museum",
        "uri": "http://dbpedia.org/property/museum"
      },
      {
        "label": "art",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "artwork",
        "uri": "http://dbpedia.org/ontology/Artwork"
      }
    ]
  },
  {
    "question": "Through which states does the road go, which has a junction on Keningston Maryland?",
    "SerialNumber": "3260",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/Kensington,_Maryland> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
    "entity mapping": [
      {
        "label": "Keningston Maryland",
        "uri": "http://dbpedia.org/resource/Kensington,_Maryland"
      }
    ],
    "id": "fa31ddfb133a4665a135c025a534bcb1",
    "predicate mapping": [
      {
        "label": "junction",
        "uri": "http://dbpedia.org/ontology/routeJunction"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road"
      }
    ]
  },
  {
    "question": "Who is the music composer of Kenny Dies ?",
    "SerialNumber": "3262",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri } ",
    "entity mapping": [
      {
        "label": "Kenny Dies",
        "uri": "http://dbpedia.org/resource/Kenny_Dies"
      }
    ],
    "id": "23da6d5becd34480952011dd96fec09f",
    "predicate mapping": [
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      }
    ]
  },
  {
    "question": "By what style was Providence Chapel, Charlwood made?",
    "SerialNumber": "3268",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> ?uri } ",
    "entity mapping": [
      {
        "label": "Providence Chapel, Charlwood",
        "uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood"
      }
    ],
    "id": "0f3429d03fd64266b8c2d76addb5c46c",
    "predicate mapping": [
      {
        "label": "style",
        "uri": "http://dbpedia.org/property/style"
      }
    ]
  },
  {
    "question": "Who is the stockholder of Paphos International Airport ?",
    "SerialNumber": "3270",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paphos_International_Airport> <http://dbpedia.org/property/owner> ?uri } ",
    "entity mapping": [
      {
        "label": "Paphos International Airport",
        "uri": "http://dbpedia.org/resource/Paphos_International_Airport"
      }
    ],
    "id": "05c509f7775f4415b2a95b4fcc959d1a",
    "predicate mapping": [
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Did Raymond Picard take birth in Paris?",
    "SerialNumber": "3273",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Raymond_Picard> <http://dbpedia.org/property/birthplace> <http://dbpedia.org/resource/Paris> }",
    "entity mapping": [
      {
        "label": "Raymond Picard",
        "uri": "http://dbpedia.org/resource/Raymond_Picard"
      },
      {
        "label": "Paris",
        "uri": "http://dbpedia.org/resource/Paris"
      }
    ],
    "id": "21531e47046946809137beeadd4af94e",
    "predicate mapping": [
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/birthplace"
      }
    ]
  },
  {
    "question": "What is the region of Lumberjack  ?",
    "SerialNumber": "3275",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lumberjack_100> <http://dbpedia.org/property/region> ?uri } ",
    "entity mapping": [
      {
        "label": "Lumberjack",
        "uri": "http://dbpedia.org/resource/Lumberjack_100"
      }
    ],
    "id": "5e70185ec22f408795bf28e121e68522",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "What were the occupations of Marcus Floyd?",
    "SerialNumber": "3278",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marcus_Floyd> <http://dbpedia.org/ontology/occupation> ?uri } ",
    "entity mapping": [
      {
        "label": "Marcus Floyd",
        "uri": "http://dbpedia.org/resource/Marcus_Floyd"
      }
    ],
    "id": "a882c7c530ad4e7793896fce0ad1adef",
    "predicate mapping": [
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Who is the Pole driver of 1997 Canadian Grand Prix ?",
    "SerialNumber": "3281",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ",
    "entity mapping": [
      {
        "label": "1997 Canadian Grand Prix",
        "uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix"
      }
    ],
    "id": "b65176114e5942798719100f7770c922",
    "predicate mapping": [
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver"
      }
    ]
  },
  {
    "question": "How many different things are used as ingredients in Sweden?",
    "SerialNumber": "3283",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/ingredient> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sweden",
        "uri": "http://dbpedia.org/resource/Sweden"
      }
    ],
    "id": "cb572a08bfb846ecb7dc9de05f273753",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "Who composed the lyrics of Holler If Ya Hear Me ?",
    "SerialNumber": "3286",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)> <http://dbpedia.org/property/lyrics> ?uri } ",
    "entity mapping": [
      {
        "label": "Holler If Ya Hear Me",
        "uri": "http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)"
      }
    ],
    "id": "91074221bb864151921f52c9ff1a71cf",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/property/lyrics"
      }
    ]
  },
  {
    "question": "Which ground of 2016 Fort Lauderdale Strikers season is the palce of birth of Kaitlyn Ashley ?",
    "SerialNumber": "3287",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri. <http://dbpedia.org/resource/Kaitlyn_Ashley> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "2016 Fort Lauderdale Strikers season",
        "uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season"
      },
      {
        "label": "Kaitlyn Ashley",
        "uri": "http://dbpedia.org/resource/Kaitlyn_Ashley"
      }
    ],
    "id": "96205a1584514add8305c933034f1eda",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Under which president did Loretta Ucelli and Ann Lewis hold an office?",
    "SerialNumber": "3289",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Loretta_Ucelli> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Ann_Lewis> <http://dbpedia.org/ontology/president> ?uri . }",
    "entity mapping": [
      {
        "label": "Loretta Ucelli",
        "uri": "http://dbpedia.org/resource/Loretta_Ucelli"
      },
      {
        "label": "Ann Lewis",
        "uri": "http://dbpedia.org/resource/Ann_Lewis"
      }
    ],
    "id": "31066fe6cfb246c7915377ea543a4b7c",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "List the mountains of the range Sierra Nevada (U.S.) located in  California?",
    "SerialNumber": "3292",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Sierra Nevada (U.S.)",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)"
      },
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "b6b8067555af4063906d88b2e32e1a03",
    "predicate mapping": [
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "Where did Marvo originate?",
    "SerialNumber": "3293",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mavro> <http://dbpedia.org/ontology/origin> ?uri } ",
    "entity mapping": [
      {
        "label": "Marvo",
        "uri": "http://dbpedia.org/resource/Mavro"
      }
    ],
    "id": "5c2f6e3d47024e54af60dad2cf684419",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "Whose predecessor had Jenny Macklin as a deputy ?",
    "SerialNumber": "3295",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Jenny_Macklin> . ?uri <http://dbpedia.org/property/predecessor> ?x  . }",
    "entity mapping": [
      {
        "label": "Jenny Macklin",
        "uri": "http://dbpedia.org/resource/Jenny_Macklin"
      }
    ],
    "id": "cbfd34299d434bea9171dd85e9dd79b1",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      }
    ]
  },
  {
    "question": "In which company\u0027s boards does the founder of Bomis sit?",
    "SerialNumber": "3296",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bomis> <http://dbpedia.org/ontology/foundedBy> ?x . ?x <http://dbpedia.org/ontology/board> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bomis",
        "uri": "http://dbpedia.org/resource/Bomis"
      }
    ],
    "id": "0d987dfafc054e8db252832df3e4a7ad",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "How many religion\u0027s commanders have served in the Royal Thai Army?",
    "SerialNumber": "3298",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Royal_Thai_Army> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Royal Thai Army",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army"
      }
    ],
    "id": "39704553a7904c329400eabe0c954ebc",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What is the hub of Wan Air ?",
    "SerialNumber": "3300",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wan_Air> <http://dbpedia.org/property/hubs> ?uri } ",
    "entity mapping": [
      {
        "label": "Wan Air",
        "uri": "http://dbpedia.org/resource/Wan_Air"
      }
    ],
    "id": "eac2d5332100483581f13b166ac29e94",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs"
      }
    ]
  },
  {
    "question": "What is the debut team of Tom O\u0027Malley ?",
    "SerialNumber": "3301",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tom_O\u0027Malley> <http://dbpedia.org/property/debutteam> ?uri } ",
    "entity mapping": [
      {
        "label": "Tom O\u0027Malley",
        "uri": "http://dbpedia.org/resource/Tom_O\u0027Malley"
      }
    ],
    "id": "573d48cf77f14483b1eb9fc6e0f73e90",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "Name  the Pole driver of 1994 Spanish Grand Prix ?",
    "SerialNumber": "3302",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri } ",
    "entity mapping": [
      {
        "label": "1994 Spanish Grand Prix",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix"
      }
    ],
    "id": "c9b163789f6749b0b14437f707eff6da",
    "predicate mapping": [
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver"
      }
    ]
  },
  {
    "question": "Who was the First Driver of 1999 San Marino Grand Prix ?",
    "SerialNumber": "3303",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri } ",
    "entity mapping": [
      {
        "label": "1999 San Marino Grand Prix",
        "uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix"
      }
    ],
    "id": "0f0cefdb4c2e422bbbd46144cb44942e",
    "predicate mapping": [
      {
        "label": "First Driver",
        "uri": "http://dbpedia.org/property/firstDriver"
      }
    ]
  },
  {
    "question": "Is Denver the largest city of Colorado?",
    "SerialNumber": "3304",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Colorado> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Denver> }",
    "entity mapping": [
      {
        "label": "Colorado",
        "uri": "http://dbpedia.org/resource/Colorado"
      },
      {
        "label": "Denver",
        "uri": "http://dbpedia.org/resource/Denver"
      }
    ],
    "id": "fc528bb6de814b2ea1eac7c6438d3c57",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "Which is the largest city of Union State ?",
    "SerialNumber": "3306",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Union State",
        "uri": "http://dbpedia.org/resource/Union_State"
      }
    ],
    "id": "d374ddbebf124204be7f3f2b11d9e633",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity"
      }
    ]
  },
  {
    "question": "Name the capital of Barony of Caux ?",
    "SerialNumber": "3309",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barony_of_Caux> <http://dbpedia.org/ontology/capital> ?uri } ",
    "entity mapping": [
      {
        "label": "Barony of Caux",
        "uri": "http://dbpedia.org/resource/Barony_of_Caux"
      }
    ],
    "id": "6a33225c11054b9d90e85013e5e3fc02",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/capital"
      }
    ]
  },
  {
    "question": "List the launch site of the rockets whose one of the launch site has been Cape Canaveral Air Force Station Launch Complex 26 ?",
    "SerialNumber": "3312",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_26> . ?x <http://dbpedia.org/ontology/launchSite> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station Launch Complex 26",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_26"
      }
    ],
    "id": "f42232f5745444f2b59bd33f072d1b72",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "rocket",
        "uri": "http://dbpedia.org/ontology/Rocket"
      }
    ]
  },
  {
    "question": "Name the movie whose screenplay is by Akiva Goldsman and directed by Joel Schumacher ?",
    "SerialNumber": "3315",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Joel_Schumacher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Akiva Goldsman",
        "uri": "http://dbpedia.org/resource/Akiva_Goldsman"
      },
      {
        "label": "Joel Schumacher",
        "uri": "http://dbpedia.org/resource/Joel_Schumacher"
      }
    ],
    "id": "238c66a5b9f240c4810f764cc8ec134b",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "List the writers of Tales of Suspense ?",
    "SerialNumber": "3316",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri } ",
    "entity mapping": [
      {
        "label": "Tales of Suspense",
        "uri": "http://dbpedia.org/resource/Tales_of_Suspense"
      }
    ],
    "id": "af23ab128db046daa4567549a7470c27",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writers"
      }
    ]
  },
  {
    "question": "In how many nations can I find people related to the feminist movement?",
    "SerialNumber": "3318",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/movement> <http://dbpedia.org/resource/Feminism> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }",
    "entity mapping": [
      {
        "label": "feminist",
        "uri": "http://dbpedia.org/resource/Feminism"
      }
    ],
    "id": "3ad9afca7d394e1fbf9ff22d4f90c9f0",
    "predicate mapping": [
      {
        "label": "movement",
        "uri": "http://dbpedia.org/ontology/movement"
      },
      {
        "label": "nations",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "Name the home ground of  2015 Fort Lauderdale Strikers season ?",
    "SerialNumber": "3319",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri } ",
    "entity mapping": [
      {
        "label": "2015 Fort Lauderdale Strikers season",
        "uri": "http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season"
      }
    ],
    "id": "deecfa268f4c4b99b10f15c85fea67b7",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground"
      }
    ]
  },
  {
    "question": "Count the awards won by the people who graduated from the National and Kapodistrian University of Athens.",
    "SerialNumber": "3321",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "National and Kapodistrian University of Athens",
        "uri": "http://dbpedia.org/resource/National_and_Kapodistrian_University_of_Athens"
      }
    ],
    "id": "f4c678a394b842b18ef8ecce047526e5",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "who was the president under which Joe Purcell is a lieutenant?",
    "SerialNumber": "3323",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell> } ",
    "entity mapping": [
      {
        "label": "Joe Purcell",
        "uri": "http://dbpedia.org/resource/Joe_Purcell"
      }
    ],
    "id": "357dc6f5b3b84bf398fe8ef62344373d",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      }
    ]
  },
  {
    "question": "Name the narrators of the album which has been narrated by Alan Thicke ?",
    "SerialNumber": "3324",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Alan_Thicke> . ?x <http://dbpedia.org/property/narrated> ?uri  . }",
    "entity mapping": [
      {
        "label": "Alan Thicke",
        "uri": "http://dbpedia.org/resource/Alan_Thicke"
      }
    ],
    "id": "f04972321b83404b87e4d7cf5de5c5a6",
    "predicate mapping": [
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrated"
      }
    ]
  },
  {
    "question": "Which pole driver of 1989 Portuguese Grand Prix was also the first driver of 1993 European Grand Prix ?",
    "SerialNumber": "3327",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1989_Portuguese_Grand_Prix> <http://dbpedia.org/ontology/poleDriver> ?uri} ",
    "entity mapping": [
      {
        "label": "1993 European Grand Prix",
        "uri": "http://dbpedia.org/resource/1993_European_Grand_Prix"
      },
      {
        "label": "1989 Portuguese Grand Prix",
        "uri": "http://dbpedia.org/resource/1989_Portuguese_Grand_Prix"
      }
    ],
    "id": "a92bf834ce444970965064755aec2e3e",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/property/firstDriver"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      }
    ]
  },
  {
    "question": "what is the headquarters of Juan Dalmau Ramerez?",
    "SerialNumber": "3331",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juan_Dalmau_Ramírez> <http://dbpedia.org/property/headquarters> ?uri } ",
    "entity mapping": [
      {
        "label": "Juan Dalmau",
        "uri": "http://dbpedia.org/resource/Juan_Dalmau_Ramírez"
      }
    ],
    "id": "e5f9dd5ab9324d1ebbdf61c7e4403c15",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "Name the wine regions of Bogdanua ?",
    "SerialNumber": "3332",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanuša> <http://dbpedia.org/ontology/wineRegion> ?uri } ",
    "entity mapping": [
      {
        "label": "Bogdanua",
        "uri": "http://dbpedia.org/resource/Bogdanuša"
      }
    ],
    "id": "fcf5f996614b4543a14a5ec5eaa362a1",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      }
    ]
  },
  {
    "question": "In which city are the schools whose district is Mumbai Suburban?",
    "SerialNumber": "3334",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/district> <http://dbpedia.org/resource/Mumbai_Suburban_district> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Mumbai Suburban",
        "uri": "http://dbpedia.org/resource/Mumbai_Suburban_district"
      }
    ],
    "id": "494baea1d2104b42a7e47d508d08648e",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Which military people served their allegiance to Union (American Civil War)?",
    "SerialNumber": "3335",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Union_(American_Civil_War)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "Union (American Civil War)",
        "uri": "http://dbpedia.org/resource/Union_(American_Civil_War)"
      }
    ],
    "id": "a542749bd8ce457aa58ef76df55d1102",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "Give me a count of movies whose film editor is Anthony Harvey?",
    "SerialNumber": "3338",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Anthony_Harvey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Anthony Harvey",
        "uri": "http://dbpedia.org/resource/Anthony_Harvey"
      }
    ],
    "id": "6f8df171b716419ba1bcf20b5e90e4b1",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which species\u0027 members are there in the animal kingdom?",
    "SerialNumber": "3339",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/species> ?uri  . }",
    "entity mapping": [
      {
        "label": "animal",
        "uri": "http://dbpedia.org/resource/Animal"
      }
    ],
    "id": "d2bdea95e8cb4e0ba89f46a1ac662d0c",
    "predicate mapping": [
      {
        "label": "kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      }
    ]
  },
  {
    "question": "Is camel  of the chordate phylum?",
    "SerialNumber": "3341",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Camel> <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate> }",
    "entity mapping": [
      {
        "label": "camel",
        "uri": "http://dbpedia.org/resource/Camel"
      },
      {
        "label": "chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      }
    ],
    "id": "835e3bc3c8764022b3555cb4b8175d3b",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/property/phylum"
      }
    ]
  },
  {
    "question": "Who is the leader of Allgemeine SS ?",
    "SerialNumber": "3343",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allgemeine_SS> <http://dbpedia.org/ontology/leader> ?uri } ",
    "entity mapping": [
      {
        "label": "Allgemeine SS",
        "uri": "http://dbpedia.org/resource/Allgemeine_SS"
      }
    ],
    "id": "19bac1217f0341eaa5cdfa082347f6b0",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "How many important works have been done by Russel Davies?",
    "SerialNumber": "3344",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "entity mapping": [
      {
        "label": "Russel Davies",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      }
    ],
    "id": "0dbbb933294f48bcab3c33d1298ef7e1",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "What is the birth name  of Putri Raemawasti ?",
    "SerialNumber": "3346",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Putri_Raemawasti> <http://dbpedia.org/property/birthName> ?uri } ",
    "entity mapping": [
      {
        "label": "Putri Raemawasti",
        "uri": "http://dbpedia.org/resource/Putri_Raemawasti"
      }
    ],
    "id": "3accaa813d154ec19e1d62b48eb60314",
    "predicate mapping": [
      {
        "label": "birth name",
        "uri": "http://dbpedia.org/property/birthName"
      }
    ]
  },
  {
    "question": "From where does the river Upper Neretva start flowing?",
    "SerialNumber": "3349",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/riverMouth> ?uri } ",
    "entity mapping": [
      {
        "label": "Upper Neretva",
        "uri": "http://dbpedia.org/resource/Upper_Neretva"
      }
    ],
    "id": "91305aeb7cf3416f855db6b604974650",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      }
    ]
  },
  {
    "question": "Joe Shuster has created how many comics character ?",
    "SerialNumber": "3351",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Joe_Shuster>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "entity mapping": [
      {
        "label": "Joe Shuster",
        "uri": "http://dbpedia.org/resource/Joe_Shuster"
      }
    ],
    "id": "d5eec8fa9c454d71af0be385eb6d2193",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creators"
      },
      {
        "label": "comics character",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter"
      }
    ]
  },
  {
    "question": "In which part of the world can i find Xynisteri and Mavro?",
    "SerialNumber": "3352",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xynisteri> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Mavro> <http://dbpedia.org/ontology/origin> ?uri . }",
    "entity mapping": [
      {
        "label": "Xynisteri",
        "uri": "http://dbpedia.org/resource/Xynisteri"
      },
      {
        "label": "Mavro",
        "uri": "http://dbpedia.org/resource/Mavro"
      }
    ],
    "id": "0309871f7c564e6bbce3d3b481300bd8",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "What are the awards won by the parent of Daniel Bergmans?",
    "SerialNumber": "3353",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Daniel_Bergman> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Daniel Bergman",
        "uri": "http://dbpedia.org/resource/Daniel_Bergman"
      }
    ],
    "id": "84bc7466ff1a47cf86ed7bc090ba96b3",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "What did Steven T Mason\u0027s father die from?",
    "SerialNumber": "3355",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Stevens_T._Mason> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "Steven T Mason",
        "uri": "http://dbpedia.org/resource/Stevens_T._Mason"
      }
    ],
    "id": "5fc0f9b047174d33bd4225a3d24e5f30",
    "predicate mapping": [
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "die from",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "Who is the founder of Pittsburgh ?",
    "SerialNumber": "3360",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri } ",
    "entity mapping": [
      {
        "label": "Pittsburgh",
        "uri": "http://dbpedia.org/resource/Pittsburgh"
      }
    ],
    "id": "df77a0a57a254a339759da5845ded0cf",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/founder"
      }
    ]
  },
  {
    "question": "Name the river  whose source location is Nevado Mismi and region is Arequipa Region?",
    "SerialNumber": "3363",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Nevado_Mismi> . ?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Arequipa_Region>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Nevado Mismi",
        "uri": "http://dbpedia.org/resource/Nevado_Mismi"
      },
      {
        "label": "Arequipa Region",
        "uri": "http://dbpedia.org/resource/Arequipa_Region"
      }
    ],
    "id": "516925179add4b768fc74c74f434222a",
    "predicate mapping": [
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "source region",
        "uri": "http://dbpedia.org/property/sourceRegion"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the citizenship of Ren Romano ?",
    "SerialNumber": "3366",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/René_Romano> <http://dbpedia.org/property/citizenship> ?uri } ",
    "entity mapping": [
      {
        "label": "Ren Romano",
        "uri": "http://dbpedia.org/resource/René_Romano"
      }
    ],
    "id": "fb19f3dd1d7640a0b47e3dea68b42bb9",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/property/citizenship"
      }
    ]
  },
  {
    "question": "Where was the company who is the operator of Harihar Airport founded ?",
    "SerialNumber": "3367",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Harihar_Airport> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/property/foundation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Harihar Airport",
        "uri": "http://dbpedia.org/resource/Harihar_Airport"
      }
    ],
    "id": "2e8a9d01f6f54a03ab23c1741dc25aa1",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which architect of the Marine Corps Air Station Kaneohe Bay is the branch of the Burnet R. Maybank?",
    "SerialNumber": "3368",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri. <http://dbpedia.org/resource/Burnet_R._Maybank> <http://dbpedia.org/property/branch> ?uri} ",
    "entity mapping": [
      {
        "label": "Marine Corps Air Station Kaneohe Bay",
        "uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay"
      },
      {
        "label": "Burnet R. Maybank",
        "uri": "http://dbpedia.org/resource/Burnet_R._Maybank"
      }
    ],
    "id": "ffe030d0d0234e8498265e9d4826ab1b",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "What is the official name of Colorado wine ?",
    "SerialNumber": "3370",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Colorado_wine> <http://dbpedia.org/property/officialName> ?uri } ",
    "entity mapping": [
      {
        "label": "Colorado wine",
        "uri": "http://dbpedia.org/resource/Colorado_wine"
      }
    ],
    "id": "a9c0a13767d7483590305e3413152c50",
    "predicate mapping": [
      {
        "label": "official name",
        "uri": "http://dbpedia.org/property/officialName"
      }
    ]
  },
  {
    "question": "Who wrote the US steel hour?",
    "SerialNumber": "3371",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_United_States_Steel_Hour> <http://dbpedia.org/ontology/writer> ?uri } ",
    "entity mapping": [
      {
        "label": "US steel hour",
        "uri": "http://dbpedia.org/resource/The_United_States_Steel_Hour"
      }
    ],
    "id": "244b1c2f6e3e4c57b2532ec5e4d15329",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/writer"
      }
    ]
  },
  {
    "question": "Count the total number of cast member of the television shows whose actress is Joey McIntyre?",
    "SerialNumber": "3374",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Joey_McIntyre> . ?x <http://dbpedia.org/property/starring> ?uri }",
    "entity mapping": [
      {
        "label": "Joey McIntyre",
        "uri": "http://dbpedia.org/resource/Joey_McIntyre"
      }
    ],
    "id": "7472a240a44b44a69fecf3305677e72e",
    "predicate mapping": [
      {
        "label": "actress",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "actress",
        "uri": "http://dbpedia.org/property/starring"
      }
    ]
  },
  {
    "question": "What is the former partner of the figure skaters whose current partner is Alexa Scimeca?",
    "SerialNumber": "3376",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/currentPartner> <http://dbpedia.org/resource/Alexa_Scimeca> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "entity mapping": [
      {
        "label": "Alexa Scimeca",
        "uri": "http://dbpedia.org/resource/Alexa_Scimeca"
      }
    ],
    "id": "0c0ff7a433a646868818f8629d5a0134",
    "predicate mapping": [
      {
        "label": "current partner",
        "uri": "http://dbpedia.org/ontology/currentPartner"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "figure skater",
        "uri": "http://dbpedia.org/ontology/FigureSkater"
      }
    ]
  },
  {
    "question": "Name all the broadcast area of the TV stations which has Rodrigues as one of the broadcast area ?",
    "SerialNumber": "3378",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Rodrigues> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "entity mapping": [
      {
        "label": "Rodrigues",
        "uri": "http://dbpedia.org/resource/Rodrigues"
      }
    ],
    "id": "a188179d04e740928d43dc584501c365",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      },
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/property/broadcastArea"
      },
      {
        "label": "stations",
        "uri": "http://dbpedia.org/ontology/TelevisionStation"
      }
    ]
  },
  {
    "question": "With which musical artist is the producer of Spotlight associated ?",
    "SerialNumber": "3381",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Spotlight_(Jennifer_Hudson_song)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/associatedActs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Spotlight",
        "uri": "http://dbpedia.org/resource/Spotlight_(Jennifer_Hudson_song)"
      }
    ],
    "id": "95f0c14ef2194c5cb7fb4fafa947da6a",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Name the office holder whose constituency is Noe Valley, San Francisco and belongs to military unit USS Kittiwake (ASR-13)?",
    "SerialNumber": "3382",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Noe Valley, San Francisco",
        "uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco"
      },
      {
        "label": "USS Kittiwake (ASR-13)",
        "uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)"
      }
    ],
    "id": "3c149a4bfbfd4fcdb7f24af562373951",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What is the route end of Birmingham and Oxford Junction Railway ?",
    "SerialNumber": "3390",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway> <http://dbpedia.org/ontology/routeEnd> ?uri } ",
    "entity mapping": [
      {
        "label": "Birmingham and Oxford Junction Railway",
        "uri": "http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway"
      }
    ],
    "id": "659e0f9700964082b127b839ca27f172",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "What is the municipality of Homestead Grays Bridge ?",
    "SerialNumber": "3392",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Homestead_Grays_Bridge> <http://dbpedia.org/ontology/municipality> ?uri } ",
    "entity mapping": [
      {
        "label": "Homestead Grays Bridge",
        "uri": "http://dbpedia.org/resource/Homestead_Grays_Bridge"
      }
    ],
    "id": "a1a358a3439f4fcbbc39fa25718b2ad6",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      }
    ]
  },
  {
    "question": "Which region of Bannock is the origin od Spaghetti squash ?",
    "SerialNumber": "3398",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spaghetti_squash> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Bannock_(food)> <http://dbpedia.org/ontology/region> ?uri} ",
    "entity mapping": [
      {
        "label": "Spaghetti squash",
        "uri": "http://dbpedia.org/resource/Spaghetti_squash"
      },
      {
        "label": "Bannock",
        "uri": "http://dbpedia.org/resource/Bannock_(food)"
      }
    ],
    "id": "b38e47f868494aad92a0886611fb76eb",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Who is the opponent of United States House of Representatives elections in Ohio, 2010 ?",
    "SerialNumber": "3399",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/opponent> ?uri } ",
    "entity mapping": [
      {
        "label": "United States House of Representatives elections in Ohio, 2010",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010"
      }
    ],
    "id": "8d4da6021bd04b108db6150288326476",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/property/opponent"
      }
    ]
  },
  {
    "question": "Which district of Robert William Wilcox os the place of birth of Kamaloohua ?",
    "SerialNumber": "3400",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_William_Wilcox> <http://dbpedia.org/property/district> ?uri. <http://dbpedia.org/resource/Kamaloohua> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Robert William Wilcox",
        "uri": "http://dbpedia.org/resource/Robert_William_Wilcox"
      },
      {
        "label": "Kamaloohua",
        "uri": "http://dbpedia.org/resource/Kamaloohua"
      }
    ],
    "id": "8f807aa1160a43f18fb9f1b9b304c86b",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Name the commander of Battle of the Thames ?",
    "SerialNumber": "3401",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_of_the_Thames> <http://dbpedia.org/ontology/commander> ?uri } ",
    "entity mapping": [
      {
        "label": "Battle of the Thames",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Thames"
      }
    ],
    "id": "c1fbd40e9d774b85994b633e277b297b",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      }
    ]
  },
  {
    "question": "Name the states which have been billed by the wrestlers who has also billed Georgia ?",
    "SerialNumber": "3402",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/billed> <http://dbpedia.org/resource/Georgia_(U.S._state)> . ?x <http://dbpedia.org/property/billed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}",
    "entity mapping": [
      {
        "label": "Georgia",
        "uri": "http://dbpedia.org/resource/Georgia_(U.S._state)"
      }
    ],
    "id": "739ec9202cac42dcb1c76c274d183b8c",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed"
      },
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed"
      },
      {
        "label": "wrestler",
        "uri": "http://dbpedia.org/ontology/Wrestler"
      }
    ]
  },
  {
    "question": "Count the number of  sport played by the school which also plays Association football ?",
    "SerialNumber": "3404",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/sport> <http://dbpedia.org/resource/Association_football> . ?x <http://dbpedia.org/ontology/sport> ?uri }",
    "entity mapping": [
      {
        "label": "Association football",
        "uri": "http://dbpedia.org/resource/Association_football"
      }
    ],
    "id": "01cd1e78b6be40e98f1e8db6d8b64385",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Give me the total number of Guests of the television episodes whose one of the  Guests is Michael Cristofer?",
    "SerialNumber": "3406",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Michael_Cristofer> . ?x <http://dbpedia.org/property/guests> ?uri }",
    "entity mapping": [
      {
        "label": "Michael Cristofer",
        "uri": "http://dbpedia.org/resource/Michael_Cristofer"
      }
    ],
    "id": "0158182c73724ee685ea4dc4dae2b647",
    "predicate mapping": [
      {
        "label": "Guests",
        "uri": "http://dbpedia.org/property/guests"
      },
      {
        "label": "Guests",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "Were the 1995 south pacific games hosted in tahiti?",
    "SerialNumber": "3407",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1995_South_Pacific_Games> <http://dbpedia.org/property/hostCity> <http://dbpedia.org/resource/Tahiti> }",
    "entity mapping": [
      {
        "label": "1995 south pacific games",
        "uri": "http://dbpedia.org/resource/1995_South_Pacific_Games"
      },
      {
        "label": "tahiti",
        "uri": "http://dbpedia.org/resource/Tahiti"
      }
    ],
    "id": "0eeefb46088442158a96ecb63d79ef4b",
    "predicate mapping": [
      {
        "label": "hosted",
        "uri": "http://dbpedia.org/property/hostCity"
      }
    ]
  },
  {
    "question": "Which division of the Runewaker Entertainment is also the  destinations of the Airtours International Airways?",
    "SerialNumber": "3408",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Runewaker_Entertainment> <http://dbpedia.org/ontology/division> ?uri. <http://dbpedia.org/resource/Airtours_International_Airways> <http://dbpedia.org/property/destinations> ?uri} ",
    "entity mapping": [
      {
        "label": "Runewaker Entertainment",
        "uri": "http://dbpedia.org/resource/Runewaker_Entertainment"
      },
      {
        "label": "Airtours International Airways",
        "uri": "http://dbpedia.org/resource/Airtours_International_Airways"
      }
    ],
    "id": "a3f1e2963c0c465d966469f42cdb94a9",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      }
    ]
  },
  {
    "question": "Give me an estimate number of races where horses grandsired by the Wild Risk have raced in?",
    "SerialNumber": "3409",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Wild_Risk> . ?x <http://dbpedia.org/property/race> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HorseRace>}",
    "entity mapping": [
      {
        "label": "Wild Risk",
        "uri": "http://dbpedia.org/resource/Wild_Risk"
      }
    ],
    "id": "c6eee71ddd2745a6a35018dfa232f4bb",
    "predicate mapping": [
      {
        "label": "grandsire",
        "uri": "http://dbpedia.org/ontology/grandsire"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "horses",
        "uri": "http://dbpedia.org/ontology/HorseRace"
      }
    ]
  },
  {
    "question": "List the awards won by the cinematographer of Mickey\u0027s Mellerdrammer?",
    "SerialNumber": "3410",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mickey\u0027s Mellerdrammer",
        "uri": "http://dbpedia.org/resource/Mickey\u0027s_Mellerdrammer"
      }
    ],
    "id": "53bf3aeac4064196845be56ed236a7f7",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/property/cinematography"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Where is the garrison of Western Naval Command ?",
    "SerialNumber": "3411",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Western_Naval_Command> <http://dbpedia.org/property/garrison> ?uri } ",
    "entity mapping": [
      {
        "label": "Western Naval Command",
        "uri": "http://dbpedia.org/resource/Western_Naval_Command"
      }
    ],
    "id": "53b2519492344f22a93ce9bef25dd3a5",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      }
    ]
  },
  {
    "question": "Count the number of books whose author\u0027s were born in Alcal de Henares ?",
    "SerialNumber": "3412",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Alcalá_de_Henares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Alcal de Henares",
        "uri": "http://dbpedia.org/resource/Alcalá_de_Henares"
      }
    ],
    "id": "e698401405e74eb89c41b846351f1ff9",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "List the film starring of the movies whose editor is Harvey  Rosenstock ?",
    "SerialNumber": "3413",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Harvey_Rosenstock> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Harvey Rosenstock",
        "uri": "http://dbpedia.org/resource/Harvey_Rosenstock"
      }
    ],
    "id": "c64b64f2cf244f4dbe7002a393771eb6",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      },
      {
        "label": "film starring",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the name of the person who has relations with Dionne Warwick and Gary Garland?",
    "SerialNumber": "3414",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Dionne_Warwick> . ?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Gary_Garland> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Dionne Warwick",
        "uri": "http://dbpedia.org/resource/Dionne_Warwick"
      },
      {
        "label": "Gary Garland",
        "uri": "http://dbpedia.org/resource/Gary_Garland"
      }
    ],
    "id": "981c2203e0974c06abfc3fa94b23caac",
    "predicate mapping": [
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "relation",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which region of English American is also the palce of Death of Brent Darby ?",
    "SerialNumber": "3417",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/English_Americans> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Brent_Darby> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "English American ",
        "uri": "http://dbpedia.org/resource/English_Americans"
      },
      {
        "label": "Brent Darby",
        "uri": "http://dbpedia.org/resource/Brent_Darby"
      }
    ],
    "id": "694000fa26c74b33aa7095c7738f7179",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Who are the architect of the stadium whose one of the architect is louis D. Astorino ?",
    "SerialNumber": "3418",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Louis_D._Astorino> . ?x <http://dbpedia.org/property/architect> ?uri  . }",
    "entity mapping": [
      {
        "label": "louis D. Astorino",
        "uri": "http://dbpedia.org/resource/Louis_D._Astorino"
      }
    ],
    "id": "3a46f9dd0ff14411b6184bbc26d354d9",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      }
    ]
  },
  {
    "question": "Who is the fictional character whose family member is Padme Amidala?",
    "SerialNumber": "3421",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padmé_Amidala>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Padme Amidala",
        "uri": "http://dbpedia.org/resource/Padmé_Amidala"
      }
    ],
    "id": "7152d19cc09847a59273b9425bba8dfe",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/property/family"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Which notable series of Russell T Davies is also the series of Short Trips: A day in the life ?",
    "SerialNumber": "3422",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life> <http://dbpedia.org/ontology/series> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri} ",
    "entity mapping": [
      {
        "label": "Short Trips: A day in the life",
        "uri": "http://dbpedia.org/resource/Short_Trips:_A_Day_in_the_Life"
      },
      {
        "label": "Russell T Davies",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      }
    ],
    "id": "9111a28178e8420b88b3124f0b714e72",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "notable",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "List the relatives of clay Aiken ?",
    "SerialNumber": "3424",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clay_Aiken>  . }",
    "entity mapping": [
      {
        "label": "clay Aiken",
        "uri": "http://dbpedia.org/resource/Clay_Aiken"
      }
    ],
    "id": "f9b31b5201064d76b7f841959920c37f",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      }
    ]
  },
  {
    "question": "Which are the cities on the river which also flows in Tukwila, Washington ?",
    "SerialNumber": "3426",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Tukwila,_Washington> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Tukwila, Washington",
        "uri": "http://dbpedia.org/resource/Tukwila,_Washington"
      }
    ],
    "id": "f11a115d1c814158bf1464c31ccbdba7",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Mazhar Ul Haq High School, Beerwah is affiliated to Islamic Religion",
    "SerialNumber": "3428",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mazhar_Ul_Haq_High_School,_Beerwah> <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Islam> }",
    "entity mapping": [
      {
        "label": "Mazhar Ul Haq High School, Beerwah",
        "uri": "http://dbpedia.org/resource/Mazhar_Ul_Haq_High_School,_Beerwah"
      },
      {
        "label": "Islam",
        "uri": "http://dbpedia.org/resource/Islam"
      }
    ],
    "id": "565549d096324c1ca053e79d2d314691",
    "predicate mapping": [
      {
        "label": "Religion",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      }
    ]
  },
  {
    "question": "In which state does the university which is the alma mater of Mateusz Morawiecki lie?",
    "SerialNumber": "3429",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mateusz_Morawiecki> <http://dbpedia.org/property/almaMater> ?x . ?x <http://dbpedia.org/property/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Mateusz Morawiecki",
        "uri": "http://dbpedia.org/resource/Mateusz_Morawiecki"
      }
    ],
    "id": "a8f9d6667ed44a89b9be3cf80a8d24c6",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "List the significant buildings of the arch. whose one of the important work is Government Building, Kiev ?",
    "SerialNumber": "3435",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Government_Building,_Kiev> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}",
    "entity mapping": [
      {
        "label": "Government Building, Kiev",
        "uri": "http://dbpedia.org/resource/Government_Building,_Kiev"
      }
    ],
    "id": "2408eccc056c49ec8d1d6eb57ccc6b3c",
    "predicate mapping": [
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding"
      },
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding"
      },
      {
        "label": "arch.",
        "uri": "http://dbpedia.org/ontology/Architect"
      }
    ]
  },
  {
    "question": "What is the alma mater of Fikret Orman?",
    "SerialNumber": "3436",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fikret_Orman> <http://dbpedia.org/property/almaMater> ?uri } ",
    "entity mapping": [
      {
        "label": "Fikret Orman",
        "uri": "http://dbpedia.org/resource/Fikret_Orman"
      }
    ],
    "id": "7383239e8ece464a80a8d5422d4ed3bc",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "what are some players of England national football team?",
    "SerialNumber": "3439",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/England_national_football_team> } ",
    "entity mapping": [
      {
        "label": "England national football team",
        "uri": "http://dbpedia.org/resource/England_national_football_team"
      }
    ],
    "id": "627b135b1339420abd87fd83a60ba519",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "What are the other notable work of the executive producer of The Runaway Bride episode of Doctor Who?",
    "SerialNumber": "3441",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)> <http://dbpedia.org/ontology/executiveProducer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Runaway Bride",
        "uri": "http://dbpedia.org/resource/The_Runaway_Bride_(Doctor_Who)"
      }
    ],
    "id": "13b91edef6f247998a11991c20d82c12",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/property/notableworks"
      }
    ]
  },
  {
    "question": "What is the subject of The Prodigal son ?",
    "SerialNumber": "3442",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Prodigal_Son_(play)> <http://dbpedia.org/property/subject> ?uri } ",
    "entity mapping": [
      {
        "label": "The Prodigal son",
        "uri": "http://dbpedia.org/resource/The_Prodigal_Son_(play)"
      }
    ],
    "id": "92cabb6122e7449fb885581d7b8e5127",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      }
    ]
  },
  {
    "question": "What water bodies are nearest to Helsinki city?",
    "SerialNumber": "3443",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Helsinki>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BodyOfWater>}",
    "entity mapping": [
      {
        "label": "Helsinki",
        "uri": "http://dbpedia.org/resource/Helsinki"
      }
    ],
    "id": "a1bd0e085010417ba43241a478f7df55",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "water",
        "uri": "http://dbpedia.org/ontology/BodyOfWater"
      }
    ]
  },
  {
    "question": "Who is the meaning of Isa  ?",
    "SerialNumber": "3445",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri } ",
    "entity mapping": [
      {
        "label": "Isa",
        "uri": "http://dbpedia.org/resource/Isa_(name)"
      }
    ],
    "id": "ee7db84a309448d5abf22c529f3c8d35",
    "predicate mapping": [
      {
        "label": "meaning",
        "uri": "http://dbpedia.org/property/meaning"
      }
    ]
  },
  {
    "question": "Which company founded by Fusajiro Yamauchi also provides services of Nintendo eShop ?",
    "SerialNumber": "3446",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Fusajiro Yamauchi",
        "uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi"
      },
      {
        "label": "Nintendo eShop",
        "uri": "http://dbpedia.org/resource/Nintendo_eShop"
      }
    ],
    "id": "a590bd766cad404b831d5cbb85a244b8",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the official language of Ladonia, which is the target area of Probus Journal?",
    "SerialNumber": "3447",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ladonia_(micronation)> <http://dbpedia.org/ontology/officialLanguage> ?uri. <http://dbpedia.org/resource/Probus_(journal)> <http://dbpedia.org/ontology/academicDiscipline> ?uri} ",
    "entity mapping": [
      {
        "label": "Ladonia",
        "uri": "http://dbpedia.org/resource/Ladonia_(micronation)"
      },
      {
        "label": "Probus",
        "uri": "http://dbpedia.org/resource/Probus_(journal)"
      }
    ],
    "id": "9a7c1e18a60b45f5842fffdec31b087a",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      }
    ]
  },
  {
    "question": "Name the movie who has screenplay by Akiva Goldsman and is edited by Mark Stevens ?",
    "SerialNumber": "3449",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Akiva Goldsman",
        "uri": "http://dbpedia.org/resource/Akiva_Goldsman"
      },
      {
        "label": "Mark Stevens",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)"
      }
    ],
    "id": "f468633c3d9d42d6b5460e08fd7527ed",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Is facebook a public company?",
    "SerialNumber": "3451",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Facebook> <http://dbpedia.org/property/companyType> <http://dbpedia.org/resource/Public_company> }",
    "entity mapping": [
      {
        "label": "facebook",
        "uri": "http://dbpedia.org/resource/Facebook"
      },
      {
        "label": "public company",
        "uri": "http://dbpedia.org/resource/Public_company"
      }
    ],
    "id": "8663feba2e3b48de998772ddb3283b0f",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/companyType"
      }
    ]
  },
  {
    "question": "Was Gerald Gibbs the cinematographer of X the unknown?",
    "SerialNumber": "3454",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/X_the_Unknown> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gerald_Gibbs_(cinematographer)> }",
    "entity mapping": [
      {
        "label": "X the unknown",
        "uri": "http://dbpedia.org/resource/X_the_Unknown"
      },
      {
        "label": "Gerald Gibbs",
        "uri": "http://dbpedia.org/resource/Gerald_Gibbs_(cinematographer)"
      }
    ],
    "id": "efcc04cf1e59487e9a5018d7fd3412e0",
    "predicate mapping": [
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/ontology/cinematography"
      }
    ]
  },
  {
    "question": "List the architect of the buildings whose one of the  architect is Philip Webb?",
    "SerialNumber": "3455",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Philip_Webb> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "Philip Webb",
        "uri": "http://dbpedia.org/resource/Philip_Webb"
      }
    ],
    "id": "b70eb1cf6bbc449e8c384f3cc7c888bd",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "List the trainers of Shinya Aoki ?",
    "SerialNumber": "3456",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shinya_Aoki> <http://dbpedia.org/ontology/trainer> ?uri } ",
    "entity mapping": [
      {
        "label": "Shinya Aoki",
        "uri": "http://dbpedia.org/resource/Shinya_Aoki"
      }
    ],
    "id": "ef57d1c17ccf4f40847f6c51c1183441",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer"
      }
    ]
  },
  {
    "question": "How many software run on operating system is Microsoft Windows?",
    "SerialNumber": "3457",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      }
    ],
    "id": "02863512b8c141d8919dad7863c3b44e",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Give me the mascot of the military unit in which Stewart Bovell served?",
    "SerialNumber": "3460",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Stewart_Bovell> <http://dbpedia.org/ontology/militaryBranch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Stewart Bovell",
        "uri": "http://dbpedia.org/resource/Stewart_Bovell"
      }
    ],
    "id": "6c19a51322bb489f9b4cb12531a09d13",
    "predicate mapping": [
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Which manufacturer of  Ford Y-block engine is the parent of  Ford Air Transport Service ?",
    "SerialNumber": "3463",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Ford_Air_Transport_Service> <http://dbpedia.org/property/parent> ?uri} ",
    "entity mapping": [
      {
        "label": "Ford Y-block engine",
        "uri": "http://dbpedia.org/resource/Ford_Y-block_engine"
      },
      {
        "label": "Ford Air Transport Service",
        "uri": "http://dbpedia.org/resource/Ford_Air_Transport_Service"
      }
    ],
    "id": "9ea1f28bd342417b8859d96f88a7f775",
    "predicate mapping": [
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      }
    ]
  },
  {
    "question": "How many games have a composer who worked for the Creatures?",
    "SerialNumber": "3464",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Creatures_(company)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Creatures",
        "uri": "http://dbpedia.org/resource/Creatures_(company)"
      }
    ],
    "id": "2fd401510ca849388e708a6f0b1f2137",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Total number of places where people drafted in the detroit pistons have died?",
    "SerialNumber": "3466",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/draftTeam> <http://dbpedia.org/resource/Detroit_Pistons> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "entity mapping": [
      {
        "label": "detroit pistons",
        "uri": "http://dbpedia.org/resource/Detroit_Pistons"
      }
    ],
    "id": "4efbed07c60a47e3a9ef884a3f08f25c",
    "predicate mapping": [
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/ontology/draftTeam"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location"
      }
    ]
  },
  {
    "question": "Where did Paul Jones do his highschool?",
    "SerialNumber": "3467",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Jones_(American_football)> <http://dbpedia.org/property/highschool> ?uri } ",
    "entity mapping": [
      {
        "label": "Paul Jones",
        "uri": "http://dbpedia.org/resource/Paul_Jones_(American_football)"
      }
    ],
    "id": "2704d889b6c741ef8e45357f8e71bbdb",
    "predicate mapping": [
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/property/highschool"
      }
    ]
  },
  {
    "question": "Which state is the birth location of Ann Monroe Gilchrist Strong? ",
    "SerialNumber": "3468",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ann_Monroe_Gilchrist_Strong> <http://dbpedia.org/ontology/birthPlace> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ann Monroe Gilchrist Strong",
        "uri": "http://dbpedia.org/resource/Ann_Monroe_Gilchrist_Strong"
      }
    ],
    "id": "02704dedd802497dbd1e9e9abcd3e0da",
    "predicate mapping": [
      {
        "label": "birth location",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Bud Adams owns which american football team?",
    "SerialNumber": "3469",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Bud_Adams>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "entity mapping": [
      {
        "label": "Bud Adams",
        "uri": "http://dbpedia.org/resource/Bud_Adams"
      }
    ],
    "id": "a1e40cc27cbe4b48b7f3d40e75c71479",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam"
      }
    ]
  },
  {
    "question": "Which licensee of EXXV-TV is also the licensee of WXXV-DT2 ?",
    "SerialNumber": "3470",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EXXV-TV> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/WXXV-DT2> <http://dbpedia.org/property/licensee> ?uri . }",
    "entity mapping": [
      {
        "label": "EXXV-TV",
        "uri": "http://dbpedia.org/resource/EXXV-TV"
      },
      {
        "label": "WXXV-DT2",
        "uri": "http://dbpedia.org/resource/WXXV-DT2"
      }
    ],
    "id": "f2e2230636684b6ab20dbd0f1c6e1a03",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      },
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      }
    ]
  },
  {
    "question": "Give me all martial artists trained by Joe Schilling.",
    "SerialNumber": "3471",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Joe_Schilling>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MartialArtist>}",
    "entity mapping": [
      {
        "label": "Joe Schilling",
        "uri": "http://dbpedia.org/resource/Joe_Schilling"
      }
    ],
    "id": "2581702c56f24e0498481ea703252cc9",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/trainer"
      },
      {
        "label": "martial artist",
        "uri": "http://dbpedia.org/ontology/MartialArtist"
      }
    ]
  },
  {
    "question": "What magazine published Allal and is the employer of Peter Bergman?",
    "SerialNumber": "3472",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allal> <http://dbpedia.org/ontology/publisher> ?uri. <http://dbpedia.org/resource/Peter_Bergman_(comedian)> <http://dbpedia.org/ontology/employer> ?uri} ",
    "entity mapping": [
      {
        "label": "Allal",
        "uri": "http://dbpedia.org/resource/Allal"
      },
      {
        "label": "Peter Bergman",
        "uri": "http://dbpedia.org/resource/Peter_Bergman_(comedian)"
      }
    ],
    "id": "713d533b1d2a4dc08c7ccfe24d7dd58b",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer"
      }
    ]
  },
  {
    "question": "List few musical artist whose notable instruments are Ludwig Drums and  Remo?",
    "SerialNumber": "3473",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Ludwig_Drums> . ?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Remo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Ludwig Drums",
        "uri": "http://dbpedia.org/resource/Ludwig_Drums"
      },
      {
        "label": "Remo",
        "uri": "http://dbpedia.org/resource/Remo"
      }
    ],
    "id": "bf11268a275f4ca090b23db4888f1ec3",
    "predicate mapping": [
      {
        "label": "notable instruments",
        "uri": "http://dbpedia.org/property/notableInstruments"
      },
      {
        "label": "instrument",
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Name the common institution of the Erica Frank and Douglass North?",
    "SerialNumber": "3474",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Douglass_North> <http://dbpedia.org/ontology/institution> ?uri . }",
    "entity mapping": [
      {
        "label": "Erica Frank",
        "uri": "http://dbpedia.org/resource/Erica_Frank"
      },
      {
        "label": "Douglass North",
        "uri": "http://dbpedia.org/resource/Douglass_North"
      }
    ],
    "id": "c1cdd10d876d429ba602f0b60fc91f53",
    "predicate mapping": [
      {
        "label": "institution",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "institution",
        "uri": "http://dbpedia.org/ontology/institution"
      }
    ]
  },
  {
    "question": "What is the county seat of Moscow Governorate ?",
    "SerialNumber": "3480",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow_Governorate> <http://dbpedia.org/ontology/capital> ?uri } ",
    "entity mapping": [
      {
        "label": "Moscow Governorate",
        "uri": "http://dbpedia.org/resource/Moscow_Governorate"
      }
    ],
    "id": "5cbf98e72bf24912a1efb6418b082b96",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/capital"
      }
    ]
  },
  {
    "question": "ARM Architecture acts as a game platform for how many things?",
    "SerialNumber": "3481",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/ARM_architecture>  . }",
    "entity mapping": [
      {
        "label": "ARM Architecture",
        "uri": "http://dbpedia.org/resource/ARM_architecture"
      }
    ],
    "id": "6e9fc24127eb42e2b5580784c12b6587",
    "predicate mapping": [
      {
        "label": "game platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      }
    ]
  },
  {
    "question": "What all has been created by Jerry Siegel?",
    "SerialNumber": "3482",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Jerry_Siegel> } ",
    "entity mapping": [
      {
        "label": "Jerry Siegel",
        "uri": "http://dbpedia.org/resource/Jerry_Siegel"
      }
    ],
    "id": "11efb4f1e7bb4a4991a7d52f98ce78ac",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators"
      }
    ]
  },
  {
    "question": "Is David Cameron the prime minister of Nick Clegg?",
    "SerialNumber": "3483",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Clegg> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/David_Cameron> }",
    "entity mapping": [
      {
        "label": "Nick Clegg",
        "uri": "http://dbpedia.org/resource/Nick_Clegg"
      },
      {
        "label": "David Cameron",
        "uri": "http://dbpedia.org/resource/David_Cameron"
      }
    ],
    "id": "a33859aa5439488798b80ada5172ff2b",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "What things have founded place as United States and New Mexico?",
    "SerialNumber": "3485",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . }",
    "entity mapping": [
      {
        "label": "United States",
        "uri": "http://dbpedia.org/resource/United_States"
      },
      {
        "label": "New Mexico",
        "uri": "http://dbpedia.org/resource/New_Mexico"
      }
    ],
    "id": "24be016341344144a6a482ef013bd669",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      }
    ]
  },
  {
    "question": "Does Saneh Lungkeaw play for the Thailand\u0027s national team?",
    "SerialNumber": "3486",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saneh_Lungkeaw> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Thailand> }",
    "entity mapping": [
      {
        "label": "Saneh Lungkeaw",
        "uri": "http://dbpedia.org/resource/Saneh_Lungkeaw"
      },
      {
        "label": "Thailand",
        "uri": "http://dbpedia.org/resource/Thailand"
      }
    ],
    "id": "5a87e57658014b01807840c74c342a12",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "What are the central characters in spy kids series?",
    "SerialNumber": "3491",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Spy_Kids_(franchise)>  . }",
    "entity mapping": [
      {
        "label": "spy kids series",
        "uri": "http://dbpedia.org/resource/Spy_Kids_(franchise)"
      }
    ],
    "id": "94e0f81983644e299c03baa26e68409f",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "Name the common former team of Marv mcFadden and Carlos Emmons ?",
    "SerialNumber": "3492",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_McFadden> <http://dbpedia.org/property/pastteams> ?uri. <http://dbpedia.org/resource/Carlos_Emmons_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "Marv mcFadden",
        "uri": "http://dbpedia.org/resource/Marv_McFadden"
      },
      {
        "label": "Carlos Emmons",
        "uri": "http://dbpedia.org/resource/Carlos_Emmons_(American_football)"
      }
    ],
    "id": "137b3f2da4c048b282d2f6b03106d881",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/pastteams"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "Name a company with key person as Dennis Muilenburg and Raymond Conner ?",
    "SerialNumber": "3497",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg"
      },
      {
        "label": "Raymond Conner",
        "uri": "http://dbpedia.org/resource/Raymond_Conner"
      }
    ],
    "id": "3a5a1af6d3f14416be651b162e0f62a4",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "key person",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "List the ideologies of the party of Boonchu Rojanastien?",
    "SerialNumber": "3501",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Boonchu_Rojanastien> <http://dbpedia.org/property/party> ?x . ?x <http://dbpedia.org/ontology/ideology> ?uri  . }",
    "entity mapping": [
      {
        "label": "Boonchu Rojanastien",
        "uri": "http://dbpedia.org/resource/Boonchu_Rojanastien"
      }
    ],
    "id": "d9b4914b46a14c7392226eb411c3c6da",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "ideologies",
        "uri": "http://dbpedia.org/ontology/ideology"
      }
    ]
  },
  {
    "question": "How many other important work has been done by the writers of Sarah Jane Adventures?",
    "SerialNumber": "3502",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sarah Jane Adventures",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures"
      }
    ],
    "id": "c527bb01402d4d4db53562c4b0cc5862",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "What are the hubs of PLUS Helicopter Services, a highway helicopter unit of PLUS Expressways?",
    "SerialNumber": "3503",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PLUS_Expressways> <http://dbpedia.org/property/hubs> ?uri } ",
    "entity mapping": [
      {
        "label": "PLUS Expressways",
        "uri": "http://dbpedia.org/resource/PLUS_Expressways"
      }
    ],
    "id": "d5068e915d334851ae6309f58ccc82cf",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs"
      }
    ]
  },
  {
    "question": "What is the common place where USS Camp DE-251 was built, and is one of the destinations of Emerald Air?",
    "SerialNumber": "3505",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/USS_Camp_(DE-251)> <http://dbpedia.org/property/shipBuilder> ?uri. <http://dbpedia.org/resource/Emerald_Air_(United_States)> <http://dbpedia.org/ontology/destination> ?uri} ",
    "entity mapping": [
      {
        "label": "USS Camp",
        "uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)"
      },
      {
        "label": "Emerald Air",
        "uri": "http://dbpedia.org/resource/Emerald_Air_(United_States)"
      }
    ],
    "id": "085348492566421ba7cade102bb4e127",
    "predicate mapping": [
      {
        "label": "built,",
        "uri": "http://dbpedia.org/property/shipBuilder"
      },
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination"
      }
    ]
  },
  {
    "question": "Whose families are Buccinoidea and Buccinidae?",
    "SerialNumber": "3506",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinoidea> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Buccinidae> . }",
    "entity mapping": [
      {
        "label": "Buccinoidea",
        "uri": "http://dbpedia.org/resource/Buccinoidea"
      },
      {
        "label": "Buccinidae",
        "uri": "http://dbpedia.org/resource/Buccinidae"
      }
    ],
    "id": "e43ae08acd6c4d84a6f9e6c5bcb3cae6",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "In how many places are the tombs of people who died in Connecticut Colony?",
    "SerialNumber": "3507",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Connecticut_Colony> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Connecticut Colony",
        "uri": "http://dbpedia.org/resource/Connecticut_Colony"
      }
    ],
    "id": "29e146d8bbb745018652a1a3c634a737",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Who are the shareholder of the soccer club for whom Steve Holland plays?",
    "SerialNumber": "3508",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Steve_Holland_(footballer)> <http://dbpedia.org/property/currentclub> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . }",
    "entity mapping": [
      {
        "label": "Steve Holland",
        "uri": "http://dbpedia.org/resource/Steve_Holland_(footballer)"
      }
    ],
    "id": "02dde80bffd545f687faafd47c7e5afd",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/currentclub"
      },
      {
        "label": "shareholder",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Whose theme music is composed by the band one of whose member is Les Claypool?",
    "SerialNumber": "3510",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Les_Claypool> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . }",
    "entity mapping": [
      {
        "label": "Les Claypool",
        "uri": "http://dbpedia.org/resource/Les_Claypool"
      }
    ],
    "id": "6434d90c34d141a38701354bbfbcb9ce",
    "predicate mapping": [
      {
        "label": "member band",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      }
    ]
  },
  {
    "question": "What is the colour of Xocolatlite ?",
    "SerialNumber": "3513",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xocolatlite> <http://dbpedia.org/ontology/colour> ?uri } ",
    "entity mapping": [
      {
        "label": "Xocolatlite",
        "uri": "http://dbpedia.org/resource/Xocolatlite"
      }
    ],
    "id": "4a602d8ca5624552a796ccfefbaf8a1d",
    "predicate mapping": [
      {
        "label": "colour",
        "uri": "http://dbpedia.org/ontology/colour"
      }
    ]
  },
  {
    "question": "How many movies are directed by the spouse of Dolores del Ro?",
    "SerialNumber": "3514",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/partner> <http://dbpedia.org/resource/Dolores_del_Río> . ?uri <http://dbpedia.org/property/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Dolores del Ro",
        "uri": "http://dbpedia.org/resource/Dolores_del_Río"
      }
    ],
    "id": "a43a3581442948429aaefa12283d9aa5",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/partner"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which planet was first discovered by Johann Gottfried Galle?",
    "SerialNumber": "3516",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Planet>}",
    "entity mapping": [
      {
        "label": "Johann Gottfried Galle",
        "uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle"
      }
    ],
    "id": "e84421422b534cdb8726c1863cb03f18",
    "predicate mapping": [
      {
        "label": "discovered by",
        "uri": "http://dbpedia.org/property/discoverer"
      },
      {
        "label": "planet",
        "uri": "http://dbpedia.org/ontology/Planet"
      }
    ]
  },
  {
    "question": "what mountains are in sierra nevada?",
    "SerialNumber": "3517",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)>  . }",
    "entity mapping": [
      {
        "label": "sierra nevada",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)"
      }
    ],
    "id": "32aa2b3044e940e094b154d53dedd106",
    "predicate mapping": [
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      }
    ]
  },
  {
    "question": "Was True Grit a novel of the western genre?",
    "SerialNumber": "3518",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/True_Grit_(novel)> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Western_(genre)> }",
    "entity mapping": [
      {
        "label": "True Grit",
        "uri": "http://dbpedia.org/resource/True_Grit_(novel)"
      },
      {
        "label": "western",
        "uri": "http://dbpedia.org/resource/Western_(genre)"
      }
    ],
    "id": "da9c3c6ffbf24f4e9335cf131e3f0907",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      }
    ]
  },
  {
    "question": "Who is the nominee of Jack Ryan ?",
    "SerialNumber": "3519",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri } ",
    "entity mapping": [
      {
        "label": "Jack Ryan",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)"
      }
    ],
    "id": "f3713cd348ac4ddf884634f3a7672b0a",
    "predicate mapping": [
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee"
      }
    ]
  },
  {
    "question": "Name the wine regions of Baco noir?",
    "SerialNumber": "3520",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baco_noir> <http://dbpedia.org/ontology/wineRegion> ?uri } ",
    "entity mapping": [
      {
        "label": "Baco noir",
        "uri": "http://dbpedia.org/resource/Baco_noir"
      }
    ],
    "id": "a0ea55269f83451faef0afb3122b0bf3",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      }
    ]
  },
  {
    "question": "What are the television shows of a company headquartered in Geneva?",
    "SerialNumber": "3522",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Geneva> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Geneva",
        "uri": "http://dbpedia.org/resource/Geneva"
      }
    ],
    "id": "a8ff069915554ce8b52b95787f1e84ce",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the president of Wyche Fowler ?",
    "SerialNumber": "3523",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wyche_Fowler> <http://dbpedia.org/ontology/president> ?uri } ",
    "entity mapping": [
      {
        "label": "Wyche Fowler",
        "uri": "http://dbpedia.org/resource/Wyche_Fowler"
      }
    ],
    "id": "9bea6db7df12415083f728032f9327a1",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "How many party are there of the office holders whose one of the party is Janata Dal ?",
    "SerialNumber": "3525",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/otherParty> ?uri }",
    "entity mapping": [
      {
        "label": "Janata Dal",
        "uri": "http://dbpedia.org/resource/Janata_Dal"
      }
    ],
    "id": "6d9643fb5f044ea2b9b9c29f1cc443c2",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      }
    ]
  },
  {
    "question": "How many causes of death have been associated with American citizens?",
    "SerialNumber": "3528",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "American",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "d4e20aa278bc4c0daee027c3c77b2377",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/property/citizenship"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "Is Bluebird the grandsire of Miss Potential?",
    "SerialNumber": "3530",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Miss_Potential> <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Bluebird> }",
    "entity mapping": [
      {
        "label": "Miss Potential",
        "uri": "http://dbpedia.org/resource/Miss_Potential"
      },
      {
        "label": "Bluebird",
        "uri": "http://dbpedia.org/resource/Bluebird"
      }
    ],
    "id": "93986b8aaf5c4a2c9d3b656860306d2a",
    "predicate mapping": [
      {
        "label": "grandsire",
        "uri": "http://dbpedia.org/ontology/grandsire"
      }
    ]
  },
  {
    "question": "Is semnani one of the languages spoken in Iran?",
    "SerialNumber": "3532",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Iran> <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages> }",
    "entity mapping": [
      {
        "label": "Iran",
        "uri": "http://dbpedia.org/resource/Iran"
      },
      {
        "label": "semnani",
        "uri": "http://dbpedia.org/resource/Semnani_languages"
      }
    ],
    "id": "9360bc93c0e246c4a7bc4ac32f5f86c9",
    "predicate mapping": [
      {
        "label": "languages",
        "uri": "http://dbpedia.org/property/languages"
      }
    ]
  },
  {
    "question": "List everyone who got their training in the city of California?",
    "SerialNumber": "3533",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/training> ?x  . }",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "2f0f958ee8884f229d32a6f90c3cb34f",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "training",
        "uri": "http://dbpedia.org/property/training"
      }
    ]
  },
  {
    "question": "Which movies\u0027s screenplay is written by Akiva Goldsman",
    "SerialNumber": "3534",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Akiva_Goldsman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Akiva Goldsman",
        "uri": "http://dbpedia.org/resource/Akiva_Goldsman"
      }
    ],
    "id": "899f6fb23f3148599baf961c74ad532d",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who is the associate of Thomas Bryan Martin ?",
    "SerialNumber": "3536",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri } ",
    "entity mapping": [
      {
        "label": "Thomas Bryan Martin",
        "uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin"
      }
    ],
    "id": "8a3172ebec544494a91ab3f49a5376e6",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      }
    ]
  },
  {
    "question": "List the academic discipline of the journals whose one of the discipline is neuro imaging ?",
    "SerialNumber": "3539",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Neuroimaging> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "neuro imaging",
        "uri": "http://dbpedia.org/resource/Neuroimaging"
      }
    ],
    "id": "0de77adbc13b469fb9d23dec23d37f13",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      },
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      },
      {
        "label": "academic",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "Which countries were led by Pietro Parolin?",
    "SerialNumber": "3540",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Pietro_Parolin>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Pietro Parolin",
        "uri": "http://dbpedia.org/resource/Pietro_Parolin"
      }
    ],
    "id": "70ff4d76a1bd447eb931dd8fdcdb1fc2",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "was the first national bank and trust building architectured by Chicago?",
    "SerialNumber": "3541",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Chicago> }",
    "entity mapping": [
      {
        "label": "first national bank and trust building",
        "uri": "http://dbpedia.org/resource/First_National_Bank_and_Trust_Building_(Lima,_Ohio)"
      },
      {
        "label": "Chicago",
        "uri": "http://dbpedia.org/resource/Chicago"
      }
    ],
    "id": "db1ffdbdbf064f84a06c61655ccb183a",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      }
    ]
  },
  {
    "question": "Where does the road starting from Madison, Wisconsin end?",
    "SerialNumber": "3542",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Madison,_Wisconsin> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
    "entity mapping": [
      {
        "label": "Madison, Wisconsin",
        "uri": "http://dbpedia.org/resource/Madison,_Wisconsin"
      }
    ],
    "id": "bce5c81618704a358d4db3d4d5497dc3",
    "predicate mapping": [
      {
        "label": "end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "starting",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road"
      }
    ]
  },
  {
    "question": "What sports are played in schools in the capital region?",
    "SerialNumber": "3544",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Capital_region> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "capital region",
        "uri": "http://dbpedia.org/resource/Capital_region"
      }
    ],
    "id": "7847a3288f5a482388944047d3b9e4ce",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "What are the movies written by Nick Castle?",
    "SerialNumber": "3547",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Nick_Castle>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Nick Castle",
        "uri": "http://dbpedia.org/resource/Nick_Castle"
      }
    ],
    "id": "b313e3a99d844bfca33d9b8c30f75a34",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many bands began in Birmingham?",
    "SerialNumber": "3549",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/Birmingham>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Birmingham",
        "uri": "http://dbpedia.org/resource/Birmingham"
      }
    ],
    "id": "5e85a463cae048ce8b509e5c2d31f902",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Which licensee of the WRVU is also the alma mater of the Todd J. Campbell ?",
    "SerialNumber": "3551",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WRVU> <http://dbpedia.org/property/licensee> ?uri. <http://dbpedia.org/resource/Todd_J._Campbell> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "WRVU",
        "uri": "http://dbpedia.org/resource/WRVU"
      },
      {
        "label": "Todd J. Campbell",
        "uri": "http://dbpedia.org/resource/Todd_J._Campbell"
      }
    ],
    "id": "0cf8b22d4530493c952e2a62d734586c",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Which currency of Republic of Montenegro is also the currency of the French Southern and Antarctic Lands ?",
    "SerialNumber": "3552",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)> <http://dbpedia.org/property/currency> ?uri} ",
    "entity mapping": [
      {
        "label": "French Southern and Antarctic Lands",
        "uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands"
      },
      {
        "label": "Republic of Montenegro",
        "uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)"
      }
    ],
    "id": "4ad9c07443804ff09a9ee80a5d61dcac",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency"
      }
    ]
  },
  {
    "question": "Name the Chris Marve\u0027s school ?",
    "SerialNumber": "3553",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chris_Marve> <http://dbpedia.org/ontology/school> ?uri } ",
    "entity mapping": [
      {
        "label": "Chris Marve",
        "uri": "http://dbpedia.org/resource/Chris_Marve"
      }
    ],
    "id": "7acd068884a6483199c2fd7bdd37c988",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school"
      }
    ]
  },
  {
    "question": "Give me a count of movies distributed by Warner Bros?",
    "SerialNumber": "3561",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros.>  . }",
    "entity mapping": [
      {
        "label": "Warner Bros?",
        "uri": "http://dbpedia.org/resource/Warner_Bros."
      }
    ],
    "id": "7467291024494dcd878d0a375b75d0a8",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      }
    ]
  },
  {
    "question": "Who owns the broadcast network founded by CNN?",
    "SerialNumber": "3563",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "entity mapping": [
      {
        "label": "CNN",
        "uri": "http://dbpedia.org/resource/CNN"
      }
    ],
    "id": "1466144570d843389c2cc9e911698213",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "broadcast network",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork"
      }
    ]
  },
  {
    "question": "Name the television show with opening theme as Te Deum and is composed by Marc-Antoine Charpentier?",
    "SerialNumber": "3565",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Marc-Antoine_Charpentier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Te Deum",
        "uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)"
      },
      {
        "label": "Marc-Antoine Charpentier",
        "uri": "http://dbpedia.org/resource/Marc-Antoine_Charpentier"
      }
    ],
    "id": "d17b83f85f7c433e9f2c91eab0577727",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the name of the river whose mouth country is Mozambique and source region is North-Western Province, Zambia?",
    "SerialNumber": "3566",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique> . ?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Mozambique",
        "uri": "http://dbpedia.org/resource/Mozambique"
      },
      {
        "label": "North-Western Province, Zambia",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia"
      }
    ],
    "id": "ab1dd6e665cc4025b061eb4a3e83e59f",
    "predicate mapping": [
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/property/mouthCountry"
      },
      {
        "label": "source region",
        "uri": "http://dbpedia.org/ontology/sourceRegion"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Did nokia 215 has the series 30+ OS?",
    "SerialNumber": "3567",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nokia_215> <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Series_30+> }",
    "entity mapping": [
      {
        "label": "nokia 215",
        "uri": "http://dbpedia.org/resource/Nokia_215"
      },
      {
        "label": "series 30+",
        "uri": "http://dbpedia.org/resource/Series_30+"
      }
    ],
    "id": "d809177595bc45df9d37b6e201e2516a",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os"
      }
    ]
  },
  {
    "question": "Sampson Cudjoe plays for the Ghana national team?",
    "SerialNumber": "3568",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sampson_Cudjoe> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Ghana> }",
    "entity mapping": [
      {
        "label": "Sampson Cudjoe",
        "uri": "http://dbpedia.org/resource/Sampson_Cudjoe"
      },
      {
        "label": "Ghana national team",
        "uri": "http://dbpedia.org/resource/Ghana"
      }
    ],
    "id": "c1a557197361403b93c245a8252279ca",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "What is the producer of the television shows whose channel is CBBC?",
    "SerialNumber": "3570",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/CBBC_(TV_channel)> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "CBBC",
        "uri": "http://dbpedia.org/resource/CBBC_(TV_channel)"
      }
    ],
    "id": "09cdda0da032441592256ac3ea5b7206",
    "predicate mapping": [
      {
        "label": "channel",
        "uri": "http://dbpedia.org/property/channel"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the interest of the scientists whose one of the field is Chinese poetry ?",
    "SerialNumber": "3571",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Chinese_poetry> . ?x <http://dbpedia.org/property/fields> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Chinese poetry",
        "uri": "http://dbpedia.org/resource/Chinese_poetry"
      }
    ],
    "id": "c9675b3e25a74a45b74ce591e393e65c",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Whihc uni did Joshua A. Siegel attend ?",
    "SerialNumber": "3573",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joshua_A._Siegel> <http://dbpedia.org/property/education> ?uri } ",
    "entity mapping": [
      {
        "label": "Joshua A. Siegel",
        "uri": "http://dbpedia.org/resource/Joshua_A._Siegel"
      }
    ],
    "id": "2d2934c87b0e4eefa554db84e9abe251",
    "predicate mapping": [
      {
        "label": "attend",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "How many licensee are there, of the radio stations whose area is Nashville, Tennessee ?",
    "SerialNumber": "3574",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/area> <http://dbpedia.org/resource/Nashville,_Tennessee> . ?x <http://dbpedia.org/property/licensee> ?uri  . }",
    "entity mapping": [
      {
        "label": "Nashville, Tennessee",
        "uri": "http://dbpedia.org/resource/Nashville,_Tennessee"
      }
    ],
    "id": "e6047de588e14bb9881a1af25801803c",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      }
    ]
  },
  {
    "question": "Who has a  child named Lori Black and is resting place as Palo Alto, California?",
    "SerialNumber": "3575",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California>  . }",
    "entity mapping": [
      {
        "label": "Lori Black",
        "uri": "http://dbpedia.org/resource/Lori_Black"
      },
      {
        "label": "Palo Alto, California",
        "uri": "http://dbpedia.org/resource/Palo_Alto,_California"
      }
    ],
    "id": "cf382df024a340a4876a4c3651d44937",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace"
      }
    ]
  },
  {
    "question": "Who is the artist of the album which has the song I Can\u0027t Change the World ?",
    "SerialNumber": "3576",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/I_Can\u0027t_Change_the_World> <http://dbpedia.org/property/album> ?x . ?x <http://dbpedia.org/property/artist> ?uri  . }",
    "entity mapping": [
      {
        "label": "I Can\u0027t Change the World",
        "uri": "http://dbpedia.org/resource/I_Can\u0027t_Change_the_World"
      }
    ],
    "id": "62d3a91ca55d4dadbd13109a663caf4b",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "What is the successor of PlayStation 4",
    "SerialNumber": "3578",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/PlayStation_4>  . }",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "uri": "http://dbpedia.org/resource/PlayStation_4"
      }
    ],
    "id": "f71102a3f26440088bc3bb2f7cb2a423",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      }
    ]
  },
  {
    "question": "In which country is the Duong river?",
    "SerialNumber": "3581",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Đuống_River> <http://dbpedia.org/ontology/sourceCountry> ?uri  . }",
    "entity mapping": [
      {
        "label": "Duong river",
        "uri": "http://dbpedia.org/resource/Đuống_River"
      }
    ],
    "id": "a39215c00d904d629a2ea30d237281e9",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      }
    ]
  },
  {
    "question": "List the awards won by the film director of Chicken Run?",
    "SerialNumber": "3582",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chicken_Run> <http://dbpedia.org/property/director> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Chicken Run",
        "uri": "http://dbpedia.org/resource/Chicken_Run"
      }
    ],
    "id": "1d5d1578a88e4fbcb0dcac66ec5eaac5",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Which band\u0027s past member are Joe Jonas and Nick Jonas?",
    "SerialNumber": "3584",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Nick_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Joe Jonas",
        "uri": "http://dbpedia.org/resource/Joe_Jonas"
      },
      {
        "label": "Nick Jonas",
        "uri": "http://dbpedia.org/resource/Nick_Jonas"
      }
    ],
    "id": "f1a9ded56bf842f4bed9125161a8de0b",
    "predicate mapping": [
      {
        "label": "member past",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "member past",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "What is the religious affiliation of Neungin High School?",
    "SerialNumber": "3585",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri } ",
    "entity mapping": [
      {
        "label": "Neungin High School",
        "uri": "http://dbpedia.org/resource/Neungin_High_School"
      }
    ],
    "id": "e8726e19e919406eba5bbec57e2e6471",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      }
    ]
  },
  {
    "question": "List the common official language of the ladonia and Empire of Atlantium ?",
    "SerialNumber": "3586",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ladonia_(micronation)> <http://dbpedia.org/ontology/officialLanguage> ?uri. <http://dbpedia.org/resource/Empire_of_Atlantium> <http://dbpedia.org/ontology/officialLanguage> ?uri . }",
    "entity mapping": [
      {
        "label": "ladonia",
        "uri": "http://dbpedia.org/resource/Ladonia_(micronation)"
      },
      {
        "label": "Empire of Atlantium",
        "uri": "http://dbpedia.org/resource/Empire_of_Atlantium"
      }
    ],
    "id": "66b48fe8be2c4bf3b2ffb8e72ab4b3ce",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      }
    ]
  },
  {
    "question": "What is the name of the characters created by Frank Miller?",
    "SerialNumber": "3587",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Frank_Miller_(comics)> . ?x <http://dbpedia.org/property/characterName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Frank Miller",
        "uri": "http://dbpedia.org/resource/Frank_Miller_(comics)"
      }
    ],
    "id": "ae769d3fce084866a06c22f70221aaa8",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characterName"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Does the stylistic origins of Plena lie in the Caribbean?",
    "SerialNumber": "3588",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Plena> <http://dbpedia.org/property/stylisticOrigins> <http://dbpedia.org/resource/Caribbean> }",
    "entity mapping": [
      {
        "label": "Plena",
        "uri": "http://dbpedia.org/resource/Plena"
      },
      {
        "label": "Caribbean",
        "uri": "http://dbpedia.org/resource/Caribbean"
      }
    ],
    "id": "574ac42d309a4676893b0f1e4f291a36",
    "predicate mapping": [
      {
        "label": "stylistic origins",
        "uri": "http://dbpedia.org/property/stylisticOrigins"
      }
    ]
  },
  {
    "question": "Whci co founder of Sea gayle Music is also the artist of Brad Paisley Discography /",
    "SerialNumber": "3591",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Sea_Gayle_Music> <http://dbpedia.org/property/founder> ?uri} ",
    "entity mapping": [
      {
        "label": "Brad Paisley Discography",
        "uri": "http://dbpedia.org/resource/Brad_Paisley_discography"
      },
      {
        "label": "Sea gayle Music",
        "uri": "http://dbpedia.org/resource/Sea_Gayle_Music"
      }
    ],
    "id": "ea72af60227b4132a3a71b2eefe30314",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      }
    ]
  },
  {
    "question": "Whose album is Haiti, I am sorry?",
    "SerialNumber": "3592",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Haiti_I_Am_Sorry> <http://dbpedia.org/ontology/album> ?uri } ",
    "entity mapping": [
      {
        "label": "Haiti, I am sorry",
        "uri": "http://dbpedia.org/resource/Haiti_I_Am_Sorry"
      }
    ],
    "id": "34b9dabc67ac415fab309f50d5b45687",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      }
    ]
  },
  {
    "question": "What is the american football league whose champion is from Kansas City, Missouri?",
    "SerialNumber": "3594",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Kansas_City,_Missouri> . ?uri <http://dbpedia.org/property/champion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballLeague>}",
    "entity mapping": [
      {
        "label": "Kansas City, Missouri",
        "uri": "http://dbpedia.org/resource/Kansas_City,_Missouri"
      }
    ],
    "id": "b4b796c110644d17980fe538847023e5",
    "predicate mapping": [
      {
        "label": "City",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "champion",
        "uri": "http://dbpedia.org/property/champion"
      },
      {
        "label": "american football league",
        "uri": "http://dbpedia.org/ontology/AmericanFootballLeague"
      }
    ]
  },
  {
    "question": "For which other teams have the past Boston Bruins members played?",
    "SerialNumber": "3596",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Boston_Bruins> . ?x <http://dbpedia.org/property/playedFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Boston Bruins",
        "uri": "http://dbpedia.org/resource/Boston_Bruins"
      }
    ],
    "id": "3a91f21a1ee04fa5a47b2f2b97a707ec",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "Who directed The Haunted House ?",
    "SerialNumber": "3597",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri } ",
    "entity mapping": [
      {
        "label": "The Haunted House",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)"
      }
    ],
    "id": "246a4b432f5c4660a33367cb504c70d8",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/ontology/director"
      }
    ]
  },
  {
    "question": "For how many movies are there whose musicians home town is in Volos ?",
    "SerialNumber": "3598",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Volos> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Volos",
        "uri": "http://dbpedia.org/resource/Volos"
      }
    ],
    "id": "194f4e5619af43f0a4200140d98ede3b",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "what awards have been given to A. Peter Dewey?",
    "SerialNumber": "3601",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A._Peter_Dewey> <http://dbpedia.org/ontology/award> ?uri } ",
    "entity mapping": [
      {
        "label": "A. Peter Dewey",
        "uri": "http://dbpedia.org/resource/A._Peter_Dewey"
      }
    ],
    "id": "d0da6ce614904c6f90c0c441e04f16b5",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "From how many different places did the weapons used in the American Indian wars originate?",
    "SerialNumber": "3604",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/usedInWar> <http://dbpedia.org/resource/American_Indian_Wars> . ?x <http://dbpedia.org/property/origin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "American Indian wars",
        "uri": "http://dbpedia.org/resource/American_Indian_Wars"
      }
    ],
    "id": "37572c57bb164aba982b23993acc3b34",
    "predicate mapping": [
      {
        "label": "used",
        "uri": "http://dbpedia.org/ontology/usedInWar"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Count all the shows whose music composers are in Oysterhead.",
    "SerialNumber": "3609",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Oysterhead> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Oysterhead",
        "uri": "http://dbpedia.org/resource/Oysterhead"
      }
    ],
    "id": "2712e77ee9714f4e9dc75aee139c947d",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "composers",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which awards have Ingmar Bergman won?",
    "SerialNumber": "3610",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri } ",
    "entity mapping": [
      {
        "label": "Ingmar Bergman",
        "uri": "http://dbpedia.org/resource/Ingmar_Bergman"
      }
    ],
    "id": "f107cdaf5a3b4793ad0a9ba36ca5c01c",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "In which timezone does Khok Kwang lie?",
    "SerialNumber": "3611",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khok_Kwang> <http://dbpedia.org/ontology/timeZone> ?uri } ",
    "entity mapping": [
      {
        "label": "Khok Kwang",
        "uri": "http://dbpedia.org/resource/Khok_Kwang"
      }
    ],
    "id": "db74d95d147e42748b823e8d8359a97a",
    "predicate mapping": [
      {
        "label": "timezone",
        "uri": "http://dbpedia.org/ontology/timeZone"
      }
    ]
  },
  {
    "question": "Which country has leaders  Karu Jayasuriya and Ranil Wickremesinghe?",
    "SerialNumber": "3614",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Karu_Jayasuriya> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Ranil_Wickremesinghe> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Karu Jayasuriya",
        "uri": "http://dbpedia.org/resource/Karu_Jayasuriya"
      },
      {
        "label": "Ranil Wickremesinghe",
        "uri": "http://dbpedia.org/resource/Ranil_Wickremesinghe"
      }
    ],
    "id": "7f16b2da9f984b398e80a3bf82fdb761",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "List the software which uses Microsoft Windows as their operating system ?",
    "SerialNumber": "3615",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      }
    ],
    "id": "3ebcace84e5747f29673314099a70674",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Where did Louis chevrolet die ?",
    "SerialNumber": "3618",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Louis_Chevrolet> <http://dbpedia.org/property/deathPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "Louis chevrolet",
        "uri": "http://dbpedia.org/resource/Louis_Chevrolet"
      }
    ],
    "id": "32d100aad346478bbb68b3ce1b5a8520",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "who married crystal harris?",
    "SerialNumber": "3619",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Crystal_Harris>  . }",
    "entity mapping": [
      {
        "label": "crystal harris",
        "uri": "http://dbpedia.org/resource/Crystal_Harris"
      }
    ],
    "id": "13fab3852bd645ef8d7c43e3d10a9d2b",
    "predicate mapping": [
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse"
      }
    ]
  },
  {
    "question": "What is the information appliance whose successor is PlayStation 4 and maker is Foxconn?",
    "SerialNumber": "3626",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/manufacturer> <http://dbpedia.org/resource/Foxconn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "uri": "http://dbpedia.org/resource/PlayStation_4"
      },
      {
        "label": "Foxconn",
        "uri": "http://dbpedia.org/resource/Foxconn"
      }
    ],
    "id": "b7b4af490fc749c39bb8f1aebd991ebd",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "maker",
        "uri": "http://dbpedia.org/property/manufacturer"
      },
      {
        "label": "information appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "List all the bands which have members of the band Guy in them?",
    "SerialNumber": "3627",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Guy_(band)> <http://dbpedia.org/ontology/bandMember> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
    "entity mapping": [
      {
        "label": "Guy",
        "uri": "http://dbpedia.org/resource/Guy_(band)"
      }
    ],
    "id": "f7360f8ebf504cb5977b2fe626623fb6",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "Which route junction of the Rhode Island Route 15 is the place of birth of the Michael Poulin?",
    "SerialNumber": "3629",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhode_Island_Route_15> <http://dbpedia.org/ontology/routeJunction> ?uri. <http://dbpedia.org/resource/Michael_Poulin> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Route 15",
        "uri": "http://dbpedia.org/resource/Rhode_Island_Route_15"
      },
      {
        "label": "Michael Poulin",
        "uri": "http://dbpedia.org/resource/Michael_Poulin"
      }
    ],
    "id": "98d2e418f14f4bf3ad8a396f172f6166",
    "predicate mapping": [
      {
        "label": "route junction",
        "uri": "http://dbpedia.org/ontology/routeJunction"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Name a fictional character whose relative is Uncle Henry and species is Human?",
    "SerialNumber": "3630",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Uncle_Henry_(Oz)> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Human>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Uncle Henry",
        "uri": "http://dbpedia.org/resource/Uncle_Henry_(Oz)"
      },
      {
        "label": "Human",
        "uri": "http://dbpedia.org/resource/Human"
      }
    ],
    "id": "3e991adbec6041f0a8ff29cbff44f27d",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Which show\u0027s theme music composer\u0027s label is MapleMusic Recordings?",
    "SerialNumber": "3631",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/MapleMusic_Recordings> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "MapleMusic Recordings",
        "uri": "http://dbpedia.org/resource/MapleMusic_Recordings"
      }
    ],
    "id": "b7cb450c48fe451eb780f8d368eeaab9",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the draft team of Dale Mitchell (ice hockey) ?",
    "SerialNumber": "3633",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Dale Mitchell (ice hockey)",
        "uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)"
      }
    ],
    "id": "8f151cb3f067464695a3b7bb410d7636",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/ontology/draftTeam"
      }
    ]
  },
  {
    "question": "To which educational institutions did Lesli Sanchez go for her studies?",
    "SerialNumber": "3635",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Leslie_Sanchez> <http://dbpedia.org/ontology/education> ?uri } ",
    "entity mapping": [
      {
        "label": "Lesli Sanchez",
        "uri": "http://dbpedia.org/resource/Leslie_Sanchez"
      }
    ],
    "id": "8533f08f0f2e439792341591e3b8d82e",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/education"
      }
    ]
  },
  {
    "question": "Who was the coach of 1972 Oakland Raiders season ?",
    "SerialNumber": "3636",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1972_Oakland_Raiders_season> <http://dbpedia.org/ontology/coach> ?uri } ",
    "entity mapping": [
      {
        "label": "1972 Oakland Raiders season",
        "uri": "http://dbpedia.org/resource/1972_Oakland_Raiders_season"
      }
    ],
    "id": "fe62a0c11f31451991b7023a4fd71fae",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      }
    ]
  },
  {
    "question": "What are Jerry Bock\u0027s musicals based upon?",
    "SerialNumber": "3637",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jerry_Bock> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "Jerry Bock",
        "uri": "http://dbpedia.org/resource/Jerry_Bock"
      }
    ],
    "id": "2e462e329e0c4e94aae619104e268274",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "based upon",
        "uri": "http://dbpedia.org/ontology/basedOn"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "Name the rive whose mouth is located in Limerick and location is Dowra?",
    "SerialNumber": "3640",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Dowra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Limerick",
        "uri": "http://dbpedia.org/resource/Limerick"
      },
      {
        "label": "Dowra",
        "uri": "http://dbpedia.org/resource/Dowra"
      }
    ],
    "id": "442be0d7fdb3489890f69cc2e0046f6c",
    "predicate mapping": [
      {
        "label": "location mouth",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "rive",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What religion does roshan ranasinghe and nhiek tioulong follow?",
    "SerialNumber": "3641",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roshan_Ranasinghe> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Nhiek_Tioulong> <http://dbpedia.org/ontology/religion> ?uri} ",
    "entity mapping": [
      {
        "label": "roshan ranasinghe",
        "uri": "http://dbpedia.org/resource/Roshan_Ranasinghe"
      },
      {
        "label": "nhiek tioulong",
        "uri": "http://dbpedia.org/resource/Nhiek_Tioulong"
      }
    ],
    "id": "09da33e36b464a00852d478e1a46581d",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What is the place where the mayor\u0027s wife is Jean-Marc Germain?",
    "SerialNumber": "3643",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Jean-Marc_Germain> . ?uri <http://dbpedia.org/ontology/mayor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Jean-Marc Germain",
        "uri": "http://dbpedia.org/resource/Jean-Marc_Germain"
      }
    ],
    "id": "43d23927b3204b4c9c076cb77e98994a",
    "predicate mapping": [
      {
        "label": "wife",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "List the employments of people who died in Tampa, Florida.",
    "SerialNumber": "3645",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Tampa, Florida",
        "uri": "http://dbpedia.org/resource/Tampa,_Florida"
      }
    ],
    "id": "9e676dc4d1474a5681415891d46a9c4b",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "employment",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "List the destination of Novair International Airways ?",
    "SerialNumber": "3647",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/ontology/destination> ?uri } ",
    "entity mapping": [
      {
        "label": "Novair International Airways",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways"
      }
    ],
    "id": "f8a314a604de4c88b0f8ed83a5bfb2b4",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination"
      }
    ]
  },
  {
    "question": "Name the television show whose subsequent work is Frasier and opening theme is Where Everybody Knows Your Name?",
    "SerialNumber": "3651",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Frasier",
        "uri": "http://dbpedia.org/resource/Frasier"
      },
      {
        "label": "Where Everybody Knows Your Name",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name"
      }
    ],
    "id": "a91c0aba4eef49c387ca0f4df2ce1ae2",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What things canonized John of Damascus and and also venerated the Edwin of Northumbria ?",
    "SerialNumber": "3652",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri. <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri} ",
    "entity mapping": [
      {
        "label": "John of Damascus",
        "uri": "http://dbpedia.org/resource/John_of_Damascus"
      },
      {
        "label": "Edwin of Northumbria",
        "uri": "http://dbpedia.org/resource/Edwin_of_Northumbria"
      }
    ],
    "id": "78468cadef404a5682645a749efce5c7",
    "predicate mapping": [
      {
        "label": "canonized",
        "uri": "http://dbpedia.org/ontology/canonizedBy"
      },
      {
        "label": "venerated",
        "uri": "http://dbpedia.org/property/veneratedIn"
      }
    ]
  },
  {
    "question": "Who was engaged in wars of Fort Gadsden and Fort Barrancas?",
    "SerialNumber": "3654",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden> . ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Barrancas> . }",
    "entity mapping": [
      {
        "label": "Fort Gadsden",
        "uri": "http://dbpedia.org/resource/Fort_Gadsden"
      },
      {
        "label": "Fort Barrancas",
        "uri": "http://dbpedia.org/resource/Fort_Barrancas"
      }
    ],
    "id": "d100a042da084c23a4942886d7281e88",
    "predicate mapping": [
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "List the religions of the commanders of Royal Thai Army.",
    "SerialNumber": "3655",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Royal_Thai_Army> <http://dbpedia.org/property/notableCommanders> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Royal Thai Army",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army"
      }
    ],
    "id": "a8f0871a3d594450b08d3676964a27ff",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Name the office holder who was married to Dolley Madison and has resting palce as Montpelier ?",
    "SerialNumber": "3658",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "uri": "http://dbpedia.org/resource/Dolley_Madison"
      },
      {
        "label": "Montpelier",
        "uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)"
      }
    ],
    "id": "39a0e27d0c5e43f9816a5cea3a37ea80",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "resting",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Is Hard Candy Fitness one of the divisions of Moscow?",
    "SerialNumber": "3659",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hard_Candy_Fitness> <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Moscow> }",
    "entity mapping": [
      {
        "label": "Hard Candy Fitness",
        "uri": "http://dbpedia.org/resource/Hard_Candy_Fitness"
      },
      {
        "label": "Moscow",
        "uri": "http://dbpedia.org/resource/Moscow"
      }
    ],
    "id": "1abffd197c8c4787bef810c59eec010f",
    "predicate mapping": [
      {
        "label": "divisions",
        "uri": "http://dbpedia.org/property/divisions"
      }
    ]
  },
  {
    "question": "What are the awards won by the person who is an authority of Latania verschaffeltii ?",
    "SerialNumber": "3660",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Latania_verschaffeltii> <http://dbpedia.org/property/binomialAuthority> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Latania verschaffeltii",
        "uri": "http://dbpedia.org/resource/Latania_verschaffeltii"
      }
    ],
    "id": "6ac4a7bdfb6c4d5fb1e936da0dd3818f",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/property/binomialAuthority"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which parent comapny of hypnotize Minds is the label of the Producers , a 2005 film ?",
    "SerialNumber": "3662",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri} ",
    "entity mapping": [
      {
        "label": "hypnotize Minds",
        "uri": "http://dbpedia.org/resource/Hypnotize_Minds"
      },
      {
        "label": "the Producers",
        "uri": "http://dbpedia.org/resource/The_Producers_(2005_film)"
      }
    ],
    "id": "136a14b3127e45c89da289d979fa67a8",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "Name the software whose operating system is Mac OS and programming language is C++ ?",
    "SerialNumber": "3664",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Mac OS",
        "uri": "http://dbpedia.org/resource/Mac_OS"
      },
      {
        "label": "C++",
        "uri": "http://dbpedia.org/resource/C++"
      }
    ],
    "id": "fc12f11fa89b4928bf724ad752ba67f7",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Is Trevor Peacock the narrator of Fred Claus?",
    "SerialNumber": "3666",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fred_Claus> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock> }",
    "entity mapping": [
      {
        "label": "Fred Claus",
        "uri": "http://dbpedia.org/resource/Fred_Claus"
      },
      {
        "label": "Trevor Peacock",
        "uri": "http://dbpedia.org/resource/Trevor_Peacock"
      }
    ],
    "id": "6d534a6445c944a68ed033f2e18b64a2",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrator"
      }
    ]
  },
  {
    "question": "List few authors whose education took place in Saint Petersburg ?   ",
    "SerialNumber": "3669",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Saint_Petersburg>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Saint Petersburg",
        "uri": "http://dbpedia.org/resource/Saint_Petersburg"
      }
    ],
    "id": "4512ce93850d4a7d9ab2ade188c279c8",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "authors",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "What all are written in the C programming language?",
    "SerialNumber": "3670",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C_(programming_language)> } ",
    "entity mapping": [
      {
        "label": "C programming language",
        "uri": "http://dbpedia.org/resource/C_(programming_language)"
      }
    ],
    "id": "c08136b5c371483aa23d66de3825c01e",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      }
    ]
  },
  {
    "question": "List the producer of the TV shows whose company is HBO.",
    "SerialNumber": "3671",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?x <http://dbpedia.org/ontology/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      }
    ],
    "id": "e8ac868bdcc144fdaf15f23486f90d11",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the alma mater of the senator who is the successor of Warren Magnuson ?",
    "SerialNumber": "3672",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Warren_Magnuson> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "entity mapping": [
      {
        "label": "Warren Magnuson",
        "uri": "http://dbpedia.org/resource/Warren_Magnuson"
      }
    ],
    "id": "e768b113972d46d2bdb465a06d6051cc",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator"
      }
    ]
  },
  {
    "question": "Is Andrew Lincoln the narrator of Million Dollar Traders?",
    "SerialNumber": "3673",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Million_Dollar_Traders> <http://dbpedia.org/ontology/narrator> <http://dbpedia.org/resource/Andrew_Lincoln> }",
    "entity mapping": [
      {
        "label": "Million Dollar Traders",
        "uri": "http://dbpedia.org/resource/Million_Dollar_Traders"
      },
      {
        "label": "Andrew Lincoln",
        "uri": "http://dbpedia.org/resource/Andrew_Lincoln"
      }
    ],
    "id": "2087fc4decb740e28f5e56190e001c68",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/ontology/narrator"
      }
    ]
  },
  {
    "question": "What is the mascot of Blytheville High School ?",
    "SerialNumber": "3674",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blytheville_High_School> <http://dbpedia.org/property/mascot> ?uri } ",
    "entity mapping": [
      {
        "label": "Blytheville High School",
        "uri": "http://dbpedia.org/resource/Blytheville_High_School"
      }
    ],
    "id": "9aa8b71692cb45da98f3100dd56685da",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "List all the operators of the train who operates in Budapest ?",
    "SerialNumber": "3675",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Budapest> . ?x <http://dbpedia.org/ontology/operator> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Train>}",
    "entity mapping": [
      {
        "label": "Budapest",
        "uri": "http://dbpedia.org/resource/Budapest"
      }
    ],
    "id": "89063b059c9e4f5cb713b5e0ef36cbae",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "train",
        "uri": "http://dbpedia.org/ontology/Train"
      }
    ]
  },
  {
    "question": "Is Eddie Bravo the trainer of Alan Jouban",
    "SerialNumber": "3677",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alan_Jouban> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Eddie_Bravo> }",
    "entity mapping": [
      {
        "label": "Alan Jouban",
        "uri": "http://dbpedia.org/resource/Alan_Jouban"
      },
      {
        "label": "Eddie Bravo",
        "uri": "http://dbpedia.org/resource/Eddie_Bravo"
      }
    ],
    "id": "bdb4b59b7f0f4610ada06b93495ffab9",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer"
      }
    ]
  },
  {
    "question": "What is the content licence of MSX BASIC ?",
    "SerialNumber": "3678",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MSX_BASIC> <http://dbpedia.org/property/license> ?uri } ",
    "entity mapping": [
      {
        "label": "MSX BASIC",
        "uri": "http://dbpedia.org/resource/MSX_BASIC"
      }
    ],
    "id": "7c77b492d45c40f48e4c4c0ffeaac619",
    "predicate mapping": [
      {
        "label": "content licence",
        "uri": "http://dbpedia.org/property/license"
      }
    ]
  },
  {
    "question": "What are some common ingredients used in Swedish dishes?",
    "SerialNumber": "3679",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/country> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/ingredient> ?uri  . }",
    "entity mapping": [
      {
        "label": "Swedish",
        "uri": "http://dbpedia.org/resource/Sweden"
      }
    ],
    "id": "9e3cdcb6a0ab41209cdec09a9cecab0f",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "Into which water bodies does Lake Uniamsi outflow?",
    "SerialNumber": "3681",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniamési> <http://dbpedia.org/property/outflow> ?uri } ",
    "entity mapping": [
      {
        "label": "Lake Uniamsi",
        "uri": "http://dbpedia.org/resource/Lake_Uniamési"
      }
    ],
    "id": "694ed5abdd6e48908b2a1eadf548813c",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow"
      }
    ]
  },
  {
    "question": "What is the mascot of the army unit whose commander is Peter Cosgrove ?",
    "SerialNumber": "3682",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Peter_Cosgrove> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Peter Cosgrove",
        "uri": "http://dbpedia.org/resource/Peter_Cosgrove"
      }
    ],
    "id": "3a6065b0d3374ad382b91a31b16c0214",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Whose former teams are Indianapolis Colts and Carolina Panthers?",
    "SerialNumber": "3683",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Carolina_Panthers> . }",
    "entity mapping": [
      {
        "label": "Indianapolis Colts",
        "uri": "http://dbpedia.org/resource/Indianapolis_Colts"
      },
      {
        "label": "Carolina Panthers",
        "uri": "http://dbpedia.org/resource/Carolina_Panthers"
      }
    ],
    "id": "ee9a79ff6f624c548c57639e0b00a2ba",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "Name the river with mouth palce Essex and source place as Gloucestershire ?",
    "SerialNumber": "3684",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex> . ?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Essex",
        "uri": "http://dbpedia.org/resource/Essex"
      },
      {
        "label": "Gloucestershire",
        "uri": "http://dbpedia.org/resource/Gloucestershire"
      }
    ],
    "id": "42720fe503074225907ca0ab400f8ef7",
    "predicate mapping": [
      {
        "label": "place mouth",
        "uri": "http://dbpedia.org/ontology/mouthPlace"
      },
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What are the notable commanders of the army  whose one of the notable commanders is Paul Hausser?",
    "SerialNumber": "3688",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Paul_Hausser> . ?x <http://dbpedia.org/property/notableCommanders> ?uri  . }",
    "entity mapping": [
      {
        "label": "Paul Hausser",
        "uri": "http://dbpedia.org/resource/Paul_Hausser"
      }
    ],
    "id": "f2c55f3eb1904df9badfcabff21ca4df",
    "predicate mapping": [
      {
        "label": "notable commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      },
      {
        "label": "notable commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      }
    ]
  },
  {
    "question": "Who are the trainersof Candice Michelle?",
    "SerialNumber": "3696",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Candice_Michelle> <http://dbpedia.org/ontology/trainer> ?uri } ",
    "entity mapping": [
      {
        "label": "Candice Michelle",
        "uri": "http://dbpedia.org/resource/Candice_Michelle"
      }
    ],
    "id": "1f783e93f3d8452c965e50e42f038ada",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer"
      }
    ]
  },
  {
    "question": "Does StandBy records distribute via Sony?",
    "SerialNumber": "3697",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Sony> }",
    "entity mapping": [
      {
        "label": "StandBy records",
        "uri": "http://dbpedia.org/resource/StandBy_Records"
      },
      {
        "label": "Sony",
        "uri": "http://dbpedia.org/resource/Sony"
      }
    ],
    "id": "936c843de8c64610be0e8c6e2bbfce06",
    "predicate mapping": [
      {
        "label": "distribute",
        "uri": "http://dbpedia.org/ontology/distributingLabel"
      }
    ]
  },
  {
    "question": "Name the music artist which collaborated with the spouse of Jessi Colter?",
    "SerialNumber": "3698",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Jessi_Colter> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Jessi Colter",
        "uri": "http://dbpedia.org/resource/Jessi_Colter"
      }
    ],
    "id": "de9a66a3c88149bf89b74795d1fb60b8",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "artist music",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "artist music",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Which notable commanders of the Army Group Oberrhein (Germany) is the  leader of the Kriminalpolizei?",
    "SerialNumber": "3699",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> ?uri. <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri} ",
    "entity mapping": [
      {
        "label": "Army Group Oberrhein (Germany)",
        "uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)"
      },
      {
        "label": "Kriminalpolizei",
        "uri": "http://dbpedia.org/resource/Kriminalpolizei"
      }
    ],
    "id": "5c71304648b546e691fb6b41fbe5fa5d",
    "predicate mapping": [
      {
        "label": "notable commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "Who is the prime minister of the successor of Kingsley Wood?",
    "SerialNumber": "3700",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kingsley_Wood> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kingsley Wood",
        "uri": "http://dbpedia.org/resource/Kingsley_Wood"
      }
    ],
    "id": "5b0935d4611b417b8cf6c43cffce6ccc",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "which band was Roger waters in?",
    "SerialNumber": "3701",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Roger_Waters> } ",
    "entity mapping": [
      {
        "label": "Roger waters",
        "uri": "http://dbpedia.org/resource/Roger_Waters"
      }
    ],
    "id": "b3398e30fff34e49a28ba477ae3090e9",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      }
    ]
  },
  {
    "question": "Is Seattle the Ship builder of USS Marmora (IX-189)?",
    "SerialNumber": "3702",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/USS_Marmora_(IX-189)> <http://dbpedia.org/property/shipBuilder> <http://dbpedia.org/resource/Seattle> }",
    "entity mapping": [
      {
        "label": "USS Marmora (IX-189)",
        "uri": "http://dbpedia.org/resource/USS_Marmora_(IX-189)"
      },
      {
        "label": "Seattle",
        "uri": "http://dbpedia.org/resource/Seattle"
      }
    ],
    "id": "882175c3e40a4de0a704ef91c54d2371",
    "predicate mapping": [
      {
        "label": "Ship builder",
        "uri": "http://dbpedia.org/property/shipBuilder"
      }
    ]
  },
  {
    "question": "What is the region of Kim Sawchuk ?",
    "SerialNumber": "3703",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri } ",
    "entity mapping": [
      {
        "label": "Kim Sawchuk",
        "uri": "http://dbpedia.org/resource/Kim_Sawchuk"
      }
    ],
    "id": "ad99cf1513714c3ebe054b74c3f26900",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "Was Beth Tweddle primarily coached by Amanda Reddin?",
    "SerialNumber": "3705",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beth_Tweddle> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Amanda_Reddin> }",
    "entity mapping": [
      {
        "label": "Beth Tweddle",
        "uri": "http://dbpedia.org/resource/Beth_Tweddle"
      },
      {
        "label": "Amanda Reddin",
        "uri": "http://dbpedia.org/resource/Amanda_Reddin"
      }
    ],
    "id": "ecbf7d5515694a71a3cf386bf6863cef",
    "predicate mapping": [
      {
        "label": "coached",
        "uri": "http://dbpedia.org/property/headcoach"
      }
    ]
  },
  {
    "question": "What is the television show whose judges is Randy Jackson?",
    "SerialNumber": "3706",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Randy Jackson",
        "uri": "http://dbpedia.org/resource/Randy_Jackson"
      }
    ],
    "id": "9093d0d6f2a342f4933ca945615cc566",
    "predicate mapping": [
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the Band whose band member is Mark Middleton?",
    "SerialNumber": "3707",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Mark_Middleton> } ",
    "entity mapping": [
      {
        "label": "Mark Middleton",
        "uri": "http://dbpedia.org/resource/Mark_Middleton"
      }
    ],
    "id": "5c476257c7ae4f8c8fb4b061667cb773",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      }
    ]
  },
  {
    "question": "Was the cover of The adventures of Tom Sawyer designed by Mark Twain?",
    "SerialNumber": "3708",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> <http://dbpedia.org/resource/Mark_Twain> }",
    "entity mapping": [
      {
        "label": "The adventures of Tom Sawyer",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer"
      },
      {
        "label": "Mark Twain",
        "uri": "http://dbpedia.org/resource/Mark_Twain"
      }
    ],
    "id": "a47cf69b01104a72acb249b101f2746a",
    "predicate mapping": [
      {
        "label": "cover",
        "uri": "http://dbpedia.org/ontology/coverArtist"
      }
    ]
  },
  {
    "question": "Is Charles Drummond Ellis a doctoral student of James Chadwick?",
    "SerialNumber": "3710",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/James_Chadwick> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Charles_Drummond_Ellis> }",
    "entity mapping": [
      {
        "label": "James Chadwick",
        "uri": "http://dbpedia.org/resource/James_Chadwick"
      },
      {
        "label": "Charles Drummond Ellis",
        "uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis"
      }
    ],
    "id": "fd60b1d920e4435cbfbbe74a8631fde0",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      }
    ]
  },
  {
    "question": "How many kings and queens have died in the Arabian Peninsula?",
    "SerialNumber": "3711",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Arabian_Peninsula>  . }",
    "entity mapping": [
      {
        "label": "Arabian Peninsula",
        "uri": "http://dbpedia.org/resource/Arabian_Peninsula"
      }
    ],
    "id": "7d16db5ff7dc4f1d820159cb7b83bff8",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Who are relatives of Ozzy Osbourne and Kelly Osbourne?",
    "SerialNumber": "3713",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ozzy_Osbourne> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne> . }",
    "entity mapping": [
      {
        "label": "Ozzy Osbourne",
        "uri": "http://dbpedia.org/resource/Ozzy_Osbourne"
      },
      {
        "label": "Kelly Osbourne",
        "uri": "http://dbpedia.org/resource/Kelly_Osbourne"
      }
    ],
    "id": "6cb6c4470ec840f9990494c4ecebca5f",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      }
    ]
  },
  {
    "question": "What is the purpose of New Zealand Chess Federation ?",
    "SerialNumber": "3714",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Zealand_Chess_Federation> <http://dbpedia.org/property/purpose> ?uri } ",
    "entity mapping": [
      {
        "label": "New Zealand Chess Federation",
        "uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation"
      }
    ],
    "id": "090ae66d24e0419186f917e055d026fd",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      }
    ]
  },
  {
    "question": "What team did Joe Porter and Eddie Anderson play for?",
    "SerialNumber": "3717",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eddie_Anderson_(safety)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Joe_Porter_(American_football)> <http://dbpedia.org/ontology/formerTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Eddie Anderson",
        "uri": "http://dbpedia.org/resource/Eddie_Anderson_(safety)"
      },
      {
        "label": "Joe Porter",
        "uri": "http://dbpedia.org/resource/Joe_Porter_(American_football)"
      }
    ],
    "id": "69daf7da0c5a44ba8f6817c0af2e11d5",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "Producers of what have died in Mississippi?",
    "SerialNumber": "3722",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Mississippi> . ?uri <http://dbpedia.org/ontology/producer> ?x  . }",
    "entity mapping": [
      {
        "label": "Mississippi",
        "uri": "http://dbpedia.org/resource/Mississippi"
      }
    ],
    "id": "774e4d5e2f154ce18749dbfff09b87aa",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "Producer",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "How many universities are there whose country\u0027s capital is Oslo?",
    "SerialNumber": "3724",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Oslo",
        "uri": "http://dbpedia.org/resource/Oslo"
      }
    ],
    "id": "f9e263fc8d484333938c1f47c1e37aef",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/property/capital"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Name some sports played in institutions of Maharashtra?",
    "SerialNumber": "3725",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "Maharashtra",
        "uri": "http://dbpedia.org/resource/Maharashtra"
      }
    ],
    "id": "2d2f1781e9df41a58d97a8ebce31bb6b",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Current players of Colorado Avalanche have previously played for how many different teams?",
    "SerialNumber": "3726",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Colorado_Avalanche> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Colorado Avalanche",
        "uri": "http://dbpedia.org/resource/Colorado_Avalanche"
      }
    ],
    "id": "05e132cfe14a4f008e5be637c21deb07",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "What is the mascot of the unit whose garrison is Canberra ?",
    "SerialNumber": "3730",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Canberra> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Canberra",
        "uri": "http://dbpedia.org/resource/Canberra"
      }
    ],
    "id": "c432ff2350b742d69c0e43d801ee643a",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Horses sired by Karinga Bay have participated in which races?",
    "SerialNumber": "3731",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sire> <http://dbpedia.org/resource/Karinga_Bay> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Karinga Bay",
        "uri": "http://dbpedia.org/resource/Karinga_Bay"
      }
    ],
    "id": "c5daa94158494f458cac5372dfc1da23",
    "predicate mapping": [
      {
        "label": "sire",
        "uri": "http://dbpedia.org/ontology/sire"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "Horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "Is Philosophy the academic discipline of Think (journal)?",
    "SerialNumber": "3732",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Think_(journal)> <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Philosophy> }",
    "entity mapping": [
      {
        "label": "Think (journal)",
        "uri": "http://dbpedia.org/resource/Think_(journal)"
      },
      {
        "label": "Philosophy",
        "uri": "http://dbpedia.org/resource/Philosophy"
      }
    ],
    "id": "232b47d723104bf9af52c6a454123647",
    "predicate mapping": [
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      }
    ]
  },
  {
    "question": "What is the highschool of the american football player who joined the Robert Morris Colonials program?",
    "SerialNumber": "3733",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Robert_Morris_Colonials_football> . ?x <http://dbpedia.org/property/highschool> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Robert Morris Colonials",
        "uri": "http://dbpedia.org/resource/Robert_Morris_Colonials_football"
      }
    ],
    "id": "a3a7404dd7e4412aa9a0da42b4e489a2",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school"
      },
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/property/highschool"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "Who is associated  with the musical artists from Africa \u002770 (band) and Tony Allen ?",
    "SerialNumber": "3737",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Africa_\u002770_(band)> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Allen_(musician)> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Africa \u002770 (band)",
        "uri": "http://dbpedia.org/resource/Africa_\u002770_(band)"
      },
      {
        "label": "Tony Allen",
        "uri": "http://dbpedia.org/resource/Tony_Allen_(musician)"
      }
    ],
    "id": "6b86496784934d179425226207e28786",
    "predicate mapping": [
      {
        "label": "associated musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "associated musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "How many religions are followed by the group whose architectural style can be seen on Sanggar Agung?",
    "SerialNumber": "3738",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Sanggar_Agung> <http://dbpedia.org/property/architecturalStyle> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "entity mapping": [
      {
        "label": "Sanggar Agung",
        "uri": "http://dbpedia.org/resource/Sanggar_Agung"
      }
    ],
    "id": "bdf0f42af4d0461c8f39f953143086ce",
    "predicate mapping": [
      {
        "label": "architectural style",
        "uri": "http://dbpedia.org/property/architecturalStyle"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup"
      }
    ]
  },
  {
    "question": "What are the relatives of the rugby player one of whose relatives is Nick Williams?",
    "SerialNumber": "3739",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Nick_Williams> . ?x <http://dbpedia.org/ontology/relative> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RugbyPlayer>}",
    "entity mapping": [
      {
        "label": "Nick Williams",
        "uri": "http://dbpedia.org/resource/Nick_Williams"
      }
    ],
    "id": "ff16998e9b6149ce8df83c8403a1295b",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "rugby player",
        "uri": "http://dbpedia.org/ontology/RugbyPlayer"
      }
    ]
  },
  {
    "question": "Name the other wine region of the grapes whose one of the wine region is Michigan?",
    "SerialNumber": "3740",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Michigan> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
    "entity mapping": [
      {
        "label": "Michigan",
        "uri": "http://dbpedia.org/resource/Michigan"
      }
    ],
    "id": "133932cb0d5041d89b82a8f25c8ac2fd",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape"
      }
    ]
  },
  {
    "question": "Who is the president of Carl Stokes nad Wyche Fowler ?",
    "SerialNumber": "3745",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri. <http://dbpedia.org/resource/Wyche_Fowler> <http://dbpedia.org/ontology/president> ?uri} ",
    "entity mapping": [
      {
        "label": "Carl Stokes",
        "uri": "http://dbpedia.org/resource/Carl_Stokes"
      },
      {
        "label": "Wyche Fowler",
        "uri": "http://dbpedia.org/resource/Wyche_Fowler"
      }
    ],
    "id": "70bd3dd28bb14512abce694bb6240c86",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "Does GeneWeb have the GPL license?",
    "SerialNumber": "3746",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GeneWeb> <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> }",
    "entity mapping": [
      {
        "label": "GeneWeb",
        "uri": "http://dbpedia.org/resource/GeneWeb"
      },
      {
        "label": "GPL",
        "uri": "http://dbpedia.org/resource/GNU_General_Public_License"
      }
    ],
    "id": "97e02dcf44aa43c1b7cc7a7c155b118f",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license"
      }
    ]
  },
  {
    "question": "Where is the headquarters of Sigma TV",
    "SerialNumber": "3749",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sigma_TV> <http://dbpedia.org/property/headquarters> ?uri } ",
    "entity mapping": [
      {
        "label": "Sigma TV",
        "uri": "http://dbpedia.org/resource/Sigma_TV"
      }
    ],
    "id": "5fa7af236eac494f8047e5fd87a4c812",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "What is the affiliation of Lumbini Bauddha University ?",
    "SerialNumber": "3750",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lumbini_Bauddha_University> <http://dbpedia.org/property/affiliation> ?uri } ",
    "entity mapping": [
      {
        "label": "Lumbini Bauddha University",
        "uri": "http://dbpedia.org/resource/Lumbini_Bauddha_University"
      }
    ],
    "id": "0bac079708b34f219b751ade453305f4",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "Which city amongst the one which belongs to Boundary Dam was the palce for Soccer Bowl \u002776 ?",
    "SerialNumber": "3752",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_\u002776> <http://dbpedia.org/ontology/city> ?uri. <http://dbpedia.org/resource/Boundary_Dam> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "Soccer Bowl \u002776",
        "uri": "http://dbpedia.org/resource/Soccer_Bowl_\u002776"
      },
      {
        "label": "Boundary Dam",
        "uri": "http://dbpedia.org/resource/Boundary_Dam"
      }
    ],
    "id": "32ca4c843ccc459ab2750036206e7aa0",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "belongs to",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "What are the beverages whose origin is England?",
    "SerialNumber": "3753",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/England> } ",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "9f6c919d926a4f7d953fbb687036e0df",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "List down the opponents of Frank Stilwell?",
    "SerialNumber": "3754",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Stilwell> <http://dbpedia.org/ontology/opponent> ?uri } ",
    "entity mapping": [
      {
        "label": "Frank Stilwell",
        "uri": "http://dbpedia.org/resource/Frank_Stilwell"
      }
    ],
    "id": "581ca8f786c64d5a986ef8d22049dc1f",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      }
    ]
  },
  {
    "question": "What is the label of I Pray on Christmas ?",
    "SerialNumber": "3755",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri } ",
    "entity mapping": [
      {
        "label": "I Pray on Christmas",
        "uri": "http://dbpedia.org/resource/I_Pray_on_Christmas"
      }
    ],
    "id": "97e6ac7f9f4e4ae4851eb5a188d00241",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "Is Olyokma River the right tributary of Lena River?",
    "SerialNumber": "3759",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lena_River> <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Olyokma_River> }",
    "entity mapping": [
      {
        "label": "Lena River",
        "uri": "http://dbpedia.org/resource/Lena_River"
      },
      {
        "label": "Olyokma River",
        "uri": "http://dbpedia.org/resource/Olyokma_River"
      }
    ],
    "id": "1e980d04cc974b8bb501dffbdfd46d82",
    "predicate mapping": [
      {
        "label": "right tributary",
        "uri": "http://dbpedia.org/ontology/rightTributary"
      }
    ]
  },
  {
    "question": "What is the debut team of the football player whose college is UCLA Bruins football?",
    "SerialNumber": "3760",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/UCLA_Bruins_football> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GridironFootballPlayer>}",
    "entity mapping": [
      {
        "label": "UCLA Bruins football",
        "uri": "http://dbpedia.org/resource/UCLA_Bruins_football"
      }
    ],
    "id": "1d66893d65934df1a71cb539b5a178c2",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "football",
        "uri": "http://dbpedia.org/ontology/GridironFootballPlayer"
      }
    ]
  },
  {
    "question": "What is the capital of the region which maintains the South Park Bridge ?",
    "SerialNumber": "3761",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/South_Park_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
    "entity mapping": [
      {
        "label": "South Park Bridge",
        "uri": "http://dbpedia.org/resource/South_Park_Bridge"
      }
    ],
    "id": "ba0406c42bb74f8994649087db84bd7f",
    "predicate mapping": [
      {
        "label": "maintains",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      },
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/countySeat"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/Region"
      }
    ]
  },
  {
    "question": "Who has military branches are Colonial troops and Continental Army?",
    "SerialNumber": "3762",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Colonial_troops> . ?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> . }",
    "entity mapping": [
      {
        "label": "Colonial troops",
        "uri": "http://dbpedia.org/resource/Colonial_troops"
      },
      {
        "label": "Continental Army",
        "uri": "http://dbpedia.org/resource/Continental_Army"
      }
    ],
    "id": "ed50cb6eb3d440e1a68c9f8eb6137382",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "In how many places has Don R. Berlin worked?",
    "SerialNumber": "3763",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Don R. Berlin",
        "uri": "http://dbpedia.org/resource/Don_R._Berlin"
      }
    ],
    "id": "dc505bf849494cc0881eef0dc15f5ab4",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/employer"
      }
    ]
  },
  {
    "question": "Was Heinrich Himmler ever a commanders of Army Group Oberrhein?",
    "SerialNumber": "3764",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)> <http://dbpedia.org/property/notableCommanders> <http://dbpedia.org/resource/Heinrich_Himmler> }",
    "entity mapping": [
      {
        "label": "Army Group Oberrhein",
        "uri": "http://dbpedia.org/resource/Army_Group_Oberrhein_(Germany)"
      },
      {
        "label": "Heinrich Himmler",
        "uri": "http://dbpedia.org/resource/Heinrich_Himmler"
      }
    ],
    "id": "cda67731753944ec9a75a63be0f893a1",
    "predicate mapping": [
      {
        "label": "commanders",
        "uri": "http://dbpedia.org/property/notableCommanders"
      }
    ]
  },
  {
    "question": "Name the cause of death of Martino Martini ?",
    "SerialNumber": "3766",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri } ",
    "entity mapping": [
      {
        "label": "Martino Martini",
        "uri": "http://dbpedia.org/resource/Martino_Martini"
      }
    ],
    "id": "278a4dae43ef4c9b888aaf3f0516d0a0",
    "predicate mapping": [
      {
        "label": "death cause",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "What is the label of Next Thing ?",
    "SerialNumber": "3768",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri } ",
    "entity mapping": [
      {
        "label": "Next Thing",
        "uri": "http://dbpedia.org/resource/Next_Thing"
      }
    ],
    "id": "c577d7b031fc49db89aed6ce9019e62b",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      }
    ]
  },
  {
    "question": "Name the scientist whose doctoral supervisor\u0027s doctoral student is John Bowlby?",
    "SerialNumber": "3769",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/John_Bowlby> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "John Bowlby",
        "uri": "http://dbpedia.org/resource/John_Bowlby"
      }
    ],
    "id": "cb2064da897547b2abcb8b409bdd0817",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      },
      {
        "label": "doctoral supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What are some other children of the father of Marvin Bush?",
    "SerialNumber": "3771",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Marvin_Bush> . ?x <http://dbpedia.org/property/children> ?uri  . }",
    "entity mapping": [
      {
        "label": "Marvin Bush",
        "uri": "http://dbpedia.org/resource/Marvin_Bush"
      }
    ],
    "id": "7fbcd4b51ed446329ea96a577f9cd906",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      }
    ]
  },
  {
    "question": "Which  writer has childrens named Mother Mary Alphonsa and Julian Hawthorne?",
    "SerialNumber": "3772",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Mother_Mary_Alphonsa> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Julian_Hawthorne> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Mother Mary Alphonsa",
        "uri": "http://dbpedia.org/resource/Mother_Mary_Alphonsa"
      },
      {
        "label": "Julian Hawthorne",
        "uri": "http://dbpedia.org/resource/Julian_Hawthorne"
      }
    ],
    "id": "62dd4ce12cbb45e781aca55e4b3b29bd",
    "predicate mapping": [
      {
        "label": "has children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "has children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "List all the schools of the rugby player whose went to school named Pietermaritzburg ?",
    "SerialNumber": "3773",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/school> <http://dbpedia.org/resource/Pietermaritzburg> . ?x <http://dbpedia.org/property/school> ?uri  . }",
    "entity mapping": [
      {
        "label": "Pietermaritzburg",
        "uri": "http://dbpedia.org/resource/Pietermaritzburg"
      }
    ],
    "id": "d71aec977ff14634a62b74d34fb64ae1",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school"
      }
    ]
  },
  {
    "question": "What are some other products of the banks which makes Postbanken?",
    "SerialNumber": "3774",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Postbanken> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "Postbanken",
        "uri": "http://dbpedia.org/resource/Postbanken"
      }
    ],
    "id": "b331453bfb4641c399c599377904e4a3",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "products",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "What are the things whose mascots are from the class Eutheria?",
    "SerialNumber": "3776",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Eutheria> . ?uri <http://dbpedia.org/property/mascot> ?x  . }",
    "entity mapping": [
      {
        "label": "Eutheria",
        "uri": "http://dbpedia.org/resource/Eutheria"
      }
    ],
    "id": "1c337899653549fb8c5f5765a394b9bb",
    "predicate mapping": [
      {
        "label": "class",
        "uri": "http://dbpedia.org/ontology/class"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "What is the total number of fictional characters whose created by  Greg Daniels and series is The Office (U.S. TV series)?",
    "SerialNumber": "3777",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Greg_Daniels> . ?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/The_Office_(U.S._TV_series)> } ",
    "entity mapping": [
      {
        "label": "Greg Daniels",
        "uri": "http://dbpedia.org/resource/Greg_Daniels"
      },
      {
        "label": "The Office (U.S. TV series)",
        "uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)"
      }
    ],
    "id": "b06e3b9df6474551b29eda51267fbaca",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "Name the are where South side Elevated Railroad operate and has place of birth as Arthur A. Ross ?",
    "SerialNumber": "3778",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Arthur_A._Ross> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "South side Elevated Railroad",
        "uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad"
      },
      {
        "label": "Arthur A. Ross",
        "uri": "http://dbpedia.org/resource/Arthur_A._Ross"
      }
    ],
    "id": "277ae34827a94a64bfda52a29b80431f",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Fairfield, Connecticut is hometown to which persons?",
    "SerialNumber": "3779",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Fairfield,_Connecticut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Fairfield, Connecticut",
        "uri": "http://dbpedia.org/resource/Fairfield,_Connecticut"
      }
    ],
    "id": "d9c86b00d0404514a18fd6635d8b893d",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which borough of the Corringham railway station is also the local authority of Buckhurst Hill County High School ?",
    "SerialNumber": "3780",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Corringham_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
    "entity mapping": [
      {
        "label": "Corringham railway station",
        "uri": "http://dbpedia.org/resource/Corringham_railway_station"
      },
      {
        "label": "Buckhurst Hill County High School",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School"
      }
    ],
    "id": "3b75c4aabe0748088571682a0168ab4e",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough"
      },
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "Which administrative region leader is Sukhumbhand Paribatra and was founded by  Rama I?",
    "SerialNumber": "3782",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Sukhumbhand_Paribatra> . ?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Rama_I>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "entity mapping": [
      {
        "label": "Sukhumbhand Paribatra",
        "uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra"
      },
      {
        "label": "Rama I",
        "uri": "http://dbpedia.org/resource/Rama_I"
      }
    ],
    "id": "70a95d95a68742c9b70b365d5d2d2fa9",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "administrative region",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion"
      }
    ]
  },
  {
    "question": "Who owns the bridge which crosses the Orange Line of MBTA?",
    "SerialNumber": "3783",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/crosses> <http://dbpedia.org/resource/Orange_Line_(MBTA)> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Orange Line",
        "uri": "http://dbpedia.org/resource/Orange_Line_(MBTA)"
      }
    ],
    "id": "009f2e39c91d49f1b6d9410b3fb2b5da",
    "predicate mapping": [
      {
        "label": "crosses",
        "uri": "http://dbpedia.org/property/crosses"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Who designed Oddamavadi Bridge?",
    "SerialNumber": "3784",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oddamavadi_Bridge> <http://dbpedia.org/property/designer> ?uri } ",
    "entity mapping": [
      {
        "label": "Oddamavadi Bridge",
        "uri": "http://dbpedia.org/resource/Oddamavadi_Bridge"
      }
    ],
    "id": "cc67a19255ce4bf6938888a64e0c3b19",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      }
    ]
  },
  {
    "question": "What are the television shows whose company is European Broadcasting Union?",
    "SerialNumber": "3785",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/European_Broadcasting_Union>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "European Broadcasting Union",
        "uri": "http://dbpedia.org/resource/European_Broadcasting_Union"
      }
    ],
    "id": "026eb82f924542c5be524f0aee58ff2f",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is Luigi Brugnaro the mayor of Venice?",
    "SerialNumber": "3786",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Venice> <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Luigi_Brugnaro> }",
    "entity mapping": [
      {
        "label": "Venice",
        "uri": "http://dbpedia.org/resource/Venice"
      },
      {
        "label": "Luigi Brugnaro",
        "uri": "http://dbpedia.org/resource/Luigi_Brugnaro"
      }
    ],
    "id": "4046f69e116b4d889fcf739e394d42a9",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor"
      }
    ]
  },
  {
    "question": "Is joel quenneville the main coach of Chicago Blackhawks?",
    "SerialNumber": "3791",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chicago_Blackhawks> <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Joel_Quenneville> }",
    "entity mapping": [
      {
        "label": "Chicago Blackhawks",
        "uri": "http://dbpedia.org/resource/Chicago_Blackhawks"
      },
      {
        "label": "joel quenneville",
        "uri": "http://dbpedia.org/resource/Joel_Quenneville"
      }
    ],
    "id": "2abf11e1cda543c4af0fb7aae25e6563",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/headCoach"
      }
    ]
  },
  {
    "question": "Who developed the software for the operating system of Macintosh Quadra 660AV ?",
    "SerialNumber": "3796",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Macintosh_Quadra_660AV> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Macintosh Quadra 660AV",
        "uri": "http://dbpedia.org/resource/Macintosh_Quadra_660AV"
      }
    ],
    "id": "d50016797b5a4629bbadbde2ff37db36",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Who is the writer with notable works like Adventures of Huckleberry Finn and The Adventures of Tom Sawyer?",
    "SerialNumber": "3797",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn> . ?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Adventures of Huckleberry Finn",
        "uri": "http://dbpedia.org/resource/Adventures_of_Huckleberry_Finn"
      },
      {
        "label": "The Adventures of Tom Sawyer",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer"
      }
    ],
    "id": "7cf3cea4cd174416bb524f55c19cdcf9",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Who were the commanders during the events which took place in Sandusky County, Ohio?",
    "SerialNumber": "3803",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Sandusky_County,_Ohio> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Event>}",
    "entity mapping": [
      {
        "label": "Sandusky County, Ohio",
        "uri": "http://dbpedia.org/resource/Sandusky_County,_Ohio"
      }
    ],
    "id": "d59ce804d5d8423f926b5278793e6750",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/place"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "event",
        "uri": "http://dbpedia.org/ontology/Event"
      }
    ]
  },
  {
    "question": "What religion is practiced by Hirunika Premachandra, and many others south asians in Hong Kong?",
    "SerialNumber": "3804",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asians_in_Hong_Kong> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Hirunika_Premachandra> <http://dbpedia.org/property/religion> ?uri . }",
    "entity mapping": [
      {
        "label": "south asians in Hong Kong",
        "uri": "http://dbpedia.org/resource/South_Asians_in_Hong_Kong"
      },
      {
        "label": "Hirunika Premachandra",
        "uri": "http://dbpedia.org/resource/Hirunika_Premachandra"
      }
    ],
    "id": "032d3755146e42a3be21305ce7766f9a",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "What are the movies whose editor died in Westwood, Los Angeles?",
    "SerialNumber": "3805",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Westwood,_Los_Angeles> . ?uri <http://dbpedia.org/ontology/editing> ?x  . }",
    "entity mapping": [
      {
        "label": "Westwood, Los Angeles",
        "uri": "http://dbpedia.org/resource/Westwood,_Los_Angeles"
      }
    ],
    "id": "35bf7919ccd9471fb67f5bd38ff7fbc7",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      }
    ]
  },
  {
    "question": "List all that flows into the north sea?",
    "SerialNumber": "3809",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North_Sea> <http://dbpedia.org/property/inflow> ?uri } ",
    "entity mapping": [
      {
        "label": "north sea",
        "uri": "http://dbpedia.org/resource/North_Sea"
      }
    ],
    "id": "f6e3042fcf724895aafc057cd69770c5",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/inflow"
      }
    ]
  },
  {
    "question": "List the relatives of Lyubov Dostoyevskaya ?",
    "SerialNumber": "3810",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lyubov_Dostoyevskaya> <http://dbpedia.org/property/relatives> ?uri } ",
    "entity mapping": [
      {
        "label": "Lyubov Dostoyevskaya",
        "uri": "http://dbpedia.org/resource/Lyubov_Dostoyevskaya"
      }
    ],
    "id": "359b620b592a44929007db93e8aecd72",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      }
    ]
  },
  {
    "question": "List all the record label distributed by the distributor of Zune ?",
    "SerialNumber": "3812",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Zune> . ?x <http://dbpedia.org/property/distributor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
    "entity mapping": [
      {
        "label": "Zune",
        "uri": "http://dbpedia.org/resource/Zune"
      }
    ],
    "id": "9fe4e52ceac346d898b87b58552de0de",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel"
      }
    ]
  },
  {
    "question": "Count the movies in Swedish language?",
    "SerialNumber": "3813",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Swedish language",
        "uri": "http://dbpedia.org/resource/Swedish_language"
      }
    ],
    "id": "6bd942c2f0cd4533bdc21957bc6bd75f",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name the artist of Brad Paisley discography ?",
    "SerialNumber": "3814",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brad_Paisley_discography> <http://dbpedia.org/property/artist> ?uri } ",
    "entity mapping": [
      {
        "label": "Brad Paisley discography",
        "uri": "http://dbpedia.org/resource/Brad_Paisley_discography"
      }
    ],
    "id": "814cd09a47ce48cea2ad776e1e753a16",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "Name the  borough of the Bordesley railway station which is also the route end of the Birmingham and Oxford Junction Railway?",
    "SerialNumber": "3817",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bordesley_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway> <http://dbpedia.org/ontology/routeEnd> ?uri} ",
    "entity mapping": [
      {
        "label": "Bordesley railway station",
        "uri": "http://dbpedia.org/resource/Bordesley_railway_station"
      },
      {
        "label": "Birmingham and Oxford Junction Railway",
        "uri": "http://dbpedia.org/resource/Birmingham_and_Oxford_Junction_Railway"
      }
    ],
    "id": "b0da89aed7ff4c92808e7fc7e914f868",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough"
      },
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "List all discipline of the journals whose one of the discipline is Cerebral blood flow ?",
    "SerialNumber": "3818",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Cerebral_blood_flow> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "Cerebral blood flow",
        "uri": "http://dbpedia.org/resource/Cerebral_blood_flow"
      }
    ],
    "id": "017a115aacc2455e86ab1e3924f75e23",
    "predicate mapping": [
      {
        "label": "discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      },
      {
        "label": "discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      },
      {
        "label": "journals",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "Matthew kane and Park rankin are citizens of which country?",
    "SerialNumber": "3820",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Matthew_Kane_(actor)> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Park_Rankin> <http://dbpedia.org/ontology/citizenship> ?uri . }",
    "entity mapping": [
      {
        "label": "Matthew kane",
        "uri": "http://dbpedia.org/resource/Matthew_Kane_(actor)"
      },
      {
        "label": "Park rankin",
        "uri": "http://dbpedia.org/resource/Park_Rankin"
      }
    ],
    "id": "24dffcdf54ea418ca45309b87e1089d3",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/citizenship"
      },
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/citizenship"
      }
    ]
  },
  {
    "question": "Whose associate is Publius Servilius Vatia Isauricus and has predecessor as Lucius Cornelius Lentulus Crus?",
    "SerialNumber": "3823",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus>  . }",
    "entity mapping": [
      {
        "label": "Publius Servilius Vatia Isauricus",
        "uri": "http://dbpedia.org/resource/Publius_Servilius_Vatia_Isauricus_(consul_48_BC)"
      },
      {
        "label": "Lucius Cornelius Lentulus Crus",
        "uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus"
      }
    ],
    "id": "1f3c3fc3666b4644bccdab14b6502a1c",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      }
    ]
  },
  {
    "question": "Who is the producer of the device which is the operating system of Now TV  ?",
    "SerialNumber": "3824",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Now_TV_(UK)> <http://dbpedia.org/ontology/operatingSystem> ?x . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Now TV",
        "uri": "http://dbpedia.org/resource/Now_TV_(UK)"
      }
    ],
    "id": "544710c8a2214cd9acd7c3d8f6426535",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Which were the philosophers whose primary interest was Natural philosophy?",
    "SerialNumber": "3829",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Natural_philosophy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}",
    "entity mapping": [
      {
        "label": "Natural philosophy",
        "uri": "http://dbpedia.org/resource/Natural_philosophy"
      }
    ],
    "id": "12be635cc767416c9654991d6847a5a9",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/mainInterests"
      },
      {
        "label": "philosopher",
        "uri": "http://dbpedia.org/ontology/Philosopher"
      }
    ]
  },
  {
    "question": "Who is relative of the people died in Bergen-Belsen concentration camp ?",
    "SerialNumber": "3831",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Bergen-Belsen_concentration_camp> . ?x <http://dbpedia.org/ontology/relative> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bergen-Belsen concentration camp",
        "uri": "http://dbpedia.org/resource/Bergen-Belsen_concentration_camp"
      }
    ],
    "id": "fdc1a6168b3544c294fcb5c5d4bd3de5",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "Was the Lotuspool Records distributed by Napster?",
    "SerialNumber": "3834",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lotuspool_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Napster> }",
    "entity mapping": [
      {
        "label": "Lotuspool Records",
        "uri": "http://dbpedia.org/resource/Lotuspool_Records"
      },
      {
        "label": "Napster",
        "uri": "http://dbpedia.org/resource/Napster"
      }
    ],
    "id": "0b0f5461ad2f46cca3c708ffefeac368",
    "predicate mapping": [
      {
        "label": "distributed",
        "uri": "http://dbpedia.org/ontology/distributingLabel"
      }
    ]
  },
  {
    "question": "List all the artist of albums which have been produced by Stephen Kozmeniuk ?",
    "SerialNumber": "3835",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_Kozmeniuk> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Stephen Kozmeniuk",
        "uri": "http://dbpedia.org/resource/Stephen_Kozmeniuk"
      }
    ],
    "id": "07124083be6249ff961e6ea104195239",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "Which sports exist in the universities whose president is Emanuel de Guzman?",
    "SerialNumber": "3838",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Emanuel_de_Guzman> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Emanuel de Guzman",
        "uri": "http://dbpedia.org/resource/Emanuel_de_Guzman"
      }
    ],
    "id": "d3ecdd7378e84976bf9901e34d96544d",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What faiths are followed by the relatives of Meadow Soprano?",
    "SerialNumber": "3841",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Meadow_Soprano> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Meadow Soprano",
        "uri": "http://dbpedia.org/resource/Meadow_Soprano"
      }
    ],
    "id": "6ede8437feee4a37a3076b1deb866abd",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What is the purpose of Maharashtra Chess Association ?",
    "SerialNumber": "3842",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri } ",
    "entity mapping": [
      {
        "label": "Maharashtra Chess Association",
        "uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association"
      }
    ],
    "id": "1b61bd94b11c4641a1bb7d0601c0fdb5",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      }
    ]
  },
  {
    "question": "What is the address of Federal Reserve Bank Building?",
    "SerialNumber": "3843",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Federal_Reserve_Bank_Building_(Seattle)> <http://dbpedia.org/property/address> ?uri } ",
    "entity mapping": [
      {
        "label": "Federal Reserve Bank Building",
        "uri": "http://dbpedia.org/resource/Federal_Reserve_Bank_Building_(Seattle)"
      }
    ],
    "id": "b9b3fd57293c4776b2e52370d4d5c3be",
    "predicate mapping": [
      {
        "label": "address",
        "uri": "http://dbpedia.org/property/address"
      }
    ]
  },
  {
    "question": "What is the common official residence of Lezlee Westine and Arnold W. Braswell?",
    "SerialNumber": "3845",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lezlee_Westine> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Arnold_W._Braswell> <http://dbpedia.org/property/residence> ?uri . }",
    "entity mapping": [
      {
        "label": "Lezlee Westine",
        "uri": "http://dbpedia.org/resource/Lezlee_Westine"
      },
      {
        "label": "Arnold W. Braswell",
        "uri": "http://dbpedia.org/resource/Arnold_W._Braswell"
      }
    ],
    "id": "2d38fec5592147719347d2df292f9cc2",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "Louis Dunbar is the coach of which basketball team ?",
    "SerialNumber": "3846",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Louis_Dunbar>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "entity mapping": [
      {
        "label": "Louis Dunbar",
        "uri": "http://dbpedia.org/resource/Louis_Dunbar"
      }
    ],
    "id": "d6eb5633d2524379863ad29551cf0089",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam"
      }
    ]
  },
  {
    "question": "Do the White Plains Road lie in the Bronx county?",
    "SerialNumber": "3847",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/White_Plains_Road> <http://dbpedia.org/property/counties> <http://dbpedia.org/resource/The_Bronx> }",
    "entity mapping": [
      {
        "label": "White Plains Road",
        "uri": "http://dbpedia.org/resource/White_Plains_Road"
      },
      {
        "label": "Bronx county",
        "uri": "http://dbpedia.org/resource/The_Bronx"
      }
    ],
    "id": "dd780a7e6bf64bb79d2fa4c410ffed93",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/property/counties"
      }
    ]
  },
  {
    "question": "Which river flows through Hudson Highlands State park and also through Troy, New york ?",
    "SerialNumber": "3848",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hudson_Highlands_State_Park> <http://dbpedia.org/property/river> ?uri. <http://dbpedia.org/resource/Troy,_New_York> <http://dbpedia.org/ontology/river> ?uri} ",
    "entity mapping": [
      {
        "label": "Hudson Highlands State park",
        "uri": "http://dbpedia.org/resource/Hudson_Highlands_State_Park"
      },
      {
        "label": "Troy, New york",
        "uri": "http://dbpedia.org/resource/Troy,_New_York"
      }
    ],
    "id": "126d01b992474e93bfe3b2d990e937a9",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/property/river"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "Is US Navy garrisoned at Arlington County, Virginia?",
    "SerialNumber": "3849",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Arlington_County,_Virginia> }",
    "entity mapping": [
      {
        "label": "US Navy",
        "uri": "http://dbpedia.org/resource/United_States_Navy"
      },
      {
        "label": "Arlington County, Virginia",
        "uri": "http://dbpedia.org/resource/Arlington_County,_Virginia"
      }
    ],
    "id": "fab4c2ac4f1446c4a58ec053f26940c8",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      }
    ]
  },
  {
    "question": "Which university attended by Franklin W. Olin was also the alma mater of Patty Lin ?",
    "SerialNumber": "3850",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Patty_Lin> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Franklin_W._Olin> <http://dbpedia.org/property/education> ?uri} ",
    "entity mapping": [
      {
        "label": "Patty Lin",
        "uri": "http://dbpedia.org/resource/Patty_Lin"
      },
      {
        "label": "Franklin W. Olin",
        "uri": "http://dbpedia.org/resource/Franklin_W._Olin"
      }
    ],
    "id": "9bc8183073c74276b2a202d642cd74d7",
    "predicate mapping": [
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "university attended",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "What river is it whose source is Dowra?",
    "SerialNumber": "3851",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Dowra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Dowra",
        "uri": "http://dbpedia.org/resource/Dowra"
      }
    ],
    "id": "342858bf3dc442ba9b8a65d63c8ece94",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Who was the voice actor of allen walker also gave voice to kimihiro watanuki?",
    "SerialNumber": "3852",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allen_Walker> <http://dbpedia.org/ontology/voice> ?uri. <http://dbpedia.org/resource/Kimihiro_Watanuki> <http://dbpedia.org/ontology/voice> ?uri . }",
    "entity mapping": [
      {
        "label": "allen walker",
        "uri": "http://dbpedia.org/resource/Allen_Walker"
      },
      {
        "label": "kimihiro watanuki",
        "uri": "http://dbpedia.org/resource/Kimihiro_Watanuki"
      }
    ],
    "id": "4e89ed7d56bd4a77bb72e76dbb6feb5c",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      }
    ]
  },
  {
    "question": "Name the company who owns HBO division?",
    "SerialNumber": "3854",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      }
    ],
    "id": "811423e6b0814c93a5bb6474579e9557",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/divisions"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the launch site of Aquarius (rocket) ?",
    "SerialNumber": "3855",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aquarius_(rocket)> <http://dbpedia.org/ontology/launchSite> ?uri } ",
    "entity mapping": [
      {
        "label": "Aquarius (rocket)",
        "uri": "http://dbpedia.org/resource/Aquarius_(rocket)"
      }
    ],
    "id": "78fb0be825cc4440b068e0a54c769e23",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite"
      }
    ]
  },
  {
    "question": "Name a writer who was educated in Saint Petersburg and had a son named Lyubov Dostoyevskaya ?",
    "SerialNumber": "3857",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Saint_Petersburg> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lyubov_Dostoyevskaya>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Saint Petersburg",
        "uri": "http://dbpedia.org/resource/Saint_Petersburg"
      },
      {
        "label": "Lyubov Dostoyevskaya",
        "uri": "http://dbpedia.org/resource/Lyubov_Dostoyevskaya"
      }
    ],
    "id": "6624d8c2fb524ee1ac7268162e60b577",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "What is the source location of Thornton Creek ?",
    "SerialNumber": "3858",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thornton_Creek> <http://dbpedia.org/property/sourceLocation> ?uri } ",
    "entity mapping": [
      {
        "label": "Thornton Creek",
        "uri": "http://dbpedia.org/resource/Thornton_Creek"
      }
    ],
    "id": "6714d1031ae14213adee9f44469e2854",
    "predicate mapping": [
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation"
      }
    ]
  },
  {
    "question": "What are shows whose theme music composer\u0027s home town is New York?",
    "SerialNumber": "3859",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "New York",
        "uri": "http://dbpedia.org/resource/New_York"
      }
    ],
    "id": "c1c5e91af8da4014b4bcf17b0918ff88",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the magazines published by Playbow Enterprises ?",
    "SerialNumber": "3862",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Playboy_Enterprises>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Playbow Enterprises",
        "uri": "http://dbpedia.org/resource/Playboy_Enterprises"
      }
    ],
    "id": "a1ee8ce5878d45029ef38e6d7fbb5483",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "Which appliance\u0027s CPU is Cell (microprocessor) and predecessor is PlayStation 2?",
    "SerialNumber": "3866",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Cell_(microprocessor)> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "Cell (microprocessor)",
        "uri": "http://dbpedia.org/resource/Cell_(microprocessor)"
      },
      {
        "label": "PlayStation 2",
        "uri": "http://dbpedia.org/resource/PlayStation_2"
      }
    ],
    "id": "87c2b3cad3274c52bfc6f11ef62b71dc",
    "predicate mapping": [
      {
        "label": "CPU",
        "uri": "http://dbpedia.org/ontology/cpu"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "appliance\u0027s",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Name the television show which was developed by Brian Graden and distributed by Comedy Central?",
    "SerialNumber": "3867",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Brian Graden",
        "uri": "http://dbpedia.org/resource/Brian_Graden"
      },
      {
        "label": "Comedy Central",
        "uri": "http://dbpedia.org/resource/Comedy_Central"
      }
    ],
    "id": "38c76f79fd67475680c99f38f3808b86",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What team had the debut of Marv Throneberry and Curt Coleman?",
    "SerialNumber": "3869",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marv_Throneberry> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Curt_Coleman> <http://dbpedia.org/ontology/debutTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "Marv Throneberry",
        "uri": "http://dbpedia.org/resource/Marv_Throneberry"
      },
      {
        "label": "Curt Coleman",
        "uri": "http://dbpedia.org/resource/Curt_Coleman"
      }
    ],
    "id": "32b2c4d11f454f249137145bca18e285",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      }
    ]
  },
  {
    "question": "What is the place of death of the lieutenant of Frank Steunenberg?",
    "SerialNumber": "3873",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Frank_Steunenberg> <http://dbpedia.org/property/lieutenant> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "entity mapping": [
      {
        "label": "Frank Steunenberg",
        "uri": "http://dbpedia.org/resource/Frank_Steunenberg"
      }
    ],
    "id": "7f714f3175684adbb9eabea7b621ab24",
    "predicate mapping": [
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/property/lieutenant"
      },
      {
        "label": "place of death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "What are the awards won by the film editor of World of Tomorrow ?",
    "SerialNumber": "3874",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/World_of_Tomorrow_(film)> <http://dbpedia.org/ontology/editing> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "World of Tomorrow",
        "uri": "http://dbpedia.org/resource/World_of_Tomorrow_(film)"
      }
    ],
    "id": "c7127b97150141d8843721bc8b9fdc6f",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": " Giuseppe Bertello and Pietro Parolin are leaders of which place ?",
    "SerialNumber": "3875",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Giuseppe_Bertello> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Pietro_Parolin> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Giuseppe Bertello",
        "uri": "http://dbpedia.org/resource/Giuseppe_Bertello"
      },
      {
        "label": "Pietro Parolin",
        "uri": "http://dbpedia.org/resource/Pietro_Parolin"
      }
    ],
    "id": "2f402439bfbf4bb3b37b919d64f80a13",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "What is the faith of Kwai Chang Caine ?",
    "SerialNumber": "3878",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kwai_Chang_Caine> <http://dbpedia.org/ontology/religion> ?uri } ",
    "entity mapping": [
      {
        "label": "Kwai Chang Caine",
        "uri": "http://dbpedia.org/resource/Kwai_Chang_Caine"
      }
    ],
    "id": "c66a34d84ddc42f89d6642978c5f9b1c",
    "predicate mapping": [
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Where does the river end which starts in Mazabuka?",
    "SerialNumber": "3880",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Mazabuka> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Mazabuka",
        "uri": "http://dbpedia.org/resource/Mazabuka"
      }
    ],
    "id": "2c7911e408ae48659b766c22f01fa785",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Name the mountain located in California and has parent peak as Nevado de Toluca ?",
    "SerialNumber": "3882",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/parentMountainPeak> <http://dbpedia.org/resource/Nevado_de_Toluca>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      },
      {
        "label": "Nevado de Toluca",
        "uri": "http://dbpedia.org/resource/Nevado_de_Toluca"
      }
    ],
    "id": "5939910c8f974ca1bf12a412dd886263",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain parent peak",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "What award has been given to Roy Walker as well as Walt Disney?",
    "SerialNumber": "3883",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Roy_Walker_(production_designer)> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Walt_Disney> <http://dbpedia.org/ontology/award> ?uri . }",
    "entity mapping": [
      {
        "label": "Roy Walker",
        "uri": "http://dbpedia.org/resource/Roy_Walker_(production_designer)"
      },
      {
        "label": "Walt Disney",
        "uri": "http://dbpedia.org/resource/Walt_Disney"
      }
    ],
    "id": "705980cbb32844d780617bc238043841",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Name the branch of Carroll E. Lanier ?",
    "SerialNumber": "3884",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carroll_E._Lanier> <http://dbpedia.org/property/branch> ?uri } ",
    "entity mapping": [
      {
        "label": "Carroll E. Lanier",
        "uri": "http://dbpedia.org/resource/Carroll_E._Lanier"
      }
    ],
    "id": "785b260edcfd41099d8633106521b324",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "List the settlements area whose province is Metropolitan City of Venice ?",
    "SerialNumber": "3885",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Metropolitan_City_of_Venice>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "Metropolitan City of Venice",
        "uri": "http://dbpedia.org/resource/Metropolitan_City_of_Venice"
      }
    ],
    "id": "a8e55935b3614b769945d3b60945948d",
    "predicate mapping": [
      {
        "label": "province",
        "uri": "http://dbpedia.org/property/province"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "Which magazines were founded by ann Wenner ?",
    "SerialNumber": "3887",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Jann_Wenner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "ann Wenner",
        "uri": "http://dbpedia.org/resource/Jann_Wenner"
      }
    ],
    "id": "fe3de671ec2f4322995f78f9bb33d11a",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "What is the area of ITV (Thailand) ?",
    "SerialNumber": "3888",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/ITV_(Thailand)> <http://dbpedia.org/property/area> ?uri } ",
    "entity mapping": [
      {
        "label": "ITV (Thailand)",
        "uri": "http://dbpedia.org/resource/ITV_(Thailand)"
      }
    ],
    "id": "fa99333a084949f3b66f826593bd2652",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      }
    ]
  },
  {
    "question": "Name the presenter of Shirley Temple\u0027s Storybook ?",
    "SerialNumber": "3889",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shirley_Temple\u0027s_Storybook> <http://dbpedia.org/property/presenter> ?uri } ",
    "entity mapping": [
      {
        "label": "Shirley Temple\u0027s Storybook",
        "uri": "http://dbpedia.org/resource/Shirley_Temple\u0027s_Storybook"
      }
    ],
    "id": "1c12f743208140c4899ab63ce958d5c4",
    "predicate mapping": [
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter"
      }
    ]
  },
  {
    "question": "Name the common managing club of the Ivan Toplak and Bret Simon?",
    "SerialNumber": "3892",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_Toplak> <http://dbpedia.org/ontology/managerClub> ?uri. <http://dbpedia.org/resource/Bret_Simon> <http://dbpedia.org/ontology/managerClub> ?uri . }",
    "entity mapping": [
      {
        "label": "Ivan Toplak",
        "uri": "http://dbpedia.org/resource/Ivan_Toplak"
      },
      {
        "label": "Bret Simon",
        "uri": "http://dbpedia.org/resource/Bret_Simon"
      }
    ],
    "id": "965b4a0d6fcd45448babd3cd1a9d1850",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/managerClub"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/managerClub"
      }
    ]
  },
  {
    "question": "What are the movies whose editor is Robert Wise?",
    "SerialNumber": "3893",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Robert_Wise>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Robert Wise",
        "uri": "http://dbpedia.org/resource/Robert_Wise"
      }
    ],
    "id": "f4dfd8294d264888896ddcc6e971ef4b",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name the river on Batoka Gorge Hydroelectric Power Station ?",
    "SerialNumber": "3894",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri } ",
    "entity mapping": [
      {
        "label": "Batoka Gorge Hydroelectric Power Station",
        "uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station"
      }
    ],
    "id": "1f82c3f52b32474d9b2a5871e9d6bab7",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "Did Johann Gottfried Galle invent Neptune?",
    "SerialNumber": "3896",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neptune> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle> }",
    "entity mapping": [
      {
        "label": "Neptune",
        "uri": "http://dbpedia.org/resource/Neptune"
      },
      {
        "label": "Johann Gottfried Galle",
        "uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle"
      }
    ],
    "id": "ddec2336ee0e4356a255236006bca1fc",
    "predicate mapping": [
      {
        "label": "invent",
        "uri": "http://dbpedia.org/property/discoverer"
      }
    ]
  },
  {
    "question": "Which office holder\u0027s military unit is USS Kittiwake  and constituency is Castro District, San Francisco ?",
    "SerialNumber": "3899",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Castro_District,_San_Francisco>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "USS Kittiwake",
        "uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)"
      },
      {
        "label": "Castro District, San Francisco",
        "uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco"
      }
    ],
    "id": "a2eca13767804df089a65b86bf65310d",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which driver came first in the 1993 European Grand Prix ?",
    "SerialNumber": "3900",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri } ",
    "entity mapping": [
      {
        "label": "1993 European Grand Prix",
        "uri": "http://dbpedia.org/resource/1993_European_Grand_Prix"
      }
    ],
    "id": "34fd78d2a8624f3fb9db8f301269df58",
    "predicate mapping": [
      {
        "label": "driver first",
        "uri": "http://dbpedia.org/property/firstDriver"
      }
    ]
  },
  {
    "question": "Who is the writer of mark twain Tonight ?",
    "SerialNumber": "3901",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri } ",
    "entity mapping": [
      {
        "label": "mark twain Tonight",
        "uri": "http://dbpedia.org/resource/Mark_Twain_Tonight"
      }
    ],
    "id": "0b508a68bf6f41969a26b3a4de2c0af7",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "Which office holder\u0027s  military branch is Continental Army and vice president is John Adams?",
    "SerialNumber": "3902",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army> . ?uri <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/John_Adams>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Continental Army",
        "uri": "http://dbpedia.org/resource/Continental_Army"
      },
      {
        "label": "John Adams",
        "uri": "http://dbpedia.org/resource/John_Adams"
      }
    ],
    "id": "0f420e164c264763bf883eb8a2892256",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Who have been the manager of national team of Spain?",
    "SerialNumber": "3904",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerManager>}",
    "entity mapping": [
      {
        "label": "national team of Spain",
        "uri": "http://dbpedia.org/resource/Spain_national_football_team"
      }
    ],
    "id": "efa1f08196ee4717bf2dc3636d758b21",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam"
      },
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/SoccerManager"
      }
    ]
  },
  {
    "question": "Where was James McClure born ?",
    "SerialNumber": "3905",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_McClure_(table_tennis)> <http://dbpedia.org/property/birthPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "James McClure",
        "uri": "http://dbpedia.org/resource/James_McClure_(table_tennis)"
      }
    ],
    "id": "ec741fb853924061b547cb81d63e2b94",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "The official residence of Sukhumbhand paribatra ?",
    "SerialNumber": "3908",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sukhumbhand_Paribatra> <http://dbpedia.org/property/residence> ?uri } ",
    "entity mapping": [
      {
        "label": "Sukhumbhand paribatra",
        "uri": "http://dbpedia.org/resource/Sukhumbhand_Paribatra"
      }
    ],
    "id": "a767b3fba00d497caf4ce4a2d62a9152",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "What is the debut team of people born in Vargas?",
    "SerialNumber": "3909",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Vargas_(state)> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }",
    "entity mapping": [
      {
        "label": "Vargas",
        "uri": "http://dbpedia.org/resource/Vargas_(state)"
      }
    ],
    "id": "eb1852e8e379430ea29fa15c1588859e",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "Which companies have Kumho Asiana Group as their parent company?",
    "SerialNumber": "3910",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Kumho_Asiana_Group> } ",
    "entity mapping": [
      {
        "label": "Kumho Asiana Group",
        "uri": "http://dbpedia.org/resource/Kumho_Asiana_Group"
      }
    ],
    "id": "4141231625cc43c8bc490ad565328359",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      }
    ]
  },
  {
    "question": "What is the profession of the children of Herbert Pell ?",
    "SerialNumber": "3912",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Herbert_Pell> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/profession> ?uri  . }",
    "entity mapping": [
      {
        "label": "Herbert Pell",
        "uri": "http://dbpedia.org/resource/Herbert_Pell"
      }
    ],
    "id": "affc959256ac4bc191e5dd85460f6a12",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      }
    ]
  },
  {
    "question": "What product is made by Sony and Foxconn togather?",
    "SerialNumber": "3915",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn> . }",
    "entity mapping": [
      {
        "label": "Sony",
        "uri": "http://dbpedia.org/resource/Sony"
      },
      {
        "label": "Foxconn",
        "uri": "http://dbpedia.org/resource/Foxconn"
      }
    ],
    "id": "84c4f92bbfb04638a0a619683dea1349",
    "predicate mapping": [
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Name the death location of Judson Huss ?",
    "SerialNumber": "3916",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "Judson Huss",
        "uri": "http://dbpedia.org/resource/Judson_Huss"
      }
    ],
    "id": "9f44883aeb3c401c89e1465ab2006426",
    "predicate mapping": [
      {
        "label": "death location",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "What is the country whose leader was once Valentina Matviyenko?",
    "SerialNumber": "3917",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Valentina_Matviyenko>  . }",
    "entity mapping": [
      {
        "label": "Valentina Matviyenko",
        "uri": "http://dbpedia.org/resource/Valentina_Matviyenko"
      }
    ],
    "id": "6be45071f4db47d7850293932bbedfef",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "Is Julia Gillard the prime minister of Kate Lundy?",
    "SerialNumber": "3919",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Kate_Lundy> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Julia_Gillard> }",
    "entity mapping": [
      {
        "label": "Kate Lundy",
        "uri": "http://dbpedia.org/resource/Kate_Lundy"
      },
      {
        "label": "Julia Gillard",
        "uri": "http://dbpedia.org/resource/Julia_Gillard"
      }
    ],
    "id": "459b9e3d7b684b5d9b5c423be3a4eb3f",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "What is the country whose leader name is Grard Larcher?",
    "SerialNumber": "3921",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Gérard_Larcher>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Grard Larcher",
        "uri": "http://dbpedia.org/resource/Gérard_Larcher"
      }
    ],
    "id": "8931ff63c84b4c50b5a1b9c4be64f74b",
    "predicate mapping": [
      {
        "label": "leader name",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "How many guests have been there on broadway?",
    "SerialNumber": "3927",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/On_Broadway_(Smash)> <http://dbpedia.org/property/guests> ?uri  . }",
    "entity mapping": [
      {
        "label": "on broadway",
        "uri": "http://dbpedia.org/resource/On_Broadway_(Smash)"
      }
    ],
    "id": "e97f754148fd4c2f811c6bf0b04685ad",
    "predicate mapping": [
      {
        "label": "guests",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "What is the county seat of the county which has an Evergreen High School?",
    "SerialNumber": "3928",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Evergreen_High_School_(King_County,_Washington)> <http://dbpedia.org/ontology/county> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }",
    "entity mapping": [
      {
        "label": "Evergreen High School",
        "uri": "http://dbpedia.org/resource/Evergreen_High_School_(King_County,_Washington)"
      }
    ],
    "id": "a090fde75999468690fbe088df7369b5",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/county"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat"
      }
    ]
  },
  {
    "question": "What countries used Solidus as currency?",
    "SerialNumber": "3929",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Solidus",
        "uri": "http://dbpedia.org/resource/Solidus_(coin)"
      }
    ],
    "id": "07df56459b9046fa95b983ee02c029e7",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Who discovered Europa and Callisto?",
    "SerialNumber": "3932",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Europa_(moon)> <http://dbpedia.org/property/discoverer> ?uri. <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/ontology/discoverer> ?uri} ",
    "entity mapping": [
      {
        "label": "Europa",
        "uri": "http://dbpedia.org/resource/Europa_(moon)"
      },
      {
        "label": "Callisto",
        "uri": "http://dbpedia.org/resource/Callisto_(moon)"
      }
    ],
    "id": "a57646db0f4f42b08f80995ffb60e186",
    "predicate mapping": [
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/property/discoverer"
      },
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/ontology/discoverer"
      }
    ]
  },
  {
    "question": "List  bacterias whose orde is Bacillales and division is Firmicutes?",
    "SerialNumber": "3933",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bacteria>}",
    "entity mapping": [
      {
        "label": "Bacillales",
        "uri": "http://dbpedia.org/resource/Bacillales"
      },
      {
        "label": "Firmicutes",
        "uri": "http://dbpedia.org/resource/Firmicutes"
      }
    ],
    "id": "d65addb351934f16855a39cec5e7e20a",
    "predicate mapping": [
      {
        "label": "orde",
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "bacteria",
        "uri": "http://dbpedia.org/ontology/Bacteria"
      }
    ]
  },
  {
    "question": "Which ceremonial County of the East Tilbury is also the local authority of the Buckhurst Hill County High School ?",
    "SerialNumber": "3934",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/East_Tilbury> <http://dbpedia.org/ontology/ceremonialCounty> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
    "entity mapping": [
      {
        "label": "East Tilbury",
        "uri": "http://dbpedia.org/resource/East_Tilbury"
      },
      {
        "label": "Buckhurst Hill County High School",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School"
      }
    ],
    "id": "7c7114c2dd014b12b2a19352d908b472",
    "predicate mapping": [
      {
        "label": "ceremonial County",
        "uri": "http://dbpedia.org/ontology/ceremonialCounty"
      },
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "What are some other destinations covered by the airlines whose flights go to the Mediterranean sea?",
    "SerialNumber": "3935",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/ontology/destination> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Mediterranean sea",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea"
      }
    ],
    "id": "53bb18b2b179439ea955d4300cf133ea",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Was Class Conflict an interest of Karl Marx?",
    "SerialNumber": "3939",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Karl_Marx> <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Class_conflict> }",
    "entity mapping": [
      {
        "label": "Karl Marx",
        "uri": "http://dbpedia.org/resource/Karl_Marx"
      },
      {
        "label": "Class Conflict",
        "uri": "http://dbpedia.org/resource/Class_conflict"
      }
    ],
    "id": "6ed720fd412748de934db0272ae0affd",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/ontology/mainInterest"
      }
    ]
  },
  {
    "question": "What is the venue of San Diego Comic-Con International ?",
    "SerialNumber": "3944",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/San_Diego_Comic-Con_International> <http://dbpedia.org/property/venue> ?uri } ",
    "entity mapping": [
      {
        "label": "San Diego Comic-Con International",
        "uri": "http://dbpedia.org/resource/San_Diego_Comic-Con_International"
      }
    ],
    "id": "3fca4e987668497a98a4313a90ef9cbc",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue"
      }
    ]
  },
  {
    "question": "What are some countries where companies headquartered in the Klang Valley operate?",
    "SerialNumber": "3945",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Klang_Valley> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Klang Valley",
        "uri": "http://dbpedia.org/resource/Klang_Valley"
      }
    ],
    "id": "1010a7a0c5f44e9d94d2ad67d025ee32",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the job of the George Arceneaux, Jr. which is also the office of the Blanche Bruce",
    "SerialNumber": "3947",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Arceneaux,_Jr.> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Blanche_Bruce> <http://dbpedia.org/property/office> ?uri} ",
    "entity mapping": [
      {
        "label": "George Arceneaux, Jr.",
        "uri": "http://dbpedia.org/resource/George_Arceneaux,_Jr."
      },
      {
        "label": "Blanche Bruce",
        "uri": "http://dbpedia.org/resource/Blanche_Bruce"
      }
    ],
    "id": "fb3983a237514a2fae742694295ce1a9",
    "predicate mapping": [
      {
        "label": "job",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "Name the street address of Rhodes-Haverty Building ?",
    "SerialNumber": "3949",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rhodes-Haverty_Building> <http://dbpedia.org/property/address> ?uri } ",
    "entity mapping": [
      {
        "label": "Rhodes-Haverty Building",
        "uri": "http://dbpedia.org/resource/Rhodes-Haverty_Building"
      }
    ],
    "id": "c62aacfc9d4d436780b225eacce046cc",
    "predicate mapping": [
      {
        "label": "address",
        "uri": "http://dbpedia.org/property/address"
      }
    ]
  },
  {
    "question": "Which royalty\u0027s spouse is Ptolemy XIV of Egypt?",
    "SerialNumber": "3950",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Ptolemy XIV",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt"
      }
    ],
    "id": "f399c7a1da5e48e29810f8606fdfe5ec",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Which race is the  Best Mate is also the race of the Martin Molony?",
    "SerialNumber": "3951",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Best_Mate> <http://dbpedia.org/property/race> ?uri. <http://dbpedia.org/resource/Martin_Molony> <http://dbpedia.org/ontology/race> ?uri} ",
    "entity mapping": [
      {
        "label": "Best Mate",
        "uri": "http://dbpedia.org/resource/Best_Mate"
      },
      {
        "label": "Martin Molony",
        "uri": "http://dbpedia.org/resource/Martin_Molony"
      }
    ],
    "id": "549aff6f90b442e49ad5fb036aa2907c",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/ontology/race"
      }
    ]
  },
  {
    "question": "List the parts of Greater San Antonio?",
    "SerialNumber": "3952",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greater_San_Antonio> <http://dbpedia.org/ontology/part> ?uri } ",
    "entity mapping": [
      {
        "label": "Greater San Antonio",
        "uri": "http://dbpedia.org/resource/Greater_San_Antonio"
      }
    ],
    "id": "01e5f18baef64f089b9aeff2a5672188",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      }
    ]
  },
  {
    "question": "Was the body of Elsie Paroubek discovered in Chicago?",
    "SerialNumber": "3956",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Elsie_Paroubek> <http://dbpedia.org/ontology/bodyDiscovered> <http://dbpedia.org/resource/Chicago> }",
    "entity mapping": [
      {
        "label": "Elsie Paroubek",
        "uri": "http://dbpedia.org/resource/Elsie_Paroubek"
      },
      {
        "label": "Chicago",
        "uri": "http://dbpedia.org/resource/Chicago"
      }
    ],
    "id": "7753f3eb8e344fac86edce3630848439",
    "predicate mapping": [
      {
        "label": "discovered body",
        "uri": "http://dbpedia.org/ontology/bodyDiscovered"
      }
    ]
  },
  {
    "question": "who operates the south side elevated railroad?",
    "SerialNumber": "3957",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "south side elevated railroad",
        "uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad"
      }
    ],
    "id": "9b51ba0b970d479dbc0c54c8830fcddb",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      }
    ]
  },
  {
    "question": "Did Dean Wurzberger manage a club at the santa clara university?",
    "SerialNumber": "3958",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Dean_Wurzberger> <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/Santa_Clara_University> }",
    "entity mapping": [
      {
        "label": "Dean Wurzberger",
        "uri": "http://dbpedia.org/resource/Dean_Wurzberger"
      },
      {
        "label": "santa clara university",
        "uri": "http://dbpedia.org/resource/Santa_Clara_University"
      }
    ],
    "id": "2e9acabbe693475ea85bed543e1ebef7",
    "predicate mapping": [
      {
        "label": "manage club",
        "uri": "http://dbpedia.org/property/managerclubs"
      }
    ]
  },
  {
    "question": "Who wrote the play in which Blanche DuBois is a character?",
    "SerialNumber": "3959",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Blanche_DuBois> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
    "entity mapping": [
      {
        "label": "Blanche DuBois",
        "uri": "http://dbpedia.org/resource/Blanche_DuBois"
      }
    ],
    "id": "530da5683a824177a5b7b23c2d8447d1",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Play"
      }
    ]
  },
  {
    "question": "Name the university with affiliations as Graham Holdings Company and campus at Indiana?",
    "SerialNumber": "3962",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Graham Holdings Company",
        "uri": "http://dbpedia.org/resource/Graham_Holdings_Company"
      },
      {
        "label": "Indiana",
        "uri": "http://dbpedia.org/resource/Indiana"
      }
    ],
    "id": "1c819292a65d48ba82b5936d9d22a161",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Is the hyundai elantra related to hyundai lavita?",
    "SerialNumber": "3964",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Hyundai_Elantra> }",
    "entity mapping": [
      {
        "label": "hyundai lavita",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita"
      },
      {
        "label": "hyundai elantra",
        "uri": "http://dbpedia.org/resource/Hyundai_Elantra"
      }
    ],
    "id": "1747800b6c1342b592699c28f06154c2",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation"
      }
    ]
  },
  {
    "question": "Who manufactured the Delta III and the Space Shuttle?",
    "SerialNumber": "3968",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Space_Shuttle> <http://dbpedia.org/ontology/manufacturer> ?uri . }",
    "entity mapping": [
      {
        "label": "Delta III",
        "uri": "http://dbpedia.org/resource/Delta_III"
      },
      {
        "label": "Space Shuttle",
        "uri": "http://dbpedia.org/resource/Space_Shuttle"
      }
    ],
    "id": "40fb3a262e9b4b3ab35c33f0f8bd883e",
    "predicate mapping": [
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Which nation hosts the WTA Tour Championships?",
    "SerialNumber": "3969",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WTA_Tour_Championships> <http://dbpedia.org/property/country> ?uri } ",
    "entity mapping": [
      {
        "label": "WTA Tour Championships",
        "uri": "http://dbpedia.org/resource/WTA_Tour_Championships"
      }
    ],
    "id": "2e7611c3b8994e6dbc15b40e020f1b9c",
    "predicate mapping": [
      {
        "label": "nation",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "Give me the total number of lines owned by owner of Mwtro-Noth Railroad ?",
    "SerialNumber": "3972",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Metro-North_Railroad> . ?x <http://dbpedia.org/property/owner> ?uri }",
    "entity mapping": [
      {
        "label": "Mwtro-Noth Railroad",
        "uri": "http://dbpedia.org/resource/Metro-North_Railroad"
      }
    ],
    "id": "f77b70866d3f440ab0e94f8839a02e38",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Where was Liliya Lobanova born?",
    "SerialNumber": "3973",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri } ",
    "entity mapping": [
      {
        "label": "Liliya Lobanova",
        "uri": "http://dbpedia.org/resource/Liliya_Lobanova"
      }
    ],
    "id": "5ed77f5b5ec94a8ebe4f29dad560565e",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace"
      }
    ]
  },
  {
    "question": "Laozi authored which book?",
    "SerialNumber": "3976",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Laozi> } ",
    "entity mapping": [
      {
        "label": "Laozi",
        "uri": "http://dbpedia.org/resource/Laozi"
      }
    ],
    "id": "4991e293a5df4dacb638b36ffa363faa",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "Who wrote the play in which a character called Stella Kowalski exists?",
    "SerialNumber": "3979",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Stella_Kowalski> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
    "entity mapping": [
      {
        "label": "Stella Kowalski",
        "uri": "http://dbpedia.org/resource/Stella_Kowalski"
      }
    ],
    "id": "ba5faf932d46419e98e625fe00202062",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Play"
      }
    ]
  },
  {
    "question": "Which award is presented by Downtown Athletic Club?",
    "SerialNumber": "3980",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Downtown_Athletic_Club>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "Downtown Athletic Club",
        "uri": "http://dbpedia.org/resource/Downtown_Athletic_Club"
      }
    ],
    "id": "eb60a056d11940db85207b6c2d7dba3e",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "What are the largest cities in each of the destinations of TranStar Airlines?",
    "SerialNumber": "3981",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/TranStar_Airlines> <http://dbpedia.org/ontology/destination> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "TranStar Airlines",
        "uri": "http://dbpedia.org/resource/TranStar_Airlines"
      }
    ],
    "id": "9e28d32cb50c430abb9b65aa6808dbb3",
    "predicate mapping": [
      {
        "label": "destination",
        "uri": "http://dbpedia.org/ontology/destination"
      },
      {
        "label": "largest",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "How many things belong to phylum of Chordate?",
    "SerialNumber": "3984",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . }",
    "entity mapping": [
      {
        "label": "Chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      }
    ],
    "id": "40370fe27b3a4ec29366818da40b692d",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum"
      }
    ]
  },
  {
    "question": "What units are garrisoned in the Pentagon?",
    "SerialNumber": "3985",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Pentagon",
        "uri": "http://dbpedia.org/resource/The_Pentagon"
      }
    ],
    "id": "737d63b84ad04faf9d88e0ea08e6d2a9",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      },
      {
        "label": "units",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Was A Jitney Elopement edited by Charlie Chaplin?",
    "SerialNumber": "3989",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Jitney_Elopement> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Charlie_Chaplin> }",
    "entity mapping": [
      {
        "label": "A Jitney Elopement",
        "uri": "http://dbpedia.org/resource/A_Jitney_Elopement"
      },
      {
        "label": "Charlie Chaplin",
        "uri": "http://dbpedia.org/resource/Charlie_Chaplin"
      }
    ],
    "id": "2d35b5fc3d04477aad9ca12f1abfdc9c",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editing"
      }
    ]
  },
  {
    "question": "What is the nationality of the entomologist who is a renowned authority of Smerinthus saliceti ?",
    "SerialNumber": "3991",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Smerinthus_saliceti> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/citizenship> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Entomologist>}",
    "entity mapping": [
      {
        "label": "Smerinthus saliceti",
        "uri": "http://dbpedia.org/resource/Smerinthus_saliceti"
      }
    ],
    "id": "94f2d3a65f0a4e228e6ea8f5ff7a54b0",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/citizenship"
      },
      {
        "label": "entomologist",
        "uri": "http://dbpedia.org/ontology/Entomologist"
      }
    ]
  },
  {
    "question": "Give me the home town of all musical artists who uses Guitar as instrument ?",
    "SerialNumber": "3992",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Guitar",
        "uri": "http://dbpedia.org/resource/Guitar"
      }
    ],
    "id": "cce1fd93712c40fca3adc66926bf15f6",
    "predicate mapping": [
      {
        "label": "instrument",
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "List the home town of the bands whose label is Alive Naturalsound Records ?",
    "SerialNumber": "3995",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Alive_Naturalsound_Records> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Alive Naturalsound Records",
        "uri": "http://dbpedia.org/resource/Alive_Naturalsound_Records"
      }
    ],
    "id": "50b720c354cd4b49b16d4a0335fb3b51",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "What is the draft team of the Antoine Bibeau and also has player named Nathan Dempsey ?",
    "SerialNumber": "3996",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Nathan_Dempsey> <http://dbpedia.org/property/playedFor> ?uri} ",
    "entity mapping": [
      {
        "label": "Antoine Bibeau",
        "uri": "http://dbpedia.org/resource/Antoine_Bibeau"
      },
      {
        "label": "Nathan Dempsey",
        "uri": "http://dbpedia.org/resource/Nathan_Dempsey"
      }
    ],
    "id": "60a1f302d38442018cd7792bbeefef8a",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "What is the draft team of Antoine Bibeau ?",
    "SerialNumber": "3997",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Antoine Bibeau",
        "uri": "http://dbpedia.org/resource/Antoine_Bibeau"
      }
    ],
    "id": "3cd70345b5cd4e35992ea594bd44a98d",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      }
    ]
  },
  {
    "question": "What is the location city of Burnside Distribution Corporation ?",
    "SerialNumber": "3998",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burnside_Distribution_Corporation> <http://dbpedia.org/ontology/locationCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Burnside Distribution Corporation",
        "uri": "http://dbpedia.org/resource/Burnside_Distribution_Corporation"
      }
    ],
    "id": "27755507bd1f447995393a4420bd86b2",
    "predicate mapping": [
      {
        "label": "location city",
        "uri": "http://dbpedia.org/ontology/locationCity"
      }
    ]
  },
  {
    "question": "Name the place of Qaqun ?",
    "SerialNumber": "4000",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Qaqun> <http://dbpedia.org/property/place> ?uri } ",
    "entity mapping": [
      {
        "label": "Qaqun",
        "uri": "http://dbpedia.org/resource/Qaqun"
      }
    ],
    "id": "1f68b53e47e149d09907454d2b07ef22",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place"
      }
    ]
  },
  {
    "question": "Was Marshall Arisman the cover artist in american psycho?",
    "SerialNumber": "4001",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/American_Psycho> <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/Marshall_Arisman> }",
    "entity mapping": [
      {
        "label": "american psycho",
        "uri": "http://dbpedia.org/resource/American_Psycho"
      },
      {
        "label": "Marshall Arisman",
        "uri": "http://dbpedia.org/resource/Marshall_Arisman"
      }
    ],
    "id": "8bbfc3dedcd44adda33c6da9cd9eb427",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/property/coverArtist"
      }
    ]
  },
  {
    "question": "What is the publisher of Lucifer\u0027s Hammer ?",
    "SerialNumber": "4002",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lucifer\u0027s_Hammer> <http://dbpedia.org/ontology/publisher> ?uri } ",
    "entity mapping": [
      {
        "label": "Lucifer\u0027s Hammer",
        "uri": "http://dbpedia.org/resource/Lucifer\u0027s_Hammer"
      }
    ],
    "id": "1cb857cf079c4860a7e33220a4e6ff29",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      }
    ]
  },
  {
    "question": "The Information: A History, a Theory, a Flood is a work of Isaac Newton?",
    "SerialNumber": "4003",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Information:_A_History,_a_Theory,_a_Flood> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Isaac_Newton> }",
    "entity mapping": [
      {
        "label": "The Information: A History, a Theory, a Flood",
        "uri": "http://dbpedia.org/resource/The_Information:_A_History,_a_Theory,_a_Flood"
      },
      {
        "label": "Isaac Newton",
        "uri": "http://dbpedia.org/resource/Isaac_Newton"
      }
    ],
    "id": "11122ef7a8fb46d89a3d6b4d6757b990",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/previousWork"
      }
    ]
  },
  {
    "question": "To which branch Edwin F. Hunter  belong ?",
    "SerialNumber": "4004",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri } ",
    "entity mapping": [
      {
        "label": "Edwin F. Hunter",
        "uri": "http://dbpedia.org/resource/Edwin_F._Hunter"
      }
    ],
    "id": "a5f4396627fd49da96fd3f5a294e9ec2",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "Who are some cofounders of record labels with Frank Rogers?",
    "SerialNumber": "4005",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Frank_Rogers_(record_producer)> . ?x <http://dbpedia.org/property/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RecordLabel>}",
    "entity mapping": [
      {
        "label": "Frank Rogers",
        "uri": "http://dbpedia.org/resource/Frank_Rogers_(record_producer)"
      }
    ],
    "id": "83dd6b5f5814451baa118379ef1bed54",
    "predicate mapping": [
      {
        "label": "founders",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "founders",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/RecordLabel"
      }
    ]
  },
  {
    "question": "Which river\u0027s mouth location is Laptev Sea and also Arctic Ocean?",
    "SerialNumber": "4006",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Arctic_Ocean> . }",
    "entity mapping": [
      {
        "label": "Laptev Sea",
        "uri": "http://dbpedia.org/resource/Laptev_Sea"
      },
      {
        "label": "Arctic Ocean",
        "uri": "http://dbpedia.org/resource/Arctic_Ocean"
      }
    ],
    "id": "65c328879d034ec780147a99b1bc4f61",
    "predicate mapping": [
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "mouth location",
        "uri": "http://dbpedia.org/property/mouthLocation"
      }
    ]
  },
  {
    "question": "Who is known for are Battle of the Thames and War of 1812?",
    "SerialNumber": "4010",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Battle_of_the_Thames> . ?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/War_of_1812> . }",
    "entity mapping": [
      {
        "label": "Battle of the Thames",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Thames"
      },
      {
        "label": "War of 1812",
        "uri": "http://dbpedia.org/resource/War_of_1812"
      }
    ],
    "id": "dd867c518f7546ee9a9f242d25058cb5",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "How many groups speak the English Language?",
    "SerialNumber": "4011",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/English_language>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "entity mapping": [
      {
        "label": "English Language",
        "uri": "http://dbpedia.org/resource/English_language"
      }
    ],
    "id": "977b6f4153b04d6bada78a4b6fb29965",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/languages"
      },
      {
        "label": "groups",
        "uri": "http://dbpedia.org/ontology/EthnicGroup"
      }
    ]
  },
  {
    "question": "How many owners are there of lines starting at the South Station?",
    "SerialNumber": "4012",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/South_Station> . ?x <http://dbpedia.org/property/owner> ?uri  . }",
    "entity mapping": [
      {
        "label": "South Station",
        "uri": "http://dbpedia.org/resource/South_Station"
      }
    ],
    "id": "e1f3b680b0e145f894360fb4fde18286",
    "predicate mapping": [
      {
        "label": "starting",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "owners",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Name the basketball players drafted by Los Angeles Clippers ?",
    "SerialNumber": "4014",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "Los Angeles Clippers",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Clippers"
      }
    ],
    "id": "f9d09b029bdf4189b301584f3e75101c",
    "predicate mapping": [
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "What city is located on the mouth of Duwamish River?",
    "SerialNumber": "4015",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Duwamish_River> <http://dbpedia.org/ontology/riverMouth> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }",
    "entity mapping": [
      {
        "label": "Duwamish River",
        "uri": "http://dbpedia.org/resource/Duwamish_River"
      }
    ],
    "id": "07b9884b55c94fbe84f471475935e466",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "Where is the mouth of the river whose tributary is Bjelimićka  Rijeka ?",
    "SerialNumber": "4016",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Bjelimićka_Rijeka> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bjelimićka Rijeka",
        "uri": "http://dbpedia.org/resource/Bjelimićka_Rijeka"
      }
    ],
    "id": "61bd46182b1447fdba130dd495c98b61",
    "predicate mapping": [
      {
        "label": "tributary",
        "uri": "http://dbpedia.org/ontology/rightTributary"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/ontology/mouthCountry"
      }
    ]
  },
  {
    "question": "Which river flows through Central Washington?",
    "SerialNumber": "4020",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Central_Washington> <http://dbpedia.org/ontology/river> ?uri } ",
    "entity mapping": [
      {
        "label": "Central Washington",
        "uri": "http://dbpedia.org/resource/Central_Washington"
      }
    ],
    "id": "10234f4efd8b4dd087898060000c073b",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "Who is the scientist whose academic advisor is Franz Brentano?",
    "SerialNumber": "4021",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Franz_Brentano>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Franz Brentano",
        "uri": "http://dbpedia.org/resource/Franz_Brentano"
      }
    ],
    "id": "b2b282ef2cd14876880434680aa25fa4",
    "predicate mapping": [
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Tandem Computers is the subsidiary of which company?",
    "SerialNumber": "4023",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers> } ",
    "entity mapping": [
      {
        "label": "Tandem Computers",
        "uri": "http://dbpedia.org/resource/Tandem_Computers"
      }
    ],
    "id": "8b5c756e4b4d417bb041434770f85a38",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      }
    ]
  },
  {
    "question": "Name the office holder who has a child named Lori Black and resting place is Alta Mesa Memorial Park?",
    "SerialNumber": "4025",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Lori Black",
        "uri": "http://dbpedia.org/resource/Lori_Black"
      },
      {
        "label": "Alta Mesa Memorial Park",
        "uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park"
      }
    ],
    "id": "e362bbac4bf646538ffec9b1af997937",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Who appointed the successor of Thomas Bee?",
    "SerialNumber": "4026",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Thomas_Bee> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Thomas Bee",
        "uri": "http://dbpedia.org/resource/Thomas_Bee"
      }
    ],
    "id": "5662a9fee12a46c9a92783e3e54161e1",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "What is the home town of the Band which is the previous work of Sammy Hagar \u0026 Friends ?",
    "SerialNumber": "4027",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sammy_Hagar_\u0026_Friends> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Sammy Hagar \u0026 Friends",
        "uri": "http://dbpedia.org/resource/Sammy_Hagar_\u0026_Friends"
      }
    ],
    "id": "e8bec3414aec434f985546fa26880eff",
    "predicate mapping": [
      {
        "label": "previous work",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "Band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "VP-8 and VP-10 shares which command structure ?",
    "SerialNumber": "4028",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/VP-8> <http://dbpedia.org/ontology/commandStructure> ?uri. <http://dbpedia.org/resource/VP-10> <http://dbpedia.org/ontology/commandStructure> ?uri . }",
    "entity mapping": [
      {
        "label": "VP-8",
        "uri": "http://dbpedia.org/resource/VP-8"
      },
      {
        "label": "VP-10",
        "uri": "http://dbpedia.org/resource/VP-10"
      }
    ],
    "id": "5b6e06c40cae4a26af7b0d745c9ace62",
    "predicate mapping": [
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      },
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      }
    ]
  },
  {
    "question": "Which person constituency is Duboce Triangle, San Francisco and military unit is USS Kittiwake (ASR-13)?",
    "SerialNumber": "4029",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Duboce Triangle",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco"
      },
      {
        "label": "USS Kittiwake (ASR-13)",
        "uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)"
      }
    ],
    "id": "cdcc5bd84e7145dabfc4849ac69af063",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List the people residing in Wilton, Connecticut?",
    "SerialNumber": "4030",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut> } ",
    "entity mapping": [
      {
        "label": "Wilton, Connecticut",
        "uri": "http://dbpedia.org/resource/Wilton,_Connecticut"
      }
    ],
    "id": "c2a0f7c7f5f54180bbca4cd712cbfc97",
    "predicate mapping": [
      {
        "label": "residing",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "Is Ethics the main interests of Henry David Thoreau?",
    "SerialNumber": "4031",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_David_Thoreau> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> }",
    "entity mapping": [
      {
        "label": "Henry David Thoreau",
        "uri": "http://dbpedia.org/resource/Henry_David_Thoreau"
      },
      {
        "label": "Ethics",
        "uri": "http://dbpedia.org/resource/Ethics"
      }
    ],
    "id": "cce9e73a34874a43a8eec33a74970392",
    "predicate mapping": [
      {
        "label": "main interests",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "Name the other party of Chandra Shekhar ?",
    "SerialNumber": "4032",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri } ",
    "entity mapping": [
      {
        "label": "Chandra Shekhar",
        "uri": "http://dbpedia.org/resource/Chandra_Shekhar"
      }
    ],
    "id": "610c262711204bef968971cfcdf19b3f",
    "predicate mapping": [
      {
        "label": "other party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      }
    ]
  },
  {
    "question": "Which animator of Tommy Tucker\u0027s Tooth is also the film director of Alice\u0027s Wonderland ?",
    "SerialNumber": "4035",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice\u0027s_Wonderland> <http://dbpedia.org/ontology/director> ?uri. <http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth> <http://dbpedia.org/property/animator> ?uri} ",
    "entity mapping": [
      {
        "label": "Alice\u0027s Wonderland",
        "uri": "http://dbpedia.org/resource/Alice\u0027s_Wonderland"
      },
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth"
      }
    ],
    "id": "d23e68c01b574ddc9271799a3081aec1",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator"
      }
    ]
  },
  {
    "question": "What was created by Larry David and Jerry Seinfeld?",
    "SerialNumber": "4036",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Jerry_Seinfeld> . }",
    "entity mapping": [
      {
        "label": "Larry David",
        "uri": "http://dbpedia.org/resource/Larry_David"
      },
      {
        "label": "Jerry Seinfeld",
        "uri": "http://dbpedia.org/resource/Jerry_Seinfeld"
      }
    ],
    "id": "67455a7a7dde4d828284efb85a8ab936",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator"
      }
    ]
  },
  {
    "question": "Which license of the Microsoft Office Picture Manager is also the  product of the Apple Productivity Experience Group ",
    "SerialNumber": "4037",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Office_Picture_Manager> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/Apple_Productivity_Experience_Group> <http://dbpedia.org/ontology/product> ?uri} ",
    "entity mapping": [
      {
        "label": "Microsoft Office Picture Manager",
        "uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager"
      },
      {
        "label": "Apple Productivity Experience Group",
        "uri": "http://dbpedia.org/resource/Apple_Productivity_Experience_Group"
      }
    ],
    "id": "e647f8a4abe9470d911a1b8e08445ef3",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "Who does Cam PLante plays for ?",
    "SerialNumber": "4038",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri } ",
    "entity mapping": [
      {
        "label": "Cam PLante",
        "uri": "http://dbpedia.org/resource/Cam_Plante"
      }
    ],
    "id": "57c6b07e37134052a728a3def6121f55",
    "predicate mapping": [
      {
        "label": "plays for",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "For everyone who died in paris, count their different fields of work.",
    "SerialNumber": "4039",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Paris> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
    "entity mapping": [
      {
        "label": "paris",
        "uri": "http://dbpedia.org/resource/Paris"
      }
    ],
    "id": "587b373a04ab48eeb4fd4cdba4abc95d",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "Michael Deeley produce how many movies?",
    "SerialNumber": "4041",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley>  . }",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "uri": "http://dbpedia.org/resource/Michael_Deeley"
      }
    ],
    "id": "74bea979df0f49f0aafba5f2d1be9297",
    "predicate mapping": [
      {
        "label": "produce",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "Was tupac a member of Outlawz?",
    "SerialNumber": "4042",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Outlawz> <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Tupac_Shakur> }",
    "entity mapping": [
      {
        "label": "Outlawz",
        "uri": "http://dbpedia.org/resource/Outlawz"
      },
      {
        "label": "tupac",
        "uri": "http://dbpedia.org/resource/Tupac_Shakur"
      }
    ],
    "id": "55dc98a69d7e46bc9d0d587c20083de5",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/pastMembers"
      }
    ]
  },
  {
    "question": "List all the hubs of the airline whose one of the hub is Subang, Indonesia ?",
    "SerialNumber": "4045",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Subang,_Indonesia> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Subang, Indonesia",
        "uri": "http://dbpedia.org/resource/Subang,_Indonesia"
      }
    ],
    "id": "1c29ceb7c9044f359907d2b49a487e25",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Music of how many things has been given by Akira Ifukube?",
    "SerialNumber": "4046",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . }",
    "entity mapping": [
      {
        "label": "Akira Ifukube",
        "uri": "http://dbpedia.org/resource/Akira_Ifukube"
      }
    ],
    "id": "fa117cae2bc74153aff9272ca43d4cf1",
    "predicate mapping": [
      {
        "label": "Music",
        "uri": "http://dbpedia.org/property/music"
      }
    ]
  },
  {
    "question": "To which counties do Jerome avenue and Tremont avenue belong?",
    "SerialNumber": "4047",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerome_Avenue> <http://dbpedia.org/property/counties> ?uri. <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri . }",
    "entity mapping": [
      {
        "label": "Jerome avenue",
        "uri": "http://dbpedia.org/resource/Jerome_Avenue"
      },
      {
        "label": "Tremont avenue",
        "uri": "http://dbpedia.org/resource/Tremont_Avenue"
      }
    ],
    "id": "df64ee27d66345969b11885dcb0f0d32",
    "predicate mapping": [
      {
        "label": "counties",
        "uri": "http://dbpedia.org/property/counties"
      },
      {
        "label": "counties",
        "uri": "http://dbpedia.org/property/counties"
      }
    ]
  },
  {
    "question": "Pointe d\u0027Aveneyre belongs to which mountain range?",
    "SerialNumber": "4050",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pointe_d\u0027Aveneyre> <http://dbpedia.org/ontology/mountainRange> ?uri } ",
    "entity mapping": [
      {
        "label": "Pointe d\u0027Aveneyre",
        "uri": "http://dbpedia.org/resource/Pointe_d\u0027Aveneyre"
      }
    ],
    "id": "1d1199ba017a424983574e26ac9cc2bb",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      }
    ]
  },
  {
    "question": "Which currency is used by the record label of the Way to Your Heart?",
    "SerialNumber": "4051",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Way_to_Your_Heart> <http://dbpedia.org/ontology/recordLabel> ?x . ?x <http://dbpedia.org/property/currency> ?uri  . }",
    "entity mapping": [
      {
        "label": "the Way to Your Heart",
        "uri": "http://dbpedia.org/resource/The_Way_to_Your_Heart"
      }
    ],
    "id": "dd559ff6b26c4bb5b8fbcc642135b6f2",
    "predicate mapping": [
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency"
      }
    ]
  },
  {
    "question": "Who is the office holder whose resting place is Monticello?",
    "SerialNumber": "4052",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Monticello>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Monticello",
        "uri": "http://dbpedia.org/resource/Monticello"
      }
    ],
    "id": "2516a91470b8418cb05fc66aaf9f2d9e",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Where is the tombstone of the successor of Edward Wolcott?",
    "SerialNumber": "4054",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Edward_O._Wolcott> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Edward Wolcott",
        "uri": "http://dbpedia.org/resource/Edward_O._Wolcott"
      }
    ],
    "id": "221d800881d44522a1fbc7d81300bcb8",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "Who are the associated musical artist of Carolyn Dennis?",
    "SerialNumber": "4055",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carolyn_Dennis> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri } ",
    "entity mapping": [
      {
        "label": "Carolyn Dennis",
        "uri": "http://dbpedia.org/resource/Carolyn_Dennis"
      }
    ],
    "id": "bfea3fef8cd04b65b6f6dcf3078461ec",
    "predicate mapping": [
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "What is the resting place of the engineer who was the architect of Plaza on DeWitt?",
    "SerialNumber": "4057",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Plaza_on_DeWitt> <http://dbpedia.org/ontology/architect> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Plaza on DeWitt",
        "uri": "http://dbpedia.org/resource/Plaza_on_DeWitt"
      }
    ],
    "id": "81672c09f09c4704b6188617b549a4c1",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "Is north caucasian emirate have an islamic government?",
    "SerialNumber": "4058",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/North_Caucasian_Emirate> <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Islam> }",
    "entity mapping": [
      {
        "label": "north caucasian emirate",
        "uri": "http://dbpedia.org/resource/North_Caucasian_Emirate"
      },
      {
        "label": "islam",
        "uri": "http://dbpedia.org/resource/Islam"
      }
    ],
    "id": "139890f04c654406a0930193ff1b4264",
    "predicate mapping": [
      {
        "label": "government",
        "uri": "http://dbpedia.org/ontology/governmentType"
      }
    ]
  },
  {
    "question": "What is the game whose genre is Mind sport?",
    "SerialNumber": "4059",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Mind_sport>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Game>}",
    "entity mapping": [
      {
        "label": "Mind sport",
        "uri": "http://dbpedia.org/resource/Mind_sport"
      }
    ],
    "id": "a5503f4d85444a1bbe8edc89a85b5984",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "game",
        "uri": "http://dbpedia.org/ontology/Game"
      }
    ]
  },
  {
    "question": "How many awards have graduates from the University of Queensland earned?",
    "SerialNumber": "4060",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Queensland> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "University of Queensland",
        "uri": "http://dbpedia.org/resource/University_of_Queensland"
      }
    ],
    "id": "2befeb95c8a64b9e882868baec3055f9",
    "predicate mapping": [
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "How many other architect are there of the historic places whose architect is also Stanford White ?",
    "SerialNumber": "4061",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Stanford_White> . ?x <http://dbpedia.org/ontology/architect> ?uri }",
    "entity mapping": [
      {
        "label": "Stanford White",
        "uri": "http://dbpedia.org/resource/Stanford_White"
      }
    ],
    "id": "25e3cd095c5a460e818600f9908859d5",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect"
      }
    ]
  },
  {
    "question": "What cities are around the valley bordering Lake Mead?",
    "SerialNumber": "4064",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Lake_Mead> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}",
    "entity mapping": [
      {
        "label": "Lake Mead",
        "uri": "http://dbpedia.org/resource/Lake_Mead"
      }
    ],
    "id": "85b8568d9aef45bab5f160d0fd9ad8f9",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "valley",
        "uri": "http://dbpedia.org/ontology/Valley"
      }
    ]
  },
  {
    "question": "Who wrote A house not meant to stand and Akale?",
    "SerialNumber": "4065",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_House_Not_Meant_to_Stand> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/Akale> <http://dbpedia.org/ontology/writer> ?uri} ",
    "entity mapping": [
      {
        "label": "A house not meant to stand",
        "uri": "http://dbpedia.org/resource/A_House_Not_Meant_to_Stand"
      },
      {
        "label": "Akale",
        "uri": "http://dbpedia.org/resource/Akale"
      }
    ],
    "id": "e4faeda0920e4c5ba42aed906478d386",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/writer"
      }
    ]
  },
  {
    "question": "The fugitive Kind and the Notebook of Trigorin is written by what author?",
    "SerialNumber": "4067",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Fugitive_Kind> <http://dbpedia.org/property/writer> ?uri. <http://dbpedia.org/resource/The_Notebook_of_Trigorin> <http://dbpedia.org/ontology/author> ?uri . }",
    "entity mapping": [
      {
        "label": "The fugitive Kind",
        "uri": "http://dbpedia.org/resource/The_Fugitive_Kind"
      },
      {
        "label": "the Notebook of Trigorin",
        "uri": "http://dbpedia.org/resource/The_Notebook_of_Trigorin"
      }
    ],
    "id": "835d9ccd780342e6a7509b3ca855b1d1",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "What are the television shows whose company is owned by Viacom?",
    "SerialNumber": "4068",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Viacom_(original)> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Viacom",
        "uri": "http://dbpedia.org/resource/Viacom_(original)"
      }
    ],
    "id": "bfb53a96bd9c48b28e143f608fb4f1f9",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the operator of AT\u0026T Park ?",
    "SerialNumber": "4070",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AT\u0026T_Park> <http://dbpedia.org/property/operator> ?uri } ",
    "entity mapping": [
      {
        "label": "AT\u0026T Park",
        "uri": "http://dbpedia.org/resource/AT\u0026T_Park"
      }
    ],
    "id": "df298794f4bc4b8bad182adc7794db3a",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator"
      }
    ]
  },
  {
    "question": "What is the origin of Xynisteri?",
    "SerialNumber": "4071",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Xynisteri> <http://dbpedia.org/ontology/origin> ?uri } ",
    "entity mapping": [
      {
        "label": "Xynisteri",
        "uri": "http://dbpedia.org/resource/Xynisteri"
      }
    ],
    "id": "f703a972a86f40aa9788b9324760cfa2",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "Who gave the musical score  of 9 to 5 (musical) ?",
    "SerialNumber": "4072",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/9_to_5_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri } ",
    "entity mapping": [
      {
        "label": "9 to 5 (musical)",
        "uri": "http://dbpedia.org/resource/9_to_5_(musical)"
      }
    ],
    "id": "65165521d68f40e7a5aa5bcd34fd39b3",
    "predicate mapping": [
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/musicBy"
      }
    ]
  },
  {
    "question": "Give me the number of home stadiums of teams managed by John Spencer.",
    "SerialNumber": "4074",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/manager> <http://dbpedia.org/resource/John_Spencer_(Scottish_footballer)> . ?x <http://dbpedia.org/ontology/homeStadium> ?uri  . }",
    "entity mapping": [
      {
        "label": "John Spencer",
        "uri": "http://dbpedia.org/resource/John_Spencer_(Scottish_footballer)"
      }
    ],
    "id": "7cd0eadad948412c89a6e72b70ef5624",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/manager"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      }
    ]
  },
  {
    "question": "Who is the monarch of Bertalan Szemere ?",
    "SerialNumber": "4079",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bertalan_Szemere> <http://dbpedia.org/ontology/monarch> ?uri } ",
    "entity mapping": [
      {
        "label": "Bertalan Szemere",
        "uri": "http://dbpedia.org/resource/Bertalan_Szemere"
      }
    ],
    "id": "b565b9a72721499f8857765c8003b017",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch"
      }
    ]
  },
  {
    "question": "Which awards did the children of Erik Bergman won ?",
    "SerialNumber": "4082",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Erik_Bergman_(Lutheran_minister)> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Erik Bergman",
        "uri": "http://dbpedia.org/resource/Erik_Bergman_(Lutheran_minister)"
      }
    ],
    "id": "db5d49f80c774b80beb208bc62050aca",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Was Zachary Taylor a commander of the sixth infantry regiment of US?",
    "SerialNumber": "4083",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/6th_Infantry_Regiment_(United_States)> <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Zachary_Taylor> }",
    "entity mapping": [
      {
        "label": "sixth infantry regiment",
        "uri": "http://dbpedia.org/resource/6th_Infantry_Regiment_(United_States)"
      },
      {
        "label": "Zachary Taylor",
        "uri": "http://dbpedia.org/resource/Zachary_Taylor"
      }
    ],
    "id": "ff4af6d5452c41b6824723db767008d2",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander"
      }
    ]
  },
  {
    "question": "Name a basketball player with teams as Chicago Bulls and Phoenix Suns?",
    "SerialNumber": "4084",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> . ?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "Chicago Bulls",
        "uri": "http://dbpedia.org/resource/Chicago_Bulls"
      },
      {
        "label": "Phoenix Suns",
        "uri": "http://dbpedia.org/resource/Phoenix_Suns"
      }
    ],
    "id": "93eaea9dda124dfd85c775d17d677854",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "Who all were venerated in Islam?",
    "SerialNumber": "4085",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . }",
    "entity mapping": [
      {
        "label": "Islam",
        "uri": "http://dbpedia.org/resource/Islam"
      }
    ],
    "id": "8ca57812f631476bade8b48c874f0758",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      }
    ]
  },
  {
    "question": "Name the state of Timothy J. Roemer ?",
    "SerialNumber": "4086",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Timothy_J._Roemer> <http://dbpedia.org/property/state> ?uri } ",
    "entity mapping": [
      {
        "label": "Timothy J. Roemer",
        "uri": "http://dbpedia.org/resource/Timothy_J._Roemer"
      }
    ],
    "id": "4ad334fedc644b27b70be5eb63ee7379",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "What other awards have Becket fund for religious liberty winners received?",
    "SerialNumber": "4087",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Becket fund for religious liberty",
        "uri": "http://dbpedia.org/resource/Becket_Fund_for_Religious_Liberty"
      }
    ],
    "id": "8e746dc2d0ca43a5bb2b3ed8dde3da88",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "List the websites which the authors of Tornado own ?",
    "SerialNumber": "4088",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Tornado_(web_server)> <http://dbpedia.org/property/author> ?x . ?x <http://dbpedia.org/ontology/owner> ?uri  . }",
    "entity mapping": [
      {
        "label": "Tornado",
        "uri": "http://dbpedia.org/resource/Tornado_(web_server)"
      }
    ],
    "id": "c8685c50587445548f0ea1f4e315dab0",
    "predicate mapping": [
      {
        "label": "authors",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "own",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "What is the field of interest of the advisor of Henri Maspero ?",
    "SerialNumber": "4089",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Henri_Maspero> <http://dbpedia.org/ontology/academicAdvisor> ?x . ?x <http://dbpedia.org/property/fields> ?uri  . }",
    "entity mapping": [
      {
        "label": "Henri Maspero",
        "uri": "http://dbpedia.org/resource/Henri_Maspero"
      }
    ],
    "id": "937f389062f442449e18135bef47f3eb",
    "predicate mapping": [
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "Who has his resting place at  Plymouth, Vermont and office at Massachusetts House of Representatives?",
    "SerialNumber": "4092",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Plymouth,_Vermont> . ?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . }",
    "entity mapping": [
      {
        "label": "Plymouth, Vermont",
        "uri": "http://dbpedia.org/resource/Plymouth,_Vermont"
      },
      {
        "label": "Massachusetts House of Representatives",
        "uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives"
      }
    ],
    "id": "fe0d90f8a0604403896d62bdec7384a4",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "What is the location of Dad\u0027s Root Beer on Google maps?",
    "SerialNumber": "4094",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dad\u0027s_Root_Beer> <http://dbpedia.org/property/locationCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Dad\u0027s Root Beer",
        "uri": "http://dbpedia.org/resource/Dad\u0027s_Root_Beer"
      }
    ],
    "id": "9e6adf11753c4b9aaf5b447c279a2806",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/locationCity"
      }
    ]
  },
  {
    "question": "Which battle is Jim Jones associated with to which Allen Boyd is also associated ?",
    "SerialNumber": "4095",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jim_Jones_(judge)> <http://dbpedia.org/ontology/battle> ?uri. <http://dbpedia.org/resource/Allen_Boyd> <http://dbpedia.org/property/battles> ?uri} ",
    "entity mapping": [
      {
        "label": "Jim Jones",
        "uri": "http://dbpedia.org/resource/Jim_Jones_(judge)"
      },
      {
        "label": "Allen Boyd",
        "uri": "http://dbpedia.org/resource/Allen_Boyd"
      }
    ],
    "id": "6ec30fe0b36547bcb0729a3ebbe32668",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "For how many teams have the league players of Czech Extraliga, previously played?",
    "SerialNumber": "4096",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Czech_Extraliga> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
    "entity mapping": [
      {
        "label": "Czech Extraliga",
        "uri": "http://dbpedia.org/resource/Czech_Extraliga"
      }
    ],
    "id": "a7c87f40069e4564932474884de6f858",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "What is the band with previous members  Kevin Jonas and Joe Jonas?",
    "SerialNumber": "4098",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Kevin Jonas",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas"
      },
      {
        "label": "Joe Jonas",
        "uri": "http://dbpedia.org/resource/Joe_Jonas"
      }
    ],
    "id": "8a6a91af36574b0f862aec730fbae99a",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Who offers the services of OneDrive and Outlook.com?",
    "SerialNumber": "4099",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Outlook.com> . }",
    "entity mapping": [
      {
        "label": "OneDrive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      },
      {
        "label": "Outlook.com",
        "uri": "http://dbpedia.org/resource/Outlook.com"
      }
    ],
    "id": "5123bf218806473e8b8cb4decac4c5c1",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "Name the nearest city to David W. Brown House ?",
    "SerialNumber": "4103",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_W._Brown_House> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "David W. Brown House",
        "uri": "http://dbpedia.org/resource/David_W._Brown_House"
      }
    ],
    "id": "9d219753a5dd4445828a1191d8654d63",
    "predicate mapping": [
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      }
    ]
  },
  {
    "question": "List all the awards won by the artist who has won SIGGRAPH ?",
    "SerialNumber": "4108",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/SIGGRAPH> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "SIGGRAPH",
        "uri": "http://dbpedia.org/resource/SIGGRAPH"
      }
    ],
    "id": "03d1aac45ffe4ba0a49144fd00b0c7b1",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Name the work institutions of Andrew Schally?",
    "SerialNumber": "4109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri } ",
    "entity mapping": [
      {
        "label": "Andrew Schally",
        "uri": "http://dbpedia.org/resource/Andrew_Schally"
      }
    ],
    "id": "133aa4a4648d4bb3b3f15ed06a0566cd",
    "predicate mapping": [
      {
        "label": "work institutions",
        "uri": "http://dbpedia.org/property/workInstitutions"
      }
    ]
  },
  {
    "question": "What are the important buildings of the architect whose one of the significant building is Krasnye Vorota?",
    "SerialNumber": "4111",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/significantBuilding> <http://dbpedia.org/resource/Krasnye_Vorota_(Moscow_Metro)> . ?x <http://dbpedia.org/ontology/significantBuilding> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}",
    "entity mapping": [
      {
        "label": "Krasnye Vorota",
        "uri": "http://dbpedia.org/resource/Krasnye_Vorota_(Moscow_Metro)"
      }
    ],
    "id": "ab45c23c549d43d290b260f9930c647e",
    "predicate mapping": [
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding"
      },
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/Architect"
      }
    ]
  },
  {
    "question": "In how many regions is the Baco Noir made?",
    "SerialNumber": "4112",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Baco_noir> <http://dbpedia.org/ontology/wineRegion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Baco Noir",
        "uri": "http://dbpedia.org/resource/Baco_noir"
      }
    ],
    "id": "ae46bb43a8ad4337abd5a034defa5266",
    "predicate mapping": [
      {
        "label": "regions",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      }
    ]
  },
  {
    "question": "Which movies have their music composed by someone that signed up with RCA Records?",
    "SerialNumber": "4113",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/RCA_Records> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "RCA Records",
        "uri": "http://dbpedia.org/resource/RCA_Records"
      }
    ],
    "id": "59739c63c5ec4c2d8d42e0dfefe5565a",
    "predicate mapping": [
      {
        "label": "records",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Where does the jurisdiction of European Border and Coast Guard fall?",
    "SerialNumber": "4114",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Border_and_Coast_Guard> <http://dbpedia.org/property/jurisdiction> ?uri } ",
    "entity mapping": [
      {
        "label": "European Border and Coast Guard",
        "uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard"
      }
    ],
    "id": "4d4d5eb4e4af459bb778d50006a9fc0b",
    "predicate mapping": [
      {
        "label": "jurisdiction",
        "uri": "http://dbpedia.org/property/jurisdiction"
      }
    ]
  },
  {
    "question": "How many movies have been directed by Orson Welles ?",
    "SerialNumber": "4116",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Orson Welles",
        "uri": "http://dbpedia.org/resource/Orson_Welles"
      }
    ],
    "id": "8f627e41b2a9414c9787d98739f906f1",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name the common home port of the Trishna (yacht) and INS Viraat (R22)?",
    "SerialNumber": "4118",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trishna_(yacht)> <http://dbpedia.org/ontology/homeport> ?uri. <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri . }",
    "entity mapping": [
      {
        "label": "Trishna (yacht)",
        "uri": "http://dbpedia.org/resource/Trishna_(yacht)"
      },
      {
        "label": "INS Viraat (R22)",
        "uri": "http://dbpedia.org/resource/INS_Viraat_(R22)"
      }
    ],
    "id": "2ac31aab8ba340e8947ddfab3797c6d5",
    "predicate mapping": [
      {
        "label": "port home",
        "uri": "http://dbpedia.org/ontology/homeport"
      },
      {
        "label": "port home",
        "uri": "http://dbpedia.org/ontology/homeport"
      }
    ]
  },
  {
    "question": "Where is the stadium of Philadelphia Rage ?",
    "SerialNumber": "4119",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philadelphia_Rage> <http://dbpedia.org/ontology/stadium> ?uri } ",
    "entity mapping": [
      {
        "label": "Philadelphia Rage",
        "uri": "http://dbpedia.org/resource/Philadelphia_Rage"
      }
    ],
    "id": "9fbc4d9d9b2b46fab68cb8a4b910c7e3",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/stadium"
      }
    ]
  },
  {
    "question": "What are the television shows whose network\u0027s successor is BBC Two?",
    "SerialNumber": "4120",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC Two",
        "uri": "http://dbpedia.org/resource/BBC_Two"
      }
    ],
    "id": "f9e9a9d4684b4c4cbc193ca30cb7b7b6",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which office holder\u0027s resting place is William Henry Harrison Tomb State Memorial and has governor named Charles Willing Byrd?",
    "SerialNumber": "4121",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial> . ?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "William Henry Harrison Tomb State Memorial",
        "uri": "http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial"
      },
      {
        "label": "Charles Willing Byrd",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd"
      }
    ],
    "id": "0899883477a746c38524653386c91724",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "In which series do I find Minbari species\u0027 characters?",
    "SerialNumber": "4123",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/species> <http://dbpedia.org/resource/Minbari> . ?x <http://dbpedia.org/ontology/series> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Minbari",
        "uri": "http://dbpedia.org/resource/Minbari"
      }
    ],
    "id": "909f5544b90d4c97b7f4ae5e5c24b2e7",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/property/species"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Who designed the language integrated query?",
    "SerialNumber": "4124",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri  . }",
    "entity mapping": [
      {
        "label": "language integrated query",
        "uri": "http://dbpedia.org/resource/Language_Integrated_Query"
      }
    ],
    "id": "13dbeaf27a1e47de9803518e1c666298",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer"
      }
    ]
  },
  {
    "question": "List the associates of bands which have a label by Motown ?",
    "SerialNumber": "4125",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Motown> . ?x <http://dbpedia.org/property/associatedActs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Motown",
        "uri": "http://dbpedia.org/resource/Motown"
      }
    ],
    "id": "38ca63fc474a462fafe6fec5ad06b1e0",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "associates",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Name the partners of the models whose one of the partner is Thom Evans ?",
    "SerialNumber": "4126",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/partner> <http://dbpedia.org/resource/Thom_Evans> . ?x <http://dbpedia.org/ontology/partner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
    "entity mapping": [
      {
        "label": "Thom Evans",
        "uri": "http://dbpedia.org/resource/Thom_Evans"
      }
    ],
    "id": "eca396c7779e4ee7b71db8d671efb974",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner"
      },
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner"
      },
      {
        "label": "model",
        "uri": "http://dbpedia.org/ontology/Model"
      }
    ]
  },
  {
    "question": "Is Greg Weeks the band member of Beyond the Sixth Seal?",
    "SerialNumber": "4127",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beyond_the_Sixth_Seal> <http://dbpedia.org/ontology/bandMember> <http://dbpedia.org/resource/Greg_Weeks> }",
    "entity mapping": [
      {
        "label": "Beyond the Sixth Seal",
        "uri": "http://dbpedia.org/resource/Beyond_the_Sixth_Seal"
      },
      {
        "label": "Greg Weeks",
        "uri": "http://dbpedia.org/resource/Greg_Weeks"
      }
    ],
    "id": "0b2cdf195c3d45109c78f3171835c056",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      }
    ]
  },
  {
    "question": "Who was the vice president under which elizabeth alexander served?",
    "SerialNumber": "4128",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)> <http://dbpedia.org/ontology/vicePresident> ?uri  . }",
    "entity mapping": [
      {
        "label": "elizabeth alexander",
        "uri": "http://dbpedia.org/resource/Elizabeth_Alexander_(press_secretary)"
      }
    ],
    "id": "8815d1ddfc484214b7b55c86c2793625",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      }
    ]
  },
  {
    "question": "Name the television show voiced by April Stewart and Eliza Schneider?",
    "SerialNumber": "4129",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/April_Stewart> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "April Stewart",
        "uri": "http://dbpedia.org/resource/April_Stewart"
      },
      {
        "label": "Eliza Schneider",
        "uri": "http://dbpedia.org/resource/Eliza_Schneider"
      }
    ],
    "id": "fecf2980af9448768aa17425d8c48dec",
    "predicate mapping": [
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is Robin Gibb the singer of Oh! Darling?",
    "SerialNumber": "4130",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Oh!_Darling> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Robin_Gibb> }",
    "entity mapping": [
      {
        "label": "Oh! Darling",
        "uri": "http://dbpedia.org/resource/Oh!_Darling"
      },
      {
        "label": "Robin Gibb",
        "uri": "http://dbpedia.org/resource/Robin_Gibb"
      }
    ],
    "id": "ee5fc86d6ea147f0b4ab317a186d2083",
    "predicate mapping": [
      {
        "label": "singer",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      }
    ]
  },
  {
    "question": "Name the musician who gave the music in Tonight\u0027s the night and is also wedded to Alana Stewart ?",
    "SerialNumber": "4136",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonight\u0027s_the_Night_(2003_musical)> <http://dbpedia.org/property/music> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri} ",
    "entity mapping": [
      {
        "label": "Tonight\u0027s the night",
        "uri": "http://dbpedia.org/resource/Tonight\u0027s_the_Night_(2003_musical)"
      },
      {
        "label": "Alana Stewart",
        "uri": "http://dbpedia.org/resource/Alana_Stewart"
      }
    ],
    "id": "2275055777524db1a78e0856a6e2cc1b",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "wedded to",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "Is Roger Federer the flagbearer of Switzerland at the 2004 Summer Olympics?",
    "SerialNumber": "4138",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics> <http://dbpedia.org/property/flagbearer> <http://dbpedia.org/resource/Roger_Federer> }",
    "entity mapping": [
      {
        "label": "Switzerland at the 2004 Summer Olympics",
        "uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics"
      },
      {
        "label": "Roger Federer",
        "uri": "http://dbpedia.org/resource/Roger_Federer"
      }
    ],
    "id": "9a61bb81243145d9a21abaa26c33e519",
    "predicate mapping": [
      {
        "label": "flagbearer",
        "uri": "http://dbpedia.org/property/flagbearer"
      }
    ]
  },
  {
    "question": "Which US city can be said to be a part of american mediterranean sea and the biscayne bay?",
    "SerialNumber": "4140",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri. <http://dbpedia.org/resource/Biscayne_Bay> <http://dbpedia.org/property/cities> ?uri . }",
    "entity mapping": [
      {
        "label": "american mediterranean sea",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea"
      },
      {
        "label": "biscayne bay",
        "uri": "http://dbpedia.org/resource/Biscayne_Bay"
      }
    ],
    "id": "b7df21da53144aef8f0ee3bb6dbc9e31",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "What is the broadcast area of CFRX ?",
    "SerialNumber": "4142",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri } ",
    "entity mapping": [
      {
        "label": "CFRX",
        "uri": "http://dbpedia.org/resource/CFRX"
      }
    ],
    "id": "9a955de401c24f42860fa3e6615c803a",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      }
    ]
  },
  {
    "question": "What is the venerated in of Edwin of Northumbria ?",
    "SerialNumber": "4146",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri } ",
    "entity mapping": [
      {
        "label": "Edwin of Northumbria",
        "uri": "http://dbpedia.org/resource/Edwin_of_Northumbria"
      }
    ],
    "id": "a09f56627a1f4c2b81bc88acfcd1d276",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/property/veneratedIn"
      }
    ]
  },
  {
    "question": "Which labels have published songs written by Harry Connick Jr?",
    "SerialNumber": "4148",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Harry_Connick,_Jr.> . ?x <http://dbpedia.org/property/label> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Song>}",
    "entity mapping": [
      {
        "label": "Harry Connick Jr",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr."
      }
    ],
    "id": "02fc143c1e0e4cdfb5594f43eb88137c",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/Song"
      }
    ]
  },
  {
    "question": "What cities are around the sea which flows into Marmara?",
    "SerialNumber": "4149",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/inflow> <http://dbpedia.org/resource/Sea_of_Marmara> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Marmara",
        "uri": "http://dbpedia.org/resource/Sea_of_Marmara"
      }
    ],
    "id": "2eb3f8a41e454021a4af658ede9f06ed",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/inflow"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Name the sea into which Danish Straits flows and has Kaliningrad as one of the city on the shore ?",
    "SerialNumber": "4150",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Danish_straits>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Kaliningrad",
        "uri": "http://dbpedia.org/resource/Kaliningrad"
      },
      {
        "label": "Danish Straits",
        "uri": "http://dbpedia.org/resource/Danish_straits"
      }
    ],
    "id": "f53a890c59d2460590398aa51119216e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/outflow"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "What sports team\u0027s arena is The Palace of Auburn Hills",
    "SerialNumber": "4151",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/The_Palace_of_Auburn_Hills>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "The Palace of Auburn Hills",
        "uri": "http://dbpedia.org/resource/The_Palace_of_Auburn_Hills"
      }
    ],
    "id": "20805a9d262743e789ad75cd118f889a",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena"
      },
      {
        "label": "sports team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "ITV employes how many people?",
    "SerialNumber": "4152",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/ITV_(TV_network)>  . }",
    "entity mapping": [
      {
        "label": "ITV",
        "uri": "http://dbpedia.org/resource/ITV_(TV_network)"
      }
    ],
    "id": "e163314e98334f77af0d98ad0c754fc7",
    "predicate mapping": [
      {
        "label": "employes",
        "uri": "http://dbpedia.org/property/employer"
      }
    ]
  },
  {
    "question": "What is the mascot of the military unit whose commander is Herbert Bautista ?",
    "SerialNumber": "4153",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Herbert_Bautista> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Herbert Bautista",
        "uri": "http://dbpedia.org/resource/Herbert_Bautista"
      }
    ],
    "id": "b75560b2e765458984a0419ab35147c9",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Whihc associate of THomas Bryan Martin is also the founder of Pittsburgh ?",
    "SerialNumber": "4154",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri. <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri} ",
    "entity mapping": [
      {
        "label": "THomas Bryan Martin",
        "uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin"
      },
      {
        "label": "Pittsburgh",
        "uri": "http://dbpedia.org/resource/Pittsburgh"
      }
    ],
    "id": "128fa3e3924b4f7f8f3960d994deda55",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/founder"
      }
    ]
  },
  {
    "question": "What are the awards won by the film editor of The Search?",
    "SerialNumber": "4155",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Search_(2014_film)> <http://dbpedia.org/ontology/editing> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Search",
        "uri": "http://dbpedia.org/resource/The_Search_(2014_film)"
      }
    ],
    "id": "64e38f50da46457e8bb6a34f4d6cb76f",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Name some schools with a bison as their mascot?",
    "SerialNumber": "4160",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Bison>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "bison",
        "uri": "http://dbpedia.org/resource/Bison"
      }
    ],
    "id": "66cb24d6ac6b49799c5f50a7afff386e",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Which current Michigan Wolverines team member debuted in Chicago Bears ?",
    "SerialNumber": "4164",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Chicago_Bears> . ?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . }",
    "entity mapping": [
      {
        "label": "Chicago Bears",
        "uri": "http://dbpedia.org/resource/Chicago_Bears"
      },
      {
        "label": "Michigan Wolverines",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines"
      }
    ],
    "id": "1d381dc7465f4077a61b29e0787de6e6",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentteam"
      }
    ]
  },
  {
    "question": "Who operates Liverpool Playhouse ?",
    "SerialNumber": "4165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_Playhouse> <http://dbpedia.org/ontology/operatedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "Liverpool Playhouse",
        "uri": "http://dbpedia.org/resource/Liverpool_Playhouse"
      }
    ],
    "id": "0bad2fab137148b9af20a97efb55fe8b",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      }
    ]
  },
  {
    "question": "Who owns Torrey Pines Gliderport?",
    "SerialNumber": "4167",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Torrey_Pines_Gliderport> <http://dbpedia.org/property/owner> ?uri } ",
    "entity mapping": [
      {
        "label": "Torrey Pines Gliderport",
        "uri": "http://dbpedia.org/resource/Torrey_Pines_Gliderport"
      }
    ],
    "id": "832149002e9c4fbb885ab3ab42730390",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "where did Deion Sanders debut?",
    "SerialNumber": "4168",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Deion_Sanders> <http://dbpedia.org/property/debutteam> ?uri } ",
    "entity mapping": [
      {
        "label": "Deion Sanders",
        "uri": "http://dbpedia.org/resource/Deion_Sanders"
      }
    ],
    "id": "23972462c8c7409cb83f6a8f21f0c607",
    "predicate mapping": [
      {
        "label": "debut",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "Which office holder\u0027s successor is Adrian A. Basora and child named Lori Black?",
    "SerialNumber": "4169",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Adrian A. Basora",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora"
      },
      {
        "label": "Lori Black",
        "uri": "http://dbpedia.org/resource/Lori_Black"
      }
    ],
    "id": "ce4f33c52b244261be90196bcfed8237",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Name the tv show with judges Randy Jackson and Jennifer Lopez?",
    "SerialNumber": "4171",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Randy Jackson",
        "uri": "http://dbpedia.org/resource/Randy_Jackson"
      },
      {
        "label": "Jennifer Lopez",
        "uri": "http://dbpedia.org/resource/Jennifer_Lopez"
      }
    ],
    "id": "218fb3f1f7bf4d3599daaf5a95885fbe",
    "predicate mapping": [
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the nationality of Sune Agerschou ?",
    "SerialNumber": "4177",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sune_Agerschou> <http://dbpedia.org/ontology/nationality> ?uri } ",
    "entity mapping": [
      {
        "label": "Sune Agerschou",
        "uri": "http://dbpedia.org/resource/Sune_Agerschou"
      }
    ],
    "id": "571c9d7dbe1f4a07a655803197f286d4",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What acts and artists are associated with people who have worked with Divertis?",
    "SerialNumber": "4179",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Divertis> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Divertis",
        "uri": "http://dbpedia.org/resource/Divertis"
      }
    ],
    "id": "741520a75f1a4ae9bd0c91c2dcde6627",
    "predicate mapping": [
      {
        "label": "associated acts",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "How many companies have manufactured the rockets launched from the Cape Canaveral Air Force Station?",
    "SerialNumber": "4181",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station"
      }
    ],
    "id": "58d7140c8ca74c2d91c063e1e8108063",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Name the  former broadcast network of the television station which is the sister stations of WGBC?",
    "SerialNumber": "4182",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WGBC> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/ontology/formerBroadcastNetwork> ?uri  . }",
    "entity mapping": [
      {
        "label": "WGBC",
        "uri": "http://dbpedia.org/resource/WGBC"
      }
    ],
    "id": "f8d33f0a3ea5417ca2071226875c8ff9",
    "predicate mapping": [
      {
        "label": "sister stations",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "former broadcast network",
        "uri": "http://dbpedia.org/ontology/formerBroadcastNetwork"
      }
    ]
  },
  {
    "question": "Which software uses GTK+ as programming language?",
    "SerialNumber": "4183",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/GTK+>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "GTK+",
        "uri": "http://dbpedia.org/resource/GTK+"
      }
    ],
    "id": "fc01eb147abb4f76a27e4ee15954b519",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "What is the distributing label of StandBy Records ?",
    "SerialNumber": "4184",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/StandBy_Records> <http://dbpedia.org/ontology/distributingLabel> ?uri } ",
    "entity mapping": [
      {
        "label": "StandBy Records",
        "uri": "http://dbpedia.org/resource/StandBy_Records"
      }
    ],
    "id": "9fd2de743eac4abf82d003f30ce832e3",
    "predicate mapping": [
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel"
      }
    ]
  },
  {
    "question": "List all the writers of the comics which has Robert Bernstein as one of the writer ?",
    "SerialNumber": "4186",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Robert_Bernstein_(comics)> . ?x <http://dbpedia.org/property/writers> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Comic>}",
    "entity mapping": [
      {
        "label": "Robert Bernstein",
        "uri": "http://dbpedia.org/resource/Robert_Bernstein_(comics)"
      }
    ],
    "id": "8f0cd88f6b6a4041bbed6b3723281f21",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writers"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writers"
      },
      {
        "label": "comic",
        "uri": "http://dbpedia.org/ontology/Comic"
      }
    ]
  },
  {
    "question": "Is Sloth in the Chordate phylum?",
    "SerialNumber": "4192",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sloth> <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate> }",
    "entity mapping": [
      {
        "label": "Sloth",
        "uri": "http://dbpedia.org/resource/Sloth"
      },
      {
        "label": "Chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      }
    ],
    "id": "7043f3a3431945138482107c7f71a3a7",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/property/phylum"
      }
    ]
  },
  {
    "question": "Is Eddie Bravo the trainer of Shinya Aoki?",
    "SerialNumber": "4194",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shinya_Aoki> <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Eddie_Bravo> }",
    "entity mapping": [
      {
        "label": "Shinya Aoki",
        "uri": "http://dbpedia.org/resource/Shinya_Aoki"
      },
      {
        "label": "Eddie Bravo",
        "uri": "http://dbpedia.org/resource/Eddie_Bravo"
      }
    ],
    "id": "0a3456b26fd7499cb6adbde077a787ab",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/property/trainer"
      }
    ]
  },
  {
    "question": "What is the operating system of the LG Optimus Vu and also the developer of the Dart (programming language)",
    "SerialNumber": "4196",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LG_Optimus_Vu> <http://dbpedia.org/ontology/operatingSystem> ?uri. <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/property/developer> ?uri} ",
    "entity mapping": [
      {
        "label": "LG Optimus Vu",
        "uri": "http://dbpedia.org/resource/LG_Optimus_Vu"
      },
      {
        "label": "Dart (programming language)",
        "uri": "http://dbpedia.org/resource/Dart_(programming_language)"
      }
    ],
    "id": "39f06aa4252f4be0914611ab542313a4",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer"
      }
    ]
  },
  {
    "question": "What are some products manufactured by Sony? ",
    "SerialNumber": "4197",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony>  . }",
    "entity mapping": [
      {
        "label": "Sony",
        "uri": "http://dbpedia.org/resource/Sony"
      }
    ],
    "id": "20279be806b8412f9bc87ac6de8c50aa",
    "predicate mapping": [
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "What is the almamater of the successor of F. A. Little, Jr.? ",
    "SerialNumber": "4198",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/F._A._Little,_Jr.> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "F. A. Little, Jr.",
        "uri": "http://dbpedia.org/resource/F._A._Little,_Jr."
      }
    ],
    "id": "6b0903f50742485485384cf6feffa59b",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "almamater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "List the alma mater of the person who is wedded to Sissela Bok.",
    "SerialNumber": "4199",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Sissela_Bok> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sissela Bok",
        "uri": "http://dbpedia.org/resource/Sissela_Bok"
      }
    ],
    "id": "888a87ee40884a92bb779b4a08e06f63",
    "predicate mapping": [
      {
        "label": "wedded to",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "Does Chicago own the Monroe Station?",
    "SerialNumber": "4200",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)> <http://dbpedia.org/property/owned> <http://dbpedia.org/resource/Chicago> }",
    "entity mapping": [
      {
        "label": "Monroe Station",
        "uri": "http://dbpedia.org/resource/Monroe_station_(CTA_Blue_Line)"
      },
      {
        "label": "Chicago",
        "uri": "http://dbpedia.org/resource/Chicago"
      }
    ],
    "id": "7dee62b229f644b4a13aecb01ef09554",
    "predicate mapping": [
      {
        "label": "own",
        "uri": "http://dbpedia.org/property/owned"
      }
    ]
  },
  {
    "question": "Name the children of the person who is the star of The Weathered Underground ?",
    "SerialNumber": "4203",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Weathered_Underground> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/children> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "The Weathered Underground",
        "uri": "http://dbpedia.org/resource/The_Weathered_Underground"
      }
    ],
    "id": "407e2cde683b484b86e7ee73d945f1fe",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which rivers start in a country whose leader is Irene Mambilima?",
    "SerialNumber": "4205",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Irene_Mambilima> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Irene Mambilima",
        "uri": "http://dbpedia.org/resource/Irene_Mambilima"
      }
    ],
    "id": "82e10e11c396490daac1e2ef25d844d1",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the nationality of the successor of Nii Okaidja Adamafio ?",
    "SerialNumber": "4206",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Nii_Okaija_Adamafio> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . }",
    "entity mapping": [
      {
        "label": "Nii Okaidja Adamafio",
        "uri": "http://dbpedia.org/resource/Nii_Okaija_Adamafio"
      }
    ],
    "id": "f1f238c4994d4495a5aef3ce1795c489",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "Who are the producers of the movies  which has music by Gary Chang ?",
    "SerialNumber": "4207",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Gary_Chang> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Gary Chang",
        "uri": "http://dbpedia.org/resource/Gary_Chang"
      }
    ],
    "id": "db2ca8419aed42419b8a19d1909a9c24",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What are the movies whose music is given by Laurie Johnson?",
    "SerialNumber": "4210",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Laurie Johnson",
        "uri": "http://dbpedia.org/resource/Laurie_Johnson"
      }
    ],
    "id": "523673cddacf48099c7937f7087198bd",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Where common region are soylent and bannock sold?",
    "SerialNumber": "4211",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soylent_(drink)> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Bannock_(food)> <http://dbpedia.org/ontology/region> ?uri . }",
    "entity mapping": [
      {
        "label": "soylent",
        "uri": "http://dbpedia.org/resource/Soylent_(drink)"
      },
      {
        "label": "bannock",
        "uri": "http://dbpedia.org/resource/Bannock_(food)"
      }
    ],
    "id": "417a0238264b4e97b76c982a6999dadf",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Count the number of other services of the companies which provides the Microsoft Azure as service ?",
    "SerialNumber": "4212",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Microsoft_Azure> . ?x <http://dbpedia.org/property/services> ?uri }",
    "entity mapping": [
      {
        "label": "Microsoft Azure",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure"
      }
    ],
    "id": "9de419a9df914ff59ef90a5191b584bd",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "AH141 highway is a part of which country?",
    "SerialNumber": "4214",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/AH141> <http://dbpedia.org/ontology/county> ?uri } ",
    "entity mapping": [
      {
        "label": "AH141",
        "uri": "http://dbpedia.org/resource/AH141"
      }
    ],
    "id": "c88a014e1fb347f1aa31dc40e7c66e55",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/county"
      }
    ]
  },
  {
    "question": "Which hub of Cascade Airways is also the resting place of Brandon Lee ?",
    "SerialNumber": "4215",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cascade_Airways> <http://dbpedia.org/property/hubs> ?uri. <http://dbpedia.org/resource/Brandon_Lee> <http://dbpedia.org/ontology/restingPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Cascade Airways",
        "uri": "http://dbpedia.org/resource/Cascade_Airways"
      },
      {
        "label": "Brandon Lee",
        "uri": "http://dbpedia.org/resource/Brandon_Lee"
      }
    ],
    "id": "a88d2ea3f531427a94ae282715f0f5f6",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "Count the number of artist whose pone of the field is writing ?",
    "SerialNumber": "4218",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Writing> . ?x <http://dbpedia.org/ontology/field> ?uri }",
    "entity mapping": [
      {
        "label": "writing",
        "uri": "http://dbpedia.org/resource/Writing"
      }
    ],
    "id": "f5c820e865914c8589007c9008866d2a",
    "predicate mapping": [
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "What are some people born in NY known for?",
    "SerialNumber": "4219",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/New_York_City> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/resource/New_York_City"
      }
    ],
    "id": "2bb138061a484da2b90a35b4547a639c",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Who is the meaning of the name Isa which was also one of the subject of play The Prodigal Son ?",
    "SerialNumber": "4221",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri. <http://dbpedia.org/resource/The_Prodigal_Son_(play)> <http://dbpedia.org/property/subject> ?uri} ",
    "entity mapping": [
      {
        "label": "Isa",
        "uri": "http://dbpedia.org/resource/Isa_(name)"
      },
      {
        "label": "The Prodigal Son",
        "uri": "http://dbpedia.org/resource/The_Prodigal_Son_(play)"
      }
    ],
    "id": "c0ed2a5b62a04aa796586761a7fcc4fa",
    "predicate mapping": [
      {
        "label": "meaning",
        "uri": "http://dbpedia.org/property/meaning"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      }
    ]
  },
  {
    "question": "Which US state has Dorchester Bay and the Joseph Story?",
    "SerialNumber": "4223",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Joseph_Story> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)> <http://dbpedia.org/property/state> ?uri . }",
    "entity mapping": [
      {
        "label": "Joseph Story",
        "uri": "http://dbpedia.org/resource/Joseph_Story"
      },
      {
        "label": "Dorchester Bay",
        "uri": "http://dbpedia.org/resource/Dorchester_Bay_(Boston_Harbor)"
      }
    ],
    "id": "0e26f71c288d466a84ee93662cdaf2cf",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "Mac OS is the operating system of how many things?",
    "SerialNumber": "4224",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>  . }",
    "entity mapping": [
      {
        "label": "Mac OS",
        "uri": "http://dbpedia.org/resource/Mac_OS"
      }
    ],
    "id": "2b42a9987e584e18a5a21c9bc2476de8",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      }
    ]
  },
  {
    "question": "Which company developed the language designed by Lars Bak?",
    "SerialNumber": "4225",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Lars_Bak_(computer_programmer)> . ?x <http://dbpedia.org/property/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Language>}",
    "entity mapping": [
      {
        "label": "Lars Bak",
        "uri": "http://dbpedia.org/resource/Lars_Bak_(computer_programmer)"
      }
    ],
    "id": "78cb068f6e8f479a81e12427c92fd167",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/Language"
      }
    ]
  },
  {
    "question": "What is the birth location of the advisor of Richard Hofstadter ?",
    "SerialNumber": "4227",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Richard_Hofstadter> <http://dbpedia.org/property/doctoralAdvisor> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Richard Hofstadter",
        "uri": "http://dbpedia.org/resource/Richard_Hofstadter"
      }
    ],
    "id": "3e3623c77d664a43bad66b15cbeb1d2b",
    "predicate mapping": [
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "birth location",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Name the TV shows whose developer is J. Michael Straczynski and executive producer is Douglas Netter?",
    "SerialNumber": "4229",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "J. Michael Straczynski",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski"
      },
      {
        "label": "Douglas Netter",
        "uri": "http://dbpedia.org/resource/Douglas_Netter"
      }
    ],
    "id": "fe352180bf17436ba61fb0416e17d291",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the first driver of 1999 San Marino Grand Prix ?",
    "SerialNumber": "4230",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/ontology/firstDriver> ?uri } ",
    "entity mapping": [
      {
        "label": "1999 San Marino Grand Prix",
        "uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix"
      }
    ],
    "id": "950ceddbc0c5404eabe9f4770407937b",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver"
      }
    ]
  },
  {
    "question": "List the children of the parent of Marvin Bush.",
    "SerialNumber": "4231",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Marvin_Bush> <http://dbpedia.org/ontology/parent> ?x . ?x <http://dbpedia.org/property/children> ?uri  . }",
    "entity mapping": [
      {
        "label": "Marvin Bush",
        "uri": "http://dbpedia.org/resource/Marvin_Bush"
      }
    ],
    "id": "2145991e2562420284c8984b7f845228",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      }
    ]
  },
  {
    "question": "Who starred in Nothing in Common and produced From the Earth to the Moon?",
    "SerialNumber": "4237",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/From_the_Earth_to_the_Moon_(miniseries)> <http://dbpedia.org/ontology/executiveProducer> ?uri. <http://dbpedia.org/resource/Nothing_in_Common> <http://dbpedia.org/property/starring> ?uri . }",
    "entity mapping": [
      {
        "label": "From the Earth to the Moon",
        "uri": "http://dbpedia.org/resource/From_the_Earth_to_the_Moon_(miniseries)"
      },
      {
        "label": "Nothing in Common",
        "uri": "http://dbpedia.org/resource/Nothing_in_Common"
      }
    ],
    "id": "74e6bd3b3d9f4c02948ab48ddb9851b7",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "starred",
        "uri": "http://dbpedia.org/property/starring"
      }
    ]
  },
  {
    "question": "Who is the builder of the Stadium of Costa Rica women\u0027s national football team?",
    "SerialNumber": "4239",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Costa_Rica_women\u0027s_national_football_team> <http://dbpedia.org/ontology/stadium> ?x . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Costa Rica women\u0027s national football team",
        "uri": "http://dbpedia.org/resource/Costa_Rica_women\u0027s_national_football_team"
      }
    ],
    "id": "3397f948c7964e35b7883557e3869187",
    "predicate mapping": [
      {
        "label": "Stadium",
        "uri": "http://dbpedia.org/ontology/stadium"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "Stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Which serving railway line of the Rostov-Glavny is also the  place of birth of  Nina Vislova?",
    "SerialNumber": "4240",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rostov-Glavny> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/Nina_Vislova> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Rostov-Glavny",
        "uri": "http://dbpedia.org/resource/Rostov-Glavny"
      },
      {
        "label": "Nina Vislova",
        "uri": "http://dbpedia.org/resource/Nina_Vislova"
      }
    ],
    "id": "65f4bc2159fa4581862b48f75badba9e",
    "predicate mapping": [
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "What is the home town of the musician of Jack your Body ?",
    "SerialNumber": "4241",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jack_Your_Body> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jack your Body",
        "uri": "http://dbpedia.org/resource/Jack_Your_Body"
      }
    ],
    "id": "0507c04d35f64179aeb6656866465ce8",
    "predicate mapping": [
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      }
    ]
  },
  {
    "question": "What is the residence of the person, who starred in Men Will Be Men ?",
    "SerialNumber": "4243",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Men_Will_Be_Men> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Men Will Be Men",
        "uri": "http://dbpedia.org/resource/Men_Will_Be_Men"
      }
    ],
    "id": "2b459a0f48bf4a798c36e64bdef395eb",
    "predicate mapping": [
      {
        "label": "starred",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List the border of the admin region which shares border with North Korea ?",
    "SerialNumber": "4244",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/North_Korea> . ?x <http://dbpedia.org/ontology/border> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "entity mapping": [
      {
        "label": "North Korea",
        "uri": "http://dbpedia.org/resource/North_Korea"
      }
    ],
    "id": "76e3a616ef7f4776b5ac7ca0a2747aa4",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "region admin",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion"
      }
    ]
  },
  {
    "question": "Name the awards won by Elie Wiesel ?",
    "SerialNumber": "4250",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elie_Wiesel> <http://dbpedia.org/property/awards> ?uri } ",
    "entity mapping": [
      {
        "label": "Elie Wiesel",
        "uri": "http://dbpedia.org/resource/Elie_Wiesel"
      }
    ],
    "id": "1c52f65be95947dab2143ce16d756039",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "What is the home stadium of Kenya\u0027s women national football team ?",
    "SerialNumber": "4251",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_women\u0027s_national_football_team> <http://dbpedia.org/property/homeStadium> ?uri } ",
    "entity mapping": [
      {
        "label": "Kenya\u0027s women national football team",
        "uri": "http://dbpedia.org/resource/Kenya_women\u0027s_national_football_team"
      }
    ],
    "id": "50f4fe1ce39347729daff3f6980c6107",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/property/homeStadium"
      }
    ]
  },
  {
    "question": "What artist of Charing Cross Bridge influenced Dorothea Sharp in her career?",
    "SerialNumber": "4254",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charing_Cross_Bridge_(Monet_series)> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Dorothea_Sharp> <http://dbpedia.org/property/influencedBy> ?uri} ",
    "entity mapping": [
      {
        "label": "Charing Cross Bridge",
        "uri": "http://dbpedia.org/resource/Charing_Cross_Bridge_(Monet_series)"
      },
      {
        "label": "Dorothea Sharp",
        "uri": "http://dbpedia.org/resource/Dorothea_Sharp"
      }
    ],
    "id": "acd23184141840d2a1677901fd42bbd9",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "influenced",
        "uri": "http://dbpedia.org/property/influencedBy"
      }
    ]
  },
  {
    "question": "Which military conflict took place in Israel and had commander as Jaber Al-Ahmad Al-Sabah?",
    "SerialNumber": "4255",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Israel",
        "uri": "http://dbpedia.org/resource/Israel"
      },
      {
        "label": "Jaber Al-Ahmad Al-Sabah",
        "uri": "http://dbpedia.org/resource/Jaber_Al-Ahmad_Al-Sabah"
      }
    ],
    "id": "be202d448e7d4b23ae715f0fc6b8b33e",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/place"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Which city is the resting place of the Martin Ragaway and Chuck Connors ?",
    "SerialNumber": "4256",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Ragaway> <http://dbpedia.org/ontology/restingPlace> ?uri. <http://dbpedia.org/resource/Chuck_Connors> <http://dbpedia.org/ontology/restingPlace> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "Martin Ragaway",
        "uri": "http://dbpedia.org/resource/Martin_Ragaway"
      },
      {
        "label": "Chuck Connors",
        "uri": "http://dbpedia.org/resource/Chuck_Connors"
      }
    ],
    "id": "44c48096f6e24b17a662f2bc16b0c005",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "Which religion is prevalent in the schools of the Ashanti region?",
    "SerialNumber": "4257",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/region> <http://dbpedia.org/resource/Ashanti_Region> . ?x <http://dbpedia.org/property/denomination> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Ashanti region",
        "uri": "http://dbpedia.org/resource/Ashanti_Region"
      }
    ],
    "id": "3b2227b9098045048da2d706d5ff058e",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/denomination"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "What are some characters of series produced by Ricky Grevais?",
    "SerialNumber": "4258",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Ricky_Gervais> . ?uri <http://dbpedia.org/ontology/series> ?x  . }",
    "entity mapping": [
      {
        "label": "Ricky Grevais",
        "uri": "http://dbpedia.org/resource/Ricky_Gervais"
      }
    ],
    "id": "00d182c2fc044872afb893ada8c680ed",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "What are the television shows whose company is Playtone?",
    "SerialNumber": "4260",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Playtone",
        "uri": "http://dbpedia.org/resource/Playtone"
      }
    ],
    "id": "7f4f1679c83148c4839f6434ed4e3ac3",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "In which broadcast area does the sister station of KFFG air ?",
    "SerialNumber": "4263",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/KFFG> <http://dbpedia.org/ontology/sisterStation> ?x . ?x <http://dbpedia.org/ontology/broadcastNetwork> ?uri  . }",
    "entity mapping": [
      {
        "label": "KFFG",
        "uri": "http://dbpedia.org/resource/KFFG"
      }
    ],
    "id": "df9dedc7b04241719cdd1de64fab664c",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation"
      },
      {
        "label": "broadcast",
        "uri": "http://dbpedia.org/ontology/broadcastNetwork"
      }
    ]
  },
  {
    "question": "Name the river with mouth as Thames Estuary and passes through Reading Berkshire ?",
    "SerialNumber": "4265",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Thames_Estuary> . ?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Thames Estuary",
        "uri": "http://dbpedia.org/resource/Thames_Estuary"
      },
      {
        "label": "Reading",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire"
      }
    ],
    "id": "e12f7dcbeefb4be5aa7c6a75120cf399",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the alma mater of the person, whose child is Samuel Moreno Rojas?",
    "SerialNumber": "4266",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Samuel_Moreno_Rojas> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Samuel Moreno Rojas",
        "uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas"
      }
    ],
    "id": "428c921bdffa437cab0215a722628dc4",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "What provides the services of Nintendo eShop and Nintendo Network?",
    "SerialNumber": "4267",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_Network> . }",
    "entity mapping": [
      {
        "label": "Nintendo eShop",
        "uri": "http://dbpedia.org/resource/Nintendo_eShop"
      },
      {
        "label": "Nintendo Network",
        "uri": "http://dbpedia.org/resource/Nintendo_Network"
      }
    ],
    "id": "aa41549ef9984639b16d39f1e418d06e",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "Name the local authority of Trinity School, Brentwood ?",
    "SerialNumber": "4269",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri } ",
    "entity mapping": [
      {
        "label": "Trinity School, Brentwood",
        "uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood"
      }
    ],
    "id": "ef6dc0a3edb54f33bf874f7c5b9dae0a",
    "predicate mapping": [
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "What is the death place of the Abiye Abebe and is the birthplace of the Amsale Aberra?",
    "SerialNumber": "4270",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abiye_Abebe> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Amsale_Aberra> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Abiye Abebe",
        "uri": "http://dbpedia.org/resource/Abiye_Abebe"
      },
      {
        "label": "Amsale",
        "uri": "http://dbpedia.org/resource/Amsale_Aberra"
      }
    ],
    "id": "5275df39ab1f4fea90a5740956d40966",
    "predicate mapping": [
      {
        "label": "place death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What is the label of Double Diamond (album) ?",
    "SerialNumber": "4271",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Double_Diamond_(album)> <http://dbpedia.org/ontology/recordLabel> ?uri } ",
    "entity mapping": [
      {
        "label": "Double Diamond (album)",
        "uri": "http://dbpedia.org/resource/Double_Diamond_(album)"
      }
    ],
    "id": "e4aba45bbd7247a2849bb269cb3fc809",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      }
    ]
  },
  {
    "question": "Waddy wachtel did the music for what movies?",
    "SerialNumber": "4276",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Waddy_Wachtel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Waddy wachtel",
        "uri": "http://dbpedia.org/resource/Waddy_Wachtel"
      }
    ],
    "id": "59686a5c59394e02a601a3632e7c72bf",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Is Baker\u0027s Dozen Donuts in the coffee industry?",
    "SerialNumber": "4277",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Baker\u0027s_Dozen_Donuts> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Coffee> }",
    "entity mapping": [
      {
        "label": "Baker\u0027s Dozen Donuts",
        "uri": "http://dbpedia.org/resource/Baker\u0027s_Dozen_Donuts"
      },
      {
        "label": "coffee",
        "uri": "http://dbpedia.org/resource/Coffee"
      }
    ],
    "id": "b6ac0f95224a4210893252cc4b6bda4d",
    "predicate mapping": [
      {
        "label": "industry",
        "uri": "http://dbpedia.org/ontology/industry"
      }
    ]
  },
  {
    "question": "Who are the writer of the singles whose music genre is Rhythm and blues ?",
    "SerialNumber": "4278",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Rhythm_and_blues> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "Rhythm and blues",
        "uri": "http://dbpedia.org/resource/Rhythm_and_blues"
      }
    ],
    "id": "b4e9d31ac22848ffb74a0fea9cda6353",
    "predicate mapping": [
      {
        "label": "music genre",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "What show has writing of Erik Jendresen and Graham Yost?",
    "SerialNumber": "4281",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Graham_Yost> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Erik Jendresen",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen"
      },
      {
        "label": "Graham Yost",
        "uri": "http://dbpedia.org/resource/Graham_Yost"
      }
    ],
    "id": "dd8f04e29567432aa66d4872d3c8967d",
    "predicate mapping": [
      {
        "label": "writing",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "writing",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which range of mountains are there in canton of Fribourg?",
    "SerialNumber": "4282",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Canton_of_Fribourg> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }",
    "entity mapping": [
      {
        "label": "canton of Fribourg",
        "uri": "http://dbpedia.org/resource/Canton_of_Fribourg"
      }
    ],
    "id": "6dc74832279a48c5af2affb61a00842f",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      }
    ]
  },
  {
    "question": "Count the number of ingredient of the foods which have one of the ingredient is Pork ?",
    "SerialNumber": "4284",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Pork> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }",
    "entity mapping": [
      {
        "label": "Pork",
        "uri": "http://dbpedia.org/resource/Pork"
      }
    ],
    "id": "06a0979c7f4f45f09a242e2c9b4f9403",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "Who is associated to the predecessor of Dan Mica?",
    "SerialNumber": "4287",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Dan_Mica> . ?uri <http://dbpedia.org/ontology/associate> ?x  . }",
    "entity mapping": [
      {
        "label": "Dan Mica",
        "uri": "http://dbpedia.org/resource/Dan_Mica"
      }
    ],
    "id": "6708b5842efe485a9e50e24afcbf8511",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      }
    ]
  },
  {
    "question": "What is the show which opens with Gary Portnoy and Where Everybody Knows Your Name?",
    "SerialNumber": "4288",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Gary_Portnoy> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Gary Portnoy",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy"
      },
      {
        "label": "Where Everybody Knows Your Name",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name"
      }
    ],
    "id": "3c64c763bb4342f8abf5e919c69c9144",
    "predicate mapping": [
      {
        "label": "opens",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "opens",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the birthplace of the netball player who is the relative of Rachel Rasmussen ?",
    "SerialNumber": "4289",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Rachel_Rasmussen> <http://dbpedia.org/property/relatives> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/NetballPlayer>}",
    "entity mapping": [
      {
        "label": "Rachel Rasmussen",
        "uri": "http://dbpedia.org/resource/Rachel_Rasmussen"
      }
    ],
    "id": "b77c5d2495684b08978cc1e6f6efbd33",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "netball player",
        "uri": "http://dbpedia.org/ontology/NetballPlayer"
      }
    ]
  },
  {
    "question": "What is the Location of the Dofinivka Estuary which is also the  birthplace of the Liliya Lobanova ?",
    "SerialNumber": "4290",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dofinivka_Estuary> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Liliya_Lobanova> <http://dbpedia.org/property/birthplace> ?uri} ",
    "entity mapping": [
      {
        "label": "Dofinivka Estuary",
        "uri": "http://dbpedia.org/resource/Dofinivka_Estuary"
      },
      {
        "label": "Liliya Lobanova",
        "uri": "http://dbpedia.org/resource/Liliya_Lobanova"
      }
    ],
    "id": "27b20d124d814d06aef418de8062f60e",
    "predicate mapping": [
      {
        "label": "Location",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthplace"
      }
    ]
  },
  {
    "question": "For how many different teams have the players debuted in Houston Astros played?",
    "SerialNumber": "4291",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Houston Astros",
        "uri": "http://dbpedia.org/resource/Houston_Astros"
      }
    ],
    "id": "ae6419f5a7924093b8efc0ecde37fa37",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "What is the profession of Claiborne Pell ?",
    "SerialNumber": "4293",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri } ",
    "entity mapping": [
      {
        "label": "Claiborne Pell",
        "uri": "http://dbpedia.org/resource/Claiborne_Pell"
      }
    ],
    "id": "2ead55d30e1d4a53b7f6ef00e0fe8125",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      }
    ]
  },
  {
    "question": "Name few TV shows aired by Prime Time Entertainment Network?",
    "SerialNumber": "4294",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Prime Time Entertainment Network",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network"
      }
    ],
    "id": "faf138a401bf48698aea3948d57fb21e",
    "predicate mapping": [
      {
        "label": "Network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the ethnicity of the Maike Evers and state of origin of the Theodor Hillenhinrichs ?",
    "SerialNumber": "4295",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maike_Evers> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Theodor_Hillenhinrichs> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "entity mapping": [
      {
        "label": "Maike Evers",
        "uri": "http://dbpedia.org/resource/Maike_Evers"
      },
      {
        "label": "Theodor Hillenhinrichs",
        "uri": "http://dbpedia.org/resource/Theodor_Hillenhinrichs"
      }
    ],
    "id": "21891c4f2ea042b18e68729561fc981e",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Is N. C. Wyeth the illustration by of The Mysterious Stranger?",
    "SerialNumber": "4296",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Mysterious_Stranger> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/N._C._Wyeth> }",
    "entity mapping": [
      {
        "label": "The Mysterious Stranger",
        "uri": "http://dbpedia.org/resource/The_Mysterious_Stranger"
      },
      {
        "label": "N. C. Wyeth",
        "uri": "http://dbpedia.org/resource/N._C._Wyeth"
      }
    ],
    "id": "a9898ec7205044eeb0890978e7e8c771",
    "predicate mapping": [
      {
        "label": "illustration by",
        "uri": "http://dbpedia.org/property/illustrator"
      }
    ]
  },
  {
    "question": "List the awards given to the key people in Pixar ?",
    "SerialNumber": "4297",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pixar> <http://dbpedia.org/property/keyPeople> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Pixar",
        "uri": "http://dbpedia.org/resource/Pixar"
      }
    ],
    "id": "1ecda4810a44415cb8a4d88b3cc10c44",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What is the common ethnicity of the Maike Evers and Francisco Lachowski ?",
    "SerialNumber": "4299",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maike_Evers> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Francisco_Lachowski> <http://dbpedia.org/ontology/ethnicity> ?uri . }",
    "entity mapping": [
      {
        "label": "Maike Evers",
        "uri": "http://dbpedia.org/resource/Maike_Evers"
      },
      {
        "label": "Francisco Lachowski",
        "uri": "http://dbpedia.org/resource/Francisco_Lachowski"
      }
    ],
    "id": "74b8aec435064e2cad30995e4949632b",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      }
    ]
  },
  {
    "question": "Count the different religions followed by Second Lieutenants in military.",
    "SerialNumber": "4300",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Second_lieutenant> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Second Lieutenant",
        "uri": "http://dbpedia.org/resource/Second_lieutenant"
      }
    ],
    "id": "7ebda29e423945b29162883cf737d24c",
    "predicate mapping": [
      {
        "label": "military.",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What nicknames do the universities in Norton, Massachusetts have?",
    "SerialNumber": "4303",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Norton,_Massachusetts> . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Norton, Massachusetts",
        "uri": "http://dbpedia.org/resource/Norton,_Massachusetts"
      }
    ],
    "id": "1dd1b3f1468b4498bf6462c9d4d7e865",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What is the official residence of the senator who is the deputy of Everett Dirksen?",
    "SerialNumber": "4304",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Everett_Dirksen> <http://dbpedia.org/property/deputy> ?x . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "entity mapping": [
      {
        "label": "Everett Dirksen",
        "uri": "http://dbpedia.org/resource/Everett_Dirksen"
      }
    ],
    "id": "0b921ef38ba74acbaa82a41ca8554f5c",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator"
      }
    ]
  },
  {
    "question": "Which  office holder\u0027s resting place is Alta Mesa Memorial Park and Henry E. Catto, Jr. as predecessor ?",
    "SerialNumber": "4305",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Alta Mesa Memorial Park",
        "uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park"
      },
      {
        "label": "Henry E. Catto, Jr.",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr."
      }
    ],
    "id": "1e06f3b6c390495883e3b1fa35f74e6c",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Name the movie whose producer is Michael Deeley and music is given by Vangelis ?",
    "SerialNumber": "4306",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "uri": "http://dbpedia.org/resource/Michael_Deeley"
      },
      {
        "label": "Vangelis",
        "uri": "http://dbpedia.org/resource/Vangelis"
      }
    ],
    "id": "0ac9e7c038dd486a87c27b58e9c6a6e4",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name the movie whose director is Stanley Kubrick and editor is Anthony Harvey?",
    "SerialNumber": "4310",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Anthony_Harvey> . ?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Anthony Harvey",
        "uri": "http://dbpedia.org/resource/Anthony_Harvey"
      },
      {
        "label": "Stanley Kubrick",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick"
      }
    ],
    "id": "588648d7ead24862a8392d2cb6b7499f",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "List all the movies whose directors were born in Kenosha, Wisconsin?",
    "SerialNumber": "4313",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Kenosha,_Wisconsin> . ?uri <http://dbpedia.org/property/director> ?x  . }",
    "entity mapping": [
      {
        "label": "Kenosha, Wisconsin",
        "uri": "http://dbpedia.org/resource/Kenosha,_Wisconsin"
      }
    ],
    "id": "1ceed131fbfd408f8e4aa198f167a4b4",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      }
    ]
  },
  {
    "question": "List down the TV shows whose producer is Stephen E. Ambros and writer is John Orloff ?",
    "SerialNumber": "4314",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/John_Orloff>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Stephen E. Ambros ",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose"
      },
      {
        "label": "John Orloff",
        "uri": "http://dbpedia.org/resource/John_Orloff"
      }
    ],
    "id": "a608e83edd634349b19003da7befc70a",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which educational institutes have campuses at Iowa and Indiana ?",
    "SerialNumber": "4318",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "entity mapping": [
      {
        "label": "Iowa",
        "uri": "http://dbpedia.org/resource/Iowa"
      },
      {
        "label": "Indiana",
        "uri": "http://dbpedia.org/resource/Indiana"
      }
    ],
    "id": "fdc1847b008e40cbb6cb07d1f3fefb7f",
    "predicate mapping": [
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "educational",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution"
      }
    ]
  },
  {
    "question": "What mascot of the Galatasaray Handball Team is also the team name of Cristo Rey Jesuit high School ?",
    "SerialNumber": "4319",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)> <http://dbpedia.org/property/teamName> ?uri. <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri} ",
    "entity mapping": [
      {
        "label": "Cristo Rey Jesuit high School",
        "uri": "http://dbpedia.org/resource/Cristo_Rey_Jesuit_High_School_(Chicago)"
      },
      {
        "label": "Galatasaray Handball Team",
        "uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team"
      }
    ],
    "id": "128a2ec9d8f842be81f9bbafd1edf43b",
    "predicate mapping": [
      {
        "label": "team name",
        "uri": "http://dbpedia.org/property/teamName"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "List down the associated musical artist of the writer of Rain Is a Good Thing ?",
    "SerialNumber": "4320",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Rain_Is_a_Good_Thing> <http://dbpedia.org/property/writer> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Rain Is a Good Thing",
        "uri": "http://dbpedia.org/resource/Rain_Is_a_Good_Thing"
      }
    ],
    "id": "62c0c7b3421044339478d24834c3b09d",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "associated musical artist",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "Which countries led by Elizabeth II?",
    "SerialNumber": "4321",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Elizabeth_II>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Elizabeth II",
        "uri": "http://dbpedia.org/resource/Elizabeth_II"
      }
    ],
    "id": "6814335360244dacab4516293e186458",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Who is the developer of Dart (programming language) ?",
    "SerialNumber": "4322",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dart_(programming_language)> <http://dbpedia.org/property/developer> ?uri } ",
    "entity mapping": [
      {
        "label": "Dart (programming language)",
        "uri": "http://dbpedia.org/resource/Dart_(programming_language)"
      }
    ],
    "id": "60524d1955cf4a6eba1f5eab56431ce4",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/property/developer"
      }
    ]
  },
  {
    "question": "Which official residence of hugh Scott is also the origin of Long Rifle ?",
    "SerialNumber": "4324",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Long_rifle> <http://dbpedia.org/property/origin> ?uri. <http://dbpedia.org/resource/Hugh_Scott> <http://dbpedia.org/ontology/residence> ?uri} ",
    "entity mapping": [
      {
        "label": "Long Rifle",
        "uri": "http://dbpedia.org/resource/Long_rifle"
      },
      {
        "label": "hugh Scott",
        "uri": "http://dbpedia.org/resource/Hugh_Scott"
      }
    ],
    "id": "e5211014e64e4cc3ba735304c32b59f7",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "What is the base currency of the Benelux which can be used in Republic of Montenegro?",
    "SerialNumber": "4325",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benelux> <http://dbpedia.org/property/currency> ?uri. <http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)> <http://dbpedia.org/property/currency> ?uri . }",
    "entity mapping": [
      {
        "label": "Benelux",
        "uri": "http://dbpedia.org/resource/Benelux"
      },
      {
        "label": "Republic of Montenegro",
        "uri": "http://dbpedia.org/resource/Republic_of_Montenegro_(1992–2006)"
      }
    ],
    "id": "9169f5e7e04a45c59601fa1c275255eb",
    "predicate mapping": [
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/property/currency"
      },
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/property/currency"
      }
    ]
  },
  {
    "question": "Who is the political figure whose military branch is Colonial troops?",
    "SerialNumber": "4328",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Colonial_troops> } ",
    "entity mapping": [
      {
        "label": "Colonial troops",
        "uri": "http://dbpedia.org/resource/Colonial_troops"
      }
    ],
    "id": "b80824e9484341ffa682161fdd38a1fa",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "Give me all magazines whose founder died in Berkeley, California?",
    "SerialNumber": "4331",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Berkeley,_California> . ?uri <http://dbpedia.org/ontology/founder> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Berkeley, California",
        "uri": "http://dbpedia.org/resource/Berkeley,_California"
      }
    ],
    "id": "406cb0444b7849598998845f33cc549f",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "founder",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "Give me a count of musical artists collaborating with Waylon Jennings?",
    "SerialNumber": "4332",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Waylon_Jennings>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Waylon Jennings",
        "uri": "http://dbpedia.org/resource/Waylon_Jennings"
      }
    ],
    "id": "d008d95436354994a9c920a5c4118bd4",
    "predicate mapping": [
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Cologny and Lancy are the neighboring municipalities of which place ?",
    "SerialNumber": "4333",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Cologny",
        "uri": "http://dbpedia.org/resource/Cologny"
      },
      {
        "label": "Lancy",
        "uri": "http://dbpedia.org/resource/Lancy"
      }
    ],
    "id": "5a3c7897625247c680bee70a5841b19a",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      },
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Who are the spouse of the actors of Wrongfully Accused?",
    "SerialNumber": "4334",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Wrongfully_Accused> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/ontology/spouse> ?uri  . }",
    "entity mapping": [
      {
        "label": "Wrongfully Accused",
        "uri": "http://dbpedia.org/resource/Wrongfully_Accused"
      }
    ],
    "id": "6c664cbf0c8344ae93064a7d00fab47a",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "Which scientist is known for writing Philosophi Naturalis Principia Mathematica?",
    "SerialNumber": "4336",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Philosophiæ_Naturalis_Principia_Mathematica> } ",
    "entity mapping": [
      {
        "label": "Principia Mathematica",
        "uri": "http://dbpedia.org/resource/Philosophiæ_Naturalis_Principia_Mathematica"
      }
    ],
    "id": "b01faa87ad5d492582e9236745d1282d",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "What is the profession of the William Luther Hill and also the office of the Richard Coke ?",
    "SerialNumber": "4337",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Luther_Hill> <http://dbpedia.org/ontology/profession> ?uri. <http://dbpedia.org/resource/Richard_Coke> <http://dbpedia.org/property/office> ?uri} ",
    "entity mapping": [
      {
        "label": "William Luther Hill",
        "uri": "http://dbpedia.org/resource/William_Luther_Hill"
      },
      {
        "label": "Richard Coke",
        "uri": "http://dbpedia.org/resource/Richard_Coke"
      }
    ],
    "id": "d63aa2d8047143e494136822ba4d8766",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "Los Angeles Lakers is the team of which basketball players?",
    "SerialNumber": "4340",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Los_Angeles_Lakers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "Los Angeles Lakers",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Lakers"
      }
    ],
    "id": "333d5b882d2a433abf4674b881d86b63",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "To which state eorge M. Chilcott  belong ?",
    "SerialNumber": "4341",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_M._Chilcott> <http://dbpedia.org/property/state> ?uri } ",
    "entity mapping": [
      {
        "label": "eorge M. Chilcott",
        "uri": "http://dbpedia.org/resource/George_M._Chilcott"
      }
    ],
    "id": "02be653e65e640b390467b40c75c8113",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "Ricky Gervais is the executive producer of the series having how many fictional characters?",
    "SerialNumber": "4342",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Ricky_Gervais> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Ricky Gervais",
        "uri": "http://dbpedia.org/resource/Ricky_Gervais"
      }
    ],
    "id": "728abc0613c4486dac29a63aa6e90537",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What award has been awarded to both Dion Beebe and Charles LeMaire?",
    "SerialNumber": "4346",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dion_Beebe> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/property/awards> ?uri} ",
    "entity mapping": [
      {
        "label": "Dion Beebe",
        "uri": "http://dbpedia.org/resource/Dion_Beebe"
      },
      {
        "label": "Charles LeMaire",
        "uri": "http://dbpedia.org/resource/Charles_LeMaire"
      }
    ],
    "id": "9713dcb7417545e492296544a6ea728d",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "What religion did the president follow which was served by Kang Young-hoon?",
    "SerialNumber": "4347",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kang_Young-hoon> <http://dbpedia.org/property/president> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kang Young-hoon",
        "uri": "http://dbpedia.org/resource/Kang_Young-hoon"
      }
    ],
    "id": "c2b361e703db47748197f55a513a8f91",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which is the common prospect team of Mikhail Pashnin and Robin kovacs ?",
    "SerialNumber": "4348",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/ontology/prospectTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "Mikhail Pashnin",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin"
      },
      {
        "label": "Robin kovacs",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs"
      }
    ],
    "id": "152b926438b04cc09ddbaf7259bc0d5f",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam"
      },
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/ontology/prospectTeam"
      }
    ]
  },
  {
    "question": "Name the person whose child is Irne Joliot-Curie?",
    "SerialNumber": "4349",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Irène_Joliot-Curie>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Irne Joliot-Curie",
        "uri": "http://dbpedia.org/resource/Irène_Joliot-Curie"
      }
    ],
    "id": "135b3e40d914466e87cc236585e5a2ea",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which TV show\u0027s company is PlayTone and is produced by Stephen E. Ambrose ?",
    "SerialNumber": "4350",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "PlayTone",
        "uri": "http://dbpedia.org/resource/Playtone"
      },
      {
        "label": "Stephen E. Ambrose",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose"
      }
    ],
    "id": "ee40fd8fb95f42b7a50f05e872395ec7",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Count the different genres of games published by Titus Software",
    "SerialNumber": "4351",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Titus_Software> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "Titus Software",
        "uri": "http://dbpedia.org/resource/Titus_Software"
      }
    ],
    "id": "d7e5d2254df0467f9540e90433f7ea55",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "What religions are followed by members of the societies whose architectural influences can be seen on the Sanggar Agung ?",
    "SerialNumber": "4352",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Sanggar_Agung> <http://dbpedia.org/property/architecturalStyle> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sanggar Agung",
        "uri": "http://dbpedia.org/resource/Sanggar_Agung"
      }
    ],
    "id": "adb40156d8b943db81c77206edceffb5",
    "predicate mapping": [
      {
        "label": "architectural",
        "uri": "http://dbpedia.org/property/architecturalStyle"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Who is the predecessor of Voere ?",
    "SerialNumber": "4353",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Voere> <http://dbpedia.org/ontology/predecessor> ?uri } ",
    "entity mapping": [
      {
        "label": "Voere",
        "uri": "http://dbpedia.org/resource/Voere"
      }
    ],
    "id": "5aa7006cd15c46c2bb25952420fc9ab6",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      }
    ]
  },
  {
    "question": "Which stockholder of yale Repertory Theatre was training center of William Anthony ?",
    "SerialNumber": "4354",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri. <http://dbpedia.org/resource/Yale_Repertory_Theatre> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "William Anthony",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)"
      },
      {
        "label": "yale Repertory Theatre",
        "uri": "http://dbpedia.org/resource/Yale_Repertory_Theatre"
      }
    ],
    "id": "a6b5eb1806b843d1af6d909735bc52b6",
    "predicate mapping": [
      {
        "label": "training",
        "uri": "http://dbpedia.org/ontology/training"
      },
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Where is the school which is the rival of Somerset Berkley Regional High?",
    "SerialNumber": "4356",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School> <http://dbpedia.org/ontology/rival> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Somerset Berkley Regional High",
        "uri": "http://dbpedia.org/resource/Somerset_Berkley_Regional_High_School"
      }
    ],
    "id": "d851da1144a243338aa3d47e27dcab4b",
    "predicate mapping": [
      {
        "label": "rival",
        "uri": "http://dbpedia.org/ontology/rival"
      },
      {
        "label": "Region",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Who were the american football players who played for Dallas Cowboys?",
    "SerialNumber": "4358",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Dallas_Cowboys>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Dallas Cowboys",
        "uri": "http://dbpedia.org/resource/Dallas_Cowboys"
      }
    ],
    "id": "f6301e4382644f719c3ca7d13a774aa1",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "What is the national origin of Dornier Aerodyne and Hirth Acrostar ?;",
    "SerialNumber": "4359",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dornier_Aerodyne> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Hirth_Acrostar> <http://dbpedia.org/ontology/origin> ?uri} ",
    "entity mapping": [
      {
        "label": "Dornier Aerodyne",
        "uri": "http://dbpedia.org/resource/Dornier_Aerodyne"
      },
      {
        "label": "Hirth Acrostar",
        "uri": "http://dbpedia.org/resource/Hirth_Acrostar"
      }
    ],
    "id": "f913c2429f424dccae257c7c4a5f5b83",
    "predicate mapping": [
      {
        "label": "national origin",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "Who is the writer of He\u0027s a Pirate ?",
    "SerialNumber": "4360",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/He\u0027s_a_Pirate> <http://dbpedia.org/property/writer> ?uri } ",
    "entity mapping": [
      {
        "label": "He\u0027s a Pirate",
        "uri": "http://dbpedia.org/resource/He\u0027s_a_Pirate"
      }
    ],
    "id": "84e39f9dfd9b421eaede863a68c7d3dd",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "Count the number of artists in the Cirque du Soleil discography?",
    "SerialNumber": "4363",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Cirque_du_Soleil_discography> <http://dbpedia.org/property/artist> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cirque du Soleil discography",
        "uri": "http://dbpedia.org/resource/Cirque_du_Soleil_discography"
      }
    ],
    "id": "8da1f3a107bd45b2b6826f13b3e863b9",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "In which countries is coconut used as a food ingredient?",
    "SerialNumber": "4364",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Coconut> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "entity mapping": [
      {
        "label": "coconut",
        "uri": "http://dbpedia.org/resource/Coconut"
      }
    ],
    "id": "8f70005177114907b820b6cb4ca9396e",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "food",
        "uri": "http://dbpedia.org/ontology/Food"
      }
    ]
  },
  {
    "question": "Where did anton ausserer die?",
    "SerialNumber": "4366",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Anton_Ausserer> <http://dbpedia.org/property/deathPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "anton ausserer",
        "uri": "http://dbpedia.org/resource/Anton_Ausserer"
      }
    ],
    "id": "249446474067450f80688ee178af8d63",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "What is the river whose source is Lake Ontario?",
    "SerialNumber": "4367",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Lake_Ontario>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Lake Ontario",
        "uri": "http://dbpedia.org/resource/Lake_Ontario"
      }
    ],
    "id": "c46c0c8dbcbe4bf091c8b520f9fa3805",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which rivers have source origins asnorth western, Zambia ?",
    "SerialNumber": "4368",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "north western, Zambia",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia"
      }
    ],
    "id": "f791ffa9789549f19d8f53aff0f9e369",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceRegion"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many races has Best Mate won?",
    "SerialNumber": "4370",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Best_Mate> <http://dbpedia.org/property/race> ?uri  . }",
    "entity mapping": [
      {
        "label": "Best Mate",
        "uri": "http://dbpedia.org/resource/Best_Mate"
      }
    ],
    "id": "1dcc7c9bfae6426bb72ab84d88afa0ed",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      }
    ]
  },
  {
    "question": "What has  location as Ontario?",
    "SerialNumber": "4372",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Ontario>  . }",
    "entity mapping": [
      {
        "label": "Ontario",
        "uri": "http://dbpedia.org/resource/Ontario"
      }
    ],
    "id": "846635db38f040eaa3478eac855e39e8",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Where was  William Anthony  trained ?",
    "SerialNumber": "4373",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri } ",
    "entity mapping": [
      {
        "label": "William Anthony",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)"
      }
    ],
    "id": "5bcc534759a2403ca4f0e614344dc088",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/training"
      }
    ]
  },
  {
    "question": "What are some famous companies founded in the US?",
    "SerialNumber": "4374",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "e9d2d1d8bc8a4519b2b504c0b054b9e5",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "City of Miami Cemetery is the governing body of which city?",
    "SerialNumber": "4375",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/City_of_Miami_Cemetery> <http://dbpedia.org/property/governingBody> ?uri } ",
    "entity mapping": [
      {
        "label": "City of Miami Cemetery",
        "uri": "http://dbpedia.org/resource/City_of_Miami_Cemetery"
      }
    ],
    "id": "a3c789f47bd247b6be843aa13563bc36",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      }
    ]
  },
  {
    "question": "What is the  name of the television show whose developer is J. Michael Straczynski and actor is Jason Carter (actor)?",
    "SerialNumber": "4378",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "J. Michael Straczynski",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski"
      },
      {
        "label": "Jason Carter (actor)",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)"
      }
    ],
    "id": "9b7068c9ee9b45a4b38e8b7da17bc32d",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "actor",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many artists have their works in the Sao Paolo Museum of Art?",
    "SerialNumber": "4380",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/São_Paulo_Museum_of_Art> . ?x <http://dbpedia.org/property/artist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "Sao Paolo Museum of Art",
        "uri": "http://dbpedia.org/resource/São_Paulo_Museum_of_Art"
      }
    ],
    "id": "f1a36818194047f59c627aa4e1e8b559",
    "predicate mapping": [
      {
        "label": "Museum",
        "uri": "http://dbpedia.org/property/museum"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Name the university whose athletic department is called National Collegiate Athletic Association and has a chancellor named Nicholas S. Zeppos?",
    "SerialNumber": "4382",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/chancellor> <http://dbpedia.org/resource/Nicholas_S._Zeppos>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association"
      },
      {
        "label": "Nicholas S. Zeppos",
        "uri": "http://dbpedia.org/resource/Nicholas_S._Zeppos"
      }
    ],
    "id": "80b87ca88eaf4b569c9bcb66b3fca287",
    "predicate mapping": [
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What is the military branch of the William French Smith which is also the branch of Pierre R. Graham ?",
    "SerialNumber": "4384",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_French_Smith> <http://dbpedia.org/ontology/militaryBranch> ?uri. <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri} ",
    "entity mapping": [
      {
        "label": "William French Smith",
        "uri": "http://dbpedia.org/resource/William_French_Smith"
      },
      {
        "label": "Pierre R. Graham",
        "uri": "http://dbpedia.org/resource/Pierre_R._Graham"
      }
    ],
    "id": "e080bdada1b3440e8410f575e2cff662",
    "predicate mapping": [
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "Is Pulau Ubin the largest city of Singapore?",
    "SerialNumber": "4385",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Pulau_Ubin> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Singapore> }",
    "entity mapping": [
      {
        "label": "Pulau Ubin",
        "uri": "http://dbpedia.org/resource/Pulau_Ubin"
      },
      {
        "label": "Singapore",
        "uri": "http://dbpedia.org/resource/Singapore"
      }
    ],
    "id": "8993e18e5aa946e8bbf8e70e4f8c96b5",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "Which mountains are contained in Inyo National Forest?",
    "SerialNumber": "4387",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Inyo National Forest",
        "uri": "http://dbpedia.org/resource/Inyo_National_Forest"
      }
    ],
    "id": "70fbf64af7d749509853096246f02afd",
    "predicate mapping": [
      {
        "label": "Nation",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "In how many places have people canonized by John Paul II died?",
    "SerialNumber": "4388",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "John Paul II",
        "uri": "http://dbpedia.org/resource/Pope_John_Paul_II"
      }
    ],
    "id": "6aabd01fc03b4eaa966294abc7d5be2d",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Which arena of WPC Dynamo Moscow is the death palce of Mikhail Voronin ?",
    "SerialNumber": "4392",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WPC_Dynamo_Moscow> <http://dbpedia.org/property/arena> ?uri. <http://dbpedia.org/resource/Mikhail_Voronin> <http://dbpedia.org/property/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "WPC Dynamo Moscow",
        "uri": "http://dbpedia.org/resource/WPC_Dynamo_Moscow"
      },
      {
        "label": "Mikhail Voronin",
        "uri": "http://dbpedia.org/resource/Mikhail_Voronin"
      }
    ],
    "id": "acd83380bc52438a913b1294a017b418",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "How many theme musics have been composed by Julian Gingell?",
    "SerialNumber": "4393",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell>  . }",
    "entity mapping": [
      {
        "label": "Julian Gingell",
        "uri": "http://dbpedia.org/resource/Julian_Gingell"
      }
    ],
    "id": "f6bdf603e0004a3fa20c3ab3fc071309",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      }
    ]
  },
  {
    "question": "What are the musicals whose musicians worked under Sony Music Entertainment?",
    "SerialNumber": "4395",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "Sony Music Entertainment",
        "uri": "http://dbpedia.org/resource/Sony_Music_Entertainment"
      }
    ],
    "id": "43525bb6aaec44c582028a0f297108ec",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "What is the place of the Geography Club (play) which is also the  official residence of the Scott Berkun?",
    "SerialNumber": "4396",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri. <http://dbpedia.org/resource/Scott_Berkun> <http://dbpedia.org/property/residence> ?uri} ",
    "entity mapping": [
      {
        "label": "Geography Club (play)",
        "uri": "http://dbpedia.org/resource/Geography_Club_(play)"
      },
      {
        "label": "Scott Berkun",
        "uri": "http://dbpedia.org/resource/Scott_Berkun"
      }
    ],
    "id": "52db5fe19d374c4a99a23b55ecc4d93d",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "List the award which have been won by both Charles LeMaire and Nick Park ?",
    "SerialNumber": "4399",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_LeMaire> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Nick_Park> <http://dbpedia.org/ontology/award> ?uri . }",
    "entity mapping": [
      {
        "label": "Charles LeMaire",
        "uri": "http://dbpedia.org/resource/Charles_LeMaire"
      },
      {
        "label": "Nick Park",
        "uri": "http://dbpedia.org/resource/Nick_Park"
      }
    ],
    "id": "78722f141f874d3caafa82adf3d45089",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Count the number of members of the organization which have Austria as one of the member ?",
    "SerialNumber": "4400",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Austria> . ?x <http://dbpedia.org/property/membership> ?uri }",
    "entity mapping": [
      {
        "label": "Austria",
        "uri": "http://dbpedia.org/resource/Austria"
      }
    ],
    "id": "5d8fba40bf9544c5a9a55982712ad859",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "Name some relatives of the people studied in Manurewa High School?",
    "SerialNumber": "4401",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Manurewa_High_School> . ?x <http://dbpedia.org/ontology/relative> ?uri  . }",
    "entity mapping": [
      {
        "label": "Manurewa High School",
        "uri": "http://dbpedia.org/resource/Manurewa_High_School"
      }
    ],
    "id": "56228aa5b26e4049b2a03f5745a23ed7",
    "predicate mapping": [
      {
        "label": "School",
        "uri": "http://dbpedia.org/ontology/school"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "Gregg Toland cinematographed how many things?",
    "SerialNumber": "4402",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland>  . }",
    "entity mapping": [
      {
        "label": "Gregg Toland",
        "uri": "http://dbpedia.org/resource/Gregg_Toland"
      }
    ],
    "id": "d1087a6ae2e640ee9b0c1458c8447ee8",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/ontology/cinematography"
      }
    ]
  },
  {
    "question": "Whose military unit is 39th infantry regiment in 1812?",
    "SerialNumber": "4403",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/39th_Infantry_Regiment_(War_of_1812)>  . }",
    "entity mapping": [
      {
        "label": "39th infantry regiment",
        "uri": "http://dbpedia.org/resource/39th_Infantry_Regiment_(War_of_1812)"
      }
    ],
    "id": "2ee9621573e44f3caa895a060b7ebda9",
    "predicate mapping": [
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      }
    ]
  },
  {
    "question": "Is Darcs released with a GNU license?",
    "SerialNumber": "4404",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Darcs> <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/GNU> }",
    "entity mapping": [
      {
        "label": "Darcs",
        "uri": "http://dbpedia.org/resource/Darcs"
      },
      {
        "label": "GNU",
        "uri": "http://dbpedia.org/resource/GNU"
      }
    ],
    "id": "3ba1c4f421364ee0be4dde8be5ba4558",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license"
      }
    ]
  },
  {
    "question": "List the current members of Metro Station (band) ?",
    "SerialNumber": "4405",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Metro_Station_(band)> <http://dbpedia.org/property/currentMembers> ?uri } ",
    "entity mapping": [
      {
        "label": "Metro Station (band)",
        "uri": "http://dbpedia.org/resource/Metro_Station_(band)"
      }
    ],
    "id": "74c5d0464b124cb38cdf4cd48125cf81",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers"
      }
    ]
  },
  {
    "question": "Who is the builder of Presidio Santa Cruz de Terrenate ?",
    "SerialNumber": "4407",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Presidio_Santa_Cruz_de_Terrenate> <http://dbpedia.org/ontology/builder> ?uri } ",
    "entity mapping": [
      {
        "label": "Presidio Santa Cruz de Terrenate",
        "uri": "http://dbpedia.org/resource/Presidio_Santa_Cruz_de_Terrenate"
      }
    ],
    "id": "951936711e75498793c0cc4258ef5eb3",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      }
    ]
  },
  {
    "question": "What is the award which is presented by Swedish Academy?",
    "SerialNumber": "4409",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Swedish_Academy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "Swedish Academy",
        "uri": "http://dbpedia.org/resource/Swedish_Academy"
      }
    ],
    "id": "b9e63a276a7b43c8925247e323ca92f5",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "What is the common profession of DeWitt Clinton and Claiborne Pell ?",
    "SerialNumber": "4410",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/DeWitt_Clinton> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/Claiborne_Pell> <http://dbpedia.org/ontology/profession> ?uri} ",
    "entity mapping": [
      {
        "label": "DeWitt Clinton",
        "uri": "http://dbpedia.org/resource/DeWitt_Clinton"
      },
      {
        "label": "Claiborne Pell",
        "uri": "http://dbpedia.org/resource/Claiborne_Pell"
      }
    ],
    "id": "3aa4bd1928004f1aa0fbb510009fc773",
    "predicate mapping": [
      {
        "label": "of",
        "uri": "http://dbpedia.org/property/office"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      }
    ]
  },
  {
    "question": "List the ingredients of Kaszanka?",
    "SerialNumber": "4412",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kaszanka> <http://dbpedia.org/ontology/ingredient> ?uri } ",
    "entity mapping": [
      {
        "label": "Kaszanka",
        "uri": "http://dbpedia.org/resource/Kaszanka"
      }
    ],
    "id": "5a183f932ebe44a9bc2b48aa7f73e605",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "What religion did Gamini Seneviratne follow?",
    "SerialNumber": "4415",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gamini_Seneviratne> <http://dbpedia.org/ontology/religion> ?uri } ",
    "entity mapping": [
      {
        "label": "Gamini Seneviratne",
        "uri": "http://dbpedia.org/resource/Gamini_Seneviratne"
      }
    ],
    "id": "c73a4a3eacb742309e74d6f0c2e8e729",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Were the bodies involved in the Westroads mall shootings discovered in Nebraska?",
    "SerialNumber": "4417",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Westroads_Mall_shooting> <http://dbpedia.org/property/bodyDiscovered> <http://dbpedia.org/resource/Nebraska> }",
    "entity mapping": [
      {
        "label": "Westroads mall shooting",
        "uri": "http://dbpedia.org/resource/Westroads_Mall_shooting"
      },
      {
        "label": "Nebraska",
        "uri": "http://dbpedia.org/resource/Nebraska"
      }
    ],
    "id": "b2aaecfc5ca24aa0a486a847584fd884",
    "predicate mapping": [
      {
        "label": "discovered",
        "uri": "http://dbpedia.org/property/bodyDiscovered"
      }
    ]
  },
  {
    "question": "Which animator of The Skeleton Dance is also the animator of the Tommy Tucker\u0027s Tooth ?",
    "SerialNumber": "4420",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri. <http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth> <http://dbpedia.org/property/animator> ?uri} ",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance"
      },
      {
        "label": "Tommy Tucker\u0027s Tooth",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker\u0027s_Tooth"
      }
    ],
    "id": "04e3bd6b0c8e42cc847a95d2618c62fd",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator"
      },
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator"
      }
    ]
  },
  {
    "question": "Name the mountain range in which the mountain peak of Malatraix belongs?",
    "SerialNumber": "4422",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Malatraix> <http://dbpedia.org/ontology/parentMountainPeak> ?x . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }",
    "entity mapping": [
      {
        "label": "Malatraix",
        "uri": "http://dbpedia.org/resource/Malatraix"
      }
    ],
    "id": "75fe6c8cbf564ad5b696120959659daf",
    "predicate mapping": [
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/parentMountainPeak"
      },
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      }
    ]
  },
  {
    "question": "List education institute of the engineers whose alma mater is ChristChurch ?",
    "SerialNumber": "4423",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Christchurch> . ?x <http://dbpedia.org/ontology/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}",
    "entity mapping": [
      {
        "label": "ChristChurch",
        "uri": "http://dbpedia.org/resource/Christchurch"
      }
    ],
    "id": "f468589935b448efb8923084dcbd1583",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "engineer",
        "uri": "http://dbpedia.org/ontology/Engineer"
      }
    ]
  },
  {
    "question": "What is the headquarters of the public transit system which is the system of Bottineau LRT ?",
    "SerialNumber": "4424",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bottineau_LRT> <http://dbpedia.org/property/system> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}",
    "entity mapping": [
      {
        "label": "Bottineau LRT",
        "uri": "http://dbpedia.org/resource/Bottineau_LRT"
      }
    ],
    "id": "43a276ac67384d1fb8baebc563b6eeb9",
    "predicate mapping": [
      {
        "label": "system",
        "uri": "http://dbpedia.org/property/system"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "public transit system",
        "uri": "http://dbpedia.org/ontology/PublicTransitSystem"
      }
    ]
  },
  {
    "question": "What is the place of birth of the jockey who breeded De La Rose ?",
    "SerialNumber": "4425",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/De_La_Rose> <http://dbpedia.org/ontology/breeder> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Jockey>}",
    "entity mapping": [
      {
        "label": "De La Rose",
        "uri": "http://dbpedia.org/resource/De_La_Rose"
      }
    ],
    "id": "daeb019f166b4919bd323ccf3b8cf03a",
    "predicate mapping": [
      {
        "label": "breeded",
        "uri": "http://dbpedia.org/ontology/breeder"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "jockey",
        "uri": "http://dbpedia.org/ontology/Jockey"
      }
    ]
  },
  {
    "question": "How many people are in the England national football team?",
    "SerialNumber": "4426",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/England_national_football_team>  . }",
    "entity mapping": [
      {
        "label": "England national football team",
        "uri": "http://dbpedia.org/resource/England_national_football_team"
      }
    ],
    "id": "495e4973e9eb4c7f8177e3e1c774d8c7",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "Who is  venerated in  Judaism and Islam?",
    "SerialNumber": "4427",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Judaism> . ?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam> . }",
    "entity mapping": [
      {
        "label": "Judaism",
        "uri": "http://dbpedia.org/resource/Judaism"
      },
      {
        "label": "Islam",
        "uri": "http://dbpedia.org/resource/Islam"
      }
    ],
    "id": "224dd25d50db49c89875b050e8c011a9",
    "predicate mapping": [
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      },
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      }
    ]
  },
  {
    "question": "Which child of Jack Ferguson became a Prime Minister?",
    "SerialNumber": "4430",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jack_Ferguson> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jack Ferguson",
        "uri": "http://dbpedia.org/resource/Jack_Ferguson"
      }
    ],
    "id": "97e43aacfe074efa83f9fb0ba572e632",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "How many members are there of the order of Bacillales?",
    "SerialNumber": "4432",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales>  . }",
    "entity mapping": [
      {
        "label": "Bacillales",
        "uri": "http://dbpedia.org/resource/Bacillales"
      }
    ],
    "id": "aac76b1792794e92a8495c8f380e7818",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/ontology/order"
      }
    ]
  },
  {
    "question": "In which fields are the graduates of Worcester College, Oxford working?",
    "SerialNumber": "4434",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/ontology/field> ?uri  . }",
    "entity mapping": [
      {
        "label": "Worcester College, Oxford",
        "uri": "http://dbpedia.org/resource/Worcester_College,_Oxford"
      }
    ],
    "id": "cb3019596f1c466a8e0aa2fab2fe9b1d",
    "predicate mapping": [
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "What sports can be played in institutions in Bataan?",
    "SerialNumber": "4435",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/province> <http://dbpedia.org/resource/Bataan> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bataan",
        "uri": "http://dbpedia.org/resource/Bataan"
      }
    ],
    "id": "97488d1122824e838c6c54fae73101a3",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/province"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Which country\u0027s national motto is \"Truth prevails\"?",
    "SerialNumber": "4441",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationalMotto> <http://dbpedia.org/resource/Truth_prevails>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Truth prevails",
        "uri": "http://dbpedia.org/resource/Truth_prevails"
      }
    ],
    "id": "0a9d5d8da34c44869fda9580b1ed1cea",
    "predicate mapping": [
      {
        "label": "national motto",
        "uri": "http://dbpedia.org/property/nationalMotto"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "What is the alma mater of Andrew W. Lewis ?",
    "SerialNumber": "4442",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_W._Lewis> <http://dbpedia.org/ontology/almaMater> ?uri } ",
    "entity mapping": [
      {
        "label": "Andrew W. Lewis",
        "uri": "http://dbpedia.org/resource/Andrew_W._Lewis"
      }
    ],
    "id": "89e6c9790a3e43338859011415755939",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Which movies did Mark Steven edit?",
    "SerialNumber": "4444",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Mark Steven",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)"
      }
    ],
    "id": "5dd00b4f9282453d994c9bacbec085e0",
    "predicate mapping": [
      {
        "label": "edit",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the prize received by the one who wrote the screen play of The Postman  ?",
    "SerialNumber": "4446",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Postman_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Postman",
        "uri": "http://dbpedia.org/resource/The_Postman_(film)"
      }
    ],
    "id": "6fc13e0a9bc646d9ba9be4634f0ccaf0",
    "predicate mapping": [
      {
        "label": "screen play",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "prize received",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Count the total number of bacterias whose division is Firmicutes and domain is Bacteria?",
    "SerialNumber": "4448",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Firmicutes> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> } ",
    "entity mapping": [
      {
        "label": "Firmicutes",
        "uri": "http://dbpedia.org/resource/Firmicutes"
      },
      {
        "label": "Bacteria",
        "uri": "http://dbpedia.org/resource/Bacteria"
      }
    ],
    "id": "fd0bdcd9fabe430a9c347af0563b0d4b",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain"
      }
    ]
  },
  {
    "question": "What is the mascot of the alma mater of Deborah Crombie?",
    "SerialNumber": "4450",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Deborah_Crombie> <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "entity mapping": [
      {
        "label": "Deborah Crombie",
        "uri": "http://dbpedia.org/resource/Deborah_Crombie"
      }
    ],
    "id": "3d2c285604e2416d8b47fe68fdf2f52c",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Where do beauty queens with brown hair reside?",
    "SerialNumber": "4453",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
    "entity mapping": [
      {
        "label": "brown hair",
        "uri": "http://dbpedia.org/resource/Brown_hair"
      }
    ],
    "id": "0115d9653fb44b66bb96c1af7d4296f3",
    "predicate mapping": [
      {
        "label": "hair",
        "uri": "http://dbpedia.org/property/hairColor"
      },
      {
        "label": "reside",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Name the mountain which belongs to Sierra Nevada range and is located in Inyo National Forest?",
    "SerialNumber": "4455",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?uri <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Inyo_National_Forest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Sierra Nevada",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)"
      },
      {
        "label": "Inyo National Forest",
        "uri": "http://dbpedia.org/resource/Inyo_National_Forest"
      }
    ],
    "id": "cf34994e9bb545c3beff7e8a04d58823",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      },
      {
        "label": "is located in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "What is the company that has products with Windows RT as its OS?",
    "SerialNumber": "4456",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Windows_RT> . ?uri <http://dbpedia.org/ontology/product> ?x  . }",
    "entity mapping": [
      {
        "label": "Windows RT",
        "uri": "http://dbpedia.org/resource/Windows_RT"
      }
    ],
    "id": "62f222b7e3e84a6cb4ce8193b63544d6",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "Does the AMC Gremlin use an Audi engine?",
    "SerialNumber": "4458",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/AMC_Gremlin> <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/Audi> }",
    "entity mapping": [
      {
        "label": "AMC Gremlin",
        "uri": "http://dbpedia.org/resource/AMC_Gremlin"
      },
      {
        "label": "Audi",
        "uri": "http://dbpedia.org/resource/Audi"
      }
    ],
    "id": "3ebfa74639fb4cb4ba3c69a23d7f89a2",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine"
      }
    ]
  },
  {
    "question": "What is the resting place of the child of Linda Lee Cadwell?",
    "SerialNumber": "4459",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Linda_Lee_Cadwell> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Linda Lee Cadwell",
        "uri": "http://dbpedia.org/resource/Linda_Lee_Cadwell"
      }
    ],
    "id": "bcaaf472d03649a3b3fe0f04e625219d",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "What is the religion of the relatives of Carmela Soprano ?",
    "SerialNumber": "4460",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Carmela_Soprano> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Carmela Soprano",
        "uri": "http://dbpedia.org/resource/Carmela_Soprano"
      }
    ],
    "id": "9c14e0afc5d44598951f1f9037822b2b",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What television shows\u0027s distributor is Eurovision?",
    "SerialNumber": "4461",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Eurovision_(network)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Eurovision",
        "uri": "http://dbpedia.org/resource/Eurovision_(network)"
      }
    ],
    "id": "a3405b0ce1794c309e62e6db698ecfb1",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Did Stan Lee create Jean Grey?",
    "SerialNumber": "4462",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jean_Grey> <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Stan_Lee> }",
    "entity mapping": [
      {
        "label": "Jean Grey",
        "uri": "http://dbpedia.org/resource/Jean_Grey"
      },
      {
        "label": "Stan Lee",
        "uri": "http://dbpedia.org/resource/Stan_Lee"
      }
    ],
    "id": "c1908db186d144338bc6f399f9c6864c",
    "predicate mapping": [
      {
        "label": "create",
        "uri": "http://dbpedia.org/property/creators"
      }
    ]
  },
  {
    "question": "Name the architect of Marine Corps Air Station Kaneohe Bay ?",
    "SerialNumber": "4464",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay> <http://dbpedia.org/property/architect> ?uri } ",
    "entity mapping": [
      {
        "label": "Marine Corps Air Station Kaneohe Bay",
        "uri": "http://dbpedia.org/resource/Marine_Corps_Air_Station_Kaneohe_Bay"
      }
    ],
    "id": "81ed6105f8064c79a73b3ad0ab2f0dcd",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      }
    ]
  },
  {
    "question": "What are the other launch site of the rockets which also have been launched from  Cape Canaveral Air Force Station Launch Complex 5 ?",
    "SerialNumber": "4467",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_5> . ?x <http://dbpedia.org/ontology/launchSite> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station Launch Complex 5",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Launch_Complex_5"
      }
    ],
    "id": "a8f0980d732d4a9fb906625e2c72ca87",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "rocket",
        "uri": "http://dbpedia.org/ontology/Rocket"
      }
    ]
  },
  {
    "question": "What is the nationality of the David King-Wood and John Steed ?",
    "SerialNumber": "4468",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_King-Wood> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/John_Steed> <http://dbpedia.org/property/nationality> ?uri . }",
    "entity mapping": [
      {
        "label": "David King-Wood",
        "uri": "http://dbpedia.org/resource/David_King-Wood"
      },
      {
        "label": "John Steed",
        "uri": "http://dbpedia.org/resource/John_Steed"
      }
    ],
    "id": "a66b13e59b5d46a58da7b17ae209894b",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      }
    ]
  },
  {
    "question": "Which country\u0027s leader  is Giuseppe Bertello?",
    "SerialNumber": "4470",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Giuseppe_Bertello>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Giuseppe Bertello",
        "uri": "http://dbpedia.org/resource/Giuseppe_Bertello"
      }
    ],
    "id": "62defef353b544b88cb983a010e92992",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "From where did the son of Gustavo Rojas Pinilla graduate?",
    "SerialNumber": "4474",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gustavo Rojas Pinilla",
        "uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla"
      }
    ],
    "id": "ee83374553104e4784b6847dc658c510",
    "predicate mapping": [
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "graduate",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "What is the total number of software whose programming language is C++ and operating system is Microsoft Windows?",
    "SerialNumber": "4475",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> } ",
    "entity mapping": [
      {
        "label": "C++",
        "uri": "http://dbpedia.org/resource/C++"
      },
      {
        "label": "Microsoft Windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      }
    ],
    "id": "18d456becb4d4972ad3a8f8d430291d5",
    "predicate mapping": [
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/ontology/programmingLanguage"
      },
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      }
    ]
  },
  {
    "question": "In which races did Mouse Morris take part?",
    "SerialNumber": "4476",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mouse_Morris> <http://dbpedia.org/property/race> ?uri } ",
    "entity mapping": [
      {
        "label": "Mouse Morris",
        "uri": "http://dbpedia.org/resource/Mouse_Morris"
      }
    ],
    "id": "500a1a24138f4ee68a58423b2a86132d",
    "predicate mapping": [
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      }
    ]
  },
  {
    "question": "What is the meaning of Heydar ?",
    "SerialNumber": "4480",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heydar> <http://dbpedia.org/property/meaning> ?uri } ",
    "entity mapping": [
      {
        "label": "Heydar",
        "uri": "http://dbpedia.org/resource/Heydar"
      }
    ],
    "id": "43d5d1b277764d509013b0740a1134cd",
    "predicate mapping": [
      {
        "label": "meaning",
        "uri": "http://dbpedia.org/property/meaning"
      }
    ]
  },
  {
    "question": "Name the fictional character whose species is American Pekin duck and has relatives named Ludwig Von Drake?",
    "SerialNumber": "4481",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ludwig_Von_Drake>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "American Pekin duck",
        "uri": "http://dbpedia.org/resource/American_Pekin_duck"
      },
      {
        "label": "Ludwig Von Drake",
        "uri": "http://dbpedia.org/resource/Ludwig_Von_Drake"
      }
    ],
    "id": "76f197d00d1d4cf695613aa5f7089c3f",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "who are starring in the movies written by Mark Sandrich ?",
    "SerialNumber": "4482",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Mark_Sandrich> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Mark Sandrich",
        "uri": "http://dbpedia.org/resource/Mark_Sandrich"
      }
    ],
    "id": "dedf58280e9d4d9ea3379626fc434dd0",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "starring",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the religion of the governors whose office is the Bank of Thailand?",
    "SerialNumber": "4483",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Bank_of_Thailand> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}",
    "entity mapping": [
      {
        "label": "Bank of Thailand",
        "uri": "http://dbpedia.org/resource/Bank_of_Thailand"
      }
    ],
    "id": "9ac44261ad7c40989a2beefb39bb7b13",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/Governor"
      }
    ]
  },
  {
    "question": "Name all the junctions of U.S. Route 59?",
    "SerialNumber": "4484",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/U.S._Route_59> <http://dbpedia.org/property/junction> ?uri } ",
    "entity mapping": [
      {
        "label": "U.S. Route 59",
        "uri": "http://dbpedia.org/resource/U.S._Route_59"
      }
    ],
    "id": "34fe2288fd964273ad3d8a6c884539e7",
    "predicate mapping": [
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction"
      }
    ]
  },
  {
    "question": "Count the number of  fields of the scientists whose one of the fields is Sanskrit?",
    "SerialNumber": "4485",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Sanskrit> . ?x <http://dbpedia.org/property/fields> ?uri }",
    "entity mapping": [
      {
        "label": "Sanskrit",
        "uri": "http://dbpedia.org/resource/Sanskrit"
      }
    ],
    "id": "4f7bb480e41d4360a942060f68dd6654",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "In which city is the sister station of KTXY located ?",
    "SerialNumber": "4486",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/KTXY> <http://dbpedia.org/ontology/sisterStation> ?x . ?x <http://dbpedia.org/ontology/city> ?uri  . }",
    "entity mapping": [
      {
        "label": "KTXY",
        "uri": "http://dbpedia.org/resource/KTXY"
      }
    ],
    "id": "0ab3de4c7c454c33ae9349c745121fa6",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city"
      }
    ]
  },
  {
    "question": "Name the hubs of the airlines whose headquarters is in the Subang Interchange?",
    "SerialNumber": "4490",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Subang_Interchange> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Subang Interchange",
        "uri": "http://dbpedia.org/resource/Subang_Interchange"
      }
    ],
    "id": "b7793671687a4f84826d505cfe9e14f1",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "How many people work in the Massachusetts house of Representatives?",
    "SerialNumber": "4491",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Massachusetts_House_of_Representatives>  . }",
    "entity mapping": [
      {
        "label": "Massachusetts house of Representatives",
        "uri": "http://dbpedia.org/resource/Massachusetts_House_of_Representatives"
      }
    ],
    "id": "8ba2e0250a244acdb7b868be0b3a81eb",
    "predicate mapping": [
      {
        "label": "of",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "List the services provided by the company which provides Microsoft azure as one of the service ?",
    "SerialNumber": "4493",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Microsoft_Azure> . ?x <http://dbpedia.org/property/services> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Microsoft azure",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure"
      }
    ],
    "id": "2fc623f7412b47e7b5f575b742471987",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who was member of boards at Royal Society and Trinity House?",
    "SerialNumber": "4494",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Trinity_House> . }",
    "entity mapping": [
      {
        "label": "Royal Society",
        "uri": "http://dbpedia.org/resource/Royal_Society"
      },
      {
        "label": "Trinity House",
        "uri": "http://dbpedia.org/resource/Trinity_House"
      }
    ],
    "id": "adc0e04c11b74782ba42a521d28ce3ce",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "What is the debut team of the baseball player who was born in Williamsburg, Kansas ?",
    "SerialNumber": "4495",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Williamsburg,_Kansas> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "entity mapping": [
      {
        "label": "Williamsburg, Kansas",
        "uri": "http://dbpedia.org/resource/Williamsburg,_Kansas"
      }
    ],
    "id": "53dd5747f1174fa8a6bc9eebbb9623c4",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer"
      }
    ]
  },
  {
    "question": "Which serving railway line of the Daund Junction railway station is the home port of INS Viraat ?",
    "SerialNumber": "4496",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INS_Viraat_(R22)> <http://dbpedia.org/ontology/homeport> ?uri. <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri} ",
    "entity mapping": [
      {
        "label": "INS Viraat",
        "uri": "http://dbpedia.org/resource/INS_Viraat_(R22)"
      },
      {
        "label": "Daund Junction railway station",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station"
      }
    ],
    "id": "34ea4723aa304817a374f7a97e602678",
    "predicate mapping": [
      {
        "label": "port home",
        "uri": "http://dbpedia.org/ontology/homeport"
      },
      {
        "label": "serving railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      }
    ]
  },
  {
    "question": "How many religions are followed by organizations which are internationally known as the muslim brotherhood?",
    "SerialNumber": "4497",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "muslim brotherhood",
        "uri": "http://dbpedia.org/resource/Muslim_Brotherhood"
      }
    ],
    "id": "1bd54f6e697a4ec58721e61e66480394",
    "predicate mapping": [
      {
        "label": "international",
        "uri": "http://dbpedia.org/property/international"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Name the route start of Saint Petersburg  Moscow Railway ?",
    "SerialNumber": "4498",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saint_Petersburg_–_Moscow_Railway> <http://dbpedia.org/ontology/routeStart> ?uri } ",
    "entity mapping": [
      {
        "label": "Saint Petersburg Moscow Railway",
        "uri": "http://dbpedia.org/resource/Saint_Petersburg_–_Moscow_Railway"
      }
    ],
    "id": "60cca930301f44db9b136d974bf6b92e",
    "predicate mapping": [
      {
        "label": "route start",
        "uri": "http://dbpedia.org/ontology/routeStart"
      }
    ]
  },
  {
    "question": "Which county seats are in the district where I can find the Hylebos Creek?",
    "SerialNumber": "4501",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hylebos_Creek> <http://dbpedia.org/ontology/district> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }",
    "entity mapping": [
      {
        "label": "Hylebos Creek",
        "uri": "http://dbpedia.org/resource/Hylebos_Creek"
      }
    ],
    "id": "47db1d0041e64e7da78f014fa6fd229f",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat"
      }
    ]
  },
  {
    "question": "What other awards have been given to Goya Award Winners?",
    "SerialNumber": "4503",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Goya_Awards> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Goya Award ",
        "uri": "http://dbpedia.org/resource/Goya_Awards"
      }
    ],
    "id": "cb5a9c76131d451b8570f5c627d5ef66",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Which river inflow of the Cahora Bassa is also Batoka Gorge Hydroelectric Power Station\u0027s river ?",
    "SerialNumber": "4504",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri. <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri} ",
    "entity mapping": [
      {
        "label": "Cahora Bassa",
        "uri": "http://dbpedia.org/resource/Cahora_Bassa"
      },
      {
        "label": "Batoka Gorge Hydroelectric Power Station",
        "uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station"
      }
    ],
    "id": "2940479c5f6d439f9493a789b93b63f2",
    "predicate mapping": [
      {
        "label": "inflow",
        "uri": "http://dbpedia.org/property/inflow"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "Who owns the tunnels operated by the Massachusetts Department of Transportation?",
    "SerialNumber": "4506",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoadTunnel>}",
    "entity mapping": [
      {
        "label": "Massachusetts Department of Transportation",
        "uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation"
      }
    ],
    "id": "3328c78b14064c5abd3109faa8975548",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "tunnels",
        "uri": "http://dbpedia.org/ontology/RoadTunnel"
      }
    ]
  },
  {
    "question": "In how many districts is there a borough called tendring?",
    "SerialNumber": "4507",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/borough> <http://dbpedia.org/resource/Tendring> . ?x <http://dbpedia.org/ontology/district> ?uri  . }",
    "entity mapping": [
      {
        "label": "tendring",
        "uri": "http://dbpedia.org/resource/Tendring"
      }
    ],
    "id": "4cf188cc17a649e581603a456bda0d40",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district"
      }
    ]
  },
  {
    "question": "How many awards have been given to the founder of Grameen Bank?",
    "SerialNumber": "4509",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Grameen_Bank> <http://dbpedia.org/property/founder> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Grameen Bank",
        "uri": "http://dbpedia.org/resource/Grameen_Bank"
      }
    ],
    "id": "5e0acf4fd80d47b995488704002ac947",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Who is the appointer of Earl B. Ruth ?",
    "SerialNumber": "4510",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Earl_B._Ruth> <http://dbpedia.org/property/appointer> ?uri } ",
    "entity mapping": [
      {
        "label": "Earl B. Ruth",
        "uri": "http://dbpedia.org/resource/Earl_B._Ruth"
      }
    ],
    "id": "dbfcf2136b7344f1830bc4405769bc6d",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "Which partner of the Tim Mathieson is also the primeminister of the Mike Kelly (Australian politician) ?",
    "SerialNumber": "4511",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tim_Mathieson> <http://dbpedia.org/ontology/partner> ?uri. <http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)> <http://dbpedia.org/property/primeminister> ?uri} ",
    "entity mapping": [
      {
        "label": "Tim Mathieson",
        "uri": "http://dbpedia.org/resource/Tim_Mathieson"
      },
      {
        "label": "Mike Kelly (Australian politician)",
        "uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)"
      }
    ],
    "id": "ba7f3c05cc5448ac90a3996feb0bd9f9",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/partner"
      },
      {
        "label": "primeminister",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "Which river does Katima Mulilo Bridge cross?",
    "SerialNumber": "4512",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katima_Mulilo_Bridge> <http://dbpedia.org/property/crosses> ?uri } ",
    "entity mapping": [
      {
        "label": "Katima Mulilo Bridge",
        "uri": "http://dbpedia.org/resource/Katima_Mulilo_Bridge"
      }
    ],
    "id": "fb2bca9718884cd19844ef5476627883",
    "predicate mapping": [
      {
        "label": "cross",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "To which company is the service \"Nintendo eShop\" associated with?",
    "SerialNumber": "4514",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Nintendo_eShop>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Nintendo eShop",
        "uri": "http://dbpedia.org/resource/Nintendo_eShop"
      }
    ],
    "id": "06750153a35042ba9ea9d0bd000bbf4d",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the city of Phil-Ellena ?",
    "SerialNumber": "4515",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Phil-Ellena> <http://dbpedia.org/ontology/city> ?uri } ",
    "entity mapping": [
      {
        "label": "Phil-Ellena",
        "uri": "http://dbpedia.org/resource/Phil-Ellena"
      }
    ],
    "id": "6f2c1b486fea4099ad02147fd9c090c8",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city"
      }
    ]
  },
  {
    "question": "To which nation did David Animle Hanses owe his allegiance?",
    "SerialNumber": "4517",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/David_Animle_Hansen> <http://dbpedia.org/property/allegiance> ?uri } ",
    "entity mapping": [
      {
        "label": "David Animle Hanses",
        "uri": "http://dbpedia.org/resource/David_Animle_Hansen"
      }
    ],
    "id": "14230056a4a745b8b5ed6e10149011b0",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      }
    ]
  },
  {
    "question": "Count the tenants of MasterCard Centre?",
    "SerialNumber": "4518",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri  . }",
    "entity mapping": [
      {
        "label": "MasterCard Centre",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre"
      }
    ],
    "id": "7106676e37f04720ba839ed381b3f9f4",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "Name the key people of the non-profit organisations whose one of the key person is Lesley-Anne knight ?",
    "SerialNumber": "4519",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Lesley-Anne_Knight> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lesley-Anne knight",
        "uri": "http://dbpedia.org/resource/Lesley-Anne_Knight"
      }
    ],
    "id": "76d138bb81fa4ba0bcdcaadcdd68dcc9",
    "predicate mapping": [
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "key people",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "What show had NTSC format and theme music composed by  Ron Grainer?",
    "SerialNumber": "4520",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/NTSC> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "NTSC",
        "uri": "http://dbpedia.org/resource/NTSC"
      },
      {
        "label": "Ron Grainer",
        "uri": "http://dbpedia.org/resource/Ron_Grainer"
      }
    ],
    "id": "3daabcc6a5b84e3084ede2d975008388",
    "predicate mapping": [
      {
        "label": "format",
        "uri": "http://dbpedia.org/ontology/format"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who was once married to both Kelly Brook and Rosie Huntington-Whiteley?",
    "SerialNumber": "4521",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kelly_Brook> <http://dbpedia.org/ontology/partner> ?uri. <http://dbpedia.org/resource/Rosie_Huntington-Whiteley> <http://dbpedia.org/ontology/partner> ?uri . }",
    "entity mapping": [
      {
        "label": "Kelly Brook",
        "uri": "http://dbpedia.org/resource/Kelly_Brook"
      },
      {
        "label": "Rosie Huntington-Whiteley",
        "uri": "http://dbpedia.org/resource/Rosie_Huntington-Whiteley"
      }
    ],
    "id": "893cf1fe221445378778ea0be0e9a571",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/partner"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/partner"
      }
    ]
  },
  {
    "question": "Which board memeber of jimmy Wales also owns Latvian Wikipedia ?",
    "SerialNumber": "4523",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmy_Wales> <http://dbpedia.org/ontology/board> ?uri. <http://dbpedia.org/resource/Latvian_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "jimmy Wales",
        "uri": "http://dbpedia.org/resource/Jimmy_Wales"
      },
      {
        "label": "Latvian Wikipedia",
        "uri": "http://dbpedia.org/resource/Latvian_Wikipedia"
      }
    ],
    "id": "d557c2e7c26a46f798ceb5f1f0006f57",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "Name the ones who debuted in the San Francisco 49ers.",
    "SerialNumber": "4526",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/San_Francisco_49ers>  . }",
    "entity mapping": [
      {
        "label": "San Francisco 49ers",
        "uri": "http://dbpedia.org/resource/San_Francisco_49ers"
      }
    ],
    "id": "c46d642e8b374c718591fa89a18d4498",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      }
    ]
  },
  {
    "question": "What is the county of the road whose route end is Pahang ?",
    "SerialNumber": "4528",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Pahang> . ?x <http://dbpedia.org/ontology/county> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
    "entity mapping": [
      {
        "label": "Pahang",
        "uri": "http://dbpedia.org/resource/Pahang"
      }
    ],
    "id": "691fc7827d724e6e993b3a3d505254d2",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/county"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road"
      }
    ]
  },
  {
    "question": "What is the river one of whose left tributary\u0027s native name is Arabic?",
    "SerialNumber": "4534",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nativeName> <http://dbpedia.org/resource/Arabic> . ?uri <http://dbpedia.org/ontology/leftTributary> ?x  . }",
    "entity mapping": [
      {
        "label": "Arabic",
        "uri": "http://dbpedia.org/resource/Arabic"
      }
    ],
    "id": "482e34b16844488ba0c95dae74b8a6b5",
    "predicate mapping": [
      {
        "label": "native name",
        "uri": "http://dbpedia.org/property/nativeName"
      },
      {
        "label": "left tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      }
    ]
  },
  {
    "question": "Name the office holder whose spouse is Dolley Madison and belongs to Militia branch ?",
    "SerialNumber": "4535",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "uri": "http://dbpedia.org/resource/Dolley_Madison"
      },
      {
        "label": "Militia",
        "uri": "http://dbpedia.org/resource/Militia"
      }
    ],
    "id": "d604b6b4ecce418c9d201f852b152ea4",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "List sports managers who managed Middlesbrough F.C. and England national under-21 football team?",
    "SerialNumber": "4536",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?uri <http://dbpedia.org/property/managerclubs> <http://dbpedia.org/resource/England_national_under-21_football_team>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsManager>}",
    "entity mapping": [
      {
        "label": "Middlesbrough F.C.",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C."
      },
      {
        "label": "England national under-21 football team",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team"
      }
    ],
    "id": "3132cf51e26240e8b86c33b5c052e34a",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/ontology/managerClub"
      },
      {
        "label": "managers",
        "uri": "http://dbpedia.org/property/managerclubs"
      },
      {
        "label": "sports manager",
        "uri": "http://dbpedia.org/ontology/SportsManager"
      }
    ]
  },
  {
    "question": "What is the origin of the grape whose wine region is the Troodos Mountains ?",
    "SerialNumber": "4538",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/wineRegion> <http://dbpedia.org/resource/Troodos_Mountains> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
    "entity mapping": [
      {
        "label": "Troodos Mountains",
        "uri": "http://dbpedia.org/resource/Troodos_Mountains"
      }
    ],
    "id": "bf20ba7973af4b2d88c57f6a9d217c8b",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape"
      }
    ]
  },
  {
    "question": "Where is the headquarter of Regional Transit Authority of Southeast Michigan ?",
    "SerialNumber": "4539",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Regional_Transit_Authority_of_Southeast_Michigan> <http://dbpedia.org/property/headquarters> ?uri } ",
    "entity mapping": [
      {
        "label": "Regional Transit Authority of Southeast Michigan",
        "uri": "http://dbpedia.org/resource/Regional_Transit_Authority_of_Southeast_Michigan"
      }
    ],
    "id": "f0d17b5fa2ce4598ae52fa5bb9b644ab",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "Who is the appointer of Charles Goodell ?",
    "SerialNumber": "4540",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Goodell> <http://dbpedia.org/ontology/appointer> ?uri } ",
    "entity mapping": [
      {
        "label": "Charles Goodell",
        "uri": "http://dbpedia.org/resource/Charles_Goodell"
      }
    ],
    "id": "7cecf227f82e424e953870dbd55f9a58",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/ontology/appointer"
      }
    ]
  },
  {
    "question": "Name the common serving line of Daund Junction railway station and Ujjain Junction railway station?",
    "SerialNumber": "4542",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri. <http://dbpedia.org/resource/Ujjain_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> ?uri . }",
    "entity mapping": [
      {
        "label": "Daund Junction railway station",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station"
      },
      {
        "label": "Ujjain Junction railway station",
        "uri": "http://dbpedia.org/resource/Ujjain_Junction_railway_station"
      }
    ],
    "id": "ca1c1caf133340b8b5806acbabd956a1",
    "predicate mapping": [
      {
        "label": "serving railway",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      },
      {
        "label": "serving railway",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      }
    ]
  },
  {
    "question": "Who owns the airport in Paphos?",
    "SerialNumber": "4544",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Paphos_District> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport>}",
    "entity mapping": [
      {
        "label": "Paphos",
        "uri": "http://dbpedia.org/resource/Paphos_District"
      }
    ],
    "id": "eafba6d3f21b45828b0ba24f542a6182",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/Airport"
      }
    ]
  },
  {
    "question": "What is the common branch of military of Edward Joseph Schwartz  and John Tower ?",
    "SerialNumber": "4545",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edward_Joseph_Schwartz> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/John_Tower> <http://dbpedia.org/ontology/militaryBranch> ?uri} ",
    "entity mapping": [
      {
        "label": "Edward Joseph Schwartz",
        "uri": "http://dbpedia.org/resource/Edward_Joseph_Schwartz"
      },
      {
        "label": "John Tower",
        "uri": "http://dbpedia.org/resource/John_Tower"
      }
    ],
    "id": "a9342361a49049748be5ff4a25048dd9",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "military branch",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "Which border country of the Korean Peninsula is also the country of Krusty, a musical group ?",
    "SerialNumber": "4547",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_Peninsula> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Krusty_(music_group)> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Korean Peninsula",
        "uri": "http://dbpedia.org/resource/Korean_Peninsula"
      },
      {
        "label": "Krusty",
        "uri": "http://dbpedia.org/resource/Krusty_(music_group)"
      }
    ],
    "id": "dd65031f3d5840d791f6a197a08b2fa5",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "List the destinations of Novair International Airways ?",
    "SerialNumber": "4548",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/property/destinations> ?uri } ",
    "entity mapping": [
      {
        "label": "Novair International Airways",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways"
      }
    ],
    "id": "6399efe5ee3f4af7853501362f0efde3",
    "predicate mapping": [
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      }
    ]
  },
  {
    "question": "List the guests of On Broadway ?",
    "SerialNumber": "4549",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/On_Broadway_(Smash)> <http://dbpedia.org/property/guests> ?uri } ",
    "entity mapping": [
      {
        "label": "On Broadway",
        "uri": "http://dbpedia.org/resource/On_Broadway_(Smash)"
      }
    ],
    "id": "9fd4114ea96b48438d0091ba51b47a86",
    "predicate mapping": [
      {
        "label": "guests",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "What is the home town of the musical artist who is the current members of Slapstick?",
    "SerialNumber": "4551",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Slapstick_(band)> <http://dbpedia.org/property/currentMembers> ?x . ?x <http://dbpedia.org/ontology/hometown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Slapstick",
        "uri": "http://dbpedia.org/resource/Slapstick_(band)"
      }
    ],
    "id": "0180e8e90b484b62bf0190b66b24c52b",
    "predicate mapping": [
      {
        "label": "current members",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Is Christchurch the largest city of South Island?",
    "SerialNumber": "4552",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/South_Island> <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Christchurch> }",
    "entity mapping": [
      {
        "label": "South Island",
        "uri": "http://dbpedia.org/resource/South_Island"
      },
      {
        "label": "Christchurch",
        "uri": "http://dbpedia.org/resource/Christchurch"
      }
    ],
    "id": "d219d8cfedec450192789f8d5c969ce9",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "What are the products of the company who published Robot Wars: Metal Mayhem ?",
    "SerialNumber": "4555",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Robot_Wars:_Metal_Mayhem> <http://dbpedia.org/ontology/publisher> ?x . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Robot Wars: Metal Mayhem",
        "uri": "http://dbpedia.org/resource/Robot_Wars:_Metal_Mayhem"
      }
    ],
    "id": "6eae72f3017e4cdb932b020311f66a93",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name books with publisher as Francisco de Robles and writer as Miguel de Cervantes ?",
    "SerialNumber": "4556",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Francisco_de_Robles> . ?uri <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Miguel_de_Cervantes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Francisco de Robles",
        "uri": "http://dbpedia.org/resource/Francisco_de_Robles"
      },
      {
        "label": "Miguel de Cervantes",
        "uri": "http://dbpedia.org/resource/Miguel_de_Cervantes"
      }
    ],
    "id": "f4f1a62862e44955aac1cdc42a0b530f",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "What is the political party to which Purnima Banerjee is a member of??",
    "SerialNumber": "4557",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purnima_Banerjee> <http://dbpedia.org/ontology/party> ?uri } ",
    "entity mapping": [
      {
        "label": "Purnima Banerjee",
        "uri": "http://dbpedia.org/resource/Purnima_Banerjee"
      }
    ],
    "id": "42a5180e4dc54977ac1383fad51c98c2",
    "predicate mapping": [
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "In how many places are the tombs of everyone who died in England?",
    "SerialNumber": "4560",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "d6166b09fb8c4c46ac27fcf5ae8dbb94",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "In all the states which have a Uniontown, where does a Keller\u0027s mill covered bridge exist too?",
    "SerialNumber": "4561",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Uniontown,_Pennsylvania> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Keller\u0027s_Mill_Covered_Bridge> <http://dbpedia.org/ontology/state> ?uri . }",
    "entity mapping": [
      {
        "label": "Uniontown",
        "uri": "http://dbpedia.org/resource/Uniontown,_Pennsylvania"
      },
      {
        "label": "Keller\u0027s mill covered bridge",
        "uri": "http://dbpedia.org/resource/Keller\u0027s_Mill_Covered_Bridge"
      }
    ],
    "id": "ab4b39c73ed14299a95b7291b10d4f6c",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      }
    ]
  },
  {
    "question": "The sports team which played at the American Basketball League championship (1996-1998), have which stadiums?",
    "SerialNumber": "4563",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/American_Basketball_League_(1996–98)> . ?x <http://dbpedia.org/ontology/stadium> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "American Basketball League",
        "uri": "http://dbpedia.org/resource/American_Basketball_League_(1996–98)"
      }
    ],
    "id": "75af9778518645edb1bbb6a0c7ac1f36",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/stadium"
      },
      {
        "label": "sports team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "What is the order of the Omar D. Conger where Robert Sarvis was also the nominee ?",
    "SerialNumber": "4564",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Omar_D._Conger> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri} ",
    "entity mapping": [
      {
        "label": "Omar D. Conger",
        "uri": "http://dbpedia.org/resource/Omar_D._Conger"
      },
      {
        "label": "Robert Sarvis",
        "uri": "http://dbpedia.org/resource/Robert_Sarvis"
      }
    ],
    "id": "2b8f54ebc176446f84b5cd9a0bf7f09a",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/property/order"
      },
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee"
      }
    ]
  },
  {
    "question": "Who wrote the musical whose composer is Emil Dean Zoghby?",
    "SerialNumber": "4565",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicBy> <http://dbpedia.org/resource/Emil_Dean_Zoghby> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "Emil Dean Zoghby",
        "uri": "http://dbpedia.org/resource/Emil_Dean_Zoghby"
      }
    ],
    "id": "cf088542743d4f7c9471fde58a58f329",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/musicBy"
      },
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "what has been developed by John Fanning?",
    "SerialNumber": "4568",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/John_Fanning_(businessman)> } ",
    "entity mapping": [
      {
        "label": "John Fanning",
        "uri": "http://dbpedia.org/resource/John_Fanning_(businessman)"
      }
    ],
    "id": "d018211e5cad471cb48e42286b59f8bc",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Who was the chairman of Fort Lauderdale Strikers and also 2015 Fort Lauderdale Strikers season ?",
    "SerialNumber": "4569",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/chairman> ?uri. <http://dbpedia.org/resource/Fort_Lauderdale_Strikers> <http://dbpedia.org/ontology/chairman> ?uri . }",
    "entity mapping": [
      {
        "label": "2015 Fort Lauderdale Strikers season",
        "uri": "http://dbpedia.org/resource/2015_Fort_Lauderdale_Strikers_season"
      },
      {
        "label": "Fort Lauderdale Strikers",
        "uri": "http://dbpedia.org/resource/Fort_Lauderdale_Strikers"
      }
    ],
    "id": "595fdea8ad964062b2b5fb39504fb305",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman"
      }
    ]
  },
  {
    "question": "What are the houses of the legislature where the leader is called Pullaiahgaripalli ?",
    "SerialNumber": "4570",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pullaiahgaripalli> <http://dbpedia.org/property/leaderTitle> ?x . ?x <http://dbpedia.org/property/houses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Legislature>}",
    "entity mapping": [
      {
        "label": "Pullaiahgaripalli",
        "uri": "http://dbpedia.org/resource/Pullaiahgaripalli"
      }
    ],
    "id": "b3f0e60e97234014a7f3894713c38e83",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leaderTitle"
      },
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses"
      },
      {
        "label": "legislature",
        "uri": "http://dbpedia.org/ontology/Legislature"
      }
    ]
  },
  {
    "question": "List some writers which speak one of the Germanic languages.",
    "SerialNumber": "4571",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Germanic_languages> . ?uri <http://dbpedia.org/property/language> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Germanic languages",
        "uri": "http://dbpedia.org/resource/Germanic_languages"
      }
    ],
    "id": "d0ee48eed66c4af68f17410f1026c1be",
    "predicate mapping": [
      {
        "label": "languages.",
        "uri": "http://dbpedia.org/ontology/languageFamily"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Give me some series whose network\u0027s owning company is Warner Bros. Television?",
    "SerialNumber": "4577",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Warner Bros. Television",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Television"
      }
    ],
    "id": "534303fe37fc4bf7b3ab0221994e27c4",
    "predicate mapping": [
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the province of Egypt Nanotechnology Center ?",
    "SerialNumber": "4578",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Egypt_Nanotechnology_Center> <http://dbpedia.org/property/province> ?uri } ",
    "entity mapping": [
      {
        "label": "Egypt Nanotechnology Center",
        "uri": "http://dbpedia.org/resource/Egypt_Nanotechnology_Center"
      }
    ],
    "id": "a1b2a89fbda54f5aa1f4d78972f6b0ce",
    "predicate mapping": [
      {
        "label": "province",
        "uri": "http://dbpedia.org/property/province"
      }
    ]
  },
  {
    "question": "What is manufactured by a company founded by Akio Morita?",
    "SerialNumber": "4579",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Akio_Morita> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "entity mapping": [
      {
        "label": "Akio Morita",
        "uri": "http://dbpedia.org/resource/Akio_Morita"
      }
    ],
    "id": "4a0378488d7a4e55b54af1494dd0452d",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Where did Rheinmetall MG 60 originated ?",
    "SerialNumber": "4581",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rheinmetall_MG_60> <http://dbpedia.org/ontology/origin> ?uri } ",
    "entity mapping": [
      {
        "label": "Rheinmetall MG 60",
        "uri": "http://dbpedia.org/resource/Rheinmetall_MG_60"
      }
    ],
    "id": "22555965f19f4a6e92729f88efea818c",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "Is The Orator in the National Archaeological Museum of Florence?",
    "SerialNumber": "4583",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Orator> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)> }",
    "entity mapping": [
      {
        "label": "The Orator",
        "uri": "http://dbpedia.org/resource/The_Orator"
      },
      {
        "label": "National Archaeological Museum",
        "uri": "http://dbpedia.org/resource/National_Archaeological_Museum_(Florence)"
      }
    ],
    "id": "1ac2e9ce84374f78b8e3bcae3c1dcf03",
    "predicate mapping": [
      {
        "label": "Museum",
        "uri": "http://dbpedia.org/property/museum"
      }
    ]
  },
  {
    "question": "List all the notable work of the screen writer who produced Frasier ?",
    "SerialNumber": "4585",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Frasier> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ScreenWriter>}",
    "entity mapping": [
      {
        "label": "Frasier",
        "uri": "http://dbpedia.org/resource/Frasier"
      }
    ],
    "id": "a5f1adc3aeab47b59f5a845831b2e343",
    "predicate mapping": [
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "writer screen",
        "uri": "http://dbpedia.org/ontology/ScreenWriter"
      }
    ]
  },
  {
    "question": "Name the river mouth of Moordener Kill ?",
    "SerialNumber": "4588",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moordener_Kill> <http://dbpedia.org/ontology/riverMouth> ?uri } ",
    "entity mapping": [
      {
        "label": "Moordener Kill",
        "uri": "http://dbpedia.org/resource/Moordener_Kill"
      }
    ],
    "id": "c4229602891d40e0b35e90c5f8098d4b",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      }
    ]
  },
  {
    "question": "In which series has Sean Young portrayed someone?",
    "SerialNumber": "4590",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Sean_Young> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sean Young",
        "uri": "http://dbpedia.org/resource/Sean_Young"
      }
    ],
    "id": "e5230e04554e4a35be04d647faee20bd",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "What type of engines are utilised by Purvis Eureka?",
    "SerialNumber": "4592",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri } ",
    "entity mapping": [
      {
        "label": "Purvis Eureka",
        "uri": "http://dbpedia.org/resource/Purvis_Eureka"
      }
    ],
    "id": "75fa0d818e204f15beda5bf1e16d1d58",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine"
      }
    ]
  },
  {
    "question": "Is Egyptian Arabic belong to the Central Semitic Languages family?",
    "SerialNumber": "4593",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Egyptian_Arabic> <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Central_Semitic_languages> }",
    "entity mapping": [
      {
        "label": "Egyptian Arabic",
        "uri": "http://dbpedia.org/resource/Egyptian_Arabic"
      },
      {
        "label": "Central Semitic Languages",
        "uri": "http://dbpedia.org/resource/Central_Semitic_languages"
      }
    ],
    "id": "039cf22b96294857b744cfb1fa32e334",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/languageFamily"
      }
    ]
  },
  {
    "question": "Name the fictional character whose relatives are Huey, Dewey, and Louie and belongs to Duck family ?",
    "SerialNumber": "4595",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . ?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Duck_family_(Disney)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Huey, Dewey, and Louie",
        "uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie"
      },
      {
        "label": "Duck family",
        "uri": "http://dbpedia.org/resource/Duck_family_(Disney)"
      }
    ],
    "id": "65cb514fcc3148d6ba887e1d9e2d494f",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What is the total number of other characters of the plays whose characters is Robin (comics)?",
    "SerialNumber": "4596",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Robin_(comics)> . ?x <http://dbpedia.org/property/characters> ?uri }",
    "entity mapping": [
      {
        "label": "Robin (comics)",
        "uri": "http://dbpedia.org/resource/Robin_(comics)"
      }
    ],
    "id": "76e88d03b8924d729700e000cb86e234",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      }
    ]
  },
  {
    "question": "Where did isabelle caro and judson huss both die?",
    "SerialNumber": "4600",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Isabelle_Caro> <http://dbpedia.org/property/deathPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "judson huss",
        "uri": "http://dbpedia.org/resource/Judson_Huss"
      },
      {
        "label": "isabelle caro",
        "uri": "http://dbpedia.org/resource/Isabelle_Caro"
      }
    ],
    "id": "f86382f06edd4519acfc00e730f5471e",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "Name the television show whose subsequent work is Crusade and Composer is Stewart Copeland?",
    "SerialNumber": "4601",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Crusade_(TV_series)> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Stewart_Copeland>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Crusade",
        "uri": "http://dbpedia.org/resource/Crusade_(TV_series)"
      },
      {
        "label": "Stewart Copeland",
        "uri": "http://dbpedia.org/resource/Stewart_Copeland"
      }
    ],
    "id": "38373a19e5964230aaa2329c041ad1e3",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "Composer",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Count the number of artists who trained at the San Francisco Art Institute?",
    "SerialNumber": "4603",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/San_Francisco_Art_Institute>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "San Francisco Art Institute",
        "uri": "http://dbpedia.org/resource/San_Francisco_Art_Institute"
      }
    ],
    "id": "1063c970689c469e81a711a634edf521",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "What are the movies whose director is Orson Welles?",
    "SerialNumber": "4604",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Orson Welles",
        "uri": "http://dbpedia.org/resource/Orson_Welles"
      }
    ],
    "id": "83f39c859fbc4eeaa715eb2c8e319759",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which scientist is known for anthrax and has Karl Ewald Hasse as his academic advisor ?",
    "SerialNumber": "4605",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "anthrax",
        "uri": "http://dbpedia.org/resource/Anthrax"
      },
      {
        "label": "Karl Ewald Hasse",
        "uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse"
      }
    ],
    "id": "559339119ad341b2b9cfb630cc1bd6a0",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many mountain are there in Sierra Nevada range?",
    "SerialNumber": "4606",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain>}",
    "entity mapping": [
      {
        "label": "Sierra Nevada",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)"
      }
    ],
    "id": "06288af112614c6cb006b87cc6b4d88b",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      },
      {
        "label": "mountain",
        "uri": "http://dbpedia.org/ontology/Mountain"
      }
    ]
  },
  {
    "question": "To how many different species does the members of the Animal Kingdom belong?",
    "SerialNumber": "4607",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> . ?x <http://dbpedia.org/ontology/species> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Species>}",
    "entity mapping": [
      {
        "label": "Animal Kingdom",
        "uri": "http://dbpedia.org/resource/Animal"
      }
    ],
    "id": "5c70e8faf9b847f3ac27fe491ccd6a65",
    "predicate mapping": [
      {
        "label": "Kingdom",
        "uri": "http://dbpedia.org/ontology/kingdom"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/Species"
      }
    ]
  },
  {
    "question": "What are some mammals whose phylum is Chordate?",
    "SerialNumber": "4609",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "Chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      }
    ],
    "id": "62f0ecc271674594a21cccef030cd45e",
    "predicate mapping": [
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/property/phylum"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "What is manufactured by Asus and Sony togather?",
    "SerialNumber": "4610",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . }",
    "entity mapping": [
      {
        "label": "Asus",
        "uri": "http://dbpedia.org/resource/Asus"
      },
      {
        "label": "Sony",
        "uri": "http://dbpedia.org/resource/Sony"
      }
    ],
    "id": "2a9c6af7ea724bd49c834dd371c155c8",
    "predicate mapping": [
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Who is the Artist of the singles whose film genre is Country music ?",
    "SerialNumber": "4611",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Country_music> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "Country music",
        "uri": "http://dbpedia.org/resource/Country_music"
      }
    ],
    "id": "397233307bda42d486c73b3f774b5d9d",
    "predicate mapping": [
      {
        "label": "film genre",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "Artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "Who did Daniel Gibson marry?",
    "SerialNumber": "4613",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Daniel_Gibson>  . }",
    "entity mapping": [
      {
        "label": "Daniel Gibson",
        "uri": "http://dbpedia.org/resource/Daniel_Gibson"
      }
    ],
    "id": "4b249c6c2fef48e889eb99914a430034",
    "predicate mapping": [
      {
        "label": "marry",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "Who studied at  Harvard-Westlake School and has Henry E. Catto, Jr. as   predecessor ?",
    "SerialNumber": "4615",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . }",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School"
      },
      {
        "label": "Henry E. Catto, Jr.",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr."
      }
    ],
    "id": "7197caeaf6804e9a9f9cb80097235c1b",
    "predicate mapping": [
      {
        "label": "studied at",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      }
    ]
  },
  {
    "question": "Is Tamera Mowry the former band member of Voices?",
    "SerialNumber": "4618",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Voices_(group)> <http://dbpedia.org/ontology/formerBandMember> <http://dbpedia.org/resource/Tamera_Mowry> }",
    "entity mapping": [
      {
        "label": "Voices",
        "uri": "http://dbpedia.org/resource/Voices_(group)"
      },
      {
        "label": "Tamera Mowry",
        "uri": "http://dbpedia.org/resource/Tamera_Mowry"
      }
    ],
    "id": "3a1e1c8fbb3b4c09ba53450a4fd77cd7",
    "predicate mapping": [
      {
        "label": "former band member",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      }
    ]
  },
  {
    "question": "How many movies are distributed by Cinema International Corporation?",
    "SerialNumber": "4619",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Cinema International Corporation",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation"
      }
    ],
    "id": "6aa814339d6747cd82a103df2b4c228f",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "List the birth city of the politicians of Democratic Party.",
    "SerialNumber": "4621",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Democratic_Party_(United_States)> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Democratic Party",
        "uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)"
      }
    ],
    "id": "3ddc996f258946418b9ae66b9d03e234",
    "predicate mapping": [
      {
        "label": "Party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "birth city",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "Which American football player is a former team player of Indianapolis Colts and current team is Michigan Wolverines?",
    "SerialNumber": "4622",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Indianapolis_Colts> . ?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Indianapolis Colts",
        "uri": "http://dbpedia.org/resource/Indianapolis_Colts"
      },
      {
        "label": "Michigan Wolverines",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines"
      }
    ],
    "id": "43549d9a19ca408daf0fb2899e106312",
    "predicate mapping": [
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentteam"
      },
      {
        "label": "American football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "Which river\u0027s source country is Zambia and mouth country is Mozambique?",
    "SerialNumber": "4623",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Zambia",
        "uri": "http://dbpedia.org/resource/Zambia"
      },
      {
        "label": "Mozambique",
        "uri": "http://dbpedia.org/resource/Mozambique"
      }
    ],
    "id": "c82aa7a94ec5431eb6ef397da4551908",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/property/mouthCountry"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which person works at the American Magazine?",
    "SerialNumber": "4624",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/The_American_Magazine>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "the American Magazine",
        "uri": "http://dbpedia.org/resource/The_American_Magazine"
      }
    ],
    "id": "b7492b365add45569dcbee5b3db8650d",
    "predicate mapping": [
      {
        "label": "works at",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the regions served by Toll Global Express ?",
    "SerialNumber": "4625",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Toll_Global_Express> <http://dbpedia.org/ontology/regionServed> ?uri } ",
    "entity mapping": [
      {
        "label": "Toll Global Express",
        "uri": "http://dbpedia.org/resource/Toll_Global_Express"
      }
    ],
    "id": "0aef05bbe0154edd9c0c705a89a3c182",
    "predicate mapping": [
      {
        "label": "regions served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      }
    ]
  },
  {
    "question": "How many mountain ranges are located in the Canton of Fribourg?",
    "SerialNumber": "4627",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Canton_of_Fribourg> . ?x <http://dbpedia.org/ontology/mountainRange> ?uri  . }",
    "entity mapping": [
      {
        "label": "Canton of Fribourg",
        "uri": "http://dbpedia.org/resource/Canton_of_Fribourg"
      }
    ],
    "id": "5547e2421f8e4105b3248f3b3a2c7fbf",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      }
    ]
  },
  {
    "question": "Is PIAS Recordings the distributing label of Wichita Recordings?",
    "SerialNumber": "4631",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Wichita_Recordings> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/PIAS_Recordings> }",
    "entity mapping": [
      {
        "label": "Wichita Recordings",
        "uri": "http://dbpedia.org/resource/Wichita_Recordings"
      },
      {
        "label": "PIAS Recordings",
        "uri": "http://dbpedia.org/resource/PIAS_Recordings"
      }
    ],
    "id": "47dcd274e3704296945ea9b12dd1ee6c",
    "predicate mapping": [
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel"
      }
    ]
  },
  {
    "question": "Count all american football players whose former team owns Lucas Oil Stadium ?",
    "SerialNumber": "4633",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Lucas_Oil_Stadium> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Lucas Oil Stadium",
        "uri": "http://dbpedia.org/resource/Lucas_Oil_Stadium"
      }
    ],
    "id": "7246b56a6a294f789c8060bdd018db4b",
    "predicate mapping": [
      {
        "label": "count",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "How many cities are around the sea which flows into the Atlantic?",
    "SerialNumber": "4634",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Atlantic_Ocean> . ?x <http://dbpedia.org/property/cities> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "Atlantic",
        "uri": "http://dbpedia.org/resource/Atlantic_Ocean"
      }
    ],
    "id": "83c320a2818b4a279f69b7838f2668f8",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/inflow"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "What is the occupation of the Irving Chernev and Karen Grigorian?",
    "SerialNumber": "4636",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Irving_Chernev> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri . }",
    "entity mapping": [
      {
        "label": "Irving Chernev",
        "uri": "http://dbpedia.org/resource/Irving_Chernev"
      },
      {
        "label": "Karen Grigorian",
        "uri": "http://dbpedia.org/resource/Karen_Grigorian"
      }
    ],
    "id": "d26cda70df824bb19cc10cc4271643c3",
    "predicate mapping": [
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "How many cities are close to Lake Victoria?",
    "SerialNumber": "4637",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lake_Victoria> <http://dbpedia.org/ontology/nearestCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lake Victoria",
        "uri": "http://dbpedia.org/resource/Lake_Victoria"
      }
    ],
    "id": "209c460e684848fe9572d27a98ecbfea",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      }
    ]
  },
  {
    "question": "Name the ssignificant buildings of Ivan Fomin ?",
    "SerialNumber": "4638",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_Fomin> <http://dbpedia.org/ontology/significantBuilding> ?uri } ",
    "entity mapping": [
      {
        "label": "Ivan Fomin",
        "uri": "http://dbpedia.org/resource/Ivan_Fomin"
      }
    ],
    "id": "4c026c13b12440d5b522a35a7614900a",
    "predicate mapping": [
      {
        "label": "significant building",
        "uri": "http://dbpedia.org/ontology/significantBuilding"
      }
    ]
  },
  {
    "question": "Did Tupac write the lyrics of Holler If Ya Hear Me?",
    "SerialNumber": "4639",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)> <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Tupac_Shakur> }",
    "entity mapping": [
      {
        "label": "Holler If Ya Hear Me",
        "uri": "http://dbpedia.org/resource/Holler_If_Ya_Hear_Me_(musical)"
      },
      {
        "label": "Tupac",
        "uri": "http://dbpedia.org/resource/Tupac_Shakur"
      }
    ],
    "id": "98cf6110489945a29a7358a6ce88c7b3",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/property/lyrics"
      }
    ]
  },
  {
    "question": "Which largest city of Salsette Island is also the largest city of India ?",
    "SerialNumber": "4641",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/India> <http://dbpedia.org/ontology/largestCity> ?uri. <http://dbpedia.org/resource/Salsette_Island> <http://dbpedia.org/ontology/largestCity> ?uri . }",
    "entity mapping": [
      {
        "label": "India",
        "uri": "http://dbpedia.org/resource/India"
      },
      {
        "label": "Salsette Island",
        "uri": "http://dbpedia.org/resource/Salsette_Island"
      }
    ],
    "id": "dbff72738b8a4eecaeeb1c92dd24ce41",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "What is the name of the homeground of football team Panionios G.S.S.?",
    "SerialNumber": "4643",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013–14_Panionios_G.S.S._season> <http://dbpedia.org/ontology/ground> ?uri } ",
    "entity mapping": [
      {
        "label": "Panionios G.S.S.",
        "uri": "http://dbpedia.org/resource/2013–14_Panionios_G.S.S._season"
      }
    ],
    "id": "e2c1089bbf4440f798c4e4415ab5b6c1",
    "predicate mapping": [
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground"
      }
    ]
  },
  {
    "question": "How many teams was Garry Unger in, previously?",
    "SerialNumber": "4645",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Garry_Unger> <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Garry Unger",
        "uri": "http://dbpedia.org/resource/Garry_Unger"
      }
    ],
    "id": "0fb28604c99742c0aa2963169472cd4f",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Is Mona Lisa in the Louvre museum?",
    "SerialNumber": "4648",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mona_Lisa> <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Louvre> }",
    "entity mapping": [
      {
        "label": "Mona Lisa",
        "uri": "http://dbpedia.org/resource/Mona_Lisa"
      },
      {
        "label": "Louvre",
        "uri": "http://dbpedia.org/resource/Louvre"
      }
    ],
    "id": "24df8c770302477ea971c6535bda9937",
    "predicate mapping": [
      {
        "label": "museum",
        "uri": "http://dbpedia.org/property/museum"
      }
    ]
  },
  {
    "question": "List the judge of the TV show whose one of the judge is Ludacris ?",
    "SerialNumber": "4650",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Ludacris> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Ludacris",
        "uri": "http://dbpedia.org/resource/Ludacris"
      }
    ],
    "id": "84ede2491cf7408fbbb66c5db851f30a",
    "predicate mapping": [
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the primary  subjects of A Christian Turn\u0027d Turk?",
    "SerialNumber": "4652",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/A_Christian_Turn\u0027d_Turk> <http://dbpedia.org/property/subject> ?uri } ",
    "entity mapping": [
      {
        "label": "A Christian Turn\u0027d Turk",
        "uri": "http://dbpedia.org/resource/A_Christian_Turn\u0027d_Turk"
      }
    ],
    "id": "edcf0c29b7884073984ea20413f0eb1c",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      }
    ]
  },
  {
    "question": "Which awards did the writer of Persona win ?",
    "SerialNumber": "4653",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Persona_(1966_film)> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Persona",
        "uri": "http://dbpedia.org/resource/Persona_(1966_film)"
      }
    ],
    "id": "a0f6a9ff04114339bf934c012ed2f0b2",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Give me a count of movies whose editor is Mark Stevens?",
    "SerialNumber": "4654",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Mark_Stevens_(film_editor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Mark Stevens",
        "uri": "http://dbpedia.org/resource/Mark_Stevens_(film_editor)"
      }
    ],
    "id": "eee1bb47d0ac48a0a79142e2a0ae6f48",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "List the area of radio stations whose sister station is WBCQ-FM?",
    "SerialNumber": "4657",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WBCQ-FM> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/area> ?uri  . }",
    "entity mapping": [
      {
        "label": "WBCQ-FM",
        "uri": "http://dbpedia.org/resource/WBCQ-FM"
      }
    ],
    "id": "e83f61a2a503458487940f058dbc056a",
    "predicate mapping": [
      {
        "label": "stations",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      }
    ]
  },
  {
    "question": "Is Latin the official language of Sovereign Military Order of Malta?",
    "SerialNumber": "4659",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sovereign_Military_Order_of_Malta> <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Latin> }",
    "entity mapping": [
      {
        "label": "Sovereign Military Order of Malta",
        "uri": "http://dbpedia.org/resource/Sovereign_Military_Order_of_Malta"
      },
      {
        "label": "Latin",
        "uri": "http://dbpedia.org/resource/Latin"
      }
    ],
    "id": "561e313df8b44f6f86beb08ed0ff7314",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      }
    ]
  },
  {
    "question": "List the  outflow of Lake Uniamsi?",
    "SerialNumber": "4660",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniamési> <http://dbpedia.org/ontology/outflow> ?uri } ",
    "entity mapping": [
      {
        "label": "Lake Uniamsi",
        "uri": "http://dbpedia.org/resource/Lake_Uniamési"
      }
    ],
    "id": "307417ba7c684e2887f17e9a33b81e3e",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/ontology/outflow"
      }
    ]
  },
  {
    "question": "List the major shrines of Jovan Vladimir?",
    "SerialNumber": "4665",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jovan_Vladimir> <http://dbpedia.org/property/majorShrine> ?uri } ",
    "entity mapping": [
      {
        "label": "Jovan Vladimir",
        "uri": "http://dbpedia.org/resource/Jovan_Vladimir"
      }
    ],
    "id": "de4a17ef8b2f4b39b40ef30f83c56a81",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine"
      }
    ]
  },
  {
    "question": "Which shows are from a company whose subsidiary is Viacom Productions?",
    "SerialNumber": "4666",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Viacom_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Viacom Productions",
        "uri": "http://dbpedia.org/resource/Viacom_Productions"
      }
    ],
    "id": "0396475ffe70439b901b07d6784e000b",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are on the borders of Shimsa Plateau?",
    "SerialNumber": "4668",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shimōsa_Plateau> <http://dbpedia.org/ontology/border> ?uri } ",
    "entity mapping": [
      {
        "label": "Shimsa Plateau",
        "uri": "http://dbpedia.org/resource/Shimōsa_Plateau"
      }
    ],
    "id": "15c9ac66e1244177b01e0b4386cf5efb",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      }
    ]
  },
  {
    "question": "Who edited  British Gazette ?",
    "SerialNumber": "4669",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/British_Gazette> <http://dbpedia.org/property/editor> ?uri } ",
    "entity mapping": [
      {
        "label": "British Gazette",
        "uri": "http://dbpedia.org/resource/British_Gazette"
      }
    ],
    "id": "2e7e281583534d89b40fa6de036f5439",
    "predicate mapping": [
      {
        "label": "edited",
        "uri": "http://dbpedia.org/property/editor"
      }
    ]
  },
  {
    "question": "Which spanish novel was published by Francisco de Robles?",
    "SerialNumber": "4670",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Francisco_de_Robles> } ",
    "entity mapping": [
      {
        "label": "Francisco de Robles",
        "uri": "http://dbpedia.org/resource/Francisco_de_Robles"
      }
    ],
    "id": "baa53040546c4b7485dd8c3b4ecd311e",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher"
      }
    ]
  },
  {
    "question": "Count the total number  of hometown of the gymnasts whose one of the hometown in Russia ?",
    "SerialNumber": "4672",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hometown> <http://dbpedia.org/resource/Russia> . ?x <http://dbpedia.org/property/hometown> ?uri }",
    "entity mapping": [
      {
        "label": "Russia",
        "uri": "http://dbpedia.org/resource/Russia"
      }
    ],
    "id": "0feb39bf1e8f453bb816ea93a2b502c4",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown"
      },
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/hometown"
      }
    ]
  },
  {
    "question": "What is the resting place of the children of Bruce Lee ?",
    "SerialNumber": "4673",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bruce_Lee> <http://dbpedia.org/property/children> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bruce Lee",
        "uri": "http://dbpedia.org/resource/Bruce_Lee"
      }
    ],
    "id": "e7550728ad6f41acb0ad81d2f95ffb96",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "What are the television shows whose company\u0027s predecessor is Desilu Productions?",
    "SerialNumber": "4674",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Desilu_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Desilu Productions",
        "uri": "http://dbpedia.org/resource/Desilu_Productions"
      }
    ],
    "id": "deea1a7029184a36887d5130ae3b7420",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the prospect team of Robin Kovacs ?",
    "SerialNumber": "4678",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Robin Kovacs",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs"
      }
    ],
    "id": "0f900abe071d458c8008e93f37f6c252",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam"
      }
    ]
  },
  {
    "question": "Is Labor relations the main interest of Karl Marx?",
    "SerialNumber": "4680",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Karl_Marx> <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Labor_relations> }",
    "entity mapping": [
      {
        "label": "Karl Marx",
        "uri": "http://dbpedia.org/resource/Karl_Marx"
      },
      {
        "label": "Labor relations",
        "uri": "http://dbpedia.org/resource/Labor_relations"
      }
    ],
    "id": "425f07694cbb4f12a161b89c5d635e62",
    "predicate mapping": [
      {
        "label": "main interest",
        "uri": "http://dbpedia.org/ontology/mainInterest"
      }
    ]
  },
  {
    "question": "Name a office holder whose predecessor is Edward Douglass White and has son named Charles Phelps Taft II?",
    "SerialNumber": "4684",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Edward_Douglass_White> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Phelps_Taft_II>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Edward Douglass White",
        "uri": "http://dbpedia.org/resource/Edward_Douglass_White"
      },
      {
        "label": "Charles Phelps Taft II",
        "uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II"
      }
    ],
    "id": "6429713d75f449e0852eaa9a52a8540a",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "has son",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What is the club of Perianne Jones ?",
    "SerialNumber": "4686",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Perianne_Jones> <http://dbpedia.org/property/club> ?uri } ",
    "entity mapping": [
      {
        "label": "Perianne Jones",
        "uri": "http://dbpedia.org/resource/Perianne_Jones"
      }
    ],
    "id": "0827b6115c1e42db887f851cff070db2",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club"
      }
    ]
  },
  {
    "question": "List the books by the authors buried in the Convent of the Barefoot Trinitarians?",
    "SerialNumber": "4688",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Convent of the Barefoot Trinitarians",
        "uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians"
      }
    ],
    "id": "576e5c12a2c248b8830551d0f73df4b8",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "authors",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Is Stephanie Rice the flagbearer of Australia at the 2008 Summer Olympics?",
    "SerialNumber": "4690",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> <http://dbpedia.org/resource/Stephanie_Rice> }",
    "entity mapping": [
      {
        "label": "Australia at the 2008 Summer Olympics",
        "uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics"
      },
      {
        "label": "Stephanie Rice",
        "uri": "http://dbpedia.org/resource/Stephanie_Rice"
      }
    ],
    "id": "b6350d2207344671bafd1d5b4cde9b63",
    "predicate mapping": [
      {
        "label": "flagbearer",
        "uri": "http://dbpedia.org/property/flagbearer"
      }
    ]
  },
  {
    "question": "Spanish harlem incident and girl from the north country were originally composed by whom?",
    "SerialNumber": "4691",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spanish_Harlem_Incident> <http://dbpedia.org/ontology/composer> ?uri. <http://dbpedia.org/resource/Girl_from_the_North_Country> <http://dbpedia.org/ontology/composer> ?uri . }",
    "entity mapping": [
      {
        "label": "Spanish harlem incident",
        "uri": "http://dbpedia.org/resource/Spanish_Harlem_Incident"
      },
      {
        "label": "girl from the north country",
        "uri": "http://dbpedia.org/resource/Girl_from_the_North_Country"
      }
    ],
    "id": "04444d2be01e42628d4b68c281b03655",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer"
      }
    ]
  },
  {
    "question": "Who is the founder of Oprah Winfrey Network (U.S. TV channel) ?",
    "SerialNumber": "4692",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oprah_Winfrey_Network_(U.S._TV_channel)> <http://dbpedia.org/property/founder> ?uri } ",
    "entity mapping": [
      {
        "label": "Oprah Winfrey Network",
        "uri": "http://dbpedia.org/resource/Oprah_Winfrey_Network_(U.S._TV_channel)"
      }
    ],
    "id": "bef4d21a7f66422c8f6b906ff1dfc6ca",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      }
    ]
  },
  {
    "question": "Which place of Geography Club is the location of Seattle Great Wheel ?",
    "SerialNumber": "4694",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Seattle_Great_Wheel> <http://dbpedia.org/property/locationTown> ?uri. <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri} ",
    "entity mapping": [
      {
        "label": "Seattle Great Wheel",
        "uri": "http://dbpedia.org/resource/Seattle_Great_Wheel"
      },
      {
        "label": "Geography Club",
        "uri": "http://dbpedia.org/resource/Geography_Club_(play)"
      }
    ],
    "id": "e753060cd8dc4ad3bafcc132529aa7a8",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/locationTown"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place"
      }
    ]
  },
  {
    "question": "What is the career of George Arceneaux, Jr. ?",
    "SerialNumber": "4696",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Arceneaux,_Jr.> <http://dbpedia.org/ontology/occupation> ?uri } ",
    "entity mapping": [
      {
        "label": "George Arceneaux, Jr.",
        "uri": "http://dbpedia.org/resource/George_Arceneaux,_Jr."
      }
    ],
    "id": "3bf7d79605ca4456a79601a892b1ce3a",
    "predicate mapping": [
      {
        "label": "career",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Name the prospect team of Mikhail Pashnin ?",
    "SerialNumber": "4697",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "Mikhail Pashnin",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin"
      }
    ],
    "id": "c762b3cd8bd848748e7d136d4b2588c3",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam"
      }
    ]
  },
  {
    "question": "Who are the maintainers of the bridges which cross the pandaruan river?",
    "SerialNumber": "4698",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/crosses> <http://dbpedia.org/resource/Pandaruan_River> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "pandaruan river",
        "uri": "http://dbpedia.org/resource/Pandaruan_River"
      }
    ],
    "id": "618bbb187ffc48cfa98b5a910a1e61fb",
    "predicate mapping": [
      {
        "label": "cross",
        "uri": "http://dbpedia.org/ontology/crosses"
      },
      {
        "label": "maintainer",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Who all held a position when Gough Whitlam was the prime minister?",
    "SerialNumber": "4699",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Gough_Whitlam> } ",
    "entity mapping": [
      {
        "label": "Gough Whitlam",
        "uri": "http://dbpedia.org/resource/Gough_Whitlam"
      }
    ],
    "id": "0c72f7f8c4d549bc9c7f59b72394a598",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "Which veterans served at CBS?",
    "SerialNumber": "4700",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/CBS>  . }",
    "entity mapping": [
      {
        "label": "CBS",
        "uri": "http://dbpedia.org/resource/CBS"
      }
    ],
    "id": "af5ba5ad9b42455eab9f628eba9d1e2c",
    "predicate mapping": [
      {
        "label": "at",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "How many other battles have the military person fought whose one of the battles is World War II ?",
    "SerialNumber": "4703",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_II> . ?x <http://dbpedia.org/property/battles> ?uri }",
    "entity mapping": [
      {
        "label": "World War II",
        "uri": "http://dbpedia.org/resource/World_War_II"
      }
    ],
    "id": "71acf91b02794986a8ac6915c483a46f",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Who is the  distributor of Rev (drink) ?",
    "SerialNumber": "4704",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/ontology/distributor> ?uri } ",
    "entity mapping": [
      {
        "label": "Rev (drink)",
        "uri": "http://dbpedia.org/resource/Rev_(drink)"
      }
    ],
    "id": "32d3e61eddc2407e87f186bc486cd36e",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor"
      }
    ]
  },
  {
    "question": "Who is the scientist whose doctoral student is Erich Bagge?",
    "SerialNumber": "4705",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Erich_Bagge>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Erich Bagge",
        "uri": "http://dbpedia.org/resource/Erich_Bagge"
      }
    ],
    "id": "86ef883773c04b44a83ea4b1ec8ee7c7",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many bands are signed up with labels which were founded in Japan?",
    "SerialNumber": "4706",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/Japan> . ?uri <http://dbpedia.org/property/label> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Japan",
        "uri": "http://dbpedia.org/resource/Japan"
      }
    ],
    "id": "2ca759d5f081472b8b48e96396caf9b4",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Name the nationalteam of Trn Vit Hng ?",
    "SerialNumber": "4707",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trần_Việt_Hương> <http://dbpedia.org/property/nationalteam> ?uri } ",
    "entity mapping": [
      {
        "label": "Trn Vit Hng",
        "uri": "http://dbpedia.org/resource/Trần_Việt_Hương"
      }
    ],
    "id": "4a351ee20c4a44c3b120ab07ca56f7a7",
    "predicate mapping": [
      {
        "label": "nationalteam",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "What is the allegiance of Albert Kwesi Ocran ?",
    "SerialNumber": "4708",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Albert_Kwesi_Ocran> <http://dbpedia.org/property/allegiance> ?uri } ",
    "entity mapping": [
      {
        "label": "Albert Kwesi Ocran",
        "uri": "http://dbpedia.org/resource/Albert_Kwesi_Ocran"
      }
    ],
    "id": "7b40ce95904c467d8f1c01dccd0ce70c",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      }
    ]
  },
  {
    "question": "What is the owning company of the bank whose parent is Sony Financial ?",
    "SerialNumber": "4709",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/Sony_Financial> . ?x <http://dbpedia.org/ontology/owningCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Sony Financial",
        "uri": "http://dbpedia.org/resource/Sony_Financial"
      }
    ],
    "id": "bdd487c7a42548298552ee353383a88e",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who appointed William L. Dayton ?",
    "SerialNumber": "4710",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_L._Dayton> <http://dbpedia.org/ontology/appointer> ?uri } ",
    "entity mapping": [
      {
        "label": "William L. Dayton",
        "uri": "http://dbpedia.org/resource/William_L._Dayton"
      }
    ],
    "id": "c0cf9476109b449782a8226a9ae2ae4f",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer"
      }
    ]
  },
  {
    "question": "What is the fictional character whose voice over is done by the animator of Dick Lundy ?",
    "SerialNumber": "4711",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/animator> <http://dbpedia.org/resource/Dick_Lundy_(animator)> . ?uri <http://dbpedia.org/ontology/voice> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Dick Lundy",
        "uri": "http://dbpedia.org/resource/Dick_Lundy_(animator)"
      }
    ],
    "id": "e59b93cd1e8d40d8be26c41a243212cc",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Name the Artist of Madagascar: Operation Penguin ?",
    "SerialNumber": "4712",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Madagascar:_Operation_Penguin> <http://dbpedia.org/property/artist> ?uri } ",
    "entity mapping": [
      {
        "label": "Operation Penguin",
        "uri": "http://dbpedia.org/resource/Madagascar:_Operation_Penguin"
      }
    ],
    "id": "a2ec42a127424074b5d7bc144285dcd6",
    "predicate mapping": [
      {
        "label": "Artist",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "Count the tenants of the stadiums owned by toronto.",
    "SerialNumber": "4713",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/tenants> ?uri  . }",
    "entity mapping": [
      {
        "label": "toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      }
    ],
    "id": "9dc0111186b24e9c86ae66f5bd0cefcb",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "list all the chairman of Vancouver Whitecaps FC?",
    "SerialNumber": "4715",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vancouver_Whitecaps_FC> <http://dbpedia.org/property/chairman> ?uri } ",
    "entity mapping": [
      {
        "label": "Vancouver Whitecaps FC",
        "uri": "http://dbpedia.org/resource/Vancouver_Whitecaps_FC"
      }
    ],
    "id": "047a2084681a4bc4b07d5e2e9995f2eb",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman"
      }
    ]
  },
  {
    "question": "Who is the label of The Producers (2005 film) ?",
    "SerialNumber": "4717",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Producers_(2005_film)> <http://dbpedia.org/property/label> ?uri } ",
    "entity mapping": [
      {
        "label": "The Producers (2005 film)",
        "uri": "http://dbpedia.org/resource/The_Producers_(2005_film)"
      }
    ],
    "id": "0d3ce4f95ac74189a54701a42dda617d",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "What is the movie whose producer is Michael Deeley and directed by  Ridley Scott?",
    "SerialNumber": "4718",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Ridley_Scott>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "uri": "http://dbpedia.org/resource/Michael_Deeley"
      },
      {
        "label": "Ridley Scott",
        "uri": "http://dbpedia.org/resource/Ridley_Scott"
      }
    ],
    "id": "8788b9a42eae46a7ae9f7ac2c79a8056",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "directed",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the state whose largest city is Denver?",
    "SerialNumber": "4719",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Denver>  . }",
    "entity mapping": [
      {
        "label": "Denver",
        "uri": "http://dbpedia.org/resource/Denver"
      }
    ],
    "id": "d6b6dd1b9b1f42b2a4339f0040398eca",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      }
    ]
  },
  {
    "question": "Give me some TV stations whose network\u0027s main language is American English?",
    "SerialNumber": "4720",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/American_English> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "entity mapping": [
      {
        "label": "American English",
        "uri": "http://dbpedia.org/resource/American_English"
      }
    ],
    "id": "5405afee486944e1976b7ba7911f045d",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "stations",
        "uri": "http://dbpedia.org/ontology/TelevisionStation"
      }
    ]
  },
  {
    "question": "Who is the licensee of EXXV-TV ?",
    "SerialNumber": "4723",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EXXV-TV> <http://dbpedia.org/property/licensee> ?uri } ",
    "entity mapping": [
      {
        "label": "EXXV-TV",
        "uri": "http://dbpedia.org/resource/EXXV-TV"
      }
    ],
    "id": "106ea7f1234e4ae29451ff12ce6e4684",
    "predicate mapping": [
      {
        "label": "licensee",
        "uri": "http://dbpedia.org/property/licensee"
      }
    ]
  },
  {
    "question": "Through which states do the rivers flow which join in the republican river from the left?",
    "SerialNumber": "4724",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Republican_River> <http://dbpedia.org/ontology/leftTributary> ?x . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
    "entity mapping": [
      {
        "label": "republican river",
        "uri": "http://dbpedia.org/resource/Republican_River"
      }
    ],
    "id": "c1514e50dd2f4538833f08a6bc8103c2",
    "predicate mapping": [
      {
        "label": "left",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      }
    ]
  },
  {
    "question": "In which language is All I need is Your Sweet lovin written ?",
    "SerialNumber": "4725",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin\u0027> <http://dbpedia.org/property/language> ?uri } ",
    "entity mapping": [
      {
        "label": "All I need is Your Sweet lovin ",
        "uri": "http://dbpedia.org/resource/All_I_Need_Is_Your_Sweet_Lovin\u0027"
      }
    ],
    "id": "61cf658e0164453f858aee18ab264e25",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      }
    ]
  },
  {
    "question": "Who founded a company which served Mid Wales ?",
    "SerialNumber": "4727",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Mid_Wales> . ?x <http://dbpedia.org/ontology/foundedBy> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mid Wales",
        "uri": "http://dbpedia.org/resource/Mid_Wales"
      }
    ],
    "id": "27b3911bc8e245c79e65ab3d86f02480",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      }
    ]
  },
  {
    "question": "How many television shows have  Fox Broadcasting Company as their channel?",
    "SerialNumber": "4728",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Fox Broadcasting Company",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      }
    ],
    "id": "b55cd5825f3f4a4a9dda3693609c3e4b",
    "predicate mapping": [
      {
        "label": "channel",
        "uri": "http://dbpedia.org/property/channel"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the junctions which lie on U.S. Route 59 in Texas and U.S. Route 59 ?",
    "SerialNumber": "4733",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/U.S._Route_59_in_Texas> <http://dbpedia.org/property/junction> ?uri. <http://dbpedia.org/resource/U.S._Route_59> <http://dbpedia.org/property/junction> ?uri . }",
    "entity mapping": [
      {
        "label": "U.S. Route 59 in Texas",
        "uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas"
      },
      {
        "label": "U.S. Route 59 in Texas",
        "uri": "http://dbpedia.org/resource/U.S._Route_59"
      }
    ],
    "id": "87d393b402be4c22859bc21ab59a82c4",
    "predicate mapping": [
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction"
      },
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction"
      }
    ]
  },
  {
    "question": "Who are some basketball players who played for Phoenix Suns?",
    "SerialNumber": "4735",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Phoenix_Suns>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "Phoenix Suns",
        "uri": "http://dbpedia.org/resource/Phoenix_Suns"
      }
    ],
    "id": "6e9633d042bc4dc3abcab2f2841c1746",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "Who is the child of John Tyler, Sr.?",
    "SerialNumber": "4737",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Tyler,_Sr.> <http://dbpedia.org/ontology/child> ?uri } ",
    "entity mapping": [
      {
        "label": "John Tyler, Sr.",
        "uri": "http://dbpedia.org/resource/John_Tyler,_Sr."
      }
    ],
    "id": "922da121de7d4c2b94f5704844a63b18",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child"
      }
    ]
  },
  {
    "question": "What is the country with native language as Languages of Ethiopia?",
    "SerialNumber": "4738",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Languages_of_Ethiopia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Languages of Ethiopia",
        "uri": "http://dbpedia.org/resource/Languages_of_Ethiopia"
      }
    ],
    "id": "408ee042ce504f0d9e43f239bf62a596",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "The successor of Ulrich II, Count of East Frisia was born in what place?",
    "SerialNumber": "4739",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ulrich II, Count of East Frisia",
        "uri": "http://dbpedia.org/resource/Ulrich_II,_Count_of_East_Frisia"
      }
    ],
    "id": "bc828e38946849059989fb94ae3eb760",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "What company is the distributor of Bombay Sapphire?",
    "SerialNumber": "4740",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri } ",
    "entity mapping": [
      {
        "label": "Bombay Sapphire",
        "uri": "http://dbpedia.org/resource/Bombay_Sapphire"
      }
    ],
    "id": "0dd98abb1d704acbaaaf373111ec2b6f",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      }
    ]
  },
  {
    "question": "Name the part of Liverpool city region >",
    "SerialNumber": "4742",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Liverpool_City_Region> <http://dbpedia.org/ontology/part> ?uri } ",
    "entity mapping": [
      {
        "label": "Liverpool city region",
        "uri": "http://dbpedia.org/resource/Liverpool_City_Region"
      }
    ],
    "id": "3fabc75aa05d4a37873532407e1f9e53",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      }
    ]
  },
  {
    "question": "Which artists trained in San Francisco Art Institute?",
    "SerialNumber": "4743",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/San_Francisco_Art_Institute>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "San Francisco Art Institute",
        "uri": "http://dbpedia.org/resource/San_Francisco_Art_Institute"
      }
    ],
    "id": "068232e91e1c418898c1cecab28531cd",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "What is the launch site of the Juno I which was also the ground of 2016 Fort Lauderdale Strikers season ?",
    "SerialNumber": "4745",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juno_I> <http://dbpedia.org/ontology/launchSite> ?uri. <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri} ",
    "entity mapping": [
      {
        "label": "Juno I",
        "uri": "http://dbpedia.org/resource/Juno_I"
      },
      {
        "label": "2016 Fort Lauderdale Strikers season",
        "uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season"
      }
    ],
    "id": "092ac4c6d6c64b58b8891809b7dd67ff",
    "predicate mapping": [
      {
        "label": "launch site",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "ground",
        "uri": "http://dbpedia.org/ontology/ground"
      }
    ]
  },
  {
    "question": "What is the place of birth of the Michael Marder which is also the  place of death of the Tigran Petrosian",
    "SerialNumber": "4746",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Marder> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Tigran_Petrosian> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Michael Marder",
        "uri": "http://dbpedia.org/resource/Michael_Marder"
      },
      {
        "label": "Tigran Petrosian",
        "uri": "http://dbpedia.org/resource/Tigran_Petrosian"
      }
    ],
    "id": "0753a6cc55e24b9f8ae248cb0229faf0",
    "predicate mapping": [
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "What are the mascots of the teams participating in the Turkish Handball Super League?",
    "SerialNumber": "4748",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Turkish_Handball_Super_League> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Turkish Handball Super League",
        "uri": "http://dbpedia.org/resource/Turkish_Handball_Super_League"
      }
    ],
    "id": "9cb5f2b9db5b436c86a97a46a5c66290",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Give me a count of schools in Reading, Berkshire?",
    "SerialNumber": "4749",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Reading, Berkshire",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire"
      }
    ],
    "id": "5521a80bdcd04617a45aadea2164ffee",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "What team did Dan Daoust and Don Ashby play for?",
    "SerialNumber": "4750",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Daoust> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Don_Ashby> <http://dbpedia.org/property/playedFor> ?uri . }",
    "entity mapping": [
      {
        "label": "Dan Daoust",
        "uri": "http://dbpedia.org/resource/Dan_Daoust"
      },
      {
        "label": "Don Ashby",
        "uri": "http://dbpedia.org/resource/Don_Ashby"
      }
    ],
    "id": "1b3644240f434186be027e3dc2df4afe",
    "predicate mapping": [
      {
        "label": "team for",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "Was the USS Tillamook built in Seattle?",
    "SerialNumber": "4751",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/USS_Tillamook_(AT-16)> <http://dbpedia.org/property/shipBuilder> <http://dbpedia.org/resource/Seattle> }",
    "entity mapping": [
      {
        "label": "USS Tillamook",
        "uri": "http://dbpedia.org/resource/USS_Tillamook_(AT-16)"
      },
      {
        "label": "Seattle",
        "uri": "http://dbpedia.org/resource/Seattle"
      }
    ],
    "id": "cb46de89eece40c6a511ae4bb909b07f",
    "predicate mapping": [
      {
        "label": "built",
        "uri": "http://dbpedia.org/property/shipBuilder"
      }
    ]
  },
  {
    "question": "Which automobile platform provider of Chiva bus is also the parent company of the Ford Falcon Cobra ?",
    "SerialNumber": "4753",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> ?uri. <http://dbpedia.org/resource/Ford_Falcon_Cobra> <http://dbpedia.org/ontology/parentCompany> ?uri} ",
    "entity mapping": [
      {
        "label": "Chiva bus",
        "uri": "http://dbpedia.org/resource/Chiva_bus"
      },
      {
        "label": "Ford Falcon Cobra",
        "uri": "http://dbpedia.org/resource/Ford_Falcon_Cobra"
      }
    ],
    "id": "b3189598edba497696316dbed48fd2fb",
    "predicate mapping": [
      {
        "label": "automobile platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      },
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      }
    ]
  },
  {
    "question": "List all the children of Barbara Bush?",
    "SerialNumber": "4755",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Barbara_Bush> <http://dbpedia.org/property/children> ?uri } ",
    "entity mapping": [
      {
        "label": "Barbara Bush",
        "uri": "http://dbpedia.org/resource/Barbara_Bush"
      }
    ],
    "id": "7c78f74e4f404592838f82e9d563e6e0",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      }
    ]
  },
  {
    "question": "who is the husband of Rosie Huntington Whiteley?",
    "SerialNumber": "4756",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rosie_Huntington-Whiteley> <http://dbpedia.org/ontology/partner> ?uri } ",
    "entity mapping": [
      {
        "label": "Rosie Huntington",
        "uri": "http://dbpedia.org/resource/Rosie_Huntington-Whiteley"
      }
    ],
    "id": "6239f50c40b045fb92f0ad0b63792e7b",
    "predicate mapping": [
      {
        "label": "husband",
        "uri": "http://dbpedia.org/ontology/partner"
      }
    ]
  },
  {
    "question": "What is the official name of Arkansas wine ?",
    "SerialNumber": "4759",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arkansas_wine> <http://dbpedia.org/property/officialName> ?uri } ",
    "entity mapping": [
      {
        "label": "Arkansas wine",
        "uri": "http://dbpedia.org/resource/Arkansas_wine"
      }
    ],
    "id": "0fca46ab984148228bc912ac09c14cea",
    "predicate mapping": [
      {
        "label": "official name",
        "uri": "http://dbpedia.org/property/officialName"
      }
    ]
  },
  {
    "question": "What are the houses of legislature in the political leader\u0027s seat of Medininagar?",
    "SerialNumber": "4760",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Medininagar> <http://dbpedia.org/property/leaderTitle> ?x . ?x <http://dbpedia.org/property/houses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Legislature>}",
    "entity mapping": [
      {
        "label": "Medininagar",
        "uri": "http://dbpedia.org/resource/Medininagar"
      }
    ],
    "id": "fb6380523dad469aa76de43877543065",
    "predicate mapping": [
      {
        "label": "leader\u0027s",
        "uri": "http://dbpedia.org/property/leaderTitle"
      },
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/houses"
      },
      {
        "label": "legislature",
        "uri": "http://dbpedia.org/ontology/Legislature"
      }
    ]
  },
  {
    "question": "What is the alma mater of Julian Leow Beng Kim?",
    "SerialNumber": "4761",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julian_Leow_Beng_Kim> <http://dbpedia.org/property/almaMater> ?uri } ",
    "entity mapping": [
      {
        "label": "Julian Leow Beng Kim",
        "uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim"
      }
    ],
    "id": "da407b1a436f4844abc78ef45daebf4f",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "What discipline was The Chess Monthly about ?",
    "SerialNumber": "4762",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri } ",
    "entity mapping": [
      {
        "label": "The Chess Monthly",
        "uri": "http://dbpedia.org/resource/The_Chess_Monthly"
      }
    ],
    "id": "8745414c54fd44fc805e024437bff491",
    "predicate mapping": [
      {
        "label": "discipline",
        "uri": "http://dbpedia.org/property/discipline"
      }
    ]
  },
  {
    "question": "Which prospect team of Robin Kovacs is the draft team of Bob MacMillan ?",
    "SerialNumber": "4764",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bob_MacMillan> <http://dbpedia.org/property/draftTeam> ?uri. <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/property/prospectTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "Bob MacMillan",
        "uri": "http://dbpedia.org/resource/Bob_MacMillan"
      },
      {
        "label": "Robin Kovacs",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs"
      }
    ],
    "id": "527f030fe08c4739ae2be978d022c372",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam"
      }
    ]
  },
  {
    "question": "How many universities are in the National Collegiate Athletic Association?",
    "SerialNumber": "4765",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association>  . }",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association"
      }
    ],
    "id": "eb14b1c3eb7d49fbb617c70a2c17156e",
    "predicate mapping": [
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/ontology/athletics"
      }
    ]
  },
  {
    "question": "List the total number of board members who share board with Creative commons ?",
    "SerialNumber": "4768",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/board> <http://dbpedia.org/resource/Creative_Commons> . ?x <http://dbpedia.org/ontology/board> ?uri }",
    "entity mapping": [
      {
        "label": "Creative commons",
        "uri": "http://dbpedia.org/resource/Creative_Commons"
      }
    ],
    "id": "7ef60c109b4f45cb98d7a7b6edb63e86",
    "predicate mapping": [
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "Is Fluidinfo written in PostgreSQL language?",
    "SerialNumber": "4769",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fluidinfo> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/PostgreSQL> }",
    "entity mapping": [
      {
        "label": "Fluidinfo",
        "uri": "http://dbpedia.org/resource/Fluidinfo"
      },
      {
        "label": "PostgreSQL",
        "uri": "http://dbpedia.org/resource/PostgreSQL"
      }
    ],
    "id": "3426ff612be940c48ddbf955846bbbfc",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      }
    ]
  },
  {
    "question": "What are the software which uses  platforms as ARM architecture?",
    "SerialNumber": "4777",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/ARM_architecture>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "ARM architecture",
        "uri": "http://dbpedia.org/resource/ARM_architecture"
      }
    ],
    "id": "1c9fa236fda340f4858626790e9ed794",
    "predicate mapping": [
      {
        "label": "platforms",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Which developer of  the Spider-Man: Edge of Time is the  successor of PlayStation 2 ?",
    "SerialNumber": "4779",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Spider-Man:_Edge_of_Time> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/PlayStation_2> <http://dbpedia.org/ontology/successor> ?uri} ",
    "entity mapping": [
      {
        "label": "Spider-Man: Edge of Time",
        "uri": "http://dbpedia.org/resource/Spider-Man:_Edge_of_Time"
      },
      {
        "label": "PlayStation 2",
        "uri": "http://dbpedia.org/resource/PlayStation_2"
      }
    ],
    "id": "db40ca055fe5457da9fb1e618ce07c22",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      }
    ]
  },
  {
    "question": "Is Henry Knox a commander of Continental Artillery Regiment?",
    "SerialNumber": "4781",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Continental_Artillery_Regiment> <http://dbpedia.org/ontology/notableCommander> <http://dbpedia.org/resource/Henry_Knox> }",
    "entity mapping": [
      {
        "label": "Continental Artillery Regiment",
        "uri": "http://dbpedia.org/resource/Continental_Artillery_Regiment"
      },
      {
        "label": "Henry Knox",
        "uri": "http://dbpedia.org/resource/Henry_Knox"
      }
    ],
    "id": "055b04c076074890acb3ea2db8886990",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/notableCommander"
      }
    ]
  },
  {
    "question": "What are the video games composed by Hirokazu Tanaka?",
    "SerialNumber": "4784",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Hirokazu Tanaka",
        "uri": "http://dbpedia.org/resource/Hirokazu_Tanaka"
      }
    ],
    "id": "1b05eee4a4914768b1277460023765c7",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Brian Moriarty designed video games written by whom?",
    "SerialNumber": "4785",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designer> <http://dbpedia.org/resource/Brian_Moriarty> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Brian Moriarty",
        "uri": "http://dbpedia.org/resource/Brian_Moriarty"
      }
    ],
    "id": "85bb180bf8e34202b4aa22716ce5071a",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Which workplace of the Michael M. Sears is also the  governing body of the Burro Flats Painted Cave?",
    "SerialNumber": "4786",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri} ",
    "entity mapping": [
      {
        "label": "Michael M. Sears",
        "uri": "http://dbpedia.org/resource/Michael_M._Sears"
      },
      {
        "label": "Burro Flats Painted Cave",
        "uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave"
      }
    ],
    "id": "8bd39f68e84f4329a53977496d9dcc69",
    "predicate mapping": [
      {
        "label": "workplace",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/ontology/governingBody"
      }
    ]
  },
  {
    "question": "Who is the executive producer of Into the Dalek ?",
    "SerialNumber": "4789",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Into_the_Dalek> <http://dbpedia.org/property/executiveProducer> ?uri } ",
    "entity mapping": [
      {
        "label": "Into the Dalek",
        "uri": "http://dbpedia.org/resource/Into_the_Dalek"
      }
    ],
    "id": "d7d45064bde94687972a63ec05a2d4a6",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer"
      }
    ]
  },
  {
    "question": "Was Citizen Kane cinematographed by Gregg Toland?",
    "SerialNumber": "4790",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Citizen_Kane> <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Gregg_Toland> }",
    "entity mapping": [
      {
        "label": "Citizen Kane",
        "uri": "http://dbpedia.org/resource/Citizen_Kane"
      },
      {
        "label": "Gregg Toland",
        "uri": "http://dbpedia.org/resource/Gregg_Toland"
      }
    ],
    "id": "fd11cddf34d54d3c87f3d536773a9c09",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/property/cinematography"
      }
    ]
  },
  {
    "question": "What is the prize awarded to Bruce Beutler ?",
    "SerialNumber": "4791",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bruce_Beutler> <http://dbpedia.org/ontology/award> ?uri } ",
    "entity mapping": [
      {
        "label": "Bruce Beutler",
        "uri": "http://dbpedia.org/resource/Bruce_Beutler"
      }
    ],
    "id": "7d0fb5e551594d689aef4adfbadcb48a",
    "predicate mapping": [
      {
        "label": "prize awarded",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Which writer of Alan Freeman Days is also the writer of Come On over ?",
    "SerialNumber": "4794",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alan_Freeman_Days> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/Come_On_Over_(Bee_Gees_song)> <http://dbpedia.org/property/writer> ?uri} ",
    "entity mapping": [
      {
        "label": "Alan Freeman Days",
        "uri": "http://dbpedia.org/resource/Alan_Freeman_Days"
      },
      {
        "label": "Come On over",
        "uri": "http://dbpedia.org/resource/Come_On_Over_(Bee_Gees_song)"
      }
    ],
    "id": "edd76a1bcc4943bd98a488f2a226464f",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "What is the religion of character of Janice Soprano from The Soprano television show?",
    "SerialNumber": "4795",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Janice_Soprano> <http://dbpedia.org/ontology/religion> ?uri } ",
    "entity mapping": [
      {
        "label": "Janice Soprano",
        "uri": "http://dbpedia.org/resource/Janice_Soprano"
      }
    ],
    "id": "70c322e322db4335be2a68becb37f2fc",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Name some comic characters created by Bruce Timm?",
    "SerialNumber": "4798",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Bruce_Timm>  . }",
    "entity mapping": [
      {
        "label": "Bruce Timm",
        "uri": "http://dbpedia.org/resource/Bruce_Timm"
      }
    ],
    "id": "9af1387628eb41aaaa7bfc96527b7dea",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator"
      }
    ]
  },
  {
    "question": "Does AMC Gremlin have the Volkswagen engine?",
    "SerialNumber": "4799",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/AMC_Gremlin> <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/Volkswagen> }",
    "entity mapping": [
      {
        "label": "AMC Gremlin",
        "uri": "http://dbpedia.org/resource/AMC_Gremlin"
      },
      {
        "label": "Volkswagen",
        "uri": "http://dbpedia.org/resource/Volkswagen"
      }
    ],
    "id": "00a4428f08104601b9070ce9d2809034",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine"
      }
    ]
  },
  {
    "question": "Which appliance has cpu from Freescale Semiconductor and Marvell Technology Group?",
    "SerialNumber": "4800",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Freescale_Semiconductor> . ?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Marvell_Technology_Group> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "Freescale Semiconductor",
        "uri": "http://dbpedia.org/resource/Freescale_Semiconductor"
      },
      {
        "label": "Marvell Technology Group",
        "uri": "http://dbpedia.org/resource/Marvell_Technology_Group"
      }
    ],
    "id": "736ca71b65cb49909c3190a1deaa4d69",
    "predicate mapping": [
      {
        "label": "cpu",
        "uri": "http://dbpedia.org/ontology/cpu"
      },
      {
        "label": "cpu",
        "uri": "http://dbpedia.org/ontology/cpu"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Who all have appointed governess born in Magnolia Plantation gardens?",
    "SerialNumber": "4801",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Magnolia_Plantation_and_Gardens_(Charleston,_South_Carolina)> . ?x <http://dbpedia.org/property/appointer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Magnolia Plantation gardens",
        "uri": "http://dbpedia.org/resource/Magnolia_Plantation_and_Gardens_(Charleston,_South_Carolina)"
      }
    ],
    "id": "f579975baffd4d30bae921db2f6a22a3",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "Is Judy Garland a character of End of the Rainbow?",
    "SerialNumber": "4803",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/End_of_the_Rainbow> <http://dbpedia.org/property/characters> <http://dbpedia.org/resource/Judy_Garland> }",
    "entity mapping": [
      {
        "label": "End of the Rainbow",
        "uri": "http://dbpedia.org/resource/End_of_the_Rainbow"
      },
      {
        "label": "Judy Garland",
        "uri": "http://dbpedia.org/resource/Judy_Garland"
      }
    ],
    "id": "6e87da5cf6f7420ea41d70b56af0a73a",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/property/characters"
      }
    ]
  },
  {
    "question": "Which constructor\u0027s team won the 1967 Mexican Grand Prix ?",
    "SerialNumber": "4805",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri } ",
    "entity mapping": [
      {
        "label": "1967 Mexican Grand Prix",
        "uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix"
      }
    ],
    "id": "a705fea63f8f4de8ba925717adbd4594",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/firstTeam"
      }
    ]
  },
  {
    "question": "What is the state of origin of the president whose alma mater is Hellenic Naval Academy ?",
    "SerialNumber": "4808",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Hellenic_Naval_Academy> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Hellenic Naval Academy",
        "uri": "http://dbpedia.org/resource/Hellenic_Naval_Academy"
      }
    ],
    "id": "4e3ab34be94d4669b8e12316056ff405",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "Among which basket ball team having arena as The Palace of Auburn hills has president as Stan Van Gundy ?",
    "SerialNumber": "4811",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/The_Palace_of_Auburn_Hills> . ?uri <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Stan_Van_Gundy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "entity mapping": [
      {
        "label": "The Palace of Auburn hills",
        "uri": "http://dbpedia.org/resource/The_Palace_of_Auburn_Hills"
      },
      {
        "label": "Stan Van Gundy",
        "uri": "http://dbpedia.org/resource/Stan_Van_Gundy"
      }
    ],
    "id": "cd9216dbcecb43639fc1acb8f8f6e299",
    "predicate mapping": [
      {
        "label": "arena",
        "uri": "http://dbpedia.org/property/arena"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "basket team ball",
        "uri": "http://dbpedia.org/ontology/BasketballTeam"
      }
    ]
  },
  {
    "question": "What awards were given to the screenplayer of The Motorcycle Diaries?",
    "SerialNumber": "4817",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Motorcycle_Diaries_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Motorcycle Diaries",
        "uri": "http://dbpedia.org/resource/The_Motorcycle_Diaries_(film)"
      }
    ],
    "id": "a939d5ed61ef4060a81ee31509198135",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Where was Juno I launched from ?",
    "SerialNumber": "4820",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Juno_I> <http://dbpedia.org/ontology/launchSite> ?uri } ",
    "entity mapping": [
      {
        "label": "Juno I",
        "uri": "http://dbpedia.org/resource/Juno_I"
      }
    ],
    "id": "98d2968030a145948b4b54314cb8aa7c",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite"
      }
    ]
  },
  {
    "question": "How many TV shows have executive producer as Steven Moffat ?",
    "SerialNumber": "4822",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Steven Moffat",
        "uri": "http://dbpedia.org/resource/Steven_Moffat"
      }
    ],
    "id": "888a270512ce4866be137aa13b94cb0a",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "BBC Two is the sister channel of networks having which shows?",
    "SerialNumber": "4823",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_Two> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC Two",
        "uri": "http://dbpedia.org/resource/BBC_Two"
      }
    ],
    "id": "37dd8f24e04d4c9693e47be13aca643a",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterNames"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What were the awards won by the founder of Walt Disney Records ?",
    "SerialNumber": "4825",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Walt_Disney_Records> <http://dbpedia.org/ontology/foundedBy> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Walt Disney Records",
        "uri": "http://dbpedia.org/resource/Walt_Disney_Records"
      }
    ],
    "id": "3ec897b53af44595bc48dcd851a91c4f",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Which river goes through cohoes, NY",
    "SerialNumber": "4826",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cohoes,_New_York> <http://dbpedia.org/ontology/river> ?uri } ",
    "entity mapping": [
      {
        "label": "cohoes, NY",
        "uri": "http://dbpedia.org/resource/Cohoes,_New_York"
      }
    ],
    "id": "7306c480b5f0480e85dea19fd979e9c2",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "Is the Columbia University chaired by William Campbell?",
    "SerialNumber": "4827",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Columbia_University> <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/William_Campbell_(business_executive)> }",
    "entity mapping": [
      {
        "label": "Columbia University",
        "uri": "http://dbpedia.org/resource/Columbia_University"
      },
      {
        "label": "William Campbell",
        "uri": "http://dbpedia.org/resource/William_Campbell_(business_executive)"
      }
    ],
    "id": "f6bfc01b9f434dde973e7e2d6f7df70e",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/ontology/chairman"
      }
    ]
  },
  {
    "question": "In what wars was Steve Buyer involved?",
    "SerialNumber": "4832",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Buyer> <http://dbpedia.org/ontology/battle> ?uri } ",
    "entity mapping": [
      {
        "label": "Steve Buyer",
        "uri": "http://dbpedia.org/resource/Steve_Buyer"
      }
    ],
    "id": "e2cc5e87ec094843ad79d8b454a8eab6",
    "predicate mapping": [
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "Was Michael Schumacher the Pole driver of 1994 Spanish Grand Prix?",
    "SerialNumber": "4834",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> <http://dbpedia.org/resource/Michael_Schumacher> }",
    "entity mapping": [
      {
        "label": "1994 Spanish Grand Prix",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix"
      },
      {
        "label": "Michael Schumacher",
        "uri": "http://dbpedia.org/resource/Michael_Schumacher"
      }
    ],
    "id": "14efdca3006e4eb28b0abc03a9ab8fb8",
    "predicate mapping": [
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver"
      }
    ]
  },
  {
    "question": "What is the style of architecture of Shaheed Minar, Kolkata ?",
    "SerialNumber": "4835",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaheed_Minar,_Kolkata> <http://dbpedia.org/ontology/architecturalStyle> ?uri } ",
    "entity mapping": [
      {
        "label": "Shaheed Minar, Kolkata",
        "uri": "http://dbpedia.org/resource/Shaheed_Minar,_Kolkata"
      }
    ],
    "id": "a17ff3e0133f4d449e03ef1930da70d9",
    "predicate mapping": [
      {
        "label": "style of architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      }
    ]
  },
  {
    "question": "Count the number of characters in Batman Live?",
    "SerialNumber": "4837",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Batman_Live> <http://dbpedia.org/property/characters> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "entity mapping": [
      {
        "label": "Batman Live",
        "uri": "http://dbpedia.org/resource/Batman_Live"
      }
    ],
    "id": "f705b781b41d468f94a33678d84952e3",
    "predicate mapping": [
      {
        "label": "characters",
        "uri": "http://dbpedia.org/property/characters"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter"
      }
    ]
  },
  {
    "question": "Which company\u0027s division is Audi India? Correct Question",
    "SerialNumber": "4839",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Audi_India> } ",
    "entity mapping": [
      {
        "label": "Audi India",
        "uri": "http://dbpedia.org/resource/Audi_India"
      }
    ],
    "id": "1e9caa7262cd4fd1a51cf31d4ba704e9",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/divisions"
      }
    ]
  },
  {
    "question": "South Side elevated railroad and twin cities 400 are operated by which city?",
    "SerialNumber": "4841",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Side_Elevated_Railroad> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri . }",
    "entity mapping": [
      {
        "label": "South Side elevated railroad",
        "uri": "http://dbpedia.org/resource/South_Side_Elevated_Railroad"
      },
      {
        "label": "twin cities 400",
        "uri": "http://dbpedia.org/resource/Twin_Cities_400"
      }
    ],
    "id": "a045ba882fa04930b139d902ee4b03e2",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      }
    ]
  },
  {
    "question": "Is Michelle D. Johnson the superintendent of United States Air Force Academy?",
    "SerialNumber": "4842",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Air_Force_Academy> <http://dbpedia.org/property/superintendent> <http://dbpedia.org/resource/Michelle_D._Johnson> }",
    "entity mapping": [
      {
        "label": "United States Air Force Academy",
        "uri": "http://dbpedia.org/resource/United_States_Air_Force_Academy"
      },
      {
        "label": "Michelle D. Johnson",
        "uri": "http://dbpedia.org/resource/Michelle_D._Johnson"
      }
    ],
    "id": "4b6f22e87e69458297229de03060b7c2",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/property/superintendent"
      }
    ]
  },
  {
    "question": "Which famous political figure appointed william cushing, and also founded Pittsburgh>",
    "SerialNumber": "4843",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pittsburgh> <http://dbpedia.org/ontology/founder> ?uri. <http://dbpedia.org/resource/William_Cushing> <http://dbpedia.org/ontology/appointer> ?uri} ",
    "entity mapping": [
      {
        "label": "Pittsburgh",
        "uri": "http://dbpedia.org/resource/Pittsburgh"
      },
      {
        "label": "william cushing",
        "uri": "http://dbpedia.org/resource/William_Cushing"
      }
    ],
    "id": "700c843d2d27481ab61b3a05fdad96e8",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/appointer"
      }
    ]
  },
  {
    "question": "Which basketball players have played in the league of National Basketball Association?",
    "SerialNumber": "4846",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "National Basketball Association",
        "uri": "http://dbpedia.org/resource/National_Basketball_Association"
      }
    ],
    "id": "70bbdbe70a4046eeb6d90a238c8fd233",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "What is the award won of the scientists known for Cubic Hermite spline?",
    "SerialNumber": "4847",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Cubic_Hermite_spline> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Cubic Hermite spline",
        "uri": "http://dbpedia.org/resource/Cubic_Hermite_spline"
      }
    ],
    "id": "2342c11d42084f99991a36ea402e5298",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "award won",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many companies were founded in places where Dallas is the governing body ?",
    "SerialNumber": "4848",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Dallas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Dallas",
        "uri": "http://dbpedia.org/resource/Dallas"
      }
    ],
    "id": "61613d09dbbe40fc987b96072987dea0",
    "predicate mapping": [
      {
        "label": "governing body",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the bloomington viaduct built to cross?",
    "SerialNumber": "4849",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bloomington_Viaduct> <http://dbpedia.org/property/crosses> ?uri } ",
    "entity mapping": [
      {
        "label": "bloomington viaduct",
        "uri": "http://dbpedia.org/resource/Bloomington_Viaduct"
      }
    ],
    "id": "b2a4d8fce56a4890a9e803ec33770b7c",
    "predicate mapping": [
      {
        "label": "cross",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "What awards were presented to the person who produced Paradise place?",
    "SerialNumber": "4850",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Paradise_Place> <http://dbpedia.org/property/producer> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Paradise place",
        "uri": "http://dbpedia.org/resource/Paradise_Place"
      }
    ],
    "id": "f1a4a596441946deabb79234cff39587",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Copley Medal has been awarded to which scientists?",
    "SerialNumber": "4851",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Copley_Medal>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Copley Medal",
        "uri": "http://dbpedia.org/resource/Copley_Medal"
      }
    ],
    "id": "2a59af2efcc74bec9b6f9b1d25486ae5",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "To which city does Northeast Library belong?",
    "SerialNumber": "4860",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northeast_Library> <http://dbpedia.org/ontology/city> ?uri } ",
    "entity mapping": [
      {
        "label": "Northeast Library",
        "uri": "http://dbpedia.org/resource/Northeast_Library"
      }
    ],
    "id": "69ff2b75810646209568b0df3e994b16",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city"
      }
    ]
  },
  {
    "question": "What beverages originate in Leuven?",
    "SerialNumber": "4861",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Leuven>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "entity mapping": [
      {
        "label": "Leuven",
        "uri": "http://dbpedia.org/resource/Leuven"
      }
    ],
    "id": "1cad7eba242f4238ab0cece8e171f786",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "beverage",
        "uri": "http://dbpedia.org/ontology/Beverage"
      }
    ]
  },
  {
    "question": "Which comic characters were created by Paul Dini?",
    "SerialNumber": "4865",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCharacter>}",
    "entity mapping": [
      {
        "label": "Paul Dini",
        "uri": "http://dbpedia.org/resource/Paul_Dini"
      }
    ],
    "id": "1ebfba20e07d4dceb706cb7d0e02f7d5",
    "predicate mapping": [
      {
        "label": "created by",
        "uri": "http://dbpedia.org/property/creators"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/ComicsCharacter"
      }
    ]
  },
  {
    "question": "What are the cities around the sea which flows into the Atlantic?",
    "SerialNumber": "4866",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/inflow> <http://dbpedia.org/resource/Atlantic_Ocean> . ?x <http://dbpedia.org/property/cities> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Atlantic",
        "uri": "http://dbpedia.org/resource/Atlantic_Ocean"
      }
    ],
    "id": "2da4f5fb821747d58ff0f453f01748e0",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/inflow"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Which football managers managed Middlesbrough F.C.?",
    "SerialNumber": "4868",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/Middlesbrough_F.C.> } ",
    "entity mapping": [
      {
        "label": "Middlesbrough F.C",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C."
      }
    ],
    "id": "9028456938924abe93b5277af2137115",
    "predicate mapping": [
      {
        "label": "managers",
        "uri": "http://dbpedia.org/ontology/managerClub"
      }
    ]
  },
  {
    "question": "What developed EMMS?",
    "SerialNumber": "4870",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/EMMS> <http://dbpedia.org/ontology/developer> ?uri } ",
    "entity mapping": [
      {
        "label": "EMMS",
        "uri": "http://dbpedia.org/resource/EMMS"
      }
    ],
    "id": "8cc928e4d47048b1861ea9bb7b35471e",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Which city is the route start of the Moscow-Kazan high-speed railway and birth place of the Ilya Savelev ?",
    "SerialNumber": "4871",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri. <http://dbpedia.org/resource/Ilya_Savelev> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Moscow-Kazan high-speed railway",
        "uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway"
      },
      {
        "label": "Ilya Savelev",
        "uri": "http://dbpedia.org/resource/Ilya_Savelev"
      }
    ],
    "id": "191f35e7fb4246f78353e02e6302361a",
    "predicate mapping": [
      {
        "label": "route start",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Which hockey team is head coached by Bill Peters?",
    "SerialNumber": "4876",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Bill_Peters_(ice_hockey)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
    "entity mapping": [
      {
        "label": "Bill Peters",
        "uri": "http://dbpedia.org/resource/Bill_Peters_(ice_hockey)"
      }
    ],
    "id": "3f12f94aa6634573be6b156f1c4db655",
    "predicate mapping": [
      {
        "label": "head coach",
        "uri": "http://dbpedia.org/property/headCoach"
      },
      {
        "label": "hockey team",
        "uri": "http://dbpedia.org/ontology/HockeyTeam"
      }
    ]
  },
  {
    "question": "What is the genre of Battle Chess?",
    "SerialNumber": "4878",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri } ",
    "entity mapping": [
      {
        "label": "Battle Chess",
        "uri": "http://dbpedia.org/resource/Battle_Chess"
      }
    ],
    "id": "bed9c24aa6cd405ab16165885735645b",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "How many bands are signed up with Kobalt Label Services?",
    "SerialNumber": "4881",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Kobalt_Label_Services>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Kobalt Label Services",
        "uri": "http://dbpedia.org/resource/Kobalt_Label_Services"
      }
    ],
    "id": "944f7d6fd1da4f1592e9d9056d5986b7",
    "predicate mapping": [
      {
        "label": "Label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "where are the sister stations of CFRB broadcasted?",
    "SerialNumber": "4882",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/CFRB> . ?x <http://dbpedia.org/ontology/broadcastArea> ?uri  . }",
    "entity mapping": [
      {
        "label": "CFRB",
        "uri": "http://dbpedia.org/resource/CFRB"
      }
    ],
    "id": "1da410830ef64a70bdaf8bedfba7a0ad",
    "predicate mapping": [
      {
        "label": "sister stations",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      }
    ]
  },
  {
    "question": "List the television shows one of whose distributor\u0027s divisions is Warner Bros. Animation.",
    "SerialNumber": "4883",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/divisions> <http://dbpedia.org/resource/Warner_Bros._Animation> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Warner Bros. Animation",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Animation"
      }
    ],
    "id": "c23cebef882b4a39806aaf8d5adac8ad",
    "predicate mapping": [
      {
        "label": "divisions",
        "uri": "http://dbpedia.org/property/divisions"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Namt the fields of Paul Demiville ?",
    "SerialNumber": "4884",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demiéville> <http://dbpedia.org/property/fields> ?uri } ",
    "entity mapping": [
      {
        "label": "Paul Demiville",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville"
      }
    ],
    "id": "3065422e5ed048afbfe5677cff2a318b",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "Which district of Thorington railway station is the location of death of  David Lewis (poet) ?",
    "SerialNumber": "4887",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thorington_railway_station> <http://dbpedia.org/ontology/district> ?uri. <http://dbpedia.org/resource/David_Lewis_(poet)> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Thorington railway station",
        "uri": "http://dbpedia.org/resource/Thorington_railway_station"
      },
      {
        "label": "David Lewis (poet)",
        "uri": "http://dbpedia.org/resource/David_Lewis_(poet)"
      }
    ],
    "id": "efdf8aa050864451b985d0ff5e49cbd0",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district"
      },
      {
        "label": "location of death",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Count the number of movies whose editors were born in UK?",
    "SerialNumber": "4891",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_Kingdom> . ?uri <http://dbpedia.org/property/editing> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "UK",
        "uri": "http://dbpedia.org/resource/United_Kingdom"
      }
    ],
    "id": "c19ff6e63850447cbc240443c789c4f2",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What subsequent work of Moondog Matinee has the composer of Motorpsycho Nitemare ?",
    "SerialNumber": "4892",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ",
    "entity mapping": [
      {
        "label": "Motorpsycho Nitemare",
        "uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare"
      },
      {
        "label": "Moondog Matinee",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee"
      }
    ],
    "id": "e6a2aa8819844614aa86e76b7ef9cc94",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      }
    ]
  },
  {
    "question": "Name the stock holders of soccer club whose one of the stockholder is Carl Sanders ?",
    "SerialNumber": "4898",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Carl_Sanders> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "Carl Sanders",
        "uri": "http://dbpedia.org/resource/Carl_Sanders"
      }
    ],
    "id": "120552b5f83c4469b65f4e0a718d330b",
    "predicate mapping": [
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "Who was the parent of person whose child is William C P breckinridge?",
    "SerialNumber": "4899",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/William_Campbell_Preston_Breckinridge> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "William C P breckinridge",
        "uri": "http://dbpedia.org/resource/William_Campbell_Preston_Breckinridge"
      }
    ],
    "id": "ce1c25a295524cd3ad8096741360c0a5",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which TV show\u0027s producer is Stephen E. Ambrose and company is DreamWorks Television?",
    "SerialNumber": "4901",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Stephen E. Ambrose",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose"
      },
      {
        "label": "DreamWorks Television",
        "uri": "http://dbpedia.org/resource/DreamWorks_Television"
      }
    ],
    "id": "fd8b42814a494505a95d0aad81dbb23d",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many other race are there of the adult (pornographic) actors whose ethnicity is Cherokee ?",
    "SerialNumber": "4906",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Cherokee> . ?x <http://dbpedia.org/property/ethnicity> ?uri }",
    "entity mapping": [
      {
        "label": "Cherokee",
        "uri": "http://dbpedia.org/resource/Cherokee"
      }
    ],
    "id": "c8a69f49e96b42b896b722fd19267e70",
    "predicate mapping": [
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/property/ethnicity"
      }
    ]
  },
  {
    "question": "Who is the producer of the single which was the subsequent work of He\u0027s a Liar?",
    "SerialNumber": "4907",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/He\u0027s_a_Liar> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . }",
    "entity mapping": [
      {
        "label": "He\u0027s a Liar",
        "uri": "http://dbpedia.org/resource/He\u0027s_a_Liar"
      }
    ],
    "id": "1b5bc20a93da4301bfd74cf0424d6a5d",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "Whose shrine is in aachen cathedral?",
    "SerialNumber": "4910",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Aachen_Cathedral>  . }",
    "entity mapping": [
      {
        "label": "aachen cathedral",
        "uri": "http://dbpedia.org/resource/Aachen_Cathedral"
      }
    ],
    "id": "de05f30a4e304ecc8294fe2c50948518",
    "predicate mapping": [
      {
        "label": "shrine",
        "uri": "http://dbpedia.org/property/majorShrine"
      }
    ]
  },
  {
    "question": "Giorgos Kaminis is the mayor of what?",
    "SerialNumber": "4912",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Giorgos_Kaminis> } ",
    "entity mapping": [
      {
        "label": "Giorgos Kaminis",
        "uri": "http://dbpedia.org/resource/Giorgos_Kaminis"
      }
    ],
    "id": "543de17bf3734e12bdf36bd202942338",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor"
      }
    ]
  },
  {
    "question": "Name the incumbent of Linda Jenness ?",
    "SerialNumber": "4913",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Jenness> <http://dbpedia.org/ontology/incumbent> ?uri } ",
    "entity mapping": [
      {
        "label": "Linda Jenness",
        "uri": "http://dbpedia.org/resource/Linda_Jenness"
      }
    ],
    "id": "40ce6c3ca38043918ce00a735a2e4c98",
    "predicate mapping": [
      {
        "label": "incumbent",
        "uri": "http://dbpedia.org/ontology/incumbent"
      }
    ]
  },
  {
    "question": "Give me a count of mammals which have their order as Primate?",
    "SerialNumber": "4916",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "Primate",
        "uri": "http://dbpedia.org/resource/Primate"
      }
    ],
    "id": "1db54969ed89429596435519a1e8fbf2",
    "predicate mapping": [
      {
        "label": "order",
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "What are the things whose leader was a monarch of Willem-Alexander of the Netherlands?",
    "SerialNumber": "4917",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/monarch> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands> . ?uri <http://dbpedia.org/ontology/leader> ?x  . }",
    "entity mapping": [
      {
        "label": "Willem-Alexander of the Netherlands",
        "uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands"
      }
    ],
    "id": "c062bc8772114beb9ceec478ec91a279",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "Which county seat of the King County, Washington and PLACE OF DEATH of the Phil Lumpkin ?",
    "SerialNumber": "4921",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri. <http://dbpedia.org/resource/Phil_Lumpkin> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "King County, Washington",
        "uri": "http://dbpedia.org/resource/King_County,_Washington"
      },
      {
        "label": "Phil Lumpkin",
        "uri": "http://dbpedia.org/resource/Phil_Lumpkin"
      }
    ],
    "id": "d49b451c4f0b4b8ea1109469adecf4f1",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat"
      },
      {
        "label": "PLACE OF DEATH",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Name the river whose mouth place is Old Lyme, Connecticut?",
    "SerialNumber": "4922",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Old_Lyme,_Connecticut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Old Lyme, Connecticut",
        "uri": "http://dbpedia.org/resource/Old_Lyme,_Connecticut"
      }
    ],
    "id": "6e2e3195d6044ab2890e512d68f6fc15",
    "predicate mapping": [
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which  person has opponent Ike Clanton?",
    "SerialNumber": "4924",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ike Clanton",
        "uri": "http://dbpedia.org/resource/Ike_Clanton"
      }
    ],
    "id": "56f3779c92104d1396a551a1d1dbf549",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List the affiliation of Indian general election, 2004 (Andhra Pradesh) ?",
    "SerialNumber": "4925",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri } ",
    "entity mapping": [
      {
        "label": "Indian general election, 2004 (Andhra Pradesh)",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)"
      }
    ],
    "id": "b45a5663ebe3439a9c8032edaa8750b3",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/ontology/affiliation"
      }
    ]
  },
  {
    "question": "Which municipality of the Brown\u0027s Corners, toronto also place of birth of Krista Kelly ?",
    "SerialNumber": "4927",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brown\u0027s_Corners,_Toronto> <http://dbpedia.org/ontology/municipality> ?uri. <http://dbpedia.org/resource/Krista_Kelly> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Brown\u0027s Corners, toronto",
        "uri": "http://dbpedia.org/resource/Brown\u0027s_Corners,_Toronto"
      },
      {
        "label": "Krista Kelly",
        "uri": "http://dbpedia.org/resource/Krista_Kelly"
      }
    ],
    "id": "d8be9b09c9444929b370acbb8f2f1d66",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Where are the shrines of the saints who were beatified by Pope Pius XI?",
    "SerialNumber": "4929",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_XI> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "entity mapping": [
      {
        "label": "Pope Pius XI",
        "uri": "http://dbpedia.org/resource/Pope_Pius_XI"
      }
    ],
    "id": "33a68bbb7cbb44749a300fcafe94dadf",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy"
      },
      {
        "label": "shrines",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint"
      }
    ]
  },
  {
    "question": "In which areas is the radio station broadcasted which is a sister station of WXME ?",
    "SerialNumber": "4936",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WXME> <http://dbpedia.org/property/sisterStations> ?x . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "WXME",
        "uri": "http://dbpedia.org/resource/WXME"
      }
    ],
    "id": "836e49a87e9346fa8ff7e57ab6d765c1",
    "predicate mapping": [
      {
        "label": "station",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "What is the location town of Seattle Great Wheel ?",
    "SerialNumber": "4940",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Seattle_Great_Wheel> <http://dbpedia.org/property/locationTown> ?uri } ",
    "entity mapping": [
      {
        "label": "Seattle Great Wheel",
        "uri": "http://dbpedia.org/resource/Seattle_Great_Wheel"
      }
    ],
    "id": "0e96324fa1db4239b4f08a7cc5d7d4a1",
    "predicate mapping": [
      {
        "label": "location town",
        "uri": "http://dbpedia.org/property/locationTown"
      }
    ]
  },
  {
    "question": "Name the office holder whose alma mater is Harvard-Westlake School and resting place is Alta Mesa Memorial Park?",
    "SerialNumber": "4941",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Alta_Mesa_Memorial_Park>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School"
      },
      {
        "label": "Alta Mesa Memorial Park",
        "uri": "http://dbpedia.org/resource/Alta_Mesa_Memorial_Park"
      }
    ],
    "id": "c2b314ca2fe44f229ce588a5c38f9e76",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which band had members who are now in The Bleeding Heart Band?",
    "SerialNumber": "4942",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Bleeding_Heart_Band> . ?uri <http://dbpedia.org/ontology/formerBandMember> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "The Bleeding Heart Band",
        "uri": "http://dbpedia.org/resource/The_Bleeding_Heart_Band"
      }
    ],
    "id": "e06bff7bae994f78aab16d712b680296",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/formerBandMember"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "In which cities do some railways operated by Russian railways start?",
    "SerialNumber": "4943",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/Russian_Railways> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . }",
    "entity mapping": [
      {
        "label": "Russian railways",
        "uri": "http://dbpedia.org/resource/Russian_Railways"
      }
    ],
    "id": "f2000de1be65469e8d691b9d6e3732e5",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/routeStart"
      }
    ]
  },
  {
    "question": "Where was Girls (The Prodigy song)  recorded ?",
    "SerialNumber": "4948",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Girls_(The_Prodigy_song)> <http://dbpedia.org/property/recorded> ?uri } ",
    "entity mapping": [
      {
        "label": "Girls (The Prodigy song)",
        "uri": "http://dbpedia.org/resource/Girls_(The_Prodigy_song)"
      }
    ],
    "id": "47f4b2253dac4f8f978ff5b8c2166041",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "Name the party of Indira Gandhi ?",
    "SerialNumber": "4949",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indira_Gandhi> <http://dbpedia.org/ontology/party> ?uri } ",
    "entity mapping": [
      {
        "label": "Indira Gandhi",
        "uri": "http://dbpedia.org/resource/Indira_Gandhi"
      }
    ],
    "id": "01dc45d5615b43ea9c0888c88020fb68",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Who are the scientists known for the Manhattan Project?",
    "SerialNumber": "4950",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Manhattan Project",
        "uri": "http://dbpedia.org/resource/Manhattan_Project"
      }
    ],
    "id": "cea7ee307d2845a187dc51d08d6f2047",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What are the regions in which the distributor of Secrets and Lies serves ? ",
    "SerialNumber": "4951",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)> <http://dbpedia.org/ontology/distributor> ?x . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . }",
    "entity mapping": [
      {
        "label": "Secrets and Lies",
        "uri": "http://dbpedia.org/resource/Secrets_and_Lies_(U.S._TV_series)"
      }
    ],
    "id": "175941bf0105430bb779fd7038f266bf",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "regions",
        "uri": "http://dbpedia.org/ontology/regionServed"
      }
    ]
  },
  {
    "question": "Which is the common past team of the Charlie Justice (American football player) and Bobby Hoppe ?",
    "SerialNumber": "4954",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charlie_Justice_(American_football_player)> <http://dbpedia.org/property/pastteams> ?uri. <http://dbpedia.org/resource/Bobby_Hoppe> <http://dbpedia.org/property/pastteams> ?uri . }",
    "entity mapping": [
      {
        "label": "Charlie Justice",
        "uri": "http://dbpedia.org/resource/Charlie_Justice_(American_football_player)"
      },
      {
        "label": "Bobby Hoppe",
        "uri": "http://dbpedia.org/resource/Bobby_Hoppe"
      }
    ],
    "id": "adbab66762494d168acfc5e78c49f7e6",
    "predicate mapping": [
      {
        "label": "team past",
        "uri": "http://dbpedia.org/property/pastteams"
      },
      {
        "label": "team past",
        "uri": "http://dbpedia.org/property/pastteams"
      }
    ]
  },
  {
    "question": "How many other school are there of the rugby players whose school is Michaelhouse ?",
    "SerialNumber": "4957",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Michaelhouse> . ?x <http://dbpedia.org/property/school> ?uri }",
    "entity mapping": [
      {
        "label": "Michaelhouse",
        "uri": "http://dbpedia.org/resource/Michaelhouse"
      }
    ],
    "id": "c65bca36d5634c848c7619d8c6a1f36c",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school"
      }
    ]
  },
  {
    "question": "Whose relatives are Clan McDuck and Huey, Dewey, and Louie?",
    "SerialNumber": "4961",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Huey,_Dewey,_and_Louie> . }",
    "entity mapping": [
      {
        "label": "Clan McDuck",
        "uri": "http://dbpedia.org/resource/Clan_McDuck"
      },
      {
        "label": "Huey, Dewey, and Louie",
        "uri": "http://dbpedia.org/resource/Huey,_Dewey,_and_Louie"
      }
    ],
    "id": "8adc86df67ad4f3694781a4fe7f98495",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      }
    ]
  },
  {
    "question": "Which location country of Ennejma Ezzahra is also the origin of Boga ?",
    "SerialNumber": "4962",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Boga_(soft_drink)> <http://dbpedia.org/property/origin> ?uri. <http://dbpedia.org/resource/Ennejma_Ezzahra> <http://dbpedia.org/property/locationCountry> ?uri} ",
    "entity mapping": [
      {
        "label": "Boga",
        "uri": "http://dbpedia.org/resource/Boga_(soft_drink)"
      },
      {
        "label": "Ennejma Ezzahra",
        "uri": "http://dbpedia.org/resource/Ennejma_Ezzahra"
      }
    ],
    "id": "bc2f6bbbd8bb4055b65d42a97608f366",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "location country",
        "uri": "http://dbpedia.org/property/locationCountry"
      }
    ]
  },
  {
    "question": "What is the PLACE OF DEATH of Charles Gordon (artist) ?",
    "SerialNumber": "4963",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Charles_Gordon_(artist)> <http://dbpedia.org/property/placeOfDeath> ?uri } ",
    "entity mapping": [
      {
        "label": "Charles Gordon (artist)",
        "uri": "http://dbpedia.org/resource/Charles_Gordon_(artist)"
      }
    ],
    "id": "f22fef56a0c84c86886dc2dc2243a721",
    "predicate mapping": [
      {
        "label": "PLACE OF DEATH",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Which office holder\u0027s constituency is Haight-Ashbury and has military unit as USS Kittiwake ?",
    "SerialNumber": "4967",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Haight-Ashbury",
        "uri": "http://dbpedia.org/resource/Haight-Ashbury"
      },
      {
        "label": "USS Kittiwake",
        "uri": "http://dbpedia.org/resource/USS_Kittiwake_(ASR-13)"
      }
    ],
    "id": "b35488681e4c4dbb94efcbc1eb49a31d",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Name the composer of motorpsycho Nitemare ?",
    "SerialNumber": "4968",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri } ",
    "entity mapping": [
      {
        "label": "motorpsycho Nitemare",
        "uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare"
      }
    ],
    "id": "9b3d41fd10154e0099da01bfaf7daf4a",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer"
      }
    ]
  },
  {
    "question": "Which TV show\u0027s writer is Erik Jendresen and distributor is HBO?",
    "SerialNumber": "4969",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Erik Jendresen",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen"
      },
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      }
    ],
    "id": "812a3d6cf42c439cb59c16744da1932d",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "show\u0027s",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the military conflict whose commander was Colin Powell and took place in israel ?",
    "SerialNumber": "4971",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Colin_Powell> . ?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Colin Powell",
        "uri": "http://dbpedia.org/resource/Colin_Powell"
      },
      {
        "label": "israel",
        "uri": "http://dbpedia.org/resource/Israel"
      }
    ],
    "id": "8246341ae9094f0e9ddd0b1becf8a139",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/place"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "In which city did The Ultimate Fighter: Team Rousey vs. Team Tate take place ?",
    "SerialNumber": "4972",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate> <http://dbpedia.org/property/city> ?uri } ",
    "entity mapping": [
      {
        "label": "The Ultimate Fighter: Team Rousey vs. Team Tate",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate"
      }
    ],
    "id": "bc638eba36ac42a4ad637b88465f433e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      }
    ]
  },
  {
    "question": "Who are all the people who used to figure skate with the current partner of Alexa Scimeca?",
    "SerialNumber": "4973",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alexa_Scimeca> <http://dbpedia.org/ontology/currentPartner> ?x . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . }",
    "entity mapping": [
      {
        "label": "Alexa Scimeca",
        "uri": "http://dbpedia.org/resource/Alexa_Scimeca"
      }
    ],
    "id": "a6b97c0cc3ad4ba4964258498472eafa",
    "predicate mapping": [
      {
        "label": "current partner",
        "uri": "http://dbpedia.org/ontology/currentPartner"
      },
      {
        "label": "partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      }
    ]
  },
  {
    "question": "Which company was the designer of South African class 11e and RENFE class 333 ?",
    "SerialNumber": "4974",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_African_Class_11E> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "South African class 11e",
        "uri": "http://dbpedia.org/resource/South_African_Class_11E"
      },
      {
        "label": "RENFE class 333",
        "uri": "http://dbpedia.org/resource/RENFE_Class_333"
      }
    ],
    "id": "066bf38e50c649399528f93568815cf5",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "How many have family as Ape and order (taxonomy) is Primate ?",
    "SerialNumber": "4977",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape> . ?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate> } ",
    "entity mapping": [
      {
        "label": "Ape",
        "uri": "http://dbpedia.org/resource/Ape"
      },
      {
        "label": "Primate",
        "uri": "http://dbpedia.org/resource/Primate"
      }
    ],
    "id": "f14140c456b043708cbc1405ee4fbde7",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "order (taxonomy)",
        "uri": "http://dbpedia.org/ontology/order"
      }
    ]
  },
  {
    "question": "Count the total awards won by the writer who has won Goethe Prize ?",
    "SerialNumber": "4978",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Goethe_Prize> . ?x <http://dbpedia.org/property/awards> ?uri }",
    "entity mapping": [
      {
        "label": "Goethe Prize",
        "uri": "http://dbpedia.org/resource/Goethe_Prize"
      }
    ],
    "id": "2549956a9313466db645ee46bb1f01b8",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Whose resting place is William Henry Harrison Tomb State Memorial and has kids named John Scott Harrison?",
    "SerialNumber": "4980",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/John_Scott_Harrison>  . }",
    "entity mapping": [
      {
        "label": "William Henry Harrison Tomb State Memorial",
        "uri": "http://dbpedia.org/resource/William_Henry_Harrison_Tomb_State_Memorial"
      },
      {
        "label": "John Scott Harrison",
        "uri": "http://dbpedia.org/resource/John_Scott_Harrison"
      }
    ],
    "id": "79debf2d75fe4c2c9651c15e18116af1",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "has kids",
        "uri": "http://dbpedia.org/ontology/child"
      }
    ]
  },
  {
    "question": "Muhammad Yunus has won how many awards?",
    "SerialNumber": "4981",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Muhammad_Yunus> <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Muhammad Yunus",
        "uri": "http://dbpedia.org/resource/Muhammad_Yunus"
      }
    ],
    "id": "29513d9bf3fb453da72170be9f27bc0d",
    "predicate mapping": [
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Which currency can I use both in Kerguelen islands and French southern and antarctic lands?",
    "SerialNumber": "4987",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/currency> ?uri . }",
    "entity mapping": [
      {
        "label": "French southern and antarctic lands",
        "uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands"
      },
      {
        "label": "Kerguelen islands",
        "uri": "http://dbpedia.org/resource/Kerguelen_Islands"
      }
    ],
    "id": "7fb2e2a29f6247bf9a36f9dae36fa67d",
    "predicate mapping": [
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "What is the burial place of Iyoas I ?",
    "SerialNumber": "4990",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iyoas_I> <http://dbpedia.org/property/placeOfBurial> ?uri } ",
    "entity mapping": [
      {
        "label": "Iyoas I",
        "uri": "http://dbpedia.org/resource/Iyoas_I"
      }
    ],
    "id": "88fe11d131e142dfa0952fca359787eb",
    "predicate mapping": [
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      }
    ]
  },
  {
    "question": "Who are the tenants of the stadium which is a venue of WCW Mayhem ?",
    "SerialNumber": "4991",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/WCW_Mayhem> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "WCW Mayhem",
        "uri": "http://dbpedia.org/resource/WCW_Mayhem"
      }
    ],
    "id": "a05e1d00e47e4843ac91a9fc0905efba",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "List all the movies whose music has been made up with someone under RCA records?",
    "SerialNumber": "4992",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/RCA_Records> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "RCA records",
        "uri": "http://dbpedia.org/resource/RCA_Records"
      }
    ],
    "id": "61779d70e408400886f2c2932d7b5e69",
    "predicate mapping": [
      {
        "label": "records",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Is Brazilian jiu-jitsu the trainer of Nick Diaz?",
    "SerialNumber": "4993",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nick_Diaz> <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Brazilian_jiu-jitsu> }",
    "entity mapping": [
      {
        "label": "Nick Diaz",
        "uri": "http://dbpedia.org/resource/Nick_Diaz"
      },
      {
        "label": "Brazilian jiu-jitsu",
        "uri": "http://dbpedia.org/resource/Brazilian_jiu-jitsu"
      }
    ],
    "id": "b7433a3ea1cf4a279f781878b61b08b5",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/ontology/trainer"
      }
    ]
  },
  {
    "question": "What is the total number of other combatant of the military conflicts whose combatant is Choctaw?",
    "SerialNumber": "4995",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/combatant> <http://dbpedia.org/resource/Choctaw> . ?x <http://dbpedia.org/property/combatant> ?uri }",
    "entity mapping": [
      {
        "label": "Choctaw",
        "uri": "http://dbpedia.org/resource/Choctaw"
      }
    ],
    "id": "56b56d6d68fc4235bafbf28b726a4dff",
    "predicate mapping": [
      {
        "label": "combatant",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "combatant",
        "uri": "http://dbpedia.org/property/combatant"
      }
    ]
  },
  {
    "question": "What movies have been produced by the production house owned by Larry J. Franco?",
    "SerialNumber": "4996",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Larry_J._Franco> } ",
    "entity mapping": [
      {
        "label": "Larry J. Franco",
        "uri": "http://dbpedia.org/resource/Larry_J._Franco"
      }
    ],
    "id": "f81e51fa36714841b71d71f2c518a477",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "Which royalty was married to ptolemy XIII Theos Philopator and had mother named Cleopatra V ?",
    "SerialNumber": "6",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Cleopatra V",
        "uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt"
      },
      {
        "label": "ptolemy XIII Theos Philopator",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator"
      }
    ],
    "id": "e963127fc9c048e089c071e56b80f214",
    "predicate mapping": [
      {
        "label": "mother",
        "uri": "http://dbpedia.org/property/mother"
      },
      {
        "label": "married",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "What tv series can be said to be related to the sarah jane adventure and dr who confidential?",
    "SerialNumber": "15",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Doctor_Who_Confidential> . }",
    "entity mapping": [
      {
        "label": "the sarah jane adventure ",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures"
      },
      {
        "label": "dr who confidential",
        "uri": "http://dbpedia.org/resource/Doctor_Who_Confidential"
      }
    ],
    "id": "6ff03a568e2e4105b491ab1c1411c1ab",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      }
    ]
  },
  {
    "question": "What is the common genere of Abhijit Kunte and Kasparov ?",
    "SerialNumber": "18",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Abhijit_Kunte> <http://dbpedia.org/property/knownFor> ?uri. <http://dbpedia.org/resource/Virtual_Kasparov> <http://dbpedia.org/ontology/genre> ?uri} ",
    "entity mapping": [
      {
        "label": "Abhijit Kunte",
        "uri": "http://dbpedia.org/resource/Abhijit_Kunte"
      },
      {
        "label": "kasparov",
        "uri": "http://dbpedia.org/resource/Virtual_Kasparov"
      }
    ],
    "id": "8b08c0d0fc3d45e1936149c78c6637df",
    "predicate mapping": [
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "genere",
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "Which source country of SamurAbsheron channel is the birth place of Anar Salmanov ?",
    "SerialNumber": "21",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Samur–Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri. <http://dbpedia.org/resource/Anar_Salmanov> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "SamurAbsheron channel",
        "uri": "http://dbpedia.org/resource/Samur–Absheron_channel"
      },
      {
        "label": "Anar Salmanov",
        "uri": "http://dbpedia.org/resource/Anar_Salmanov"
      }
    ],
    "id": "62fc3395a7ce4c27ba5bfb82e020dab6",
    "predicate mapping": [
      {
        "label": "country source",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Did Timm Gunn guest in Sunrise (HIMYM)?",
    "SerialNumber": "25",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)> <http://dbpedia.org/property/guests> <http://dbpedia.org/resource/Tim_Gunn> }",
    "entity mapping": [
      {
        "label": "Sunrise",
        "uri": "http://dbpedia.org/resource/Sunrise_(How_I_Met_Your_Mother)"
      },
      {
        "label": "Timm Gunn",
        "uri": "http://dbpedia.org/resource/Tim_Gunn"
      }
    ],
    "id": "502ef78b55df4f73beb3f5df73483a51",
    "predicate mapping": [
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests"
      }
    ]
  },
  {
    "question": "Who is the common manager of Aston Villa 2000-02 season and aldo the manager of Middlesbrough F.C. season 2009-10",
    "SerialNumber": "30",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2000–01_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri. <http://dbpedia.org/resource/2009–10_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri} ",
    "entity mapping": [
      {
        "label": "Aston Villa 2000-02 season",
        "uri": "http://dbpedia.org/resource/2000–01_Aston_Villa_F.C._season"
      },
      {
        "label": "Middlesbrough F.C. season 2009-10",
        "uri": "http://dbpedia.org/resource/2009–10_Middlesbrough_F.C._season"
      }
    ],
    "id": "e1b83f5a76aa411aa260424b3255ce89",
    "predicate mapping": [
      {
        "label": "Who",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/manager"
      }
    ]
  },
  {
    "question": "How many tenats have been there, of the constructions of PCL constructures?",
    "SerialNumber": "32",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/PCL_Construction> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }",
    "entity mapping": [
      {
        "label": "PCL constructures",
        "uri": "http://dbpedia.org/resource/PCL_Construction"
      }
    ],
    "id": "ce216d620d154f13814dd2f6b967c292",
    "predicate mapping": [
      {
        "label": "constructions",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "tenats",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "Which planet was discovered by Johann Gottfried and Urbain Le Verrier ?",
    "SerialNumber": "51",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Johann_Gottfried_Galle> . ?uri <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Urbain_Le_Verrier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Planet>}",
    "entity mapping": [
      {
        "label": "Johann Gottfried",
        "uri": "http://dbpedia.org/resource/Johann_Gottfried_Galle"
      },
      {
        "label": "Urbain Le Verrier",
        "uri": "http://dbpedia.org/resource/Urbain_Le_Verrier"
      }
    ],
    "id": "3f7a7a7d95104fcb8c6ebe00786a990b",
    "predicate mapping": [
      {
        "label": "discovered by",
        "uri": "http://dbpedia.org/property/discoverer"
      },
      {
        "label": "planet",
        "uri": "http://dbpedia.org/ontology/Planet"
      }
    ]
  },
  {
    "question": "Who started at the pole position in both 1997 canadian grand prix and the 94 spanish one?",
    "SerialNumber": "56",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri. <http://dbpedia.org/resource/1994_Spanish_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri . }",
    "entity mapping": [
      {
        "label": "1997 canadian grand prix",
        "uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix"
      },
      {
        "label": "94 spanish one",
        "uri": "http://dbpedia.org/resource/1994_Spanish_Grand_Prix"
      }
    ],
    "id": "3f53ed3c088c4ede9a3582e26303ee83",
    "predicate mapping": [
      {
        "label": "pole position",
        "uri": "http://dbpedia.org/property/poleDriver"
      }
    ]
  },
  {
    "question": "Which tenants of the Master Card center is also th draft team of Sam Carrick ",
    "SerialNumber": "59",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Sam_Carrick> <http://dbpedia.org/property/draftTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "Master Card center",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre"
      },
      {
        "label": "Sam Carrick",
        "uri": "http://dbpedia.org/resource/Sam_Carrick"
      }
    ],
    "id": "94d9288c52b54642bdac4aba4fedcc04",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      }
    ]
  },
  {
    "question": "Which title of Zaman Shah Durrani is also the nationality of Salahuddin ?",
    "SerialNumber": "85",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Zaman_Shah_Durrani> <http://dbpedia.org/property/title> ?uri. <http://dbpedia.org/resource/Salahuddin_Rabbani> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "Zaman Shah Durrani",
        "uri": "http://dbpedia.org/resource/Zaman_Shah_Durrani"
      },
      {
        "label": "Salahuddin",
        "uri": "http://dbpedia.org/resource/Salahuddin_Rabbani"
      }
    ],
    "id": "34d6402839924ecbbffe213ce8966124",
    "predicate mapping": [
      {
        "label": "title",
        "uri": "http://dbpedia.org/property/title"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What woman acted in the mating habits of earthbound humans and is often associated with Mams taylor?",
    "SerialNumber": "96",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Mams_Taylor> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri . }",
    "entity mapping": [
      {
        "label": "the mating habits of earthbound humans",
        "uri": "http://dbpedia.org/resource/The_Mating_Habits_of_the_Earthbound_Human"
      },
      {
        "label": "Mams taylor",
        "uri": "http://dbpedia.org/resource/Mams_Taylor"
      }
    ],
    "id": "6d1d440ec5414694a662782baff67759",
    "predicate mapping": [
      {
        "label": "acted",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "How many things are crossed over by bridges which can carry cars?",
    "SerialNumber": "128",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "entity mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/resource/Motor_vehicle"
      }
    ],
    "id": "62a255d7774446fca4a570b227bc463e",
    "predicate mapping": [
      {
        "label": "carry",
        "uri": "http://dbpedia.org/property/carries"
      },
      {
        "label": "crossed",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "Is the chestnut white bellied rat a mammal?",
    "SerialNumber": "143",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chestnut_white-bellied_rat> <http://dbpedia.org/ontology/class> <http://dbpedia.org/resource/Mammal> }",
    "entity mapping": [
      {
        "label": "chestnut bellied white rat",
        "uri": "http://dbpedia.org/resource/Chestnut_white-bellied_rat"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/resource/Mammal"
      }
    ],
    "id": "dc3644ed1dfc4da882751c8ba8661e2a",
    "predicate mapping": [
      {
        "label": "a",
        "uri": "http://dbpedia.org/ontology/class"
      }
    ]
  },
  {
    "question": "what are some common games played at both Fr Agnel Multipurpose School and Vishwajyot High School?",
    "SerialNumber": "149",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri . }",
    "entity mapping": [
      {
        "label": "Fr Agnel Multipurpose School",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College"
      },
      {
        "label": "Vishwajyot High School",
        "uri": "http://dbpedia.org/resource/Vishwajyot_High_School"
      }
    ],
    "id": "cc5a0469264f4b9db2f762d99fac320f",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "What relegious affiliation of Josiah Idowu-Fearon was canonized by john of Damasucs ?",
    "SerialNumber": "165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_of_Damascus> <http://dbpedia.org/ontology/canonizedBy> ?uri. <http://dbpedia.org/resource/Josiah_Idowu-Fearon> <http://dbpedia.org/ontology/religion> ?uri} ",
    "entity mapping": [
      {
        "label": "john of Damasucs",
        "uri": "http://dbpedia.org/resource/John_of_Damascus"
      },
      {
        "label": "Josiah Idowu-Fearon",
        "uri": "http://dbpedia.org/resource/Josiah_Idowu-Fearon"
      }
    ],
    "id": "30d274c7ebc944d6ac4e29e01c552fbb",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/ontology/canonizedBy"
      },
      {
        "label": "relegious",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Count all that was built by a company whose leader is Kazuo Hirai?",
    "SerialNumber": "173",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "entity mapping": [
      {
        "label": "Kazuo Hirai",
        "uri": "http://dbpedia.org/resource/Kazuo_Hirai"
      }
    ],
    "id": "058b1ad027e8461f8bdc3cbe71af5877",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "built by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Name the tenant of Ever bank field which has also has player named Dan Shamash ?",
    "SerialNumber": "175",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/EverBank_Field> <http://dbpedia.org/ontology/tenant> ?uri} ",
    "entity mapping": [
      {
        "label": "Dan Shamash",
        "uri": "http://dbpedia.org/resource/Dan_Shamash"
      },
      {
        "label": "Ever bank field",
        "uri": "http://dbpedia.org/resource/EverBank_Field"
      }
    ],
    "id": "af9721be263d4f1183dd36c6263b988a",
    "predicate mapping": [
      {
        "label": "player",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "What is the largest city in the country where the San Marcos River originates?",
    "SerialNumber": "177",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/San_Marcos_River> <http://dbpedia.org/ontology/sourceMountain> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "San Marcos River",
        "uri": "http://dbpedia.org/resource/San_Marcos_River"
      }
    ],
    "id": "40d8dc6cc6a44008b90476173e0fcbe3",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Give a list of all the labels that have jazz fusion artists signed up with them?",
    "SerialNumber": "178",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "jazz fusion",
        "uri": "http://dbpedia.org/resource/Jazz_fusion"
      }
    ],
    "id": "0d89f5d0f59b44e8a5353d50205fefa4",
    "predicate mapping": [
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Which holy places did consider Pope Gregory I as a saint?",
    "SerialNumber": "181",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/property/veneratedIn> ?uri } ",
    "entity mapping": [
      {
        "label": "Pope Gregory I",
        "uri": "http://dbpedia.org/resource/Pope_Gregory_I"
      }
    ],
    "id": "c57100a716d5441bb8cc6a588c54982b",
    "predicate mapping": [
      {
        "label": "saint",
        "uri": "http://dbpedia.org/property/veneratedIn"
      }
    ]
  },
  {
    "question": "List the religion of people in the Cambodian human rights party?",
    "SerialNumber": "182",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/otherParty> <http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "human rights party",
        "uri": "http://dbpedia.org/resource/Human_Rights_Party_(Cambodia)"
      }
    ],
    "id": "148cdeb62654466ba6820ef343817fdb",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Count the wars in which people awarded with the Croix de guerre fought.",
    "SerialNumber": "184",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Croix_de_guerre_1939–1945_(France)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Croix de guerre",
        "uri": "http://dbpedia.org/resource/Croix_de_guerre_1939–1945_(France)"
      }
    ],
    "id": "f1e12faf9fbc416a9f4c648088eb0ce4",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "For which clubs do the players of Azam F.C. play for?",
    "SerialNumber": "185",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Azam_F.C.> <http://dbpedia.org/property/name> ?x . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "entity mapping": [
      {
        "label": "Azam F.C.",
        "uri": "http://dbpedia.org/resource/Azam_F.C."
      }
    ],
    "id": "fdfee7b9d0c14c7eb2865ce63f009f2d",
    "predicate mapping": [
      {
        "label": "azam",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer"
      }
    ]
  },
  {
    "question": "Which location of  INKAS is also the location of  T.I. Ahmadiyya Senior High School, Kumasi ?",
    "SerialNumber": "186",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/INKAS> <http://dbpedia.org/property/locations> ?uri. <http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi> <http://dbpedia.org/ontology/denomination> ?uri} ",
    "entity mapping": [
      {
        "label": "INKAS",
        "uri": "http://dbpedia.org/resource/INKAS"
      },
      {
        "label": "T.I. Ahmadiyya Senior High School, Kumasi",
        "uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Senior_High_School,_Kumasi"
      }
    ],
    "id": "e24e471cc44e4ea99d44a35f6932aa9b",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/locations"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/denomination"
      }
    ]
  },
  {
    "question": "Name a  river with source country as Zambia and source location as Ikelenge  District?",
    "SerialNumber": "190",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Zambia",
        "uri": "http://dbpedia.org/resource/Zambia"
      },
      {
        "label": "Ikelenge  District",
        "uri": "http://dbpedia.org/resource/Ikelenge_District"
      }
    ],
    "id": "0e83db3bc85c4c33bbc49dafc2825eb4",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which researchers received fellowship from Royal Society?",
    "SerialNumber": "191",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Royal_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Royal Society",
        "uri": "http://dbpedia.org/resource/Royal_Society"
      }
    ],
    "id": "7f65c4ab542e475aa78b39ba487c66d2",
    "predicate mapping": [
      {
        "label": "fellowship",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "researchers",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "acer nigrum is used in making what?",
    "SerialNumber": "192",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Acer_nigrum> } ",
    "entity mapping": [
      {
        "label": "acer nigrum",
        "uri": "http://dbpedia.org/resource/Acer_nigrum"
      }
    ],
    "id": "e166d5d43fdf4091b8a0c9a5482c75c5",
    "predicate mapping": [
      {
        "label": "in making",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "what are some famous people out of the Filipinos?",
    "SerialNumber": "193",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Filipinos> } ",
    "entity mapping": [
      {
        "label": "Filipinos",
        "uri": "http://dbpedia.org/resource/Filipinos"
      }
    ],
    "id": "89b2ce4827404f8bbd451c6143340f72",
    "predicate mapping": [
      {
        "label": "filipinos",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "To whom was Tessa Dahl born to?",
    "SerialNumber": "198",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tessa_Dahl> <http://dbpedia.org/ontology/parent> ?uri } ",
    "entity mapping": [
      {
        "label": "Tessa Dahl",
        "uri": "http://dbpedia.org/resource/Tessa_Dahl"
      }
    ],
    "id": "139da48f4c4e4d1e91d23b6890ef6f4f",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/parent"
      }
    ]
  },
  {
    "question": "Count the number of religions followed by the alumini of Ananda College.",
    "SerialNumber": "201",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Ananda_College> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ananda College",
        "uri": "http://dbpedia.org/resource/Ananda_College"
      }
    ],
    "id": "a0423af0bfd24f718c7e57062d36a615",
    "predicate mapping": [
      {
        "label": "alumini",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which city located on Mediterranean Sea is also the stadium of Panionios G.S.S. season ?",
    "SerialNumber": "202",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri} ",
    "entity mapping": [
      {
        "label": "Panionios G.S.S. season",
        "uri": "http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season"
      },
      {
        "label": "Mediterranean Sea",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea"
      }
    ],
    "id": "ebe64596063a43719e1b6479a9d09d94",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "What is the river whose source is Cowombat  Flat and has it's mouth located in Murray Mouth?",
    "SerialNumber": "203",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Cowombat_Flat> . ?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Murray_Mouth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Cowombat  Flat",
        "uri": "http://dbpedia.org/resource/Cowombat_Flat"
      },
      {
        "label": "Murray Mouth",
        "uri": "http://dbpedia.org/resource/Murray_Mouth"
      }
    ],
    "id": "7b9c6c00806d42ef9ece1689ddac88c8",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Who were in the youth clubs that were in season of 2015 Argentine Primera Division?",
    "SerialNumber": "205",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2015_Argentine_Primera_División> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . }",
    "entity mapping": [
      {
        "label": "2015 Argentine Primera Division",
        "uri": "http://dbpedia.org/resource/2015_Argentine_Primera_División"
      }
    ],
    "id": "43659f479aa14b2aa8703e06d7a71405",
    "predicate mapping": [
      {
        "label": "season",
        "uri": "http://dbpedia.org/ontology/season"
      },
      {
        "label": "youth clubs",
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "What is the name of the movie whose director of photography was Jordan Cronenweth and music composer was Vangelis?",
    "SerialNumber": "208",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Vangelis>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Jordan Cronenweth",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth"
      },
      {
        "label": "Vangelis",
        "uri": "http://dbpedia.org/resource/Vangelis"
      }
    ],
    "id": "ce7341ebdfa44c9b8066a65553c210b4",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/property/cinematography"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "From how many coutries do companies come, which are headquartered in the Klang Valley?",
    "SerialNumber": "209",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Klang_Valley> . ?x <http://dbpedia.org/property/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Klang Valley",
        "uri": "http://dbpedia.org/resource/Klang_Valley"
      }
    ],
    "id": "515d73dc046545aa893eb5a29754ae6d",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "coutries",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "coutries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Which parent organization of Get TV also owns the Galleria ?",
    "SerialNumber": "215",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri. <http://dbpedia.org/resource/The_Galleria> <http://dbpedia.org/ontology/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "Get TV",
        "uri": "http://dbpedia.org/resource/GetTV"
      },
      {
        "label": "the Galleria",
        "uri": "http://dbpedia.org/resource/The_Galleria"
      }
    ],
    "id": "37e79131355440699c0b9efeb17ecc4a",
    "predicate mapping": [
      {
        "label": "parent organization",
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "Who all have rented the stadium whose architect is Populous?",
    "SerialNumber": "220",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Populous",
        "uri": "http://dbpedia.org/resource/Populous_(company)"
      }
    ],
    "id": "c6237ded5fec4e6e88b97e8bf24b84c8",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Which body governs over the place made by the chumash people?",
    "SerialNumber": "221",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architect> <http://dbpedia.org/resource/Chumash_people> . ?x <http://dbpedia.org/ontology/governingBody> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "chumash people",
        "uri": "http://dbpedia.org/resource/Chumash_people"
      }
    ],
    "id": "fca07533e88d461686cd3a1827d8d790",
    "predicate mapping": [
      {
        "label": "made by",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "governs",
        "uri": "http://dbpedia.org/ontology/governingBody"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Which TV show developed by J. Michael Stracznski has artist as Christopher Franke ?",
    "SerialNumber": "223",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "uri": "http://dbpedia.org/resource/Christopher_Franke"
      },
      {
        "label": "J. Michael Stracznski",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski"
      }
    ],
    "id": "e54d1194593e4fabba95e42efed756c9",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Does the merlin express have a hub at the cibano international airport?",
    "SerialNumber": "228",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Merlin_Express> <http://dbpedia.org/ontology/hubAirport> <http://dbpedia.org/resource/Cibao_International_Airport> }",
    "entity mapping": [
      {
        "label": "merlin express",
        "uri": "http://dbpedia.org/resource/Merlin_Express"
      },
      {
        "label": "cibano international airport",
        "uri": "http://dbpedia.org/resource/Cibao_International_Airport"
      }
    ],
    "id": "d97aad57df5d45eb95490446fc978a61",
    "predicate mapping": [
      {
        "label": "airport hub",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      }
    ]
  },
  {
    "question": "How many people live in Wilton, Connecticut?",
    "SerialNumber": "229",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Wilton,_Connecticut>  . }",
    "entity mapping": [
      {
        "label": "Wilton, Connecticut",
        "uri": "http://dbpedia.org/resource/Wilton,_Connecticut"
      }
    ],
    "id": "c6aec20e26bf401b81d1b6aa04ae91a5",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "For how many different teams have Ontarians been drafted ?",
    "SerialNumber": "230",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/ontology/draftTeam> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ontaria",
        "uri": "http://dbpedia.org/resource/Ontario"
      }
    ],
    "id": "859ca6438ab1484a8e5317f11e6d7dba",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/ontology/draftTeam"
      }
    ]
  },
  {
    "question": "Which Fox  show is presented by Ryan Seacrest?",
    "SerialNumber": "231",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest"
      },
      {
        "label": "Fox",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      }
    ],
    "id": "10c87cc916094a9a81664a0eed9decea",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/property/channel"
      },
      {
        "label": "show is",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many rivers are crossed by different Box Girder bridges?",
    "SerialNumber": "232",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Box_girder_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Box Girder bridge",
        "uri": "http://dbpedia.org/resource/Box_girder_bridge"
      }
    ],
    "id": "21dcb126b1924db68d44a389f565f443",
    "predicate mapping": [
      {
        "label": "bridges",
        "uri": "http://dbpedia.org/property/design"
      },
      {
        "label": "crossed",
        "uri": "http://dbpedia.org/property/crosses"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What railway lines go through the stations maintained by Western Australian Public Transport Authority?",
    "SerialNumber": "234",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Station>}",
    "entity mapping": [
      {
        "label": "Western Australian Public Transport Authority",
        "uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)"
      }
    ],
    "id": "3b7070ada99b44be80d9025524919a86",
    "predicate mapping": [
      {
        "label": "maintained by",
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      },
      {
        "label": "railway lines",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/Station"
      }
    ]
  },
  {
    "question": "What sporting goods companies are located in Herzogenaurach?",
    "SerialNumber": "239",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Herzogenaurach> } ",
    "entity mapping": [
      {
        "label": "Herzogenaurach",
        "uri": "http://dbpedia.org/resource/Herzogenaurach"
      }
    ],
    "id": "d07c4caf5e9b42379ae12c0f145c97dc",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "What genre of games are made by Blizzard Entertainment studios?",
    "SerialNumber": "241",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Blizzard Entertainment studios",
        "uri": "http://dbpedia.org/resource/Blizzard_Entertainment"
      }
    ],
    "id": "c98f57f9e1cc479eb0dcea4abd33d23a",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Who built the stadium which was rented by Costa Rica national football team?",
    "SerialNumber": "243",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/tenants> <http://dbpedia.org/resource/Costa_Rica_national_football_team> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Costa Rica national football team",
        "uri": "http://dbpedia.org/resource/Costa_Rica_national_football_team"
      }
    ],
    "id": "0975db6bce494a3ca9713353d0589ad3",
    "predicate mapping": [
      {
        "label": "rented by",
        "uri": "http://dbpedia.org/property/tenants"
      },
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Count all the scientologists.",
    "SerialNumber": "246",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . }",
    "entity mapping": [
      {
        "label": "scientologi",
        "uri": "http://dbpedia.org/resource/Scientology"
      }
    ],
    "id": "eeeeba8f2afb457886b8942434d292ac",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "How many genres of games can I find on the commodore CDTV?",
    "SerialNumber": "250",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_CDTV> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "commodore CDTV",
        "uri": "http://dbpedia.org/resource/Commodore_CDTV"
      }
    ],
    "id": "573991970f0e4f4c84b043e20bedf9ef",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "List the cast member of the movies whose producer is Mark Johnson.",
    "SerialNumber": "251",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Mark_Johnson_(producer)> . ?x <http://dbpedia.org/ontology/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Mark Johnson",
        "uri": "http://dbpedia.org/resource/Mark_Johnson_(producer)"
      }
    ],
    "id": "8e4a97eb98a546acb53208b55d2b191a",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "cast member",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "In how many  territories were the wars fought where Fusil Gras Mile 1874 were used?",
    "SerialNumber": "253",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Fusil_Gras_mle_1874> <http://dbpedia.org/ontology/usedInWar> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Fusil Gras Mile 1874",
        "uri": "http://dbpedia.org/resource/Fusil_Gras_mle_1874"
      }
    ],
    "id": "229566aad8594cd09f94da93dbe723fb",
    "predicate mapping": [
      {
        "label": "used",
        "uri": "http://dbpedia.org/ontology/usedInWar"
      },
      {
        "label": "territories",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Where do the CNN employees typically graduate from?",
    "SerialNumber": "257",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/CNN> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "CNN",
        "uri": "http://dbpedia.org/resource/CNN"
      }
    ],
    "id": "7b8f4f86aea64af6bca2e94f317956c2",
    "predicate mapping": [
      {
        "label": "employees",
        "uri": "http://dbpedia.org/property/employer"
      },
      {
        "label": "graduate",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Who has stock in the railway lines managed by Norfolk Southern Railway?",
    "SerialNumber": "258",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Norfolk_Southern_Railway> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "entity mapping": [
      {
        "label": "Norfolk Southern Railway",
        "uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway"
      }
    ],
    "id": "3de0478033a3450e981f4086b2f53e3e",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/property/system"
      },
      {
        "label": "managed",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/RailwayLine"
      }
    ]
  },
  {
    "question": "Do the asiana airlines fly  to Jeju airport?",
    "SerialNumber": "265",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Asiana_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Jeju_International_Airport> }",
    "entity mapping": [
      {
        "label": "asiana airlines",
        "uri": "http://dbpedia.org/resource/Asiana_Airlines"
      },
      {
        "label": "Jeju airport",
        "uri": "http://dbpedia.org/resource/Jeju_International_Airport"
      }
    ],
    "id": "89044eb32d9442b1b3b0e8dab3d7a99d",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      }
    ]
  },
  {
    "question": "Which motion picture stories were edited by Ishir Honda?",
    "SerialNumber": "268",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Ishirō_Honda>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Ishir Honda",
        "uri": "http://dbpedia.org/resource/Ishirō_Honda"
      }
    ],
    "id": "c937de2356174723a6ec3e5563b02fa8",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "motion picture",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the location of death of the skier who was the bronze medalist of Alpine skiing at the 1964 Winter Olympics  Men's slalom ?",
    "SerialNumber": "269",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_–_Men's_slalom> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Skier>}",
    "entity mapping": [
      {
        "label": "Alpine skiing at the 1964 Winter Olympics  Men's slalom",
        "uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1964_Winter_Olympics_–_Men's_slalom"
      }
    ],
    "id": "938480f17cdc4fbfaa215a3e4217843d",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist"
      },
      {
        "label": "location of death",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "skier",
        "uri": "http://dbpedia.org/ontology/Skier"
      }
    ]
  },
  {
    "question": "Where all does the sister station of virgin radio play?",
    "SerialNumber": "270",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sisterStation> <http://dbpedia.org/resource/Virgin_Radio> . ?x <http://dbpedia.org/property/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "virgin radio",
        "uri": "http://dbpedia.org/resource/Virgin_Radio"
      }
    ],
    "id": "745acda3a54043fab3bafce782bae4f9",
    "predicate mapping": [
      {
        "label": "sister station",
        "uri": "http://dbpedia.org/ontology/sisterStation"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "What is the affiliation of tani University ?",
    "SerialNumber": "271",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ōtani_University> <http://dbpedia.org/property/affiliation> ?uri } ",
    "entity mapping": [
      {
        "label": "tani University",
        "uri": "http://dbpedia.org/resource/Ōtani_University"
      }
    ],
    "id": "549f424393e345c0b173231ac5954fd1",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "Which rivers originate from Dowra?",
    "SerialNumber": "272",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Dowra> } ",
    "entity mapping": [
      {
        "label": "Dowra",
        "uri": "http://dbpedia.org/resource/Dowra"
      }
    ],
    "id": "2069abd16c734d1f8e9758bea35da77d",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      }
    ]
  },
  {
    "question": "Who was the architect of the stadium currently run by the Pittsburgh Pirates?",
    "SerialNumber": "273",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Pittsburgh_Pirates> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Pittsburgh Pirates",
        "uri": "http://dbpedia.org/resource/Pittsburgh_Pirates"
      }
    ],
    "id": "4d1bbe0ed05744749e253c143259609c",
    "predicate mapping": [
      {
        "label": "run by",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "How many TV shows have been created by Simon Fuller ?",
    "SerialNumber": "274",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "uri": "http://dbpedia.org/resource/Simon_Fuller"
      }
    ],
    "id": "876df0eecd7c4e78a79daa9a1e7b3343",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "TV shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Did Henry Ford design the Model C?",
    "SerialNumber": "276",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Model_C> <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Henry_Ford> }",
    "entity mapping": [
      {
        "label": "Model C",
        "uri": "http://dbpedia.org/resource/Ford_Model_C"
      },
      {
        "label": "Henry Ford",
        "uri": "http://dbpedia.org/resource/Henry_Ford"
      }
    ],
    "id": "4d489bcad0334bd58b83cdeedbd1c5ec",
    "predicate mapping": [
      {
        "label": "design",
        "uri": "http://dbpedia.org/ontology/designCompany"
      }
    ]
  },
  {
    "question": "WHich region of the Providence Chapel, Charlwood is also the region of the Joseph Case High School",
    "SerialNumber": "278",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> ?uri. <http://dbpedia.org/resource/Joseph_Case_High_School> <http://dbpedia.org/ontology/region> ?uri} ",
    "entity mapping": [
      {
        "label": "Providence Chapel, Charlwood",
        "uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood"
      },
      {
        "label": "Joseph Case High School",
        "uri": "http://dbpedia.org/resource/Joseph_Case_High_School"
      }
    ],
    "id": "09b0466736b646098262ca3fce5092aa",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/property/style"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Name the scientist whose supervisor was John Robert Woodyard and has won Norbert Wiener Award for Social and Professional Responsibility?",
    "SerialNumber": "279",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "John Robert Woodyard",
        "uri": "http://dbpedia.org/resource/John_Robert_Woodyard"
      },
      {
        "label": "Norbert Wiener Award for Social and Professional Responsibility",
        "uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility"
      }
    ],
    "id": "2cc0b2ad617642aaace9eab113615942",
    "predicate mapping": [
      {
        "label": "supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Which branch of american military have both George Siebels jr and Leroy Collins served?",
    "SerialNumber": "280",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_G._Siebels,_Jr.> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/LeRoy_Collins> <http://dbpedia.org/property/branch> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "George Siebels jr",
        "uri": "http://dbpedia.org/resource/George_G._Siebels,_Jr."
      },
      {
        "label": "Leroy Collins",
        "uri": "http://dbpedia.org/resource/LeRoy_Collins"
      }
    ],
    "id": "5091ad9fb7954f7b90ab7da686543728",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "What are some relatives of armymen who died in Germany?",
    "SerialNumber": "281",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "Germany",
        "uri": "http://dbpedia.org/resource/Germany"
      }
    ],
    "id": "c4d7c24ab2a34c4ea2ff5945ba35ef69",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "armymen",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "What is the college of the baseball player who lives in Ashton Historic district?",
    "SerialNumber": "284",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ashton_Historic_District> . ?x <http://dbpedia.org/property/college> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "entity mapping": [
      {
        "label": "Ashton Historic district",
        "uri": "http://dbpedia.org/resource/Ashton_Historic_District"
      }
    ],
    "id": "6bd921a06e6e42a39a5c041bfb20eb9e",
    "predicate mapping": [
      {
        "label": "lives",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college"
      },
      {
        "label": "baseball player",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer"
      }
    ]
  },
  {
    "question": "Greater Napanee is the home town of what people?",
    "SerialNumber": "285",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Greater_Napanee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Greater Napanee",
        "uri": "http://dbpedia.org/resource/Greater_Napanee"
      }
    ],
    "id": "489c3ac08b304bbaae50df383689eebe",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the company founded in US and provides OneDrive as service ?",
    "SerialNumber": "288",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive> . ?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "OneDrive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      },
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "2a6c65a45e7249bebfda9d7ab36715ad",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "How many currencies are in used in places where people speak French?",
    "SerialNumber": "293",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/French_language> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Currency>}",
    "entity mapping": [
      {
        "label": "French",
        "uri": "http://dbpedia.org/resource/French_language"
      }
    ],
    "id": "2ffbfa007109419280e603e3a3512ac9",
    "predicate mapping": [
      {
        "label": "speak",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/Currency"
      }
    ]
  },
  {
    "question": "What political party has governed both in Baraily,MP and Jowai?",
    "SerialNumber": "294",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baraily> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Jowai> <http://dbpedia.org/ontology/leaderName> ?uri . }",
    "entity mapping": [
      {
        "label": "Baraily",
        "uri": "http://dbpedia.org/resource/Baraily"
      },
      {
        "label": "Jowai",
        "uri": "http://dbpedia.org/resource/Jowai"
      }
    ],
    "id": "6701db8180aa493ba901a225bd9a6ff2",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "Which officers fought in the war of Siege of Fort Recovery?",
    "SerialNumber": "295",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Siege of Fort Recovery",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery"
      }
    ],
    "id": "5ff2409a01034c5ba98c340602657d3b",
    "predicate mapping": [
      {
        "label": "war",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "officers",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Was Duanne Allman known to play the Les Paul?",
    "SerialNumber": "297",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul> }",
    "entity mapping": [
      {
        "label": "Duanne Allman",
        "uri": "http://dbpedia.org/resource/Duane_Allman"
      },
      {
        "label": "Les Paul",
        "uri": "http://dbpedia.org/resource/Gibson_Les_Paul"
      }
    ],
    "id": "4eba9f2aaa744ba699fd23239145e64b",
    "predicate mapping": [
      {
        "label": "known to play",
        "uri": "http://dbpedia.org/property/notableInstruments"
      }
    ]
  },
  {
    "question": "For which other teams do members of tanzanian national football team play?",
    "SerialNumber": "298",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Tanzania_national_football_team> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Tanzania_national_football_team"
      }
    ],
    "id": "aaab23649cce43d6957cdd09c3a4ea47",
    "predicate mapping": [
      {
        "label": "national team",
        "uri": "http://dbpedia.org/property/nationalteam"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "What is Jon Speelman famous for?",
    "SerialNumber": "302",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri } ",
    "entity mapping": [
      {
        "label": "Jon Speelman",
        "uri": "http://dbpedia.org/resource/Jon_Speelman"
      }
    ],
    "id": "b83ff0ecbd954891879ab98e725eb333",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "tonle sap flows into which river?",
    "SerialNumber": "307",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Tonlé_Sap> } ",
    "entity mapping": [
      {
        "label": "tonle sap",
        "uri": "http://dbpedia.org/resource/Tonlé_Sap"
      }
    ],
    "id": "c1149b9f20bf470fad0154de4f2e72b7",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/rightTributary"
      }
    ]
  },
  {
    "question": "List some teammates of Ndonga Mianga?",
    "SerialNumber": "309",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Ndonga_Mianga> . ?x <http://dbpedia.org/property/name> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ndonga Mianga",
        "uri": "http://dbpedia.org/resource/Ndonga_Mianga"
      }
    ],
    "id": "f0f45ed050d342e9bfdffc12670f1bfc",
    "predicate mapping": [
      {
        "label": "teammates",
        "uri": "http://dbpedia.org/ontology/currentMember"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/property/name"
      }
    ]
  },
  {
    "question": "Give me a count of everything under the archipelago, where Papeete is the biggest town.",
    "SerialNumber": "310",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Papeete> . ?uri <http://dbpedia.org/property/archipelago> ?x  . }",
    "entity mapping": [
      {
        "label": "Papeete",
        "uri": "http://dbpedia.org/resource/Papeete"
      }
    ],
    "id": "3922223c92bd4c62a2b341fe8c73879c",
    "predicate mapping": [
      {
        "label": "biggest town",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago"
      }
    ]
  },
  {
    "question": "Where is Benjamin Franklin Terry buried, and US Route 59 has a junction?",
    "SerialNumber": "314",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Benjamin_Franklin_Terry> <http://dbpedia.org/property/placeofburial> ?uri. <http://dbpedia.org/resource/U.S._Route_59_in_Texas> <http://dbpedia.org/property/junction> ?uri} ",
    "entity mapping": [
      {
        "label": "Benjamin Franklin Terry",
        "uri": "http://dbpedia.org/resource/Benjamin_Franklin_Terry"
      },
      {
        "label": "US Route 59",
        "uri": "http://dbpedia.org/resource/U.S._Route_59_in_Texas"
      }
    ],
    "id": "f86ad7519a244286acaa2a1bf42446cf",
    "predicate mapping": [
      {
        "label": "buried,",
        "uri": "http://dbpedia.org/property/placeofburial"
      },
      {
        "label": "junction",
        "uri": "http://dbpedia.org/property/junction"
      }
    ]
  },
  {
    "question": "Where were the doctoral students of James Langer born?",
    "SerialNumber": "315",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/James_S._Langer> <http://dbpedia.org/ontology/doctoralStudent> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "entity mapping": [
      {
        "label": "James Langer",
        "uri": "http://dbpedia.org/resource/James_S._Langer"
      }
    ],
    "id": "d50f2ea2f8f0440c87444bcf085f6899",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Was A foreign policy on freedom covered by John Trumbull?",
    "SerialNumber": "316",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom> <http://dbpedia.org/property/coverArtist> <http://dbpedia.org/resource/John_Trumbull> }",
    "entity mapping": [
      {
        "label": "freedom foreign policy",
        "uri": "http://dbpedia.org/resource/A_Foreign_Policy_of_Freedom"
      },
      {
        "label": "John Trumbull",
        "uri": "http://dbpedia.org/resource/John_Trumbull"
      }
    ],
    "id": "e6f3d395b66f485cb8901bfbcb1c4c0c",
    "predicate mapping": [
      {
        "label": "covered",
        "uri": "http://dbpedia.org/property/coverArtist"
      }
    ]
  },
  {
    "question": "What company's leader is Edwin Catmull?",
    "SerialNumber": "318",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Edwin Catmull",
        "uri": "http://dbpedia.org/resource/Edwin_Catmull"
      }
    ],
    "id": "9650115540914f179ceb06bf8beef981",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What are some companies which are founded in Dallas Jurisdiction?",
    "SerialNumber": "321",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Dallas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Dallas",
        "uri": "http://dbpedia.org/resource/Dallas"
      }
    ],
    "id": "4b257aeff6b340ebb07ca27538749ed4",
    "predicate mapping": [
      {
        "label": "Jusrisdiction",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which philosophy journal has compiler as Stephen Law ?",
    "SerialNumber": "323",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Stephen_Law> . ?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "Stephen Law",
        "uri": "http://dbpedia.org/resource/Stephen_Law"
      },
      {
        "label": "philosophy",
        "uri": "http://dbpedia.org/resource/Philosophy"
      }
    ],
    "id": "01710e1b53c94aaf85bd50e8344efefa",
    "predicate mapping": [
      {
        "label": "compiler",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/property/discipline"
      },
      {
        "label": "journal",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "In which country is there a political party whose leader is Jose Cha Cha Jimenez?",
    "SerialNumber": "326",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez> . ?x <http://dbpedia.org/property/international> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "entity mapping": [
      {
        "label": "Jose Cha Cha Jimenez",
        "uri": "http://dbpedia.org/resource/Jose_Cha_Cha_Jimenez"
      }
    ],
    "id": "023818b03dce457481b4859b9adf89c5",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/property/international"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/PoliticalParty"
      }
    ]
  },
  {
    "question": "Which mascot of Celal Bayer university is also the nickname of kore Presbyterian Theological Seminar ?",
    "SerialNumber": "329",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary> <http://dbpedia.org/property/nickname> ?uri. <http://dbpedia.org/resource/Celal_Bayar_University> <http://dbpedia.org/property/mascot> ?uri} ",
    "entity mapping": [
      {
        "label": "kore Presbyterian Theological Seminar",
        "uri": "http://dbpedia.org/resource/Korea_Presbyterian_Theological_Seminary"
      },
      {
        "label": "Celal Bayer university",
        "uri": "http://dbpedia.org/resource/Celal_Bayar_University"
      }
    ],
    "id": "aa123035cddf49b293de9bdddbd4fcf9",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Give me some series related to the one which had Yasmin Paige in them.",
    "SerialNumber": "331",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Yasmin_Paige> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Yasmin Paige",
        "uri": "http://dbpedia.org/resource/Yasmin_Paige"
      }
    ],
    "id": "f2e2e1b4a67049c092236c11cfbef795",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "With whom is Heinz Kokott a relative to who also served Nazi Army?",
    "SerialNumber": "332",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Kokott> <http://dbpedia.org/ontology/relation> ?uri } ",
    "entity mapping": [
      {
        "label": "Heinz Kokott",
        "uri": "http://dbpedia.org/resource/Heinz_Kokott"
      }
    ],
    "id": "32db83b5ad5b4e198ff2e7e7eee6f790",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "What are the towns who have Thesaban system?",
    "SerialNumber": "337",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Thesaban>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}",
    "entity mapping": [
      {
        "label": "Thesaban",
        "uri": "http://dbpedia.org/resource/Thesaban"
      }
    ],
    "id": "07133019a5a74f7f83b418752c785bbf",
    "predicate mapping": [
      {
        "label": "system",
        "uri": "http://dbpedia.org/property/settlementType"
      },
      {
        "label": "town",
        "uri": "http://dbpedia.org/ontology/Town"
      }
    ]
  },
  {
    "question": "Which TV show's  opening theme is The Best of Both Worlds (song) and executive producer is Steven Peterman?",
    "SerialNumber": "341",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)> . ?uri <http://dbpedia.org/property/executiveProducer> <http://dbpedia.org/resource/Steven_Peterman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "The Best of Both Worlds (song)",
        "uri": "http://dbpedia.org/resource/The_Best_of_Both_Worlds_(song)"
      },
      {
        "label": "Steven Peterman",
        "uri": "http://dbpedia.org/resource/Steven_Peterman"
      }
    ],
    "id": "53a9beca92384cdda4e74205f5800cb0",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/property/executiveProducer"
      },
      {
        "label": "TV show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Paul Morphy compiled journals of which field?",
    "SerialNumber": "343",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/editor> <http://dbpedia.org/resource/Paul_Morphy> . ?x <http://dbpedia.org/property/discipline> ?uri  . }",
    "entity mapping": [
      {
        "label": "Paul Morphy",
        "uri": "http://dbpedia.org/resource/Paul_Morphy"
      }
    ],
    "id": "337774a6b5bc4fb4bdf86ecb5abf0a33",
    "predicate mapping": [
      {
        "label": "compiled",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "field",
        "uri": "http://dbpedia.org/property/discipline"
      }
    ]
  },
  {
    "question": "In which city is Corringham railway station located?",
    "SerialNumber": "354",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Corringham_railway_station> <http://dbpedia.org/property/borough> ?uri } ",
    "entity mapping": [
      {
        "label": "Corringham railway station",
        "uri": "http://dbpedia.org/resource/Corringham_railway_station"
      }
    ],
    "id": "00a22ab72d9d4286a7d3d61c4d67c0b4",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/borough"
      }
    ]
  },
  {
    "question": "Did stan lee narrate the incredible hulk tv show?",
    "SerialNumber": "355",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/ontology/narrator> <http://dbpedia.org/resource/Stan_Lee> }",
    "entity mapping": [
      {
        "label": "incredible hulk",
        "uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)"
      },
      {
        "label": "stan lee",
        "uri": "http://dbpedia.org/resource/Stan_Lee"
      }
    ],
    "id": "4d935fb5d0694c4fbfba00b5d22705a2",
    "predicate mapping": [
      {
        "label": "narrate",
        "uri": "http://dbpedia.org/ontology/narrator"
      }
    ]
  },
  {
    "question": "Where do the sister stations of Al Khaleejiya 100.9 play?",
    "SerialNumber": "357",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Khaleejiya_100.9> . ?x <http://dbpedia.org/property/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "Al Khaleejiya 100.9",
        "uri": "http://dbpedia.org/resource/Al_Khaleejiya_100.9"
      }
    ],
    "id": "fd3f2656075c476493d51a420c168054",
    "predicate mapping": [
      {
        "label": "sister stations",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "Which sports are played in schools affiliated with the Harvest Christian Center?",
    "SerialNumber": "358",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Harvest_Christian_Center> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Harvest Christian Center",
        "uri": "http://dbpedia.org/resource/Harvest_Christian_Center"
      }
    ],
    "id": "74a2300b33df4ad6a44b4184c0c8642d",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "What is common between sports played at Fr Agnel School and Jr college, and the genre of Virtual Kasparov?",
    "SerialNumber": "360",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Virtual_Kasparov> <http://dbpedia.org/ontology/genre> ?uri. <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "Virtual Kasparov",
        "uri": "http://dbpedia.org/resource/Virtual_Kasparov"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College"
      }
    ],
    "id": "4cb08818578d4dfaa26b1d3490c0610a",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "How many different genres of games are produced by Blizzard?",
    "SerialNumber": "362",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "blizzard",
        "uri": "http://dbpedia.org/resource/Blizzard_Entertainment"
      }
    ],
    "id": "9f609480ea4647028bd3694a224482f1",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "Name the river flowing through Reading and source place as Gloucestershire ?",
    "SerialNumber": "364",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Gloucestershire>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "reading",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire"
      },
      {
        "label": "Gloucestershire",
        "uri": "http://dbpedia.org/resource/Gloucestershire"
      }
    ],
    "id": "304ccd0b380a4d59a9dfc01c77cf3ec1",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "List the people who were born in Gelnhausen and graduated from Pepperdine University?",
    "SerialNumber": "365",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Gelnhausen> . ?uri <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Pepperdine_University>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Gelnhausen",
        "uri": "http://dbpedia.org/resource/Gelnhausen"
      },
      {
        "label": "Pepperdine University",
        "uri": "http://dbpedia.org/resource/Pepperdine_University"
      }
    ],
    "id": "ad3dd519fa5749e789a15373b17b25db",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who was in conflicts of Fort Barrancas and Gadsden?",
    "SerialNumber": "368",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Barrancas> . ?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden> . }",
    "entity mapping": [
      {
        "label": "Fort Barrancas",
        "uri": "http://dbpedia.org/resource/Fort_Barrancas"
      },
      {
        "label": "gadsden fort",
        "uri": "http://dbpedia.org/resource/Fort_Gadsden"
      }
    ],
    "id": "56d56e554afa47df8316e2975165949d",
    "predicate mapping": [
      {
        "label": "in conflict",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "in conflict",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "Which university was attended by both Richard H Immerman and Franklin W Olin?",
    "SerialNumber": "369",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_H._Immerman> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Franklin_W._Olin> <http://dbpedia.org/property/education> ?uri . }",
    "entity mapping": [
      {
        "label": "immerman richard",
        "uri": "http://dbpedia.org/resource/Richard_H._Immerman"
      },
      {
        "label": "franklin olin",
        "uri": "http://dbpedia.org/resource/Franklin_W._Olin"
      }
    ],
    "id": "ba2570473e36467c8a631f60944cd2bd",
    "predicate mapping": [
      {
        "label": "attended",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "attended",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "Name someone known for a project involved in the Occupation of Japan?",
    "SerialNumber": "370",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Occupation_of_Japan> . ?uri <http://dbpedia.org/property/knownFor> ?x  . }",
    "entity mapping": [
      {
        "label": "Occupation of Japan",
        "uri": "http://dbpedia.org/resource/Occupation_of_Japan"
      }
    ],
    "id": "2a27443085d84446813f5a30b2152d6c",
    "predicate mapping": [
      {
        "label": "project",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "What are Monrow Carell Jr Children Hospital and Vanderbilt University Medical Center both affiliated with?",
    "SerialNumber": "371",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Vanderbilt_University_Medical_Center> <http://dbpedia.org/property/affiliation> ?uri . }",
    "entity mapping": [
      {
        "label": "vanderbilt hospital children",
        "uri": "http://dbpedia.org/resource/Monroe_Carell_Jr._Children's_Hospital_at_Vanderbilt"
      },
      {
        "label": "Vanderbilt University Medical Center",
        "uri": "http://dbpedia.org/resource/Vanderbilt_University_Medical_Center"
      }
    ],
    "id": "38c50543e2ca4c8ba2f11406ebb1f0c9",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "What are some cars which came before the ones on a GM B base?",
    "SerialNumber": "372",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/GM_B_platform> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "GM B",
        "uri": "http://dbpedia.org/resource/GM_B_platform"
      }
    ],
    "id": "5dd1957c2b5c46c4bcb3c8d94b4df437",
    "predicate mapping": [
      {
        "label": "base",
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      },
      {
        "label": "before",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "What is the awards given to the horse whose grandson is the famous Counterpoint?",
    "SerialNumber": "374",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Counterpoint_(horse)> <http://dbpedia.org/property/grandsire> ?x . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Counterpoint",
        "uri": "http://dbpedia.org/resource/Counterpoint_(horse)"
      }
    ],
    "id": "400f95dfb86547a18c1426b3fc417bb7",
    "predicate mapping": [
      {
        "label": "grandson",
        "uri": "http://dbpedia.org/property/grandsire"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "what kind of games can I find for PC 9800?",
    "SerialNumber": "375",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/PC-9800_Series> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "9800",
        "uri": "http://dbpedia.org/resource/PC-9800_Series"
      }
    ],
    "id": "7da5440ab8834b4ca92805e80dd7b5a2",
    "predicate mapping": [
      {
        "label": "PC",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "kind",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Count all the ethinic group who speaks language which belongs to Anglo-Frisian language family ?",
    "SerialNumber": "376",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Anglo-Frisian_languages> . ?uri <http://dbpedia.org/property/languages> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "entity mapping": [
      {
        "label": "Anglo-Frisian language ",
        "uri": "http://dbpedia.org/resource/Anglo-Frisian_languages"
      }
    ],
    "id": "786455b1e7fa4fed9f46d49db488e88d",
    "predicate mapping": [
      {
        "label": "language family",
        "uri": "http://dbpedia.org/ontology/languageFamily"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/languages"
      },
      {
        "label": "ethinic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup"
      }
    ]
  },
  {
    "question": "Name all those whose spouses have performed with Tony Bennett?",
    "SerialNumber": "377",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Tony_Bennett> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }",
    "entity mapping": [
      {
        "label": "Tony Bennett",
        "uri": "http://dbpedia.org/resource/Tony_Bennett"
      }
    ],
    "id": "bd739b63ea0e48d19bbd74153447ff73",
    "predicate mapping": [
      {
        "label": "performed",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "What are the books written by the the person who made the Novelas ejemplares?",
    "SerialNumber": "379",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Novelas ejemplares",
        "uri": "http://dbpedia.org/resource/Novelas_ejemplares"
      }
    ],
    "id": "7881083538c54de4a888d1e28df7238c",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Whos a famous relative of anne spielberg?",
    "SerialNumber": "380",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Anne_Spielberg>  . }",
    "entity mapping": [
      {
        "label": "anne spielberg",
        "uri": "http://dbpedia.org/resource/Anne_Spielberg"
      }
    ],
    "id": "815d064630b3451baa5acb5bedd5e7ad",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "Name the TV show whose network is NBC and is the subsequent work of Fraiser ?",
    "SerialNumber": "381",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "NBC",
        "uri": "http://dbpedia.org/resource/NBC"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Frasier"
      }
    ],
    "id": "ace6e364c8cc4f1fb0813dc404b6fae6",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where is the grave of Ivan III of Russia ?",
    "SerialNumber": "387",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivan_III_of_Russia> <http://dbpedia.org/property/placeOfBurial> ?uri } ",
    "entity mapping": [
      {
        "label": "Ivan III",
        "uri": "http://dbpedia.org/resource/Ivan_III_of_Russia"
      }
    ],
    "id": "3aaf4525a6d24e27be8fe037d5ba28c2",
    "predicate mapping": [
      {
        "label": "grave",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      }
    ]
  },
  {
    "question": "how many companies are located in a spanish speaking region?",
    "SerialNumber": "392",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "spanish",
        "uri": "http://dbpedia.org/resource/Spanish_language"
      }
    ],
    "id": "b541f708c7fd48ad8eb1c5c9489444e1",
    "predicate mapping": [
      {
        "label": "speaking",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "located in",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "What are some US citizens famous for?",
    "SerialNumber": "393",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "88f9b624d17b45edb9e1ec11cdb1db22",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Which genre of books are published by Random House?",
    "SerialNumber": "394",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/Random_House> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Random House",
        "uri": "http://dbpedia.org/resource/Random_House"
      }
    ],
    "id": "246e38b975c94fdbbbe94ec51f1540eb",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/subject"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Name the office holder whose child is Lori Black and predecessor is Henry E. Catto Jr ?",
    "SerialNumber": "395",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Henry_E._Catto,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Lori Black",
        "uri": "http://dbpedia.org/resource/Lori_Black"
      },
      {
        "label": "henry catto",
        "uri": "http://dbpedia.org/resource/Henry_E._Catto,_Jr."
      }
    ],
    "id": "c919ac2e708f41ee93b91d3731428939",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "How many golf players are there in Arizona State Sun Devils ?",
    "SerialNumber": "396",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Arizona_State_Sun_Devils>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GolfPlayer>}",
    "entity mapping": [
      {
        "label": "Arizona State Sun Devils",
        "uri": "http://dbpedia.org/resource/Arizona_State_Sun_Devils"
      }
    ],
    "id": "279ba468ad7c402ea5b91c6b11a7dd1c",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "golf player",
        "uri": "http://dbpedia.org/ontology/GolfPlayer"
      }
    ]
  },
  {
    "question": "Which rivers start in Wyoming?",
    "SerialNumber": "397",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Wyoming> } ",
    "entity mapping": [
      {
        "label": "Wyoming",
        "uri": "http://dbpedia.org/resource/Wyoming"
      }
    ],
    "id": "5e356a23a8734f9d987c09850314cf36",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceRegion"
      }
    ]
  },
  {
    "question": "What country is Jeffrey Werleman from, which also has the American Mediterranean Sea?",
    "SerialNumber": "400",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jeffrey_Werleman> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/ontology/country> ?uri . }",
    "entity mapping": [
      {
        "label": "Jeffrey Werleman",
        "uri": "http://dbpedia.org/resource/Jeffrey_Werleman"
      },
      {
        "label": "American Mediterranean Sea",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea"
      }
    ],
    "id": "c5ddb0c77d054690b00ec818448e108c",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "The Prime minister who worked in the Khmer Issarak follows which religion?",
    "SerialNumber": "401",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Khmer_Issarak> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PrimeMinister>}",
    "entity mapping": [
      {
        "label": "Khmer Issarak",
        "uri": "http://dbpedia.org/resource/Khmer_Issarak"
      }
    ],
    "id": "a785e76da4ec49cea487642d65c77144",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "Prime minister",
        "uri": "http://dbpedia.org/ontology/PrimeMinister"
      }
    ]
  },
  {
    "question": "List the other members of the team where Jason Hayne currently plays?",
    "SerialNumber": "408",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Jason_Hayne> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OrganisationMember>}",
    "entity mapping": [
      {
        "label": "Jason Hayne",
        "uri": "http://dbpedia.org/resource/Jason_Hayne"
      }
    ],
    "id": "25b1049cd35247ecb0c2f42335ca48a1",
    "predicate mapping": [
      {
        "label": "currently plays",
        "uri": "http://dbpedia.org/ontology/currentMember"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/OrganisationMember"
      }
    ]
  },
  {
    "question": "List the newspapers whose offices are situated in 1211 Avenue of the Americas?",
    "SerialNumber": "413",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/1211_Avenue_of_the_Americas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "1211 Avenue of the Americas",
        "uri": "http://dbpedia.org/resource/1211_Avenue_of_the_Americas"
      }
    ],
    "id": "f068beeb6bd0423cb18dd641ec14bc2f",
    "predicate mapping": [
      {
        "label": "offices",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "Name the sitcoms whose network's owning company is Chris-Craft Industries?",
    "SerialNumber": "416",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Chris-Craft_Industries> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Chris-Craft Industries",
        "uri": "http://dbpedia.org/resource/Chris-Craft_Industries"
      }
    ],
    "id": "e9433939da964198814e9dcd3e3cdc47",
    "predicate mapping": [
      {
        "label": "owning company",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "sitcoms",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which astronauts went on the Gemini 8 mission?",
    "SerialNumber": "417",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
    "entity mapping": [
      {
        "label": "Gemini 8",
        "uri": "http://dbpedia.org/resource/Gemini_8"
      }
    ],
    "id": "dbc798f969d840c7b737048f657342d2",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut"
      }
    ]
  },
  {
    "question": "How many developers have games where I can hear Lightning McQueen?",
    "SerialNumber": "418",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Lightning_McQueen> <http://dbpedia.org/ontology/voice> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lightning McQueen",
        "uri": "http://dbpedia.org/resource/Lightning_McQueen"
      }
    ],
    "id": "00da309171bc4424aad2bbb3071aee17",
    "predicate mapping": [
      {
        "label": "hear",
        "uri": "http://dbpedia.org/ontology/voice"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Does Caroline Augusta Foley Rhys Davids study Buddhism?",
    "SerialNumber": "421",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Buddhism> }",
    "entity mapping": [
      {
        "label": "Caroline Augusta Foley Rhys Davids",
        "uri": "http://dbpedia.org/resource/Caroline_Augusta_Foley_Rhys_Davids"
      },
      {
        "label": "Buddhism",
        "uri": "http://dbpedia.org/resource/Buddhism"
      }
    ],
    "id": "115415a95f22482aa6e5441ccf0b6f31",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "In how many other states do people live, whose languages are spoken in Nebraska?",
    "SerialNumber": "423",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Nebraska> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . }",
    "entity mapping": [
      {
        "label": "Nebraska",
        "uri": "http://dbpedia.org/resource/Nebraska"
      }
    ],
    "id": "4d672dceaf7f4e9382ae34c3623f7b85",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "states",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "Who founded the city where First Church of Christ, Scientist is located?",
    "SerialNumber": "424",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)> <http://dbpedia.org/property/locationTown> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }",
    "entity mapping": [
      {
        "label": "First Church of Christ, Scientist",
        "uri": "http://dbpedia.org/resource/First_Church_of_Christ,_Scientist_(Pittsburgh)"
      }
    ],
    "id": "366d5c6e16434f55ad841357ad55f327",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationTown"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/founder"
      }
    ]
  },
  {
    "question": "Name the team for which Cam Plante played for which were also the tenants of MasterCard center ?",
    "SerialNumber": "428",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cam_Plante> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri} ",
    "entity mapping": [
      {
        "label": "Cam Plante",
        "uri": "http://dbpedia.org/resource/Cam_Plante"
      },
      {
        "label": "mastercard",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre"
      }
    ],
    "id": "24e7a1c8ce674304a0400059c245e3d3",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "Where is Carmel Winery?",
    "SerialNumber": "430",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Carmel_Winery> <http://dbpedia.org/property/locationCountry> ?uri } ",
    "entity mapping": [
      {
        "label": "Carmel Winery",
        "uri": "http://dbpedia.org/resource/Carmel_Winery"
      }
    ],
    "id": "89ed257c1a244e339c0b5129de2cbce9",
    "predicate mapping": [
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/locationCountry"
      }
    ]
  },
  {
    "question": "List the stadium of the teams which uses Nea Smyrni  as one of the stadium ?",
    "SerialNumber": "432",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Nea_Smyrni_Stadium> . ?x <http://dbpedia.org/property/stadium> ?uri  . }",
    "entity mapping": [
      {
        "label": "stadium smyrni",
        "uri": "http://dbpedia.org/resource/Nea_Smyrni_Stadium"
      }
    ],
    "id": "a7070d6a40cf48d4bf91099e23350ddf",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium"
      }
    ]
  },
  {
    "question": "What awards have been awarded both to Ingmar bergman and James O'Brien?",
    "SerialNumber": "433",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ingmar_Bergman> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/James_F._O'Brien> <http://dbpedia.org/ontology/award> ?uri} ",
    "entity mapping": [
      {
        "label": "Ingmar bergman",
        "uri": "http://dbpedia.org/resource/Ingmar_Bergman"
      },
      {
        "label": "o'brien james",
        "uri": "http://dbpedia.org/resource/James_F._O'Brien"
      }
    ],
    "id": "4df17f35aff7484b8f81fb0f1fafd50f",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "List the colonel with branch as Militia ?",
    "SerialNumber": "434",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }",
    "entity mapping": [
      {
        "label": "Militia",
        "uri": "http://dbpedia.org/resource/Militia"
      },
      {
        "label": "colonel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)"
      }
    ],
    "id": "378830c0afdf4906b1f824f35f822318",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "with",
        "uri": "http://dbpedia.org/property/rank"
      }
    ]
  },
  {
    "question": "How many companies are located in Toronto ?",
    "SerialNumber": "435",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      }
    ],
    "id": "bc0a6b36790b465ea463c2ec3ead0fda",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the chairman of the soccer club for which Mike Salmon currently plays?",
    "SerialNumber": "436",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mike_Salmon> <http://dbpedia.org/property/currentclub> ?x . ?x <http://dbpedia.org/property/chairman> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "Mike Salmon",
        "uri": "http://dbpedia.org/resource/Mike_Salmon"
      }
    ],
    "id": "0ce4ccee1f484ba7b18881040f845d12",
    "predicate mapping": [
      {
        "label": "currently plays",
        "uri": "http://dbpedia.org/property/currentclub"
      },
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "Who is a successor of Kingship whose parents were Julius Caesar?",
    "SerialNumber": "437",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Julius_Caesar> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Julius Caesar",
        "uri": "http://dbpedia.org/resource/Julius_Caesar"
      }
    ],
    "id": "2c3ccc326827477db7ba435118944617",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "Kingship",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Who wrote the musical based on Mary Poppins?",
    "SerialNumber": "438",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/basedOn> <http://dbpedia.org/resource/Mary_Poppins> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "Mary Poppins",
        "uri": "http://dbpedia.org/resource/Mary_Poppins"
      }
    ],
    "id": "e6871a80517d4e3a993fc667347d30aa",
    "predicate mapping": [
      {
        "label": "based on",
        "uri": "http://dbpedia.org/ontology/basedOn"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "Which fields are covered by academic journals in the US?",
    "SerialNumber": "440",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "a60454067d7b4592bc6169e7a7d9a6cd",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/discipline"
      },
      {
        "label": "academic journal",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "What river ends in Indian Ocean and also starts somewhere in Zambia?",
    "SerialNumber": "441",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Indian_Ocean> . ?uri <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Indian Ocean",
        "uri": "http://dbpedia.org/resource/Indian_Ocean"
      },
      {
        "label": "Zambia",
        "uri": "http://dbpedia.org/resource/Zambia"
      }
    ],
    "id": "198cb4233ecc4e64a23d2ce9e2c20cc9",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Where do the people, famous for the Panathinaikos FC reside?",
    "SerialNumber": "442",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Panathinaikos_F.C.> . ?x <http://dbpedia.org/property/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Panathinaikos FC",
        "uri": "http://dbpedia.org/resource/Panathinaikos_F.C."
      }
    ],
    "id": "7f2f6e1a38ab4f07be61d11e39732b54",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "reside",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many people have voiced characters sculpted by Clamp?",
    "SerialNumber": "443",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Clamp_(manga_artists)> . ?x <http://dbpedia.org/ontology/voice> ?uri  . }",
    "entity mapping": [
      {
        "label": "Clamp",
        "uri": "http://dbpedia.org/resource/Clamp_(manga_artists)"
      }
    ],
    "id": "6d4c25756b6346589f78aefa48a0d4ec",
    "predicate mapping": [
      {
        "label": "sculpted",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      }
    ]
  },
  {
    "question": "To which company does Raymond Conner is critical to?",
    "SerialNumber": "444",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "uri": "http://dbpedia.org/resource/Raymond_Conner"
      }
    ],
    "id": "a78468ab14af48d8a7e5c8649b7b7da6",
    "predicate mapping": [
      {
        "label": "critical",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the death place of the Elbieta Czartoryska which is also place of birth of the Charles Journet",
    "SerialNumber": "446",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elżbieta_Czartoryska_(1905–1989)> <http://dbpedia.org/property/deathPlace> ?uri. <http://dbpedia.org/resource/Charles_Journet> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "czartoryska",
        "uri": "http://dbpedia.org/resource/Elżbieta_Czartoryska_(1905–1989)"
      },
      {
        "label": "Charles Journet",
        "uri": "http://dbpedia.org/resource/Charles_Journet"
      }
    ],
    "id": "46ae412ded1647d0af1f52f6db1953d7",
    "predicate mapping": [
      {
        "label": "death place",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "In which country did Philippe tesnire and judson huss die?",
    "SerialNumber": "448",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philippe_Tesnière> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/placeOfDeath> ?uri . }",
    "entity mapping": [
      {
        "label": "Philippe tesnire",
        "uri": "http://dbpedia.org/resource/Philippe_Tesnière"
      },
      {
        "label": "judson huss",
        "uri": "http://dbpedia.org/resource/Judson_Huss"
      }
    ],
    "id": "be2d43507d27490580cef0ab4aca9355",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Which shows are voiced be US citizens?",
    "SerialNumber": "449",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "ce1b21f49b74424fb4c6ab11cc56fedd",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who has starred in the amusement park attractions where Jim Dooley was performing?",
    "SerialNumber": "450",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Jim_Dooley> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmusementParkAttraction>}",
    "entity mapping": [
      {
        "label": "Jim Dooley",
        "uri": "http://dbpedia.org/resource/Jim_Dooley"
      }
    ],
    "id": "9d8c57c836a840a28c591ca7d8a2de8d",
    "predicate mapping": [
      {
        "label": "performing",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "starred",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "amusement park attraction",
        "uri": "http://dbpedia.org/ontology/AmusementParkAttraction"
      }
    ]
  },
  {
    "question": "Was Derg the anthem of Ethopia?",
    "SerialNumber": "451",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Derg> <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Ethiopia> }",
    "entity mapping": [
      {
        "label": "Derg",
        "uri": "http://dbpedia.org/resource/Derg"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Ethiopia"
      }
    ],
    "id": "e56c54175e0941fd9afe385c983ce16a",
    "predicate mapping": [
      {
        "label": "anthem",
        "uri": "http://dbpedia.org/ontology/anthem"
      }
    ]
  },
  {
    "question": "what region is governed by Mario Olivero?",
    "SerialNumber": "453",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Mario_Oliverio> } ",
    "entity mapping": [
      {
        "label": "Mario Olivero",
        "uri": "http://dbpedia.org/resource/Mario_Oliverio"
      }
    ],
    "id": "ea7a3cc64bcc4334ad16e18130602c7f",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leader"
      }
    ]
  },
  {
    "question": "Count the different origins of members of the Vitis Vinifera species.",
    "SerialNumber": "459",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Vitis Vinifera",
        "uri": "http://dbpedia.org/resource/Vitis_vinifera"
      }
    ],
    "id": "96454da162fa47f48d85f23ed72f4933",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Where do the airlines garrisoned at Manchester airport fly to?",
    "SerialNumber": "463",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Manchester_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Manchester airport",
        "uri": "http://dbpedia.org/resource/Manchester_Airport"
      }
    ],
    "id": "4c039e3d1eab4b4e906e046cc3096bbc",
    "predicate mapping": [
      {
        "label": "garrisoned",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "fly to",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "List the show related to the which was followed by Doctor Who Extra?",
    "SerialNumber": "466",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Doctor_Who_Extra> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Doctor Who Extra",
        "uri": "http://dbpedia.org/resource/Doctor_Who_Extra"
      }
    ],
    "id": "09ec259ff20c48b09885b7efccb5acd0",
    "predicate mapping": [
      {
        "label": "followed by",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the result of the GazaIsrael conflict is also  the  place of the Qaqun?",
    "SerialNumber": "470",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gaza–Israel_conflict> <http://dbpedia.org/property/result> ?uri. <http://dbpedia.org/resource/Qaqun> <http://dbpedia.org/property/place> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gaza–Israel_conflict"
      },
      {
        "label": "Qaqun",
        "uri": "http://dbpedia.org/resource/Qaqun"
      }
    ],
    "id": "03e2743086c3467287d376e6e7e01dea",
    "predicate mapping": [
      {
        "label": "result",
        "uri": "http://dbpedia.org/property/result"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/place"
      }
    ]
  },
  {
    "question": "Members of how many political parties have died in Delhi?",
    "SerialNumber": "471",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Delhi",
        "uri": "http://dbpedia.org/resource/Delhi"
      }
    ],
    "id": "7a22387ad6c34f20a9681b0d18d27390",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "To how many places does the airlines fly, whose head office is located at the Gatwick Airport?",
    "SerialNumber": "472",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Gatwick Airport",
        "uri": "http://dbpedia.org/resource/Gatwick_Airport"
      }
    ],
    "id": "80727b167d9247f4a7228327aa7d521a",
    "predicate mapping": [
      {
        "label": "head office",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "fly",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Where do current famous NatGeo photographers live?",
    "SerialNumber": "475",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/National_Geographic_(magazine)> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Photographer>}",
    "entity mapping": [
      {
        "label": "NatGeo",
        "uri": "http://dbpedia.org/resource/National_Geographic_(magazine)"
      }
    ],
    "id": "6665d7d8a4f34fc1953ceda037ad3451",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "photographer",
        "uri": "http://dbpedia.org/ontology/Photographer"
      }
    ]
  },
  {
    "question": "How many awards have been given to Italians?",
    "SerialNumber": "476",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Italy> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Itali",
        "uri": "http://dbpedia.org/resource/Italy"
      }
    ],
    "id": "0e7a98d81f2644ccad9cf21e77378c3b",
    "predicate mapping": [
      {
        "label": "ans",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Is Hyundai Lavita assembled in Malaysia?",
    "SerialNumber": "478",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Malaysia> }",
    "entity mapping": [
      {
        "label": "Hyundai Lavita",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita"
      },
      {
        "label": "Malaysia",
        "uri": "http://dbpedia.org/resource/Malaysia"
      }
    ],
    "id": "576ea9f202d7463cb793f77628511e97",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/assembly"
      }
    ]
  },
  {
    "question": "List the shrines of the saint whose one of the shrine is Ponza ?",
    "SerialNumber": "483",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/majorShrine> <http://dbpedia.org/resource/Poznań> . ?x <http://dbpedia.org/ontology/majorShrine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Poznań"
      }
    ],
    "id": "cf7aca2e48a445299efbf5664c867e8e",
    "predicate mapping": [
      {
        "label": "shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "shrine",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint"
      }
    ]
  },
  {
    "question": "Who is the former partner of the pupil of Dalilah Sappenfield?",
    "SerialNumber": "485",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Dalilah_Sappenfield> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . }",
    "entity mapping": [
      {
        "label": "Dalilah Sappenfield",
        "uri": "http://dbpedia.org/resource/Dalilah_Sappenfield"
      }
    ],
    "id": "1422749d46f24fb7bf292b5370dcae01",
    "predicate mapping": [
      {
        "label": "pupil",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "former partner",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      }
    ]
  },
  {
    "question": "Who died due to Morphine ?",
    "SerialNumber": "486",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Morphine>  . }",
    "entity mapping": [
      {
        "label": "Morphine",
        "uri": "http://dbpedia.org/resource/Morphine"
      }
    ],
    "id": "44bacf63913b413c97f15d7f4de91547",
    "predicate mapping": [
      {
        "label": "died due",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "How many people were opponents of the ones buried in the tower of London?",
    "SerialNumber": "488",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Tower_of_London> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "tower of London",
        "uri": "http://dbpedia.org/resource/Tower_of_London"
      }
    ],
    "id": "8f2af1e74b9f40ac84e66b6aea4f3770",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the common university of the Cardinal and Jim Wylie?",
    "SerialNumber": "489",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Jim_Wylie> <http://dbpedia.org/ontology/university> ?uri . }",
    "entity mapping": [
      {
        "label": "cardinal",
        "uri": "http://dbpedia.org/resource/Stanford_Cardinal"
      },
      {
        "label": "Jim Wylie",
        "uri": "http://dbpedia.org/resource/Jim_Wylie"
      }
    ],
    "id": "dbf6b1fd3ef142aa8fa7dadd70dcd502",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university"
      }
    ]
  },
  {
    "question": "In which country did the planes designed by Ursula Hanle originate?",
    "SerialNumber": "491",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Ursula_Hänle> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}",
    "entity mapping": [
      {
        "label": "Ursula Hanle",
        "uri": "http://dbpedia.org/resource/Ursula_Hänle"
      }
    ],
    "id": "abc719a6e7a1435ba3b1472897a5249c",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      },
      {
        "label": "planes",
        "uri": "http://dbpedia.org/ontology/Aircraft"
      }
    ]
  },
  {
    "question": "From how many different institutes have the members of Judge Advocate General's Corps graduated?",
    "SerialNumber": "493",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "entity mapping": [
      {
        "label": "Judge Advocate General 's Corps",
        "uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army"
      }
    ],
    "id": "e8328bd8391f448d93a1ea6a456e32dd",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      },
      {
        "label": "graduated",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "institutes",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution"
      }
    ]
  },
  {
    "question": "Which newspaper owned by Schibsted is published in Swedish ?",
    "SerialNumber": "494",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/Schibsted>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "swedish",
        "uri": "http://dbpedia.org/resource/Swedish_language"
      },
      {
        "label": "Schibsted",
        "uri": "http://dbpedia.org/resource/Schibsted"
      }
    ],
    "id": "d06c3f86937f45449b1e81e9448f48ed",
    "predicate mapping": [
      {
        "label": "Swedish",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "In how many different places have ehtics philosophers died?",
    "SerialNumber": "495",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Ethics"
      }
    ],
    "id": "f2abcff9c290486ab8f1affd60f412f8",
    "predicate mapping": [
      {
        "label": "philosophers",
        "uri": "http://dbpedia.org/property/mainInterests"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "What political ideology of the Palang Dharma Party is relegion of Inthakin?",
    "SerialNumber": "496",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Inthakin> <http://dbpedia.org/ontology/type> ?uri} ",
    "entity mapping": [
      {
        "label": "Palang Dharma Party",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party"
      },
      {
        "label": "Inthakin",
        "uri": "http://dbpedia.org/resource/Inthakin"
      }
    ],
    "id": "c7bac34e1c854968971d32c09b321bf0",
    "predicate mapping": [
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/type"
      }
    ]
  },
  {
    "question": "Where did Fort Lauderdale Strikers season of 16 take place?",
    "SerialNumber": "497",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season> <http://dbpedia.org/ontology/ground> ?uri } ",
    "entity mapping": [
      {
        "label": "Fort Lauderdale Strikers season of 16",
        "uri": "http://dbpedia.org/resource/2016_Fort_Lauderdale_Strikers_season"
      }
    ],
    "id": "34130d2812d84c70bdaaf30ade9a2204",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/ground"
      }
    ]
  },
  {
    "question": "What are some relatives of the people who fought in Operation Barbarossa?",
    "SerialNumber": "498",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Operation Barbarossa",
        "uri": "http://dbpedia.org/resource/Operation_Barbarossa"
      }
    ],
    "id": "a65384e0c6d64302868aa3c04c47d3e9",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Where is the king buried whose predecessor was Iyasu II?",
    "SerialNumber": "503",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Iyasu_II> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}",
    "entity mapping": [
      {
        "label": "Iyasu II",
        "uri": "http://dbpedia.org/resource/Iyasu_II"
      }
    ],
    "id": "9b7b9393ba92438d807402980092a498",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "king",
        "uri": "http://dbpedia.org/ontology/Monarch"
      }
    ]
  },
  {
    "question": "Is Audie Murphy buried in the Arlington national cementery?",
    "SerialNumber": "504",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Audie_Murphy> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery> }",
    "entity mapping": [
      {
        "label": "Audie Murphy",
        "uri": "http://dbpedia.org/resource/Audie_Murphy"
      },
      {
        "label": "arlington national",
        "uri": "http://dbpedia.org/resource/Arlington_National_Cemetery"
      }
    ],
    "id": "0f64ebf1ec944faa999a799ae051e373",
    "predicate mapping": [
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeofburial"
      }
    ]
  },
  {
    "question": "How many people have written stuff broadcasted on the Tokyo Broadcasting System?",
    "SerialNumber": "506",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Tokyo_Broadcasting_System> . ?x <http://dbpedia.org/property/writer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Tokyo Broadcasting System",
        "uri": "http://dbpedia.org/resource/Tokyo_Broadcasting_System"
      }
    ],
    "id": "9fcaa73b3dca47a9a3bf12a42abe54b7",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many more teams have rented the stadium used by Raptors 905?",
    "SerialNumber": "508",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raptors_905> <http://dbpedia.org/property/arena> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Raptors 905",
        "uri": "http://dbpedia.org/resource/Raptors_905"
      }
    ],
    "id": "609a310df5854bada8e182bcc9f2fee9",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/arena"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Give me a count of musicians who play an instrument developed by George Beauchamp ?",
    "SerialNumber": "509",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/George_Beauchamp> . ?uri <http://dbpedia.org/ontology/instrument> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "George Beauchamp",
        "uri": "http://dbpedia.org/resource/George_Beauchamp"
      }
    ],
    "id": "331ab7e173c740318ed2adfa0f08046b",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "instrument",
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Does the St lawrence river start in Kingston, Ontario?",
    "SerialNumber": "511",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Saint_Lawrence_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Kingston,_Ontario> }",
    "entity mapping": [
      {
        "label": "St lawrence river",
        "uri": "http://dbpedia.org/resource/Saint_Lawrence_River"
      },
      {
        "label": "Kingston, Ontario",
        "uri": "http://dbpedia.org/resource/Kingston,_Ontario"
      }
    ],
    "id": "d4ed4754c8194ab69b712750149fdd7a",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      }
    ]
  },
  {
    "question": "Give me an estimate of the number of manufacturers whose products are managed by MTR?",
    "SerialNumber": "512",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "entity mapping": [
      {
        "label": "MTR",
        "uri": "http://dbpedia.org/resource/MTR"
      }
    ],
    "id": "3fe7d243d8064aadbe198b10a38cf9b4",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "What company developed Mac OS 9 and also brought Tiny Tower to the market?",
    "SerialNumber": "517",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mac_OS_9> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/Tiny_Tower> <http://dbpedia.org/property/distributor> ?uri . }",
    "entity mapping": [
      {
        "label": "Mac OS 9",
        "uri": "http://dbpedia.org/resource/Mac_OS_9"
      },
      {
        "label": "Tiny Tower",
        "uri": "http://dbpedia.org/resource/Tiny_Tower"
      }
    ],
    "id": "51504ea36f364007a53aea8d7060e17d",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "market",
        "uri": "http://dbpedia.org/property/distributor"
      }
    ]
  },
  {
    "question": "Which currency is primarily used by the company which is the distributing label of VDE-Gallo Records?",
    "SerialNumber": "518",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/VDE-Gallo_Records> <http://dbpedia.org/ontology/distributingLabel> ?x . ?x <http://dbpedia.org/property/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "VDE-Gallo Records",
        "uri": "http://dbpedia.org/resource/VDE-Gallo_Records"
      }
    ],
    "id": "3bdef03debd5421ab0cd7f4a3758b46b",
    "predicate mapping": [
      {
        "label": "distributing label",
        "uri": "http://dbpedia.org/ontology/distributingLabel"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/property/currency"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Who all have been in bands which have recorded their work in the Electric Lady Studios?",
    "SerialNumber": "519",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Electric_Lady_Studios> . ?uri <http://dbpedia.org/property/associatedActs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Electric Lady Studios",
        "uri": "http://dbpedia.org/resource/Electric_Lady_Studios"
      }
    ],
    "id": "13fc91a5ba564ac6aaa2be0d37c03aa1",
    "predicate mapping": [
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "bands",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "Who",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the label of things produced by the band If?",
    "SerialNumber": "520",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/If_(band)> . ?x <http://dbpedia.org/property/label> ?uri  . }",
    "entity mapping": [
      {
        "label": "the band If",
        "uri": "http://dbpedia.org/resource/If_(band)"
      }
    ],
    "id": "30f39069de5b4672a6f01513ae7e3491",
    "predicate mapping": [
      {
        "label": "produced by",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      }
    ]
  },
  {
    "question": "What people were born in Ridgewood, New Jersey?",
    "SerialNumber": "522",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ridgewood,_New_Jersey>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ridgewood, New Jersey",
        "uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey"
      }
    ],
    "id": "ff87b9ebc25a4997a01aed4bac145920",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the company to which Fusajiro Yamauchi proprietor to ?",
    "SerialNumber": "524",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fusajiro_Yamauchi>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Fusajiro Yamauchi",
        "uri": "http://dbpedia.org/resource/Fusajiro_Yamauchi"
      }
    ],
    "id": "8b84e189a1384ad4bf36163f27e3acac",
    "predicate mapping": [
      {
        "label": "proprietor",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the POD of the successor of Pmare I ?",
    "SerialNumber": "527",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pōmare_I> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Pōmare_I"
      }
    ],
    "id": "54e96a6a9d9749f6878cac13550c192a",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "POD",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "How many utopian and dystopian fiction books are there?",
    "SerialNumber": "530",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Utopian_and_dystopian_fiction>  . }",
    "entity mapping": [
      {
        "label": "utopian and dystopian fiction",
        "uri": "http://dbpedia.org/resource/Utopian_and_dystopian_fiction"
      }
    ],
    "id": "d0847ee1f87a43a88507df1216bc342b",
    "predicate mapping": [
      {
        "label": "books",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      }
    ]
  },
  {
    "question": "Does the Westchester Avenue fall under the Bronx?",
    "SerialNumber": "533",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Westchester_Avenue> <http://dbpedia.org/property/counties> <http://dbpedia.org/resource/The_Bronx> }",
    "entity mapping": [
      {
        "label": "Westchester Avenue",
        "uri": "http://dbpedia.org/resource/Westchester_Avenue"
      },
      {
        "label": "Bronx",
        "uri": "http://dbpedia.org/resource/The_Bronx"
      }
    ],
    "id": "74a5cff93ee946babd0e69d98b975931",
    "predicate mapping": [
      {
        "label": "fall under",
        "uri": "http://dbpedia.org/property/counties"
      }
    ]
  },
  {
    "question": "Which parties have their members live in the PM House, Colombo?",
    "SerialNumber": "538",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "entity mapping": [
      {
        "label": "colombo",
        "uri": "http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)"
      }
    ],
    "id": "2c3d0f285c6140879c32fc68bf2d2cfb",
    "predicate mapping": [
      {
        "label": "live in",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/PoliticalParty"
      }
    ]
  },
  {
    "question": "On what subject does WTJC-LP air?",
    "SerialNumber": "542",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WTJC-LP> <http://dbpedia.org/property/format> ?uri } ",
    "entity mapping": [
      {
        "label": "WTJC-LP",
        "uri": "http://dbpedia.org/resource/WTJC-LP"
      }
    ],
    "id": "a1a2b9381ed049a882c87648db96c438",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/format"
      }
    ]
  },
  {
    "question": "Which fictional character's relative is Clan McDuck and belongs to American Pekin duck ?",
    "SerialNumber": "548",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Clan_McDuck> . ?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/American_Pekin_duck>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Clan McDuck",
        "uri": "http://dbpedia.org/resource/Clan_McDuck"
      },
      {
        "label": "American Pekin duck",
        "uri": "http://dbpedia.org/resource/American_Pekin_duck"
      }
    ],
    "id": "7282c5f557974ec99165996f0b27200a",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "belongs",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Is michelangelo the painter of The Persian Boy?",
    "SerialNumber": "549",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Persian_Boy> <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Michelangelo> }",
    "entity mapping": [
      {
        "label": "The Persian Boy",
        "uri": "http://dbpedia.org/resource/The_Persian_Boy"
      },
      {
        "label": "michelangelo",
        "uri": "http://dbpedia.org/resource/Michelangelo"
      }
    ],
    "id": "9b04388b468a4460a8e15aacaadf7853",
    "predicate mapping": [
      {
        "label": "painter",
        "uri": "http://dbpedia.org/ontology/illustrator"
      }
    ]
  },
  {
    "question": "Which boarder country of Korean Peninsula was the state of Sodagreen ?",
    "SerialNumber": "552",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Korean_Peninsula> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Sodagreen> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Korean Peninsula",
        "uri": "http://dbpedia.org/resource/Korean_Peninsula"
      },
      {
        "label": "Sodagreen",
        "uri": "http://dbpedia.org/resource/Sodagreen"
      }
    ],
    "id": "62461469fd01444f88e0d4d08359db98",
    "predicate mapping": [
      {
        "label": "boarder country",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "state of",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Where is the capital of Kelsey Creek located?",
    "SerialNumber": "553",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kelsey_Creek> <http://dbpedia.org/ontology/region> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kelsey Creek",
        "uri": "http://dbpedia.org/resource/Kelsey_Creek"
      }
    ],
    "id": "7f6ce18d38014a87a073ee8285106c60",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "capital",
        "uri": "http://dbpedia.org/ontology/countySeat"
      }
    ]
  },
  {
    "question": "What does the famous relative of Levon Ashotovich Grigorian do for a living?",
    "SerialNumber": "556",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Levon_Ashotovich_Grigorian> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Levon Ashotovich Grigorian",
        "uri": "http://dbpedia.org/resource/Levon_Ashotovich_Grigorian"
      }
    ],
    "id": "b9d3a2fe75124f64855ddc9e0f97e76d",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "How many games are played at universities in Metro Manilla?",
    "SerialNumber": "559",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Metro_Manila> . ?x <http://dbpedia.org/property/athletics> ?uri  . }",
    "entity mapping": [
      {
        "label": "Metro Manill",
        "uri": "http://dbpedia.org/resource/Metro_Manila"
      }
    ],
    "id": "3f0c5c6e16f44478976a62d32ee3a123",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Is Compaq a software company?",
    "SerialNumber": "561",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Compaq> <http://dbpedia.org/ontology/industry> <http://dbpedia.org/resource/Software> }",
    "entity mapping": [
      {
        "label": "Compaq",
        "uri": "http://dbpedia.org/resource/Compaq"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/resource/Software"
      }
    ],
    "id": "35616e0b45534d1ba5aa8c3514527462",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/industry"
      }
    ]
  },
  {
    "question": "Name the president served by a lieutenant who succeeded Bob C Riley.",
    "SerialNumber": "562",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Bob_C._Riley> . ?uri <http://dbpedia.org/ontology/lieutenant> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Bob C Riley",
        "uri": "http://dbpedia.org/resource/Bob_C._Riley"
      }
    ],
    "id": "039208f28c41401297caeb292230c23f",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "Where is Oskar Blues located ?",
    "SerialNumber": "566",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Oskar_Blues_Brewery> <http://dbpedia.org/property/location> ?uri } ",
    "entity mapping": [
      {
        "label": "Oskar Blues",
        "uri": "http://dbpedia.org/resource/Oskar_Blues_Brewery"
      }
    ],
    "id": "b6fb2de828a94638a57cdb650825441c",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "Was the FIS Alpine World Ski Championship of 1950 held in Colorado?",
    "SerialNumber": "567",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950> <http://dbpedia.org/property/hostCity> <http://dbpedia.org/resource/Colorado> }",
    "entity mapping": [
      {
        "label": "championship alpine world",
        "uri": "http://dbpedia.org/resource/FIS_Alpine_World_Ski_Championships_1950"
      },
      {
        "label": "Colorado",
        "uri": "http://dbpedia.org/resource/Colorado"
      }
    ],
    "id": "3cd2c8b70c7849889e3c298974187aed",
    "predicate mapping": [
      {
        "label": "held",
        "uri": "http://dbpedia.org/property/hostCity"
      }
    ]
  },
  {
    "question": "List the science fiction shows broadcasted on BBC HD ?",
    "SerialNumber": "569",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "science fiction",
        "uri": "http://dbpedia.org/resource/Science_fiction"
      },
      {
        "label": "BBC HD",
        "uri": "http://dbpedia.org/resource/BBC_HD"
      }
    ],
    "id": "06865b556f72412591e45e2b25e27d31",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the division of the companies who make Runes of Magic?",
    "SerialNumber": "571",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Runes_of_Magic> . ?x <http://dbpedia.org/ontology/division> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Runes of Magic",
        "uri": "http://dbpedia.org/resource/Runes_of_Magic"
      }
    ],
    "id": "8f4dcf2dc41047969a71b87fbfef4cc4",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What common teams do Ramiro Pea and Bruce Bochy share?",
    "SerialNumber": "573",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ramiro_Peña> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Bruce_Bochy> <http://dbpedia.org/ontology/team> ?uri . }",
    "entity mapping": [
      {
        "label": "ramiro",
        "uri": "http://dbpedia.org/resource/Ramiro_Peña"
      },
      {
        "label": "Bruce Bochy",
        "uri": "http://dbpedia.org/resource/Bruce_Bochy"
      }
    ],
    "id": "bc77c3a5c2aa48beb648fd70de67488e",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "In which sitcom did Jeff Conaway acted and had TNT as its network ?",
    "SerialNumber": "574",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "TNT",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)"
      },
      {
        "label": "Jeff Conaway",
        "uri": "http://dbpedia.org/resource/Jeff_Conaway"
      }
    ],
    "id": "491b0f3480c14c608b26e8e745514b9a",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "acted",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "sitcom",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many buildings are located in the jurisdiction of John Tory?",
    "SerialNumber": "576",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/John_Tory> . ?uri <http://dbpedia.org/property/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "John Tory",
        "uri": "http://dbpedia.org/resource/John_Tory"
      }
    ],
    "id": "323011153fec4b5ca0658605fdf7ff6e",
    "predicate mapping": [
      {
        "label": "jurisdiction",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Which railway line goes through the stations which are a part of the North Caucasus railway?",
    "SerialNumber": "577",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/North_Caucasus_Railway> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Station>}",
    "entity mapping": [
      {
        "label": "North Caucasus railway",
        "uri": "http://dbpedia.org/resource/North_Caucasus_Railway"
      }
    ],
    "id": "d988b1b86f7d4f20bb3fc106bb997062",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/type"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/Station"
      }
    ]
  },
  {
    "question": "What are some bands originating in London?",
    "SerialNumber": "579",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/London>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "London",
        "uri": "http://dbpedia.org/resource/London"
      }
    ],
    "id": "0200198676244b77993641150454251c",
    "predicate mapping": [
      {
        "label": "originating",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "What are some video games whose music is composed by an employ of the company Creatures?",
    "SerialNumber": "582",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Creatures_(company)> . ?uri <http://dbpedia.org/property/composer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Creatures",
        "uri": "http://dbpedia.org/resource/Creatures_(company)"
      }
    ],
    "id": "4d2907c9a4124f3097f04807bcef9d19",
    "predicate mapping": [
      {
        "label": "employ",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Which televion show's theme music was given by Ron Grainer and is broadcasted by BBC HD ?",
    "SerialNumber": "584",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Ron Grainer",
        "uri": "http://dbpedia.org/resource/Ron_Grainer"
      },
      {
        "label": "BBC HD",
        "uri": "http://dbpedia.org/resource/BBC_HD"
      }
    ],
    "id": "c949eeb67a4c448589588ee0e2862b8d",
    "predicate mapping": [
      {
        "label": "theme music",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "televion show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What team did J P Paris was former team of Bert McCaffrey play for?",
    "SerialNumber": "585",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._P._Parisé> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/Bert_McCaffrey> <http://dbpedia.org/ontology/formerTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "paris",
        "uri": "http://dbpedia.org/resource/J._P._Parisé"
      },
      {
        "label": "Bert McCaffrey",
        "uri": "http://dbpedia.org/resource/Bert_McCaffrey"
      }
    ],
    "id": "c251f7bc65ec4dc9a1b5611b34395b65",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "List the opponents of the relatives of Thomas Helwys?",
    "SerialNumber": "587",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Thomas_Helwys> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Thomas Helwys",
        "uri": "http://dbpedia.org/resource/Thomas_Helwys"
      }
    ],
    "id": "7d7c76e45ef64f46920bd1841c5aab92",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What are some other great things by the person who produced Queer as Folk?",
    "SerialNumber": "592",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)> <http://dbpedia.org/ontology/producer> ?x . ?x <http://dbpedia.org/property/notableworks> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Queer as Folk",
        "uri": "http://dbpedia.org/resource/Queer_as_Folk_(UK_TV_series)"
      }
    ],
    "id": "96c4bef12a134fb8bb1ac835d064c51a",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "great things",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which relative of George Madison was the leader of United States House of Representatives elections, 1788 and 1789 ?",
    "SerialNumber": "595",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri} ",
    "entity mapping": [
      {
        "label": "George Madison",
        "uri": "http://dbpedia.org/resource/George_Madison"
      },
      {
        "label": "United States House of Representatives elections, 1788 and 1789",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789"
      }
    ],
    "id": "188d75500ece496ca5e4f31ef1d853e0",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader"
      }
    ]
  },
  {
    "question": "Name the profession of Oamr D Conger for which Jack Ryan was also nominated ?",
    "SerialNumber": "600",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Omar_D._Conger> <http://dbpedia.org/property/order> ?uri} ",
    "entity mapping": [
      {
        "label": "Jack Ryan",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)"
      },
      {
        "label": "conger",
        "uri": "http://dbpedia.org/resource/Omar_D._Conger"
      }
    ],
    "id": "7a064f0bfba14e8da7581b3b362b0a37",
    "predicate mapping": [
      {
        "label": "nominated",
        "uri": "http://dbpedia.org/ontology/nominee"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/property/order"
      }
    ]
  },
  {
    "question": "Does the Vadodara Railway station lie at the end of the Mathura Vadodara route?",
    "SerialNumber": "602",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mathura–Vadodara_Section> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Vadodara_Junction_railway_station> }",
    "entity mapping": [
      {
        "label": "vadodara mathura",
        "uri": "http://dbpedia.org/resource/Mathura–Vadodara_Section"
      },
      {
        "label": "vadodara station railway",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station"
      }
    ],
    "id": "cb70f9c4ab6e46b9bb6781e259febc55",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "In which city are buildings by Solon Spencer Beman found?",
    "SerialNumber": "605",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Solon_Spencer_Beman> . ?x <http://dbpedia.org/property/locationTown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "Solon Spencer Beman",
        "uri": "http://dbpedia.org/resource/Solon_Spencer_Beman"
      }
    ],
    "id": "2fd09016a75d42d4b3601fc9712d3ae5",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/locationTown"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Name the scientist who was the winner of Royal Society award and had Georg Meissner as his doctoral advisor ?",
    "SerialNumber": "606",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Georg_Meissner>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Royal Society",
        "uri": "http://dbpedia.org/resource/Royal_Society"
      },
      {
        "label": "Georg Meissner",
        "uri": "http://dbpedia.org/resource/Georg_Meissner"
      }
    ],
    "id": "1df69aaf84db4e6ebf8479f68c52d2fe",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "doctoral advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many religions are practiced by diplomats?",
    "SerialNumber": "609",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "diplomats",
        "uri": "http://dbpedia.org/resource/Diplomacy"
      }
    ],
    "id": "1b089c7e3c454ff898540e7d20d840c6",
    "predicate mapping": [
      {
        "label": "practiced",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Where is the senator from whose successor was James belford?",
    "SerialNumber": "613",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/James_B._Belford> . ?x <http://dbpedia.org/ontology/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "entity mapping": [
      {
        "label": "James",
        "uri": "http://dbpedia.org/resource/James_B._Belford"
      }
    ],
    "id": "b7c61495bc5c42969a8ec600aea66096",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator"
      }
    ]
  },
  {
    "question": "How many ",
    "SerialNumber": "621",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Chicago_Bulls"
      }
    ],
    "id": "29d041b6917e47cbbcc098c7a848a397",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/team"
      }
    ]
  },
  {
    "question": "Name the airlines which have a hub in airport in SF?",
    "SerialNumber": "624",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/San_Francisco> . ?uri <http://dbpedia.org/property/hubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "SF",
        "uri": "http://dbpedia.org/resource/San_Francisco"
      }
    ],
    "id": "60f31d985aed488e9d589db655e932ad",
    "predicate mapping": [
      {
        "label": "airport",
        "uri": "http://dbpedia.org/property/cityServed"
      },
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "What is the religion of the ethnic group to which the relatives of Waxiang people belong?",
    "SerialNumber": "628",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Waxiang_people> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "entity mapping": [
      {
        "label": "Waxiang people",
        "uri": "http://dbpedia.org/resource/Waxiang_people"
      }
    ],
    "id": "b955cb31b2e74d689d1313c1238b9510",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup"
      }
    ]
  },
  {
    "question": "Which wine region of Bogdanua is the mouth country of Upper Neretva ?",
    "SerialNumber": "629",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanuša> <http://dbpedia.org/ontology/wineRegion> ?uri. <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Bogdanuša"
      },
      {
        "label": "Upper Neretva",
        "uri": "http://dbpedia.org/resource/Upper_Neretva"
      }
    ],
    "id": "6635a5b9155b48f792eef26dfc0df7d4",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/ontology/mouthCountry"
      }
    ]
  },
  {
    "question": "Under whom did Charles Drummond Ellis do his PhD?",
    "SerialNumber": "630",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Charles_Drummond_Ellis> } ",
    "entity mapping": [
      {
        "label": "Charles Drummond Ellis",
        "uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis"
      }
    ],
    "id": "990ab53fdb8b485cbcd019106a15fdf2",
    "predicate mapping": [
      {
        "label": "PhD",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      }
    ]
  },
  {
    "question": "Which associat of Martin Pugh is also married to Alana Stewert ?",
    "SerialNumber": "632",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Pugh> <http://dbpedia.org/property/associatedActs> ?uri. <http://dbpedia.org/resource/Alana_Stewart> <http://dbpedia.org/ontology/spouse> ?uri} ",
    "entity mapping": [
      {
        "label": "Martin Pugh",
        "uri": "http://dbpedia.org/resource/Martin_Pugh"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Alana_Stewart"
      }
    ],
    "id": "985720996060414598cdbaa9aaacff57",
    "predicate mapping": [
      {
        "label": "associat",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "What is the drafted team of the people expected to join toronto marlies?",
    "SerialNumber": "634",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/prospectTeam> <http://dbpedia.org/resource/Toronto_Marlies> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "toronto marlies",
        "uri": "http://dbpedia.org/resource/Toronto_Marlies"
      }
    ],
    "id": "498184a91d854ed990f032d429a05ca2",
    "predicate mapping": [
      {
        "label": "expected to join",
        "uri": "http://dbpedia.org/ontology/prospectTeam"
      },
      {
        "label": "drafted team",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What city in the US was Alfred Phillips born in, and is the resting place of William Smith?",
    "SerialNumber": "635",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_H._Smith_(Connecticut)> <http://dbpedia.org/ontology/restingPlace> ?uri. <http://dbpedia.org/resource/Alfred_N._Phillips> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "william smith",
        "uri": "http://dbpedia.org/resource/William_H._Smith_(Connecticut)"
      },
      {
        "label": "phillips alfred",
        "uri": "http://dbpedia.org/resource/Alfred_N._Phillips"
      }
    ],
    "id": "0a162d878e5549cd8ae6dc4f7072b4f6",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Who is the prime minister of Michael Jeffery who is also the minister of Williuam Deane ?",
    "SerialNumber": "636",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Jeffery> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri} ",
    "entity mapping": [
      {
        "label": "Michael Jeffery",
        "uri": "http://dbpedia.org/resource/Michael_Jeffery"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/William_Deane"
      }
    ],
    "id": "84c03af6b5c245db868cbc950af922c2",
    "predicate mapping": [
      {
        "label": "minister",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "Who appointed the governor under whom Richard Winn works?",
    "SerialNumber": "637",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/lieutenant> <http://dbpedia.org/resource/Richard_Winn> . ?x <http://dbpedia.org/property/appointer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}",
    "entity mapping": [
      {
        "label": "Richard Winn",
        "uri": "http://dbpedia.org/resource/Richard_Winn"
      }
    ],
    "id": "f5a63f5184f9424c9270d397df5f2af4",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/lieutenant"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/property/appointer"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/Governor"
      }
    ]
  },
  {
    "question": "Which company owns the manufacturer of the Edsel Ranger?",
    "SerialNumber": "643",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Ranger> . ?x <http://dbpedia.org/property/parent> ?uri  . }",
    "entity mapping": [
      {
        "label": "Edsel Ranger",
        "uri": "http://dbpedia.org/resource/Edsel_Ranger"
      }
    ],
    "id": "67ecca468f0c460ab67ebee020cb7268",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/property/parent"
      }
    ]
  },
  {
    "question": "Which are the major hubs of airline which operates the Menora Tunnel?",
    "SerialNumber": "644",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Menora_Tunnel> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Menora Tunnel",
        "uri": "http://dbpedia.org/resource/Menora_Tunnel"
      }
    ],
    "id": "db326f887c6646c28e21a7483a238e7b",
    "predicate mapping": [
      {
        "label": "operates",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Name a scientist whose official residence is Cape Town and also won a gold medal at the Royal Astronomical Society ?",
    "SerialNumber": "645",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society> . ?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Cape_Town>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "astronomical society",
        "uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society"
      },
      {
        "label": "Cape Town",
        "uri": "http://dbpedia.org/resource/Cape_Town"
      }
    ],
    "id": "ec18ccd4be91486aa5253f7a802da354",
    "predicate mapping": [
      {
        "label": "won a gold medal",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What is the military conflict whose commanders are John McEwen and Phm Vn ng?",
    "SerialNumber": "646",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Phạm_Văn_Đồng> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "John McEwen",
        "uri": "http://dbpedia.org/resource/John_McEwen"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Phạm_Văn_Đồng"
      }
    ],
    "id": "0b3d0e13d8b3401a856b23b0fc75529c",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "In which countries have models hanged themselves?",
    "SerialNumber": "647",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide_by_hanging> . ?x <http://dbpedia.org/property/citizenship> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
    "entity mapping": [
      {
        "label": "hanged themselves",
        "uri": "http://dbpedia.org/resource/Suicide_by_hanging"
      }
    ],
    "id": "1b8c3dffd3644c3bbd459adb51ae437e",
    "predicate mapping": [
      {
        "label": "hanged",
        "uri": "http://dbpedia.org/property/deathCause"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/citizenship"
      },
      {
        "label": "model",
        "uri": "http://dbpedia.org/ontology/Model"
      }
    ]
  },
  {
    "question": "Bridges over what can carry vehicles?",
    "SerialNumber": "648",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Motor_vehicle"
      }
    ],
    "id": "8a41604d7495428fa67cccf0d3789635",
    "predicate mapping": [
      {
        "label": "carry",
        "uri": "http://dbpedia.org/property/carries"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses"
      },
      {
        "label": "Bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Count the number of schools which are in a city governed by the West Berkshire Council?",
    "SerialNumber": "653",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/West_Berkshire_Council> . ?uri <http://dbpedia.org/property/city> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "West Berkshire Council",
        "uri": "http://dbpedia.org/resource/West_Berkshire_Council"
      }
    ],
    "id": "aa3079fefe4f4e10a2d8ca21b1b91900",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Did Hank Williams Jr. make Early in the Morning and Late at Night?",
    "SerialNumber": "654",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night> <http://dbpedia.org/ontology/musicalArtist> <http://dbpedia.org/resource/Hank_Williams_Jr.> }",
    "entity mapping": [
      {
        "label": "Early in the Morning and Late at Night",
        "uri": "http://dbpedia.org/resource/Early_in_the_Morning_and_Late_at_Night"
      },
      {
        "label": "Hank Williams Jr.",
        "uri": "http://dbpedia.org/resource/Hank_Williams_Jr."
      }
    ],
    "id": "61ea6ede582149b797b26eb6e7d81466",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      }
    ]
  },
  {
    "question": "List some leaders of regions in the Indian Standard Time Zone?",
    "SerialNumber": "656",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Indian Standard Time",
        "uri": "http://dbpedia.org/resource/Indian_Standard_Time"
      }
    ],
    "id": "090a2f17823f4673b945c4a938226989",
    "predicate mapping": [
      {
        "label": "Time Zone",
        "uri": "http://dbpedia.org/ontology/timeZone"
      },
      {
        "label": "leaders",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "regions",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "List the spanish football player in the NYC FC ?",
    "SerialNumber": "657",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC> . ?uri <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Spain_national_football_team>  . }",
    "entity mapping": [
      {
        "label": "NYC FC",
        "uri": "http://dbpedia.org/resource/New_York_City_FC"
      },
      {
        "label": "spanish football",
        "uri": "http://dbpedia.org/resource/Spain_national_football_team"
      }
    ],
    "id": "e65c0a467ab640ffaacbfe397559a139",
    "predicate mapping": [
      {
        "label": "player",
        "uri": "http://dbpedia.org/property/currentclub"
      },
      {
        "label": "player",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "Who is the person whose child performed with Tony Bennett?",
    "SerialNumber": "658",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Tony_Bennett> . ?uri <http://dbpedia.org/ontology/child> ?x  . }",
    "entity mapping": [
      {
        "label": "Tony Bennett",
        "uri": "http://dbpedia.org/resource/Tony_Bennett"
      }
    ],
    "id": "390c756eecd94acfb6335abcaa91832a",
    "predicate mapping": [
      {
        "label": "performed",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child"
      }
    ]
  },
  {
    "question": "Name the rivers originating from an English speaking nation?",
    "SerialNumber": "659",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/English_language> . ?uri <http://dbpedia.org/ontology/sourceCountry> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "English",
        "uri": "http://dbpedia.org/resource/English_language"
      }
    ],
    "id": "4c95fa0cb00b42b29b9f111561804b5b",
    "predicate mapping": [
      {
        "label": "speaking",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "originating",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which cities were in the TV Show which came after The Ultimate Fighter: Brazil 2?",
    "SerialNumber": "663",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "The Ultimate Fighter: Brazil 2",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Brazil_2"
      }
    ],
    "id": "f860781f868d4a7f9f59ad56d60e1021",
    "predicate mapping": [
      {
        "label": "came after",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "TV Show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many teams have used the stadium which hosted the WCW mayhem?",
    "SerialNumber": "666",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/WCW_Mayhem> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "WCW mayhem",
        "uri": "http://dbpedia.org/resource/WCW_Mayhem"
      }
    ],
    "id": "85765cfbd20546b2a65b2cfc5e50cf3e",
    "predicate mapping": [
      {
        "label": "hosted",
        "uri": "http://dbpedia.org/property/venue"
      },
      {
        "label": "used",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Marika Gombitov makes songs in which languages?",
    "SerialNumber": "667",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitová> . ?x <http://dbpedia.org/property/language> ?uri  . }",
    "entity mapping": [
      {
        "label": "Marika Gombitov ",
        "uri": "http://dbpedia.org/resource/Marika_Gombitová"
      }
    ],
    "id": "2f4493990eff40b794e67500a851e312",
    "predicate mapping": [
      {
        "label": "songs",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      }
    ]
  },
  {
    "question": "How many people have played for a club whose coach is Fred Hoiberg?",
    "SerialNumber": "671",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/coach> <http://dbpedia.org/resource/Fred_Hoiberg> . ?uri <http://dbpedia.org/property/team> ?x  . }",
    "entity mapping": [
      {
        "label": "Fred Hoiberg",
        "uri": "http://dbpedia.org/resource/Fred_Hoiberg"
      }
    ],
    "id": "f297c53e8f6b4b54abee32483ecdf9a2",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/team"
      }
    ]
  },
  {
    "question": "Name the TV show distributed by Broadcast Syndication and is broadcasted by comedy central ?",
    "SerialNumber": "673",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Broadcast_syndication> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Broadcast Syndication",
        "uri": "http://dbpedia.org/resource/Broadcast_syndication"
      },
      {
        "label": "comedy central",
        "uri": "http://dbpedia.org/resource/Comedy_Central"
      }
    ],
    "id": "ff2c4d6fe5ce44f99d580e8a58235a3f",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "TV show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many relatives are there of people fought in the Battle of the Bulge?",
    "SerialNumber": "674",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Battle of the Bulge",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Bulge"
      }
    ],
    "id": "f7e7d5fe2f2f43e7b214ca25b7e066a8",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "What band made The trial and One of these days song?",
    "SerialNumber": "676",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Trial_(song)> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/One_of_These_Days_(instrumental)> <http://dbpedia.org/ontology/musicalArtist> ?uri . }",
    "entity mapping": [
      {
        "label": "The trial",
        "uri": "http://dbpedia.org/resource/The_Trial_(song)"
      },
      {
        "label": "One of these days",
        "uri": "http://dbpedia.org/resource/One_of_These_Days_(instrumental)"
      }
    ],
    "id": "16115d9103a74efaa5fcb54f18cbde0e",
    "predicate mapping": [
      {
        "label": "song",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      }
    ]
  },
  {
    "question": "Who was the bronze medalist of Swimming at the 2008 Summer Olympics  Men's 400 metre individual medley ?",
    "SerialNumber": "678",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_–_Men's_400_metre_individual_medley> <http://dbpedia.org/ontology/bronzeMedalist> ?uri } ",
    "entity mapping": [
      {
        "label": "individual swimming olympics summer medley",
        "uri": "http://dbpedia.org/resource/Swimming_at_the_2008_Summer_Olympics_–_Men's_400_metre_individual_medley"
      }
    ],
    "id": "6fc805721dc8491585c10f0f2e2592d1",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist"
      }
    ]
  },
  {
    "question": "Which country's people work in the Birdman enterprises?",
    "SerialNumber": "680",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Birdman_Enterprises> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}",
    "entity mapping": [
      {
        "label": "Birdman enterprises",
        "uri": "http://dbpedia.org/resource/Birdman_Enterprises"
      }
    ],
    "id": "a858757ca891436e99cb9089f22a2dca",
    "predicate mapping": [
      {
        "label": "work in",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "country's",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Engineer"
      }
    ]
  },
  {
    "question": "List the sports associated with Mariveles, Bataan?",
    "SerialNumber": "681",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Mariveles,_Bataan> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mariveles, Bataan",
        "uri": "http://dbpedia.org/resource/Mariveles,_Bataan"
      }
    ],
    "id": "c177520ccb0d4c55bc8fbdfc3bbb7506",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Which team of Dan Shamash is also the debutant team of John Estes ?",
    "SerialNumber": "682",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Estes> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Dan_Shamash> <http://dbpedia.org/ontology/team> ?uri} ",
    "entity mapping": [
      {
        "label": "John Estes",
        "uri": "http://dbpedia.org/resource/John_Estes"
      },
      {
        "label": "Dan Shamash",
        "uri": "http://dbpedia.org/resource/Dan_Shamash"
      }
    ],
    "id": "b187393e6ede44b6997e10e532b27a42",
    "predicate mapping": [
      {
        "label": "debutant team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "Who is the tenant of the home stadium of Toronto Phantoms?",
    "SerialNumber": "683",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Toronto_Phantoms> <http://dbpedia.org/property/arena> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Toronto Phantoms",
        "uri": "http://dbpedia.org/resource/Toronto_Phantoms"
      }
    ],
    "id": "8c5594e6c01f4f09988e31939b1c2799",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/arena"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Does the little colorado river flow in the Grand Canyon?",
    "SerialNumber": "684",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Little_Colorado_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Grand_Canyon> }",
    "entity mapping": [
      {
        "label": "little colorado river",
        "uri": "http://dbpedia.org/resource/Little_Colorado_River"
      },
      {
        "label": "Grand Canyon",
        "uri": "http://dbpedia.org/resource/Grand_Canyon"
      }
    ],
    "id": "6d42f2fa938d4141bd635759b1e81402",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      }
    ]
  },
  {
    "question": "How many religions are followed by the people in the Royal Thai Army?",
    "SerialNumber": "686",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Royal Thai Army",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army"
      }
    ],
    "id": "827cb970029b44e580c1a44fcc272eb2",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What company made facebook messenger and is the platform where Words of Gold can be played?",
    "SerialNumber": "687",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Words_of_Gold> <http://dbpedia.org/ontology/computingPlatform> ?uri. <http://dbpedia.org/resource/Facebook_Messenger> <http://dbpedia.org/property/developer> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Words of Gold",
        "uri": "http://dbpedia.org/resource/Words_of_Gold"
      },
      {
        "label": "facebook messenger",
        "uri": "http://dbpedia.org/resource/Facebook_Messenger"
      }
    ],
    "id": "c2998ab4051f4bef95ec8cda3eae919f",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "In which cities can the beverage related to Barq's be found?",
    "SerialNumber": "689",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Barq's> <http://dbpedia.org/ontology/related> ?x . ?x <http://dbpedia.org/property/locationCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Barq's",
        "uri": "http://dbpedia.org/resource/Barq's"
      }
    ],
    "id": "47d8d22a769c4d82a0f5e592f5fbdb24",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/locationCity"
      }
    ]
  },
  {
    "question": "In which city is  Arsenal Cider House ? located ?",
    "SerialNumber": "690",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arsenal_Cider_House> <http://dbpedia.org/property/locationCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Arsenal Cider House",
        "uri": "http://dbpedia.org/resource/Arsenal_Cider_House"
      }
    ],
    "id": "34200ced3ab544579326e2fc505d3bc8",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCity"
      }
    ]
  },
  {
    "question": "From which state do the White Plum Asangas come?",
    "SerialNumber": "691",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/White_Plum_Asanga> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }",
    "entity mapping": [
      {
        "label": "White Plum Asanga",
        "uri": "http://dbpedia.org/resource/White_Plum_Asanga"
      }
    ],
    "id": "43702440e850423dbdd82331dfc624be",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Which board game can be said as a mind based game?",
    "SerialNumber": "694",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Board_game> . ?uri <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Mind_sport> . }",
    "entity mapping": [
      {
        "label": "board game",
        "uri": "http://dbpedia.org/resource/Board_game"
      },
      {
        "label": "mind",
        "uri": "http://dbpedia.org/resource/Mind_sport"
      }
    ],
    "id": "d841f35943ac4a9cad0f6e33ba3a8650",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "Was GM first aired in Albania?",
    "SerialNumber": "695",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gümüş_(TV_series)> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/Albania> }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gümüş_(TV_series)"
      },
      {
        "label": "Albania",
        "uri": "http://dbpedia.org/resource/Albania"
      }
    ],
    "id": "0f40d8629b94485292d2bdb7107b1da7",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired"
      }
    ]
  },
  {
    "question": "In which ice hockey league, did the team coached by Joel Quenneville win?",
    "SerialNumber": "696",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Joel_Quenneville> . ?uri <http://dbpedia.org/property/champion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyLeague>}",
    "entity mapping": [
      {
        "label": "Joel Quenneville",
        "uri": "http://dbpedia.org/resource/Joel_Quenneville"
      }
    ],
    "id": "a851cba6c3fd4f91b75012d43e14ffe8",
    "predicate mapping": [
      {
        "label": "team coached",
        "uri": "http://dbpedia.org/property/headCoach"
      },
      {
        "label": "win",
        "uri": "http://dbpedia.org/property/champion"
      },
      {
        "label": "ice hockey league",
        "uri": "http://dbpedia.org/ontology/IceHockeyLeague"
      }
    ]
  },
  {
    "question": "How many games have a publisher based in US?",
    "SerialNumber": "698",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "32ef05a6fd884fddae5d465551cf17e3",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "How many fictional characters were humans?",
    "SerialNumber": "699",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Human>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "human",
        "uri": "http://dbpedia.org/resource/Human"
      }
    ],
    "id": "9af86fea79ba45b599a74bbd5341a401",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Where was James H. Fields buried ?",
    "SerialNumber": "700",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_H._Fields> <http://dbpedia.org/property/placeofburial> ?uri } ",
    "entity mapping": [
      {
        "label": "James H. Fields",
        "uri": "http://dbpedia.org/resource/James_H._Fields"
      }
    ],
    "id": "72220051ada34ae48a21ec1e045f930f",
    "predicate mapping": [
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeofburial"
      }
    ]
  },
  {
    "question": "Is Julia Gillard a part of monarch of elizabeth 2?",
    "SerialNumber": "701",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/property/monarch> <http://dbpedia.org/resource/Elizabeth_II> }",
    "entity mapping": [
      {
        "label": "Julia Gillard",
        "uri": "http://dbpedia.org/resource/Julia_Gillard"
      },
      {
        "label": "elizabeth",
        "uri": "http://dbpedia.org/resource/Elizabeth_II"
      }
    ],
    "id": "b1451c98780e446b815e9f342751cbb0",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/property/monarch"
      }
    ]
  },
  {
    "question": "Which cities come in the course of the river, into which Big Creek around Texas flows too?",
    "SerialNumber": "702",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Big Creek around Texas",
        "uri": "http://dbpedia.org/resource/Big_Creek_(Texas_Co._Missouri)"
      }
    ],
    "id": "749558f932b9486b85df68d4eccfe5c0",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/rightTributary"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Where are INKAS located which is also the state of origin for Jojo Chintoh ?",
    "SerialNumber": "703",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jojo_Chintoh> <http://dbpedia.org/ontology/stateOfOrigin> ?uri. <http://dbpedia.org/resource/INKAS> <http://dbpedia.org/property/locations> ?uri} ",
    "entity mapping": [
      {
        "label": "Jojo Chintoh",
        "uri": "http://dbpedia.org/resource/Jojo_Chintoh"
      },
      {
        "label": "INKAS",
        "uri": "http://dbpedia.org/resource/INKAS"
      }
    ],
    "id": "fa242acb93b743fea9e35fc94ee08a4e",
    "predicate mapping": [
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locations"
      }
    ]
  },
  {
    "question": "Who wrote the frost king?",
    "SerialNumber": "704",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Frost_King> <http://dbpedia.org/ontology/author> ?uri } ",
    "entity mapping": [
      {
        "label": "the frost king",
        "uri": "http://dbpedia.org/resource/The_Frost_King"
      }
    ],
    "id": "5cc36b5f5baf40ee961a155b20d24163",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "Which party does Iqbal Singh and B Shiva Rao currently belong to?",
    "SerialNumber": "712",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Iqbal_Singh_(politician)> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/B._Shiva_Rao> <http://dbpedia.org/property/party> ?uri . }",
    "entity mapping": [
      {
        "label": "Iqbal Singh",
        "uri": "http://dbpedia.org/resource/Iqbal_Singh_(politician)"
      },
      {
        "label": "shiva rao",
        "uri": "http://dbpedia.org/resource/B._Shiva_Rao"
      }
    ],
    "id": "5ffde5a7c874424cbd665253d618fcfe",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "Name a show hosted by Brian Dunkleman and judged by Harry Connick, Jr.?",
    "SerialNumber": "714",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Brian Dunkleman",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman"
      },
      {
        "label": "Harry Connick, Jr.",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr."
      }
    ],
    "id": "77480fbfae19475b9120f4a4bb9dd835",
    "predicate mapping": [
      {
        "label": "hosted",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "judged",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the notable work by Russell T Davis which is also the series of Doctor Who:Destiny of the Doctors ?",
    "SerialNumber": "716",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri. <http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors> <http://dbpedia.org/ontology/series> ?uri} ",
    "entity mapping": [
      {
        "label": "Russell T Davis",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Doctor_Who:_Destiny_of_the_Doctors"
      }
    ],
    "id": "075580e801b242728cc06ad403056096",
    "predicate mapping": [
      {
        "label": "notable",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "What are some rivers over which there is a box girder bridge?",
    "SerialNumber": "720",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Box_girder_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "entity mapping": [
      {
        "label": "box girder bridge",
        "uri": "http://dbpedia.org/resource/Box_girder_bridge"
      }
    ],
    "id": "e22121aed5034a2ebb9a8b79dda6a98d",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/design"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "Where did the Vitis Vinifera grapes originate?",
    "SerialNumber": "723",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
    "entity mapping": [
      {
        "label": "Vitis Vinifera",
        "uri": "http://dbpedia.org/resource/Vitis_vinifera"
      }
    ],
    "id": "05a75d41426e47feada1cd1a9d0f7dd2",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape"
      }
    ]
  },
  {
    "question": "What sports are there at the universities affiliated to the National Capital Region Athletic Association?",
    "SerialNumber": "725",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/National_Capital_Region_Athletic_Association> . ?x <http://dbpedia.org/property/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "National Capital Region Athletic Association",
        "uri": "http://dbpedia.org/resource/National_Capital_Region_Athletic_Association"
      }
    ],
    "id": "99eede401e804ca88838398c7452d788",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "How many ships belong to states which has Unitary as government type ?",
    "SerialNumber": "728",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Unitary_state> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Ship>}",
    "entity mapping": [
      {
        "label": "unitary",
        "uri": "http://dbpedia.org/resource/Unitary_state"
      }
    ],
    "id": "4e212b324a314ddb90f5c7d4b4f980a2",
    "predicate mapping": [
      {
        "label": "government type",
        "uri": "http://dbpedia.org/ontology/governmentType"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "ship",
        "uri": "http://dbpedia.org/ontology/Ship"
      }
    ]
  },
  {
    "question": "Name the university located in Indiana and has affiliations with Kaplan, Inc.?",
    "SerialNumber": "729",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Indiana",
        "uri": "http://dbpedia.org/resource/Indiana"
      },
      {
        "label": "Kaplan, Inc.",
        "uri": "http://dbpedia.org/resource/Kaplan,_Inc."
      }
    ],
    "id": "8885d643a55646fcb84f0bdfdd1920ab",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Which technological products were manufactured by Foxconn?",
    "SerialNumber": "733",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "Foxconn",
        "uri": "http://dbpedia.org/resource/Foxconn"
      }
    ],
    "id": "dbf3f468b028435ead6f22d7094216f5",
    "predicate mapping": [
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "technological products",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Does Gibby Haynes play the saxophone?",
    "SerialNumber": "734",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Gibby_Haynes> <http://dbpedia.org/property/instrument> <http://dbpedia.org/resource/Saxophone> }",
    "entity mapping": [
      {
        "label": "Gibby Haynes",
        "uri": "http://dbpedia.org/resource/Gibby_Haynes"
      },
      {
        "label": "saxophone",
        "uri": "http://dbpedia.org/resource/Saxophone"
      }
    ],
    "id": "40679e799df0477cb3225b955fbf7290",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/instrument"
      }
    ]
  },
  {
    "question": "Things going to the mediterranean sea also go where?",
    "SerialNumber": "736",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/destinations> <http://dbpedia.org/resource/Mediterranean_Sea> . ?x <http://dbpedia.org/ontology/destination> ?uri  . }",
    "entity mapping": [
      {
        "label": "mediterranean sea",
        "uri": "http://dbpedia.org/resource/Mediterranean_Sea"
      }
    ],
    "id": "24f384f61c0d499a9e5553258d63a154",
    "predicate mapping": [
      {
        "label": "going",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "go where",
        "uri": "http://dbpedia.org/ontology/destination"
      }
    ]
  },
  {
    "question": "Was Tommy Tucker's Tooth animated by Walt Disney?",
    "SerialNumber": "738",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/ontology/animator> <http://dbpedia.org/resource/Walt_Disney> }",
    "entity mapping": [
      {
        "label": "Tommy Tucker's Tooth",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth"
      },
      {
        "label": "Walt Disney",
        "uri": "http://dbpedia.org/resource/Walt_Disney"
      }
    ],
    "id": "4afe90c0a2d24c9abb78be2dc41b3fa7",
    "predicate mapping": [
      {
        "label": "animated",
        "uri": "http://dbpedia.org/ontology/animator"
      }
    ]
  },
  {
    "question": "What appliance Sony made after the success of PlayStation 2?",
    "SerialNumber": "743",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . }",
    "entity mapping": [
      {
        "label": "Sony",
        "uri": "http://dbpedia.org/resource/Sony"
      },
      {
        "label": "PlayStation 2",
        "uri": "http://dbpedia.org/resource/PlayStation_2"
      }
    ],
    "id": "927bed1a09eb4ccebe9ce52f962a6866",
    "predicate mapping": [
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "success",
        "uri": "http://dbpedia.org/ontology/predecessor"
      }
    ]
  },
  {
    "question": "How many shows are made by the channel whose predecessor was the Comedy Channel?",
    "SerialNumber": "745",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/The_Comedy_Channel_(United_States)> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "the Comedy Channel",
        "uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)"
      }
    ],
    "id": "2a8fe39c189643d9bc607d285c32bdbf",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many wars took place in Israel?",
    "SerialNumber": "749",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Israel",
        "uri": "http://dbpedia.org/resource/Israel"
      }
    ],
    "id": "d31842ed59c74ddba76748ddc86819ad",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/place"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Where is Richard Stites located ?",
    "SerialNumber": "750",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Richard_Stites> <http://dbpedia.org/ontology/birthPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "Richard Stites",
        "uri": "http://dbpedia.org/resource/Richard_Stites"
      }
    ],
    "id": "b602d2ec54c940bfb3308e310fb48114",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Semani languages are spoken in which countries?",
    "SerialNumber": "751",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "languages",
        "uri": "http://dbpedia.org/resource/Semnani_languages"
      }
    ],
    "id": "5a5552c654f843e2af53c66e80782253",
    "predicate mapping": [
      {
        "label": "languages",
        "uri": "http://dbpedia.org/property/languages"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Who wrote The Times They Are a-Changin?",
    "SerialNumber": "753",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri } ",
    "entity mapping": [
      {
        "label": "The Times They Are a-Changin",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)"
      }
    ],
    "id": "c6d5d4c7a5fb417ba8654ec416c2d263",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/musicBy"
      }
    ]
  },
  {
    "question": "Where can i find companies which were started in Toronto?",
    "SerialNumber": "758",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/locations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      }
    ],
    "id": "72d5cb491ec94f14b8d9683a64782b9c",
    "predicate mapping": [
      {
        "label": "started",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/locations"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which company released the software RenderMan?",
    "SerialNumber": "760",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/RenderMan_(software)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "the software RenderMan",
        "uri": "http://dbpedia.org/resource/RenderMan_(software)"
      }
    ],
    "id": "0f04a6c5f26342d9a5b0cf207019d29d",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which associate of Thomas bryan Martin is also the president of Carmichael ?",
    "SerialNumber": "762",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_Bryan_Martin> <http://dbpedia.org/ontology/associate> ?uri. <http://dbpedia.org/resource/William_Carmichael_(diplomat)> <http://dbpedia.org/property/president> ?uri} ",
    "entity mapping": [
      {
        "label": "Thomas bryan Martin",
        "uri": "http://dbpedia.org/resource/Thomas_Bryan_Martin"
      },
      {
        "label": "carmichael",
        "uri": "http://dbpedia.org/resource/William_Carmichael_(diplomat)"
      }
    ],
    "id": "99747a8bc83f452f85a46aab60a6b3e2",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "What cities are nearer to Fuountain Lake Farm?",
    "SerialNumber": "763",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fountain_Lake_Farm> <http://dbpedia.org/property/nearestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Fuountain Lake Farm",
        "uri": "http://dbpedia.org/resource/Fountain_Lake_Farm"
      }
    ],
    "id": "537bdce8e8dd4a238a2dbb9059f5fe9f",
    "predicate mapping": [
      {
        "label": "nearer",
        "uri": "http://dbpedia.org/property/nearestCity"
      }
    ]
  },
  {
    "question": "How many shows are made by Larry David?",
    "SerialNumber": "765",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Larry_David>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Larry David",
        "uri": "http://dbpedia.org/resource/Larry_David"
      }
    ],
    "id": "e6d36153fb7c4298a55e5ee6c0738c1d",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many kinds of games can be played on the Amiga?",
    "SerialNumber": "771",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "Amiga",
        "uri": "http://dbpedia.org/resource/Amiga"
      }
    ],
    "id": "d2b07c6181a64cf183b36bd37459e852",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "kinds of",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "Is Michael Schumacher the first driver of the 1994 grand prix?",
    "SerialNumber": "772",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1994_Hungarian_Grand_Prix> <http://dbpedia.org/property/firstDriver> <http://dbpedia.org/resource/Michael_Schumacher> }",
    "entity mapping": [
      {
        "label": "grand prix 1994",
        "uri": "http://dbpedia.org/resource/1994_Hungarian_Grand_Prix"
      },
      {
        "label": "Michael Schumacher",
        "uri": "http://dbpedia.org/resource/Michael_Schumacher"
      }
    ],
    "id": "b8f31b0cece6487a95dd21301ce60003",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/property/firstDriver"
      }
    ]
  },
  {
    "question": "Who all have been a president of educational institutes in Paud?",
    "SerialNumber": "774",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Paud> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "entity mapping": [
      {
        "label": "Paud",
        "uri": "http://dbpedia.org/resource/Paud"
      }
    ],
    "id": "3fb7e88b8f1943958246f70177f3e5dc",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "educational institutes",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution"
      }
    ]
  },
  {
    "question": "Which governer of Winston Bryant is the president of Joseph Stiglitz ?",
    "SerialNumber": "776",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Joseph_Stiglitz> <http://dbpedia.org/property/president> ?uri} ",
    "entity mapping": [
      {
        "label": "Winston Bryant",
        "uri": "http://dbpedia.org/resource/Winston_Bryant"
      },
      {
        "label": "Joseph Stiglitz",
        "uri": "http://dbpedia.org/resource/Joseph_Stiglitz"
      }
    ],
    "id": "432f4fcb54a449ca830d2bb1037a274a",
    "predicate mapping": [
      {
        "label": "governer",
        "uri": "http://dbpedia.org/property/governor"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "In which city is the distributor of Jeevan Mrityu located ?",
    "SerialNumber": "777",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jeevan_Mrityu> <http://dbpedia.org/property/distributor> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jeevan Mrityu",
        "uri": "http://dbpedia.org/resource/Jeevan_Mrityu"
      }
    ],
    "id": "d76def8ae04b49f6b1d126ba95c0e2cd",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      }
    ]
  },
  {
    "question": "Who has written the mary poppins musical?",
    "SerialNumber": "784",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mary_Poppins_(musical)> <http://dbpedia.org/ontology/author> ?uri } ",
    "entity mapping": [
      {
        "label": "mary poppins",
        "uri": "http://dbpedia.org/resource/Mary_Poppins_(musical)"
      }
    ],
    "id": "13059b538b8e43ff9915f2e14199673a",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "Cable stayed bridges have been used to cross over how many things?",
    "SerialNumber": "785",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "entity mapping": [
      {
        "label": "stayed",
        "uri": "http://dbpedia.org/resource/Cable-stayed_bridge"
      }
    ],
    "id": "3b73318138c443e789981e3e4d613dab",
    "predicate mapping": [
      {
        "label": "used to",
        "uri": "http://dbpedia.org/property/design"
      },
      {
        "label": "cross over",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "Who originally wrote the manga which was later illustrated by Tamon Ohta?",
    "SerialNumber": "797",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/illustrator> <http://dbpedia.org/resource/Tamon_Ohta> . ?x <http://dbpedia.org/property/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manga>}",
    "entity mapping": [
      {
        "label": "Tamon Ohta",
        "uri": "http://dbpedia.org/resource/Tamon_Ohta"
      }
    ],
    "id": "cffa17640f4e4456a5557b1ab1d65bdd",
    "predicate mapping": [
      {
        "label": "illustrated by",
        "uri": "http://dbpedia.org/ontology/illustrator"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "manga",
        "uri": "http://dbpedia.org/ontology/Manga"
      }
    ]
  },
  {
    "question": "How many shows is Russell Davies known for?",
    "SerialNumber": "800",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/property/notableworks> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Russell Davies",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      }
    ],
    "id": "1cf9bbe76b1441ba8ad28dac3a1a50e8",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which sitcom's company is Paramount Television and is located in Cheers Beacon hill ?",
    "SerialNumber": "807",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Cheers_Beacon_Hill>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "uri": "http://dbpedia.org/resource/Paramount_Television"
      },
      {
        "label": "Cheers Beacon hill",
        "uri": "http://dbpedia.org/resource/Cheers_Beacon_Hill"
      }
    ],
    "id": "c228f0f4e7004f3d84822625c29a1e93",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which leader of united states house representatives election was married to Dolley Madison ?",
    "SerialNumber": "808",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/Dolley_Madison> <http://dbpedia.org/ontology/spouse> ?uri} ",
    "entity mapping": [
      {
        "label": "representatives election united states house",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789"
      },
      {
        "label": "Dolley Madison",
        "uri": "http://dbpedia.org/resource/Dolley_Madison"
      }
    ],
    "id": "553c08c614e943c5afc6b87973a5558b",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "Name the TV shows owned by divisions of CBS?",
    "SerialNumber": "809",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/parent> <http://dbpedia.org/resource/CBS> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "CBS",
        "uri": "http://dbpedia.org/resource/CBS"
      }
    ],
    "id": "d8a37738293349dca33bdc20e691151e",
    "predicate mapping": [
      {
        "label": "owned by",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "divisions",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "TV shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who was the president under whom, a governor participated in Shay's rebellion?",
    "SerialNumber": "810",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Shays'_Rebellion> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Governor>}",
    "entity mapping": [
      {
        "label": "Shay",
        "uri": "http://dbpedia.org/resource/Shays'_Rebellion"
      }
    ],
    "id": "d2f75ded680643ad862ef07d47d0df4d",
    "predicate mapping": [
      {
        "label": "rebellion",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/Governor"
      }
    ]
  },
  {
    "question": "What program is  presented by Brian Dunkleman and has artist as Simon Fuller?",
    "SerialNumber": "811",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Brian Dunkleman",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman"
      },
      {
        "label": "Simon Fuller",
        "uri": "http://dbpedia.org/resource/Simon_Fuller"
      }
    ],
    "id": "f109644380a448f0a102f3fd65f6cd48",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "program",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is the charat district a district in peru?",
    "SerialNumber": "812",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Charat_District> <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Districts_of_Peru> }",
    "entity mapping": [
      {
        "label": "charat district",
        "uri": "http://dbpedia.org/resource/Charat_District"
      },
      {
        "label": "district in peru",
        "uri": "http://dbpedia.org/resource/Districts_of_Peru"
      }
    ],
    "id": "c8aee0b9dcfc4996bee3b2aaec26e95e",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/settlementType"
      }
    ]
  },
  {
    "question": "What are some movies written by British writers?",
    "SerialNumber": "814",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/British_people> . ?uri <http://dbpedia.org/ontology/writer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "British",
        "uri": "http://dbpedia.org/resource/British_people"
      }
    ],
    "id": "709cd39da1d043b3bd5f9c07c32b7664",
    "predicate mapping": [
      {
        "label": "British",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many different people own the Timeform award winners?",
    "SerialNumber": "815",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Timeform> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Timeform",
        "uri": "http://dbpedia.org/resource/Timeform"
      }
    ],
    "id": "8052e68b93484281a78f6b9bbf08ce39",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "own",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List presidents of the school whose one of the president is Charles. Prince of Wales ?",
    "SerialNumber": "816",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Charles,_Prince_of_Wales> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Charles,_Prince_of_Wales"
      }
    ],
    "id": "af13e3f9870d4324b50ac10156f815b4",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Which political party of Chandra Shekhar is also the political party of Datl Satyanarayana Raju ?",
    "SerialNumber": "824",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chandra_Shekhar> <http://dbpedia.org/ontology/otherParty> ?uri. <http://dbpedia.org/resource/Datla_Satyanarayana_Raju> <http://dbpedia.org/ontology/party> ?uri} ",
    "entity mapping": [
      {
        "label": "Chandra Shekhar",
        "uri": "http://dbpedia.org/resource/Chandra_Shekhar"
      },
      {
        "label": "satyanarayana raju datl",
        "uri": "http://dbpedia.org/resource/Datla_Satyanarayana_Raju"
      }
    ],
    "id": "2b868081fdbe405391ff35702728b9d0",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "How many people have been presenters for NBC shows?",
    "SerialNumber": "825",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "NBC",
        "uri": "http://dbpedia.org/resource/NBC"
      }
    ],
    "id": "772f236fcf8248868491ba2393667c59",
    "predicate mapping": [
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What river originates in Kingston Ontario?",
    "SerialNumber": "826",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Kingston Ontario",
        "uri": "http://dbpedia.org/resource/Kingston,_Ontario"
      }
    ],
    "id": "197329c3928340ed8151eeba459d4ce9",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many producers have worked for FremantleMedia productions?",
    "SerialNumber": "830",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/company> <http://dbpedia.org/resource/FremantleMedia> . ?x <http://dbpedia.org/ontology/producer> ?uri  . }",
    "entity mapping": [
      {
        "label": "FremantleMedia",
        "uri": "http://dbpedia.org/resource/FremantleMedia"
      }
    ],
    "id": "ead02f462db84844be242c56c4066037",
    "predicate mapping": [
      {
        "label": "worked for",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "Where is Hafthor Julius Bjornsson from?",
    "SerialNumber": "840",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hafthór_Júlíus_Björnsson> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ",
    "entity mapping": [
      {
        "label": "Hafthor Julius Bjornsson",
        "uri": "http://dbpedia.org/resource/Hafthór_Júlíus_Björnsson"
      }
    ],
    "id": "a0cdc0611f2c4b879e0205a8d1f477ba",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "How many islands belong to archipelagos located in the pacific?",
    "SerialNumber": "841",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Pacific_Ocean> . ?uri <http://dbpedia.org/property/archipelago> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "entity mapping": [
      {
        "label": "pacific",
        "uri": "http://dbpedia.org/resource/Pacific_Ocean"
      }
    ],
    "id": "f9b9f6eac29a4d1190ce28061725f806",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island"
      }
    ]
  },
  {
    "question": "How many other important things have been written by the creator of Stuart Alan Jones?",
    "SerialNumber": "842",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Stuart_Alan_Jones> <http://dbpedia.org/ontology/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "entity mapping": [
      {
        "label": "Stuart Alan Jones",
        "uri": "http://dbpedia.org/resource/Stuart_Alan_Jones"
      }
    ],
    "id": "430faddac48e4969b0732a137f2dd260",
    "predicate mapping": [
      {
        "label": "creator",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "What shows used to air on the channel which was earlier known as \"The Comedy Central\"?",
    "SerialNumber": "846",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/The_Comedy_Channel_(United_States)> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "channel comedy",
        "uri": "http://dbpedia.org/resource/The_Comedy_Channel_(United_States)"
      }
    ],
    "id": "482f01e78dbf4a2595e15e5c9ad32ab3",
    "predicate mapping": [
      {
        "label": "earlier",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "air on the channel",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Does Kirk Hammett play the Gibson Flying V?",
    "SerialNumber": "850",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Kirk_Hammett> <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Gibson_Flying_V> }",
    "entity mapping": [
      {
        "label": "Kirk Hammett",
        "uri": "http://dbpedia.org/resource/Kirk_Hammett"
      },
      {
        "label": "Gibson Flying V",
        "uri": "http://dbpedia.org/resource/Gibson_Flying_V"
      }
    ],
    "id": "d0ef14f4b99740528d80da61bfe95c01",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/instrument"
      }
    ]
  },
  {
    "question": "For all the senators who once studied in Sturm College of Law, give their burial place?",
    "SerialNumber": "853",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Sturm_College_of_Law> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Senator>}",
    "entity mapping": [
      {
        "label": "Sturm College of Law",
        "uri": "http://dbpedia.org/resource/Sturm_College_of_Law"
      }
    ],
    "id": "e9566c930e254ae2893011a6acc92008",
    "predicate mapping": [
      {
        "label": "studied in",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "burial place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "senator",
        "uri": "http://dbpedia.org/ontology/Senator"
      }
    ]
  },
  {
    "question": "Which people are known for appearing on the television show Dragon's Den?",
    "SerialNumber": "856",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "television show Dragon's Den",
        "uri": "http://dbpedia.org/resource/Dragons'_Den_(UK_TV_series)"
      }
    ],
    "id": "f78b3fe9e8724eb4810bdeed1a83e057",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many railway lines go through the station maintained by Public transport authority of western australia?",
    "SerialNumber": "857",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)> . ?x <http://dbpedia.org/ontology/servingRailwayLine> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "entity mapping": [
      {
        "label": "Public transport authority of western australia",
        "uri": "http://dbpedia.org/resource/Public_Transport_Authority_(Western_Australia)"
      }
    ],
    "id": "8504746ca9ea4d50aeb241b91e816acc",
    "predicate mapping": [
      {
        "label": "maintained by",
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/RailwayLine"
      }
    ]
  },
  {
    "question": "What  awards did the cast members of Gods of Egypt win?",
    "SerialNumber": "860",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gods_of_Egypt_(film)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gods of Egypt",
        "uri": "http://dbpedia.org/resource/Gods_of_Egypt_(film)"
      }
    ],
    "id": "a8d5e073c778486bb2d6db640cf49768",
    "predicate mapping": [
      {
        "label": "cast members",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Carl Sagan has penned books on how many matters?",
    "SerialNumber": "862",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Carl_Sagan> . ?x <http://dbpedia.org/property/subject> ?uri  . }",
    "entity mapping": [
      {
        "label": "Carl Sagan",
        "uri": "http://dbpedia.org/resource/Carl_Sagan"
      }
    ],
    "id": "a20c86dfc1f64b2fb91429ef3c3c2445",
    "predicate mapping": [
      {
        "label": "penned books",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "matters",
        "uri": "http://dbpedia.org/property/subject"
      }
    ]
  },
  {
    "question": "what are some units udner the US department of navy?",
    "SerialNumber": "863",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_the_Navy> } ",
    "entity mapping": [
      {
        "label": "US department of navy",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Navy"
      }
    ],
    "id": "df37b7d93b35429b9671ea6a2a572b06",
    "predicate mapping": [
      {
        "label": "units udner",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      }
    ]
  },
  {
    "question": "What sport has made Eric Schiller famous, and has employed Craig Van Tibury?",
    "SerialNumber": "866",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri} ",
    "entity mapping": [
      {
        "label": "Craig Van Tibury",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury"
      },
      {
        "label": "Eric Schiller",
        "uri": "http://dbpedia.org/resource/Eric_Schiller"
      }
    ],
    "id": "bfebc6df79f647e8b83b027420295a9d",
    "predicate mapping": [
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Which part of the US political framework did Arthur Bagby and Thomas H hicks both serve?",
    "SerialNumber": "867",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_P._Bagby> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/Thomas_Holliday_Hicks> <http://dbpedia.org/property/order> ?uri . }",
    "entity mapping": [
      {
        "label": "arthur bagby",
        "uri": "http://dbpedia.org/resource/Arthur_P._Bagby"
      },
      {
        "label": "thomas hicks",
        "uri": "http://dbpedia.org/resource/Thomas_Holliday_Hicks"
      }
    ],
    "id": "80c709f991704001a1b7c97b46375fb5",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/order"
      },
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/order"
      }
    ]
  },
  {
    "question": "Who gave the voice to the characters sculpted by Clamp?",
    "SerialNumber": "868",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Clamp_(manga_artists)> . ?x <http://dbpedia.org/ontology/voice> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Clamp",
        "uri": "http://dbpedia.org/resource/Clamp_(manga_artists)"
      }
    ],
    "id": "e9737da1b4f945b39ad2ed1d09ad062b",
    "predicate mapping": [
      {
        "label": "sculpted",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/ontology/voice"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What is the country whose administrative centre is Hagta, Guam?",
    "SerialNumber": "869",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Hagåtña,_Guam>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Hagåtña,_Guam"
      }
    ],
    "id": "2e12375aa47a42acaeab4fdba7d3890c",
    "predicate mapping": [
      {
        "label": "administrative centre",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "What is the political party of the of Bengalis ?",
    "SerialNumber": "870",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Bengalis> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bengalis",
        "uri": "http://dbpedia.org/resource/Bengalis"
      }
    ],
    "id": "47eda5b35417485b88697d20e48839d0",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Which political party of kumta had affiliation with Indian general election, 2004 (Andhra Pradesh) ",
    "SerialNumber": "871",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri} ",
    "entity mapping": [
      {
        "label": "kumta",
        "uri": "http://dbpedia.org/resource/Kumta"
      },
      {
        "label": "Indian general election, 2004 (Andhra Pradesh)",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)"
      }
    ],
    "id": "53e6578861dc4630ad27012f1696ddcf",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/governmentType"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/ontology/affiliation"
      }
    ]
  },
  {
    "question": "Which composer of Motorpsycho Nitemare has also composed The time are A-Changing ?",
    "SerialNumber": "873",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Motorpsycho_Nitemare> <http://dbpedia.org/property/composer> ?uri. <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri} ",
    "entity mapping": [
      {
        "label": "Motorpsycho Nitemare",
        "uri": "http://dbpedia.org/resource/Motorpsycho_Nitemare"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)"
      }
    ],
    "id": "69b624f3af604a859f19a2adc6ffb845",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/musicBy"
      }
    ]
  },
  {
    "question": "How many different kinds of games are published by Interplay Entertainment?",
    "SerialNumber": "880",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "Interplay Entertainment",
        "uri": "http://dbpedia.org/resource/Interplay_Entertainment"
      }
    ],
    "id": "600d505ebfd1495fb2158a5b52fc4045",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "different kinds of",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "How many different kinds of softwares have been released under the GPL license?",
    "SerialNumber": "881",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/ontology/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "GPL license",
        "uri": "http://dbpedia.org/resource/GNU_General_Public_License"
      }
    ],
    "id": "0651212fb47546e089477eecc4777e69",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license"
      },
      {
        "label": "different kinds of",
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "List the schools of the athlete with Balgowan as one of the school ?",
    "SerialNumber": "883",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/school> <http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal> . ?x <http://dbpedia.org/property/school> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "balgowan",
        "uri": "http://dbpedia.org/resource/Balgowan,_KwaZulu-Natal"
      }
    ],
    "id": "726523874a964323aa5d43c5af238c05",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school"
      },
      {
        "label": "athlete",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Which coach of Marquette Golden Eagles men's basketball team is also the head coach  of Virginia Tech Hokies men's basketball team ?",
    "SerialNumber": "888",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014–15_Virginia_Tech_Hokies_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri. <http://dbpedia.org/resource/2012–13_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri} ",
    "entity mapping": [
      {
        "label": "basketball virginia hokies",
        "uri": "http://dbpedia.org/resource/2014–15_Virginia_Tech_Hokies_men's_basketball_team"
      },
      {
        "label": "basketball marquette golden eagles",
        "uri": "http://dbpedia.org/resource/2012–13_Marquette_Golden_Eagles_men's_basketball_team"
      }
    ],
    "id": "cfdba0daa427405b9b5b656f75e5a771",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/headcoach"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      }
    ]
  },
  {
    "question": "Where do the judge advocate general corps live?",
    "SerialNumber": "892",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps> . ?x <http://dbpedia.org/property/residence> ?uri  . }",
    "entity mapping": [
      {
        "label": "judge advocate general corps",
        "uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps"
      }
    ],
    "id": "89d174ad69534ed48313311864b3fca6",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/rank"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "Does Walt Disney Studio have a subsidiary called PixarCascadia_",
    "SerialNumber": "894",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walt_Disney_Studios_(division)> <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Pixar> }",
    "entity mapping": [
      {
        "label": "studio disney walt",
        "uri": "http://dbpedia.org/resource/Walt_Disney_Studios_(division)"
      },
      {
        "label": "Pixar",
        "uri": "http://dbpedia.org/resource/Pixar"
      }
    ],
    "id": "0961c5610ded49229b123d87522e0ce9",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      }
    ]
  },
  {
    "question": "On which river are there things belonging to zambezi river authority?",
    "SerialNumber": "896",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Zambezi_River_Authority> . ?x <http://dbpedia.org/ontology/river> ?uri  . }",
    "entity mapping": [
      {
        "label": "zambezi river authority",
        "uri": "http://dbpedia.org/resource/Zambezi_River_Authority"
      }
    ],
    "id": "533717b10afe49fb9b10cc531f19ce41",
    "predicate mapping": [
      {
        "label": "belonging to",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "Does vance johnson play as a wide receiver?",
    "SerialNumber": "899",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vance_Johnson> <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Wide_receiver> }",
    "entity mapping": [
      {
        "label": "vance johnson",
        "uri": "http://dbpedia.org/resource/Vance_Johnson"
      },
      {
        "label": "wide receiver",
        "uri": "http://dbpedia.org/resource/Wide_receiver"
      }
    ],
    "id": "ee0133ba177848fdaa63a9a0a5fc217d",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/position"
      }
    ]
  },
  {
    "question": "How many different products are there of the companies located in the US?",
    "SerialNumber": "901",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/product> ?uri  . }",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "65cb7ea9917b44e29c8adbc3e95d1470",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "Which are the countires where Pioneer Corporation has flourished?",
    "SerialNumber": "902",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pioneer_Corporation> <http://dbpedia.org/property/country> ?uri } ",
    "entity mapping": [
      {
        "label": "Pioneer Corporation",
        "uri": "http://dbpedia.org/resource/Pioneer_Corporation"
      }
    ],
    "id": "85d2a3aff592486fbe48e0f6d67cebf3",
    "predicate mapping": [
      {
        "label": "countires",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "Which city do both Arthur Ross and Edward Niesen come from?",
    "SerialNumber": "906",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arthur_A._Ross> <http://dbpedia.org/property/placeOfBirth> ?uri. <http://dbpedia.org/resource/Edward_Niesen> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "arthur ross",
        "uri": "http://dbpedia.org/resource/Arthur_A._Ross"
      },
      {
        "label": "Edward Niesen",
        "uri": "http://dbpedia.org/resource/Edward_Niesen"
      }
    ],
    "id": "31afaf9538e24202876296db1b6f2b87",
    "predicate mapping": [
      {
        "label": "come from",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "come from",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Who wrote Heroman?",
    "SerialNumber": "910",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heroman> <http://dbpedia.org/property/author> ?uri } ",
    "entity mapping": [
      {
        "label": "Heroman",
        "uri": "http://dbpedia.org/resource/Heroman"
      }
    ],
    "id": "3e54cd98e79d4fa6b3b2dc7f2674c5d8",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "Was Zambezi originate in the north western province of zambia?",
    "SerialNumber": "913",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Zambezi> <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> }",
    "entity mapping": [
      {
        "label": "Zambezi",
        "uri": "http://dbpedia.org/resource/Zambezi"
      },
      {
        "label": "province western zambia north",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia"
      }
    ],
    "id": "8e833704b64d4d40bbff73d5746d98c4",
    "predicate mapping": [
      {
        "label": "originate in",
        "uri": "http://dbpedia.org/property/sourceRegion"
      }
    ]
  },
  {
    "question": "What all is produced by companies in Douglas, Isle of Man?",
    "SerialNumber": "918",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Douglas,_Isle_of_Man> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Douglas, Isle of Man",
        "uri": "http://dbpedia.org/resource/Douglas,_Isle_of_Man"
      }
    ],
    "id": "3abffed2b2504a16b1cbaecbe05b2bde",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the number of occupation of the people who died in tampa bay, florida?",
    "SerialNumber": "919",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Tampa,_Florida> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "entity mapping": [
      {
        "label": "florida tampa",
        "uri": "http://dbpedia.org/resource/Tampa,_Florida"
      }
    ],
    "id": "01e74239bfaf4b1d8de9cb7ed623a268",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Whose work is in the Musee d'orsay?",
    "SerialNumber": "921",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Musée_d'Orsay> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artwork>}",
    "entity mapping": [
      {
        "label": "Musee d'orsay",
        "uri": "http://dbpedia.org/resource/Musée_d'Orsay"
      }
    ],
    "id": "5d06f0ac2946469f965844d87feb57c4",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/museum"
      },
      {
        "label": " ",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Artwork"
      }
    ]
  },
  {
    "question": "Who all are known to play the Gibson Guitar Corporation?",
    "SerialNumber": "925",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Guitar_Corporation> } ",
    "entity mapping": [
      {
        "label": "Gibson Guitar Corporation",
        "uri": "http://dbpedia.org/resource/Gibson_Guitar_Corporation"
      }
    ],
    "id": "2d858381e01142748e34b68e8303754c",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/notableInstruments"
      }
    ]
  },
  {
    "question": "Who built the stadium which was rented for the 2013 Copa Centroamericana ?",
    "SerialNumber": "927",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Copa_Centroamericana> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "2013 Copa Centroamericana",
        "uri": "http://dbpedia.org/resource/2013_Copa_Centroamericana"
      }
    ],
    "id": "0211cc1ff7b94942958a04da756282b7",
    "predicate mapping": [
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "How many fictional characters are there in a series in which Craig Robinson acted?",
    "SerialNumber": "929",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Craig_Robinson_(actor)> . ?uri <http://dbpedia.org/ontology/series> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Craig Robinson",
        "uri": "http://dbpedia.org/resource/Craig_Robinson_(actor)"
      }
    ],
    "id": "c476c7a2e55b4c00a92923d7d08a1e5f",
    "predicate mapping": [
      {
        "label": "acted",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "in which country does the river end which originates in Lebrsnik?",
    "SerialNumber": "931",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebršnik> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lebrsnik",
        "uri": "http://dbpedia.org/resource/Lebršnik"
      }
    ],
    "id": "8b10de10cf09466f94c4570b9c61aa72",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/mouthCountry"
      }
    ]
  },
  {
    "question": "What is that something which made Breann McGregor famous, and Frank Thorne received as an award?",
    "SerialNumber": "935",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Frank_Thorne> <http://dbpedia.org/ontology/award> ?uri. <http://dbpedia.org/resource/Breann_McGregor> <http://dbpedia.org/property/knownFor> ?uri} ",
    "entity mapping": [
      {
        "label": "Frank Thorne",
        "uri": "http://dbpedia.org/resource/Frank_Thorne"
      },
      {
        "label": "Breann McGregor",
        "uri": "http://dbpedia.org/resource/Breann_McGregor"
      }
    ],
    "id": "8f2c9b53aca646c08bfe2eeee0544df4",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "what are the nicknames of the people who are in Ekstraliga?",
    "SerialNumber": "940",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/Ekstraliga_(speedway)> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ekstraliga",
        "uri": "http://dbpedia.org/resource/Ekstraliga_(speedway)"
      }
    ],
    "id": "226f3a3f6f844c5fbfee523f31ed439d",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "Who is a famous relative of Aaround Van Heemstra?",
    "SerialNumber": "941",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/Aarnoud_van_Heemstra>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Aaround Van Heemstra",
        "uri": "http://dbpedia.org/resource/Aarnoud_van_Heemstra"
      }
    ],
    "id": "dc1d2cb750ca4e2e9f9a74ccd1c6c5cc",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List the television shows whose distributors are located at Burbank, California.",
    "SerialNumber": "943",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Burbank,_California> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Burbank, California",
        "uri": "http://dbpedia.org/resource/Burbank,_California"
      }
    ],
    "id": "e575b8c0e88a481db2a8c94388a81fdc",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCity"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the birth city of the Salford City F.C players ?",
    "SerialNumber": "946",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Salford_City_F.C.> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "entity mapping": [
      {
        "label": "Salford City F.C",
        "uri": "http://dbpedia.org/resource/Salford_City_F.C."
      }
    ],
    "id": "c6d8bd8b828a4ffca756fcd6a7b9cad6",
    "predicate mapping": [
      {
        "label": " ",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "birth city",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer"
      }
    ]
  },
  {
    "question": "To which US states does the roads belong which meet at the East Whiteland Township in Pennsylvania?",
    "SerialNumber": "948",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
    "entity mapping": [
      {
        "label": "East Whiteland Township in Pennsylvania",
        "uri": "http://dbpedia.org/resource/East_Whiteland_Township,_Chester_County,_Pennsylvania"
      }
    ],
    "id": "a12b9f66bee84b9db6177e03023690f7",
    "predicate mapping": [
      {
        "label": "meet at",
        "uri": "http://dbpedia.org/ontology/routeJunction"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road"
      }
    ]
  },
  {
    "question": "To what other locations does the airlines have flights, who also fly to Birmingham?",
    "SerialNumber": "949",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Birmingham_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Birmingham",
        "uri": "http://dbpedia.org/resource/Birmingham_Airport"
      }
    ],
    "id": "655aee0c067641ffbd67c9dac3ce438a",
    "predicate mapping": [
      {
        "label": "fly to",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      },
      {
        "label": "flights",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Which are the predecessors of the cars which are similar to the Oldsmobile 88?",
    "SerialNumber": "951",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Oldsmobile_88> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Oldsmobile 88",
        "uri": "http://dbpedia.org/resource/Oldsmobile_88"
      }
    ],
    "id": "9559251273fe4cfd94ae14dc401612d9",
    "predicate mapping": [
      {
        "label": "similar",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      }
    ]
  },
  {
    "question": "How many people are there whose children died in Indiana?",
    "SerialNumber": "952",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Indiana> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Indiana",
        "uri": "http://dbpedia.org/resource/Indiana"
      }
    ],
    "id": "bcf6d38828d24556aa001e0484100b31",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "children",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which mountain range is the one with Ponte d'Aveneyre and Le Gibloux?",
    "SerialNumber": "953",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pointe_d'Aveneyre> <http://dbpedia.org/ontology/mountainRange> ?uri. <http://dbpedia.org/resource/Le_Gibloux> <http://dbpedia.org/ontology/mountainRange> ?uri . }",
    "entity mapping": [
      {
        "label": "d'aveneyre",
        "uri": "http://dbpedia.org/resource/Pointe_d'Aveneyre"
      },
      {
        "label": "Le Gibloux",
        "uri": "http://dbpedia.org/resource/Le_Gibloux"
      }
    ],
    "id": "ad765492f88c48c3b2bc9040652ce954",
    "predicate mapping": [
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      },
      {
        "label": "mountain range",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      }
    ]
  },
  {
    "question": "What are some movies whose distributors are led by Kevin Tsujihara?",
    "SerialNumber": "960",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Kevin_Tsujihara> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Kevin Tsujihara",
        "uri": "http://dbpedia.org/resource/Kevin_Tsujihara"
      }
    ],
    "id": "5dd25945300c4882b7f41d51f864edbf",
    "predicate mapping": [
      {
        "label": "led by",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who are the relatives of the character after which Quagmire's Quagmire was made?",
    "SerialNumber": "962",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Quagmire's_Quagmire> . ?uri <http://dbpedia.org/ontology/relative> ?x  . }",
    "entity mapping": [
      {
        "label": "Quagmire's Quagmire",
        "uri": "http://dbpedia.org/resource/Quagmire's_Quagmire"
      }
    ],
    "id": "3f32bfb3b7df4136b3983a9dfe3beed0",
    "predicate mapping": [
      {
        "label": "after ; made",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      }
    ]
  },
  {
    "question": "Who all play for the teams performing in the united center?",
    "SerialNumber": "968",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/United_Center> . ?uri <http://dbpedia.org/property/team> ?x  . }",
    "entity mapping": [
      {
        "label": "united center",
        "uri": "http://dbpedia.org/resource/United_Center"
      }
    ],
    "id": "2361961d044049bfb2ea19866fcc28b9",
    "predicate mapping": [
      {
        "label": "performing in",
        "uri": "http://dbpedia.org/property/arena"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team"
      }
    ]
  },
  {
    "question": "Where is the gold coast football club located?",
    "SerialNumber": "969",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gold_Coast_Football_Club> <http://dbpedia.org/property/location> ?uri } ",
    "entity mapping": [
      {
        "label": "gold coast football club",
        "uri": "http://dbpedia.org/resource/Gold_Coast_Football_Club"
      }
    ],
    "id": "9db99f7b0b424eef87494372c398bb83",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "Which award that has been given to James F Obrien, had used Laemmle Theatres for some service?",
    "SerialNumber": "970",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/James_F._O'Brien> <http://dbpedia.org/ontology/award> ?uri} ",
    "entity mapping": [
      {
        "label": "Laemmle Theatres",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres"
      },
      {
        "label": "James F Obrien",
        "uri": "http://dbpedia.org/resource/James_F._O'Brien"
      }
    ],
    "id": "d499386227fb4943ad773dfaf48271a3",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Where are the Dinamo Krasnodar players born?",
    "SerialNumber": "971",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Dinamo_Krasnodar> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Dinamo Krasnodar",
        "uri": "http://dbpedia.org/resource/Dinamo_Krasnodar"
      }
    ],
    "id": "613d4281e6a24597aed9eb6dc6ddae4a",
    "predicate mapping": [
      {
        "label": "@@@",
        "uri": "http://dbpedia.org/ontology/club"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Name the people whose academic advisor has also mentored the thesis of Alexius Meinong?",
    "SerialNumber": "972",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Alexius_Meinong> . ?uri <http://dbpedia.org/ontology/academicAdvisor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Alexius Meinong",
        "uri": "http://dbpedia.org/resource/Alexius_Meinong"
      }
    ],
    "id": "0f0065ebc6d9448a9925cf985837df80",
    "predicate mapping": [
      {
        "label": "thesis",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who is the founder of Wuropean School, Karlsruhe ?",
    "SerialNumber": "973",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_School,_Karlsruhe> <http://dbpedia.org/property/founder> ?uri } ",
    "entity mapping": [
      {
        "label": "Wuropean School, Karlsruhe",
        "uri": "http://dbpedia.org/resource/European_School,_Karlsruhe"
      }
    ],
    "id": "13a6659956ff48d8ad29034fecc6357d",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      }
    ]
  },
  {
    "question": "Does the croton river flow into the hudson?",
    "SerialNumber": "974",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hudson_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Croton_River> }",
    "entity mapping": [
      {
        "label": "hudson",
        "uri": "http://dbpedia.org/resource/Hudson_River"
      },
      {
        "label": "croton river",
        "uri": "http://dbpedia.org/resource/Croton_River"
      }
    ],
    "id": "459448bd75ec43279fcae4db9efacd08",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      }
    ]
  },
  {
    "question": "Which fields of the Paul Demiville is also the faith of Koay Teng Hai ?",
    "SerialNumber": "976",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demiéville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Koay_Teng_Hai> <http://dbpedia.org/ontology/religion> ?uri} ",
    "entity mapping": [
      {
        "label": "Paul Demiville",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville"
      },
      {
        "label": "Koay Teng Hai",
        "uri": "http://dbpedia.org/resource/Koay_Teng_Hai"
      }
    ],
    "id": "8994dc83e54f403699937e9328a327a8",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which leader of United States House of Representatives was the appinter of ohn Drayton ?",
    "SerialNumber": "981",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789> <http://dbpedia.org/property/leader> ?uri. <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri} ",
    "entity mapping": [
      {
        "label": "representatives united states",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1788_and_1789"
      },
      {
        "label": "drayton John",
        "uri": "http://dbpedia.org/resource/John_Drayton"
      }
    ],
    "id": "af5f1360af214572ad2d8a7f52b326c1",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "Drayton",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "How many local authorities manage mixed gender schools?",
    "SerialNumber": "991",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Mixed-sex_education> . ?x <http://dbpedia.org/ontology/localAuthority> ?uri  . }",
    "entity mapping": [
      {
        "label": "mixed",
        "uri": "http://dbpedia.org/resource/Mixed-sex_education"
      }
    ],
    "id": "62c64f48fb4e42cba7d5df25238d0c00",
    "predicate mapping": [
      {
        "label": "gender",
        "uri": "http://dbpedia.org/ontology/gender"
      },
      {
        "label": "authorities",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "What are some apes?",
    "SerialNumber": "992",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }",
    "entity mapping": [
      {
        "label": "ape",
        "uri": "http://dbpedia.org/resource/Ape"
      }
    ],
    "id": "19a1601d48324aeb87419019f0e0e027",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "Is Peter Crouch currently in the Stoke City FC?",
    "SerialNumber": "997",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Peter_Crouch> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.> }",
    "entity mapping": [
      {
        "label": "Peter Crouch",
        "uri": "http://dbpedia.org/resource/Peter_Crouch"
      },
      {
        "label": "Stoke City FC",
        "uri": "http://dbpedia.org/resource/Stoke_City_F.C."
      }
    ],
    "id": "f915a7c6e28343a1861fb5a31d770432",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub"
      }
    ]
  },
  {
    "question": "Is Lloyd  Nosler the editor of The Temptress?",
    "SerialNumber": "998",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Temptress> <http://dbpedia.org/ontology/editing> <http://dbpedia.org/resource/Lloyd_Nosler> }",
    "entity mapping": [
      {
        "label": "The Temptress",
        "uri": "http://dbpedia.org/resource/The_Temptress"
      },
      {
        "label": "nosler lloyd",
        "uri": "http://dbpedia.org/resource/Lloyd_Nosler"
      }
    ],
    "id": "5e350b58254d4f07a7a629bb71533ba6",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/editing"
      }
    ]
  },
  {
    "question": "How many Thesaban towns are there?",
    "SerialNumber": "1001",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Thesaban>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Town>}",
    "entity mapping": [
      {
        "label": "Thesaban",
        "uri": "http://dbpedia.org/resource/Thesaban"
      }
    ],
    "id": "8a90aa06557b4f7387d69334dbc420ef",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/settlementType"
      },
      {
        "label": "town",
        "uri": "http://dbpedia.org/ontology/Town"
      }
    ]
  },
  {
    "question": "Did Oliver Sacks study at the Columbia University?",
    "SerialNumber": "1004",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Oliver_Sacks> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Columbia_University> }",
    "entity mapping": [
      {
        "label": "Oliver Sacks",
        "uri": "http://dbpedia.org/resource/Oliver_Sacks"
      },
      {
        "label": "Columbia University",
        "uri": "http://dbpedia.org/resource/Columbia_University"
      }
    ],
    "id": "d15fc086b4a342d0a45205ffd6963f8c",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/institution"
      }
    ]
  },
  {
    "question": "How many other genere are there of the radio stations whose one of the genre  is Classic rock ?",
    "SerialNumber": "1005",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/programmeFormat> <http://dbpedia.org/resource/Classic_rock> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri }",
    "entity mapping": [
      {
        "label": "Classic rock",
        "uri": "http://dbpedia.org/resource/Classic_rock"
      }
    ],
    "id": "02ae1a10a037480a91be9b50a5073a8b",
    "predicate mapping": [
      {
        "label": "radio stations",
        "uri": "http://dbpedia.org/ontology/programmeFormat"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/programmeFormat"
      }
    ]
  },
  {
    "question": "Who was the narrator in the point?",
    "SerialNumber": "1009",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Point!> <http://dbpedia.org/property/narrated> ?uri } ",
    "entity mapping": [
      {
        "label": "the point?",
        "uri": "http://dbpedia.org/resource/The_Point!"
      }
    ],
    "id": "6cf76cd43efe4dae9271d0dcafd040d0",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated"
      }
    ]
  },
  {
    "question": "Which basketball team's president studied in the Brockport Golden Eagles?",
    "SerialNumber": "1011",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Brockport_Golden_Eagles> . ?uri <http://dbpedia.org/property/president> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballTeam>}",
    "entity mapping": [
      {
        "label": "Brockport Golden Eagles",
        "uri": "http://dbpedia.org/resource/Brockport_Golden_Eagles"
      }
    ],
    "id": "37d312b3fc364f16bdc7b55e5a845a90",
    "predicate mapping": [
      {
        "label": "studied",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "basketball team",
        "uri": "http://dbpedia.org/ontology/BasketballTeam"
      }
    ]
  },
  {
    "question": "How many scientist became famous for the battle of Occupation of Japan?",
    "SerialNumber": "1015",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Occupation_of_Japan> . ?uri <http://dbpedia.org/property/knownFor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Occupation of Japan",
        "uri": "http://dbpedia.org/resource/Occupation_of_Japan"
      }
    ],
    "id": "7124c65f43eb4c7db607755053ad3252",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Which owner of the national Herald india is the leader of Kumta ?",
    "SerialNumber": "1016",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Kumta> <http://dbpedia.org/property/governmentType> ?uri} ",
    "entity mapping": [
      {
        "label": "national Herald",
        "uri": "http://dbpedia.org/resource/The_National_Herald_(India)"
      },
      {
        "label": "Kumta",
        "uri": "http://dbpedia.org/resource/Kumta"
      }
    ],
    "id": "722afd3c1d7f45638c954d4bac6d0dfb",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/governmentType"
      }
    ]
  },
  {
    "question": "In how many countries does the Zurich Affoltern am Albis Zug line go?",
    "SerialNumber": "1018",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/line> <http://dbpedia.org/resource/Zürich–Affoltern_am_Albis–Zug_railway_line> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "affoltern albis",
        "uri": "http://dbpedia.org/resource/Zürich–Affoltern_am_Albis–Zug_railway_line"
      }
    ],
    "id": "b64d9fce937f4f0e9a0ca37ee8953f92",
    "predicate mapping": [
      {
        "label": "line",
        "uri": "http://dbpedia.org/property/line"
      },
      {
        "label": "In",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Give me the count of all people who ascented a peak in California?",
    "SerialNumber": "1019",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/California> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "975c249b705448208e1323922ac6f2da",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "ascented",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      },
      {
        "label": "peak",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What people are known to work for Johnny Cash?",
    "SerialNumber": "1020",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Johnny Cash",
        "uri": "http://dbpedia.org/resource/Johnny_Cash"
      }
    ],
    "id": "d7cf27ca038544a0aedfa9c7533e0743",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "known",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What rivers originate from Australian Alps?",
    "SerialNumber": "1022",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Australian Alps",
        "uri": "http://dbpedia.org/resource/Australian_Alps"
      }
    ],
    "id": "a40f13291ca14b10b2f098c618bb7b4d",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What's the religion of the winner of china election of 2008?",
    "SerialNumber": "1024",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "2008",
        "uri": "http://dbpedia.org/resource/Republic_of_China_legislative_election,_2008"
      }
    ],
    "id": "ec098d0e9dc04cb997cf1bedf575db5c",
    "predicate mapping": [
      {
        "label": "election",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What is the constituency of the people who died in Lampedusa?",
    "SerialNumber": "1027",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Lampedusa> . ?x <http://dbpedia.org/property/constituency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Lampedusa",
        "uri": "http://dbpedia.org/resource/Lampedusa"
      }
    ],
    "id": "85cdd790d3474b37b3fbbb8ecfd40517",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Where else did the graduates of the university of west indies study?",
    "SerialNumber": "1028",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/University_of_the_West_Indies> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "university indies west",
        "uri": "http://dbpedia.org/resource/University_of_the_West_Indies"
      }
    ],
    "id": "5b6758a1346840589e4406f834826e3c",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "Which statesman is married to Dolley Madison?",
    "SerialNumber": "1030",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "uri": "http://dbpedia.org/resource/Dolley_Madison"
      }
    ],
    "id": "cb55d0a92ec24545ab35ad668354f53e",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "statesman",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "How many groups have fought in wars where Richard Taylor fought too?",
    "SerialNumber": "1032",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Richard_Taylor_(colonel)> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Richard Taylor",
        "uri": "http://dbpedia.org/resource/Richard_Taylor_(colonel)"
      }
    ],
    "id": "7dfadb99e8c946deaabb77d1f0ef093c",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "groups",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Who directed the haunted house and alice in wonderland?",
    "SerialNumber": "1034",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alice's_Wonderland> <http://dbpedia.org/ontology/director> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri . }",
    "entity mapping": [
      {
        "label": "wonderland alice",
        "uri": "http://dbpedia.org/resource/Alice's_Wonderland"
      },
      {
        "label": "the haunted house",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)"
      }
    ],
    "id": "da7f8fc6054d436fa5dc4a6dca13af51",
    "predicate mapping": [
      {
        "label": "directed",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "1929_film",
        "uri": "http://dbpedia.org/ontology/director"
      }
    ]
  },
  {
    "question": "Count the sports played at universities located in Urban Areas?",
    "SerialNumber": "1036",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Urban_area> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "Urban Area",
        "uri": "http://dbpedia.org/resource/Urban_area"
      }
    ],
    "id": "39670fa8f4204ba69a06afe012d003cb",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Where the club of Kiki Cutter located?",
    "SerialNumber": "1037",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kiki_Cutter> <http://dbpedia.org/property/club> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kiki Cutter",
        "uri": "http://dbpedia.org/resource/Kiki_Cutter"
      }
    ],
    "id": "c24dda07f8a74f7a97a4c283745cc67c",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Who penned Emma and Jane Austen in Manhatten?",
    "SerialNumber": "1038",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jane_Austen_in_Manhattan> <http://dbpedia.org/ontology/writer> ?uri. <http://dbpedia.org/resource/Emma_(novel)> <http://dbpedia.org/property/author> ?uri . }",
    "entity mapping": [
      {
        "label": "Jane",
        "uri": "http://dbpedia.org/resource/Jane_Austen_in_Manhattan"
      },
      {
        "label": "Emma",
        "uri": "http://dbpedia.org/resource/Emma_(novel)"
      }
    ],
    "id": "8facfcdabe5c45f6a4ff24195185f240",
    "predicate mapping": [
      {
        "label": "Manhatten",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "Emma and Jane Austen",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "Which wars were fought by the commander whose deputy was Robert T. Herres?",
    "SerialNumber": "1039",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deputy> <http://dbpedia.org/resource/Robert_T._Herres> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Robert T. Herres",
        "uri": "http://dbpedia.org/resource/Robert_T._Herres"
      }
    ],
    "id": "b80894dd929f4fff8e33453137e5f838",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/ontology/deputy"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Is the Bucyrus MT6300AC assembled in north america?",
    "SerialNumber": "1040",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bucyrus_MT6300AC> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/North_America> }",
    "entity mapping": [
      {
        "label": "Bucyrus MT6300AC",
        "uri": "http://dbpedia.org/resource/Bucyrus_MT6300AC"
      },
      {
        "label": "north america",
        "uri": "http://dbpedia.org/resource/North_America"
      }
    ],
    "id": "44579153ae3b44e89b30a9b9990e1c09",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      }
    ]
  },
  {
    "question": "What are all the religions in which Jacob and Abraham are important?",
    "SerialNumber": "1041",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jacob> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Abraham> <http://dbpedia.org/property/veneratedIn> ?uri . }",
    "entity mapping": [
      {
        "label": "Jacob",
        "uri": "http://dbpedia.org/resource/Jacob"
      },
      {
        "label": "Abraham",
        "uri": "http://dbpedia.org/resource/Abraham"
      }
    ],
    "id": "a807b47daf314dd1867083e605303a2b",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/veneratedIn"
      },
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/veneratedIn"
      }
    ]
  },
  {
    "question": "What is the common award won by geoffrey Rush and Laemmle Theatres ?",
    "SerialNumber": "1045",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geoffrey_Rush> <http://dbpedia.org/property/awards> ?uri. <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri} ",
    "entity mapping": [
      {
        "label": "geoffrey Rush",
        "uri": "http://dbpedia.org/resource/Geoffrey_Rush"
      },
      {
        "label": "Laemmle Theatres",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres"
      }
    ],
    "id": "0f95ea47819f4c68bd0ce67b5a955e3f",
    "predicate mapping": [
      {
        "label": "award won",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "common",
        "uri": "http://dbpedia.org/ontology/service"
      }
    ]
  },
  {
    "question": "Who develops the computation platform of Microsoft Expression Encoder ?",
    "SerialNumber": "1046",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Microsoft_Expression_Encoder> <http://dbpedia.org/ontology/computingPlatform> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Microsoft Expression Encoder",
        "uri": "http://dbpedia.org/resource/Microsoft_Expression_Encoder"
      }
    ],
    "id": "4a3f11eb3f2d4d0389762febc9a3d122",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "develops",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "In which country is the Chapelle Saint-Louis de Carthage located ?",
    "SerialNumber": "1048",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage> <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "Chapelle Saint-Louis de Carthage",
        "uri": "http://dbpedia.org/resource/Chapelle_Saint-Louis_de_Carthage"
      }
    ],
    "id": "3a6432cd1ada457994b8cd04721bcccd",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "In how many places can I find tombs of people who fought in the Norwalk Trainband?",
    "SerialNumber": "1050",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Norwalk_Trainband> . ?x <http://dbpedia.org/property/restingplace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Norwalk Trainband",
        "uri": "http://dbpedia.org/resource/Norwalk_Trainband"
      }
    ],
    "id": "2f9f8fd7f42f40a19ee4c0b72746fef6",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "Which nationality of Newin Chidchob is also the nationality of Ajahn Sao Kantaslo ?",
    "SerialNumber": "1051",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Newin_Chidchob> <http://dbpedia.org/property/nationality> ?uri. <http://dbpedia.org/resource/Ajahn_Sao_Kantasīlo> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "Newin Chidchob",
        "uri": "http://dbpedia.org/resource/Newin_Chidchob"
      },
      {
        "label": "Ajahn Sao Kantaslo",
        "uri": "http://dbpedia.org/resource/Ajahn_Sao_Kantasīlo"
      }
    ],
    "id": "7f491bee97b44a1eb028ecd5aea8a442",
    "predicate mapping": [
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "Which movies' composers have won a BAFTA for film music?",
    "SerialNumber": "1052",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "music bafta film for",
        "uri": "http://dbpedia.org/resource/BAFTA_Award_for_Best_Film_Music"
      }
    ],
    "id": "a655921614b54e81b96b9832c987cc05",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "composers",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Is Microsoft office written in C++",
    "SerialNumber": "1053",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Microsoft_Office> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++> }",
    "entity mapping": [
      {
        "label": "Microsoft office",
        "uri": "http://dbpedia.org/resource/Microsoft_Office"
      },
      {
        "label": "C++",
        "uri": "http://dbpedia.org/resource/C++"
      }
    ],
    "id": "a4af0ba8a3fe4331ac77ceb9f178ed02",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      }
    ]
  },
  {
    "question": "Was the altazor drawn by Picasso?",
    "SerialNumber": "1054",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Altazor> <http://dbpedia.org/property/illustrator> <http://dbpedia.org/resource/Pablo_Picasso> }",
    "entity mapping": [
      {
        "label": "altazor",
        "uri": "http://dbpedia.org/resource/Altazor"
      },
      {
        "label": "Picasso",
        "uri": "http://dbpedia.org/resource/Pablo_Picasso"
      }
    ],
    "id": "abca45aad53b4fdbaa4b40cd8f0a6490",
    "predicate mapping": [
      {
        "label": "drawn",
        "uri": "http://dbpedia.org/property/illustrator"
      }
    ]
  },
  {
    "question": "How many people used to play for Toronto Argonauts?",
    "SerialNumber": "1055",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Toronto_Argonauts>  . }",
    "entity mapping": [
      {
        "label": "Toronto Argonauts",
        "uri": "http://dbpedia.org/resource/Toronto_Argonauts"
      }
    ],
    "id": "081763becc9f4357b36cb9ef05856c1d",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "In how many languages did Marika Gombitova sing?",
    "SerialNumber": "1057",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Marika_Gombitová> . ?x <http://dbpedia.org/property/language> ?uri  . }",
    "entity mapping": [
      {
        "label": "Marika Gombitova",
        "uri": "http://dbpedia.org/resource/Marika_Gombitová"
      }
    ],
    "id": "522b9a5a5c03491bbbb0b8eb89fc063f",
    "predicate mapping": [
      {
        "label": "sing",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      }
    ]
  },
  {
    "question": "What is the official residence of the Christopher Daz Figuero which is also the  state of the Cruce a Nado Internacional",
    "SerialNumber": "1059",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Christopher_Díaz_Figueroa> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Cruce_a_Nado_Internacional> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "christopher figuero",
        "uri": "http://dbpedia.org/resource/Christopher_Díaz_Figueroa"
      },
      {
        "label": "Cruce a Nado Internacional",
        "uri": "http://dbpedia.org/resource/Cruce_a_Nado_Internacional"
      }
    ],
    "id": "e1d32c8ac1044f5b815f5bd8b971b736",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "What are the track and field events of Jamiatu Muslim Mindanao?",
    "SerialNumber": "1060",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri } ",
    "entity mapping": [
      {
        "label": "Jamiatu Muslim Mindanao",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao"
      }
    ],
    "id": "477b36580d6c453e9fe828225b61fbb0",
    "predicate mapping": [
      {
        "label": "events",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Which athlete was the flag bearer for Switzerland in 2004 and 2008 summer Olympics ?",
    "SerialNumber": "1067",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri . }",
    "entity mapping": [
      {
        "label": "switzerland olympics summer 2004",
        "uri": "http://dbpedia.org/resource/Switzerland_at_the_2004_Summer_Olympics"
      },
      {
        "label": "switzerland olympics summer 2008",
        "uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics"
      }
    ],
    "id": "3a4019df663a4b7694548d7e5fa8ed39",
    "predicate mapping": [
      {
        "label": "bearer flag",
        "uri": "http://dbpedia.org/property/flagbearer"
      },
      {
        "label": "bearer flag",
        "uri": "http://dbpedia.org/property/flagbearer"
      }
    ]
  },
  {
    "question": "List some pupils of National Science Medal winning scientists?",
    "SerialNumber": "1070",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "national science medal",
        "uri": "http://dbpedia.org/resource/National_Medal_of_Science"
      }
    ],
    "id": "0875010dd1d442a09d23bdaaf2293064",
    "predicate mapping": [
      {
        "label": "winning",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "pupils",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Name the TV show which has judge as harry Connick and is broadcasted on Fox Broadcasting Company ?",
    "SerialNumber": "1073",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Fox Broadcasting Company",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      },
      {
        "label": "connick harry",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr."
      }
    ],
    "id": "82c928cbd1774387a68f7fb4dd3e62ec",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What company brought Riddim Ribbon to the market, and developed the batch monitor?",
    "SerialNumber": "1074",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Batch_Monitor> <http://dbpedia.org/property/developer> ?uri. <http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas> <http://dbpedia.org/property/distributor> ?uri} ",
    "entity mapping": [
      {
        "label": "batch monitor",
        "uri": "http://dbpedia.org/resource/Batch_Monitor"
      },
      {
        "label": "riddim ribbon",
        "uri": "http://dbpedia.org/resource/Riddim_Ribbon_feat._The_Black_Eyed_Peas"
      }
    ],
    "id": "7ad84cbcf92d434bb36c969e41e4969c",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "Ribbon",
        "uri": "http://dbpedia.org/property/distributor"
      }
    ]
  },
  {
    "question": "Who is the builder of Estadio Nacional de Costa Rica and also location of Xianren Cave ?",
    "SerialNumber": "1079",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)> <http://dbpedia.org/ontology/builder> ?uri. <http://dbpedia.org/resource/Xianren_Cave> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Estadio Nacional de Costa Rica",
        "uri": "http://dbpedia.org/resource/Estadio_Nacional_de_Costa_Rica_(2011)"
      },
      {
        "label": "Xianren Cave",
        "uri": "http://dbpedia.org/resource/Xianren_Cave"
      }
    ],
    "id": "fc3fe84aeff64b73884ae52e139bfb71",
    "predicate mapping": [
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Erik Jendresen is writer and Play tone is company of which TV show ?",
    "SerialNumber": "1084",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Erik Jendresen",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen"
      },
      {
        "label": "tone play",
        "uri": "http://dbpedia.org/resource/Playtone"
      }
    ],
    "id": "ef953fcfd8774d258a795e40f2c3858b",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where is the residence of the governor of Bangkok ?",
    "SerialNumber": "1086",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Bangkok> <http://dbpedia.org/ontology/leaderName> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bangkok",
        "uri": "http://dbpedia.org/resource/Bangkok"
      }
    ],
    "id": "6c81695f20d946cfbb2d34523cce45c7",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "who all play for of the american football players at  Quarterback position?",
    "SerialNumber": "1088",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Quarterback",
        "uri": "http://dbpedia.org/resource/Quarterback"
      }
    ],
    "id": "997800a673344212a2c5e15235cd6f2a",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "Where is Emmett Hughes from?",
    "SerialNumber": "1091",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Emmett_Hughes> <http://dbpedia.org/ontology/nationality> ?uri  . }",
    "entity mapping": [
      {
        "label": "Emmett Hughes",
        "uri": "http://dbpedia.org/resource/Emmett_Hughes"
      }
    ],
    "id": "d492192a5490409c9eedf51d1e09b74b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What are the television shows which are in NTSC and 5.1 surround sound?",
    "SerialNumber": "1096",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/NTSC> . ?uri <http://dbpedia.org/ontology/format> <http://dbpedia.org/resource/5.1_surround_sound> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "NTSC",
        "uri": "http://dbpedia.org/resource/NTSC"
      },
      {
        "label": "5.1 surround sound",
        "uri": "http://dbpedia.org/resource/5.1_surround_sound"
      }
    ],
    "id": "72c7e0fedd6143eb940bc3debcdec811",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/format"
      },
      {
        "uri": "http://dbpedia.org/ontology/format"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "In which sects was the aristocrat venerated, whose parent is Thelred the Unready?",
    "SerialNumber": "1099",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Æthelred_the_Unready> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "unready thelred",
        "uri": "http://dbpedia.org/resource/Æthelred_the_Unready"
      }
    ],
    "id": "6f0ee8f2cf284dce972eed151ef62685",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "venerated,",
        "uri": "http://dbpedia.org/property/veneratedIn"
      },
      {
        "label": "Unready",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "What is the appliance build jointly by Sony and Asus?",
    "SerialNumber": "1101",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "Sony",
        "uri": "http://dbpedia.org/resource/Sony"
      },
      {
        "label": "Asus",
        "uri": "http://dbpedia.org/resource/Asus"
      }
    ],
    "id": "468c3951514945a0be198af850f2e036",
    "predicate mapping": [
      {
        "label": "jointly",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "jointly",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "What games are played at institutions affiliated with the international association of universities?",
    "SerialNumber": "1102",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/International_Association_of_Universities> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "entity mapping": [
      {
        "label": "international association of universities",
        "uri": "http://dbpedia.org/resource/International_Association_of_Universities"
      }
    ],
    "id": "e16be5fbd56d460f90909d96e7655e59",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "institutions",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution"
      }
    ]
  },
  {
    "question": "Whose units are responsible for close air support?",
    "SerialNumber": "1103",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Close_air_support> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . }",
    "entity mapping": [
      {
        "label": "close air support",
        "uri": "http://dbpedia.org/resource/Close_air_support"
      }
    ],
    "id": "2ab3f24e0f7942e2beb152acb193fba3",
    "predicate mapping": [
      {
        "label": "responsible",
        "uri": "http://dbpedia.org/property/role"
      },
      {
        "label": "units",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      }
    ]
  },
  {
    "question": "Which work of Craig van Tilbury is close to the area of The Chess Monthyl ?",
    "SerialNumber": "1104",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Chess_Monthly> <http://dbpedia.org/property/discipline> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "entity mapping": [
      {
        "label": "The Chess Monthyl",
        "uri": "http://dbpedia.org/resource/The_Chess_Monthly"
      },
      {
        "label": "Craig van Tilbury",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury"
      }
    ],
    "id": "e0baa3e7583a49c484a441b60d77088a",
    "predicate mapping": [
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/discipline"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": " Count the participants of the NBA.",
    "SerialNumber": "1105",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/National_Basketball_Association>  . }",
    "entity mapping": [
      {
        "label": "NBA",
        "uri": "http://dbpedia.org/resource/National_Basketball_Association"
      }
    ],
    "id": "55b783d8ff214544b144eab6929fe919",
    "predicate mapping": [
      {
        "label": "participants",
        "uri": "http://dbpedia.org/ontology/league"
      }
    ]
  },
  {
    "question": "How many politicians are in the US Senate?",
    "SerialNumber": "1106",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/United_States_Senate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "US Senate",
        "uri": "http://dbpedia.org/resource/United_States_Senate"
      }
    ],
    "id": "4f6ae681c8cd42ca97172a0eb6a2601b",
    "predicate mapping": [
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/property/order"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "How many players participated in the 2004-05 FC Barcelona season?",
    "SerialNumber": "1107",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/2004–05_FC_Barcelona_season> <http://dbpedia.org/property/name> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "entity mapping": [
      {
        "label": "barcelona season",
        "uri": "http://dbpedia.org/resource/2004–05_FC_Barcelona_season"
      }
    ],
    "id": "c4d5f1f0500b4321ace51aaa29c775f4",
    "predicate mapping": [
      {
        "label": "season",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer"
      }
    ]
  },
  {
    "question": "Count everyone who studied at an institute which are in Suburbs?",
    "SerialNumber": "1108",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }",
    "entity mapping": [
      {
        "label": "Suburb",
        "uri": "http://dbpedia.org/resource/Suburb"
      }
    ],
    "id": "835041264319434da9eae0ff2fa79b48",
    "predicate mapping": [
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "studied at",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "Which source of broad creek is the Audenried tunnel located ?",
    "SerialNumber": "1109",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)> <http://dbpedia.org/ontology/source> ?uri. <http://dbpedia.org/resource/Audenried_Tunnel> <http://dbpedia.org/ontology/location> ?uri} ",
    "entity mapping": [
      {
        "label": "broad creek",
        "uri": "http://dbpedia.org/resource/Broad_Creek_(Susquehanna_River)"
      },
      {
        "label": "Audenried tunnel",
        "uri": "http://dbpedia.org/resource/Audenried_Tunnel"
      }
    ],
    "id": "1538e37aff2242c1a828e3a85c5ed1c1",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Count me the number of people whose military unit is involved with Close air support ?",
    "SerialNumber": "1110",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/role> <http://dbpedia.org/resource/Close_air_support> . ?uri <http://dbpedia.org/ontology/militaryUnit> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "Close air support",
        "uri": "http://dbpedia.org/resource/Close_air_support"
      }
    ],
    "id": "73855487a1de46828e5f91a3cf063c8d",
    "predicate mapping": [
      {
        "label": "involved",
        "uri": "http://dbpedia.org/property/role"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "Who were fighting the war where the QF Hotchkiss was used?",
    "SerialNumber": "1111",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/QF_6-pounder_Hotchkiss> <http://dbpedia.org/ontology/usedInWar> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Hotchkiss",
        "uri": "http://dbpedia.org/resource/QF_6-pounder_Hotchkiss"
      }
    ],
    "id": "39ff074f19dd4139aa8df33d7f1f58bb",
    "predicate mapping": [
      {
        "label": "used war",
        "uri": "http://dbpedia.org/ontology/usedInWar"
      },
      {
        "label": "QF",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "QF",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "What awards have been given to the artists coming out of the university of Melbourne, faculty of VCA and MCM?",
    "SerialNumber": "1112",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM"
      }
    ],
    "id": "61b80c35c46340f49bd57e0bc1086975",
    "predicate mapping": [
      {
        "label": "MCM",
        "uri": "http://dbpedia.org/ontology/training"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "what are some common surnames of female people?",
    "SerialNumber": "1118",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> } ",
    "entity mapping": [
      {
        "label": "female",
        "uri": "http://dbpedia.org/resource/Female"
      }
    ],
    "id": "1eb5d6d148254250bbcdae0ff473cf35",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/gender"
      }
    ]
  },
  {
    "question": "Give the total number of places to which airlines go, who also go to Glasgow?",
    "SerialNumber": "1124",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Glasgow",
        "uri": "http://dbpedia.org/resource/Glasgow_Airport"
      }
    ],
    "id": "82e734b7dd9541a89f7cef6cbcb9b9df",
    "predicate mapping": [
      {
        "label": "airlines",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      },
      {
        "label": "airlines",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Where does the rail route, which ends at the Moskovsky station, begins?",
    "SerialNumber": "1125",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . }",
    "entity mapping": [
      {
        "label": "moskovsky",
        "uri": "http://dbpedia.org/resource/Moskovsky_railway_station_(Saint_Petersburg)"
      }
    ],
    "id": "0dc38267699e4810bc3da41fe383f592",
    "predicate mapping": [
      {
        "label": "route,",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "route,",
        "uri": "http://dbpedia.org/ontology/routeStart"
      }
    ]
  },
  {
    "question": "Who is the common prime minster of William Deaner and mark Latham ?",
    "SerialNumber": "1128",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Mark_Latham> <http://dbpedia.org/property/primeminister> ?uri} ",
    "entity mapping": [
      {
        "label": "William Deane",
        "uri": "http://dbpedia.org/resource/William_Deane"
      },
      {
        "label": "mark Latham",
        "uri": "http://dbpedia.org/resource/Mark_Latham"
      }
    ],
    "id": "606abcc3ca2744b2906bb0e7cdd47256",
    "predicate mapping": [
      {
        "label": "minster",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      },
      {
        "label": "minster",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "Count the number of sports played by the universities whihc also plays Volleyball ?",
    "SerialNumber": "1134",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/Volleyball> . ?x <http://dbpedia.org/property/athletics> ?uri }",
    "entity mapping": [
      {
        "label": "Volleyball",
        "uri": "http://dbpedia.org/resource/Volleyball"
      }
    ],
    "id": "b335029079ec49f5972d4b5846330c15",
    "predicate mapping": [
      {
        "label": "plays",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "In which religions are both Pope Gregory 1 and Edwin of northumbria reverred?",
    "SerialNumber": "1135",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pope_Gregory_I> <http://dbpedia.org/property/veneratedIn> ?uri. <http://dbpedia.org/resource/Edwin_of_Northumbria> <http://dbpedia.org/property/veneratedIn> ?uri . }",
    "entity mapping": [
      {
        "label": "Pope Gregory 1",
        "uri": "http://dbpedia.org/resource/Pope_Gregory_I"
      },
      {
        "label": "Edwin of northumbria",
        "uri": "http://dbpedia.org/resource/Edwin_of_Northumbria"
      }
    ],
    "id": "fac30a60a31948d38da3463419202599",
    "predicate mapping": [
      {
        "label": "reverred",
        "uri": "http://dbpedia.org/property/veneratedIn"
      },
      {
        "label": "reverred",
        "uri": "http://dbpedia.org/property/veneratedIn"
      }
    ]
  },
  {
    "question": "Which wine region of Bogdanua is the Croatian Inline hockey team part of ?",
    "SerialNumber": "1136",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogdanuša> <http://dbpedia.org/ontology/wineRegion> ?uri. <http://dbpedia.org/resource/Croatian_Inline_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Bogdanua",
        "uri": "http://dbpedia.org/resource/Bogdanuša"
      },
      {
        "label": "croatian inline hockey",
        "uri": "http://dbpedia.org/resource/Croatian_Inline_Hockey_League"
      }
    ],
    "id": "f3500fd23d3a4a29bff285293f25ae61",
    "predicate mapping": [
      {
        "label": "wine region",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "For which games are Sam Loyd and Eric Schiller both famous?",
    "SerialNumber": "1137",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Loyd> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri . }",
    "entity mapping": [
      {
        "label": "Sam Loyd",
        "uri": "http://dbpedia.org/resource/Sam_Loyd"
      },
      {
        "label": "Eric Schiller",
        "uri": "http://dbpedia.org/resource/Eric_Schiller"
      }
    ],
    "id": "918fa31e392c498eb55811d9fa7b697c",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Count the number of religions followed by Janta Dal members.",
    "SerialNumber": "1138",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Janata_Dal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Janta Dal",
        "uri": "http://dbpedia.org/resource/Janata_Dal"
      }
    ],
    "id": "8c33f93613d64297b003b2f378be8c76",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which president of United States had vice president as John Adams?",
    "SerialNumber": "1140",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/John_Adams>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "John Adams",
        "uri": "http://dbpedia.org/resource/John_Adams"
      }
    ],
    "id": "d536516bc342455c89d920f17b86dc1e",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      },
      {
        "label": "States",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Where are the tombs of kings and queens who have died in England?",
    "SerialNumber": "1141",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "d84486681133495fa12247728693ae90",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Where was the successor of Hank Brown born?",
    "SerialNumber": "1142",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Hank_Brown> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Hank Brown",
        "uri": "http://dbpedia.org/resource/Hank_Brown"
      }
    ],
    "id": "6e1b08820a934affb050c025035b8a9a",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Greek writers have won which award?",
    "SerialNumber": "1143",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/ethnicity> <http://dbpedia.org/resource/Greeks> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Greek ",
        "uri": "http://dbpedia.org/resource/Greeks"
      }
    ],
    "id": "6e0f647889314bb68424848e0c6e2d13",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/ethnicity"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Count everyone who lives in a place where Indian English is an official language ?",
    "SerialNumber": "1148",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
    "entity mapping": [
      {
        "label": "Indian English",
        "uri": "http://dbpedia.org/resource/Indian_English"
      }
    ],
    "id": "3c8a202e192c4382af9462f6ba5b67bb",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Where does Dennis DeConcini and Scott Berkun both live?",
    "SerialNumber": "1150",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Scott_Berkun> <http://dbpedia.org/property/residence> ?uri. <http://dbpedia.org/resource/Dennis_DeConcini> <http://dbpedia.org/property/residence> ?uri . }",
    "entity mapping": [
      {
        "label": "Scott Berkun",
        "uri": "http://dbpedia.org/resource/Scott_Berkun"
      },
      {
        "label": "Dennis DeConcini",
        "uri": "http://dbpedia.org/resource/Dennis_DeConcini"
      }
    ],
    "id": "ab981f539cf94ceea0c6ca6ddf8f673d",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "Where does John A Danaher III work?",
    "SerialNumber": "1151",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_A._Danaher_III> <http://dbpedia.org/property/office> ?uri } ",
    "entity mapping": [
      {
        "label": "John A Danaher III",
        "uri": "http://dbpedia.org/resource/John_A._Danaher_III"
      }
    ],
    "id": "0c2db5b405ac48dcb16b0ce50df877d1",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "Where was MacKenzie Miller born?",
    "SerialNumber": "1154",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MacKenzie_Miller> <http://dbpedia.org/property/birthPlace> ?uri } ",
    "entity mapping": [
      {
        "label": "MacKenzie Miller",
        "uri": "http://dbpedia.org/resource/MacKenzie_Miller"
      }
    ],
    "id": "3cf7f7b831724521976ea028c52cda60",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "What disease led to the demise of Letitia MacTavish Hargrave and Martino Martini ?",
    "SerialNumber": "1156",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Disease>}",
    "entity mapping": [
      {
        "label": "Letitia MacTavish Hargrave",
        "uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave"
      },
      {
        "label": "Martino Martini",
        "uri": "http://dbpedia.org/resource/Martino_Martini"
      }
    ],
    "id": "9077ab52a3a64bf292bf4d297b63970e",
    "predicate mapping": [
      {
        "label": "demise",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "demise",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "disease",
        "uri": "http://dbpedia.org/ontology/Disease"
      }
    ]
  },
  {
    "question": "List the graves of the royalities which have been buried at Beeleigh Abbey ?",
    "SerialNumber": "1160",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Beeleigh_Abbey> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Beeleigh Abbey",
        "uri": "http://dbpedia.org/resource/Beeleigh_Abbey"
      }
    ],
    "id": "1defef355b2c46aabc6b54f50c3c95fc",
    "predicate mapping": [
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "royalities",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "In which country does the Auckland rugby union team play  ?",
    "SerialNumber": "1161",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Auckland_rugby_union_team> <http://dbpedia.org/ontology/league> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "Auckland rugby union team",
        "uri": "http://dbpedia.org/resource/Auckland_rugby_union_team"
      }
    ],
    "id": "5202a1a43509411c97552eca15f0aa05",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Name the sports played by Jamiatu Muslim Mindanao?",
    "SerialNumber": "1163",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri } ",
    "entity mapping": [
      {
        "label": "Jamiatu Muslim Mindanao",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao"
      }
    ],
    "id": "4f1f3f16733d448ab1125085d243f9f5",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/athletics"
      }
    ]
  },
  {
    "question": "Which person naratted The Incredible Hulk and also the writer of Tales of Suspense ?",
    "SerialNumber": "1165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri. <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri} ",
    "entity mapping": [
      {
        "label": "The Incredible Hulk",
        "uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)"
      },
      {
        "label": "Suspense",
        "uri": "http://dbpedia.org/resource/Tales_of_Suspense"
      }
    ],
    "id": "c453823ead1c41b19be3ef0d12dffbcf",
    "predicate mapping": [
      {
        "label": "Tales",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writers"
      }
    ]
  },
  {
    "question": "What is the total number of participant in conflict of SFOR?",
    "SerialNumber": "1167",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/SFOR> . ?x <http://dbpedia.org/ontology/battle> ?uri  . }",
    "entity mapping": [
      {
        "label": "SFOR",
        "uri": "http://dbpedia.org/resource/SFOR"
      }
    ],
    "id": "d8d26021d6d14746b178240e9a73b5c5",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "participant in conflict",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "From how many different places have people gone to the Harward Medical School?",
    "SerialNumber": "1168",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Harward Medical School",
        "uri": "http://dbpedia.org/resource/Harvard_Medical_School"
      }
    ],
    "id": "2a7a43ae00334b49bc601589c3cad2a4",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Which party has come in power at both Balangir and Amaravila in india?",
    "SerialNumber": "1172",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Balangir_district> <http://dbpedia.org/ontology/leaderName> ?uri. <http://dbpedia.org/resource/Amaravila> <http://dbpedia.org/ontology/leaderName> ?uri . }",
    "entity mapping": [
      {
        "label": "balangir",
        "uri": "http://dbpedia.org/resource/Balangir_district"
      },
      {
        "label": "Amaravila",
        "uri": "http://dbpedia.org/resource/Amaravila"
      }
    ],
    "id": "535f797b72ad4456b8a00fc9099707aa",
    "predicate mapping": [
      {
        "label": "india",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "india",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "What are some common games played in PATTS college of aeronautics and Jamiatu muslim mindanao?",
    "SerialNumber": "1173",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/property/athletics> ?uri . }",
    "entity mapping": [
      {
        "label": "PATTS college of aeronautics",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics"
      },
      {
        "label": "Jamiatu muslim mindanao",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao"
      }
    ],
    "id": "9145f59edef44c5a9a17a3fe513e7567",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Where is Semnani and Assyrian Neo-Aramaic spoken ?",
    "SerialNumber": "1177",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Semnani_languages> . ?uri <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Assyrian_Neo-Aramaic>  . }",
    "entity mapping": [
      {
        "label": "semnani",
        "uri": "http://dbpedia.org/resource/Semnani_languages"
      },
      {
        "label": "Assyrian Neo-Aramaic",
        "uri": "http://dbpedia.org/resource/Assyrian_Neo-Aramaic"
      }
    ],
    "id": "66a0125dafb4421d8a52c9f2008e8a18",
    "predicate mapping": [
      {
        "label": "spoken",
        "uri": "http://dbpedia.org/property/languages"
      },
      {
        "label": "spoken",
        "uri": "http://dbpedia.org/ontology/language"
      }
    ]
  },
  {
    "question": "Does Massimo Liverani play for Abarth?",
    "SerialNumber": "1178",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Massimo_Liverani> <http://dbpedia.org/property/currentTeam> <http://dbpedia.org/resource/Abarth> }",
    "entity mapping": [
      {
        "label": "Massimo Liverani",
        "uri": "http://dbpedia.org/resource/Massimo_Liverani"
      },
      {
        "label": "Abarth",
        "uri": "http://dbpedia.org/resource/Abarth"
      }
    ],
    "id": "cf9b667b1efe4e6cb0e035746c6bba30",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/currentTeam"
      }
    ]
  },
  {
    "question": "Name the appliance produced by Foxconn and its OS is provided by PlayStation 3 system software ?",
    "SerialNumber": "1180",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn> . ?uri <http://dbpedia.org/property/os> <http://dbpedia.org/resource/PlayStation_3_system_software>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "Foxconn",
        "uri": "http://dbpedia.org/resource/Foxconn"
      },
      {
        "label": "PlayStation 3 system software",
        "uri": "http://dbpedia.org/resource/PlayStation_3_system_software"
      }
    ],
    "id": "9e456d1b7d7a40c499f3f40a98c78f52",
    "predicate mapping": [
      {
        "label": "provided",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Name the source Island of Bayou ?",
    "SerialNumber": "1181",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Island_Bayou_(Oklahoma)> <http://dbpedia.org/ontology/source> ?uri } ",
    "entity mapping": [
      {
        "label": "island bayou",
        "uri": "http://dbpedia.org/resource/Island_Bayou_(Oklahoma)"
      }
    ],
    "id": "3e9133d020ca44b7a475fec7231d4ad5",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      }
    ]
  },
  {
    "question": "Did Alexander Magleby study at the Dartmouth College?",
    "SerialNumber": "1182",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alexander_Magleby> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Dartmouth_College> }",
    "entity mapping": [
      {
        "label": "Alexander Magleby",
        "uri": "http://dbpedia.org/resource/Alexander_Magleby"
      },
      {
        "label": "Dartmouth College",
        "uri": "http://dbpedia.org/resource/Dartmouth_College"
      }
    ],
    "id": "3ae2345e8e8844b1bcdc731a3b106eb9",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/university"
      }
    ]
  },
  {
    "question": "Where was Thomy Bourdelle born?",
    "SerialNumber": "1183",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomy_Bourdelle> <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "entity mapping": [
      {
        "label": "Thomy Bourdelle",
        "uri": "http://dbpedia.org/resource/Thomy_Bourdelle"
      }
    ],
    "id": "a7f07e0669f64b349876998f51a1f5c9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Who owns the schools which have a penguin as its mascot?",
    "SerialNumber": "1185",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Penguin> . ?x <http://dbpedia.org/ontology/authority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "penguin",
        "uri": "http://dbpedia.org/resource/Penguin"
      }
    ],
    "id": "5a9664b9e22545ef8fbc5d56f48ce5c1",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/authority"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "What is the total number of relgions followed by people born in Bangkok?",
    "SerialNumber": "1187",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Bangkok> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bangkok",
        "uri": "http://dbpedia.org/resource/Bangkok"
      }
    ],
    "id": "042fb5267c974d90beae49ab51013b82",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Twin cities 400 is operated by what city, which is the birthplace of Leona Baumgarter?",
    "SerialNumber": "1188",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Twin_Cities_400> <http://dbpedia.org/ontology/operatedBy> ?uri. <http://dbpedia.org/resource/Leona_Baumgartner> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Twin cities 400",
        "uri": "http://dbpedia.org/resource/Twin_Cities_400"
      },
      {
        "label": "Leona Baumgarter",
        "uri": "http://dbpedia.org/resource/Leona_Baumgartner"
      }
    ],
    "id": "700b88a3eb40456a8ec23a305cc5e2e5",
    "predicate mapping": [
      {
        "label": "operated by",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What are the gadgets whose manufacturing company is founded by Terry Gou?",
    "SerialNumber": "1191",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Terry_Gou> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}",
    "entity mapping": [
      {
        "label": "Terry Gou",
        "uri": "http://dbpedia.org/resource/Terry_Gou"
      }
    ],
    "id": "c09fbce16b2a4485808f9dbd9870a971",
    "predicate mapping": [
      {
        "label": "is founded by",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "manufacturing",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Device"
      }
    ]
  },
  {
    "question": "In which of the parties that have governed over Rishikesh, does Govinda belong too?",
    "SerialNumber": "1192",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Govinda_(actor)> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Rishikesh> <http://dbpedia.org/ontology/leaderName> ?uri} ",
    "entity mapping": [
      {
        "label": "Govinda",
        "uri": "http://dbpedia.org/resource/Govinda_(actor)"
      },
      {
        "label": "Rishikesh",
        "uri": "http://dbpedia.org/resource/Rishikesh"
      }
    ],
    "id": "f129083b942f4b85aa56e2f5b04507ce",
    "predicate mapping": [
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "List softwares written in C++ and runs on Mac OS ?",
    "SerialNumber": "1193",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . ?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Mac OS",
        "uri": "http://dbpedia.org/resource/Mac_OS"
      },
      {
        "label": "C++",
        "uri": "http://dbpedia.org/resource/C++"
      }
    ],
    "id": "47d43bd9adb04270b992a2f42fdd440d",
    "predicate mapping": [
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/programmingLanguage"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Who owns Ivanpah Solar Power Facility?",
    "SerialNumber": "1198",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility> <http://dbpedia.org/ontology/owner> ?uri } ",
    "entity mapping": [
      {
        "label": "Ivanpah Solar",
        "uri": "http://dbpedia.org/resource/Ivanpah_Solar_Power_Facility"
      }
    ],
    "id": "1455c7629a9f4b2cab3a809b4feac666",
    "predicate mapping": [
      {
        "label": "Facility",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "Where are ethnic group located which speak Nebraskan?",
    "SerialNumber": "1199",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Nebraska> <http://dbpedia.org/ontology/language> ?x . ?x <http://dbpedia.org/property/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EthnicGroup>}",
    "entity mapping": [
      {
        "label": "Nebraska",
        "uri": "http://dbpedia.org/resource/Nebraska"
      }
    ],
    "id": "163faec9938d47df8df231307032c826",
    "predicate mapping": [
      {
        "label": "speak",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "speak",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "ethnic group",
        "uri": "http://dbpedia.org/ontology/EthnicGroup"
      }
    ]
  },
  {
    "question": "Name the sharehoders of The National Herald ?",
    "SerialNumber": "1200",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri } ",
    "entity mapping": [
      {
        "label": "The National Herald",
        "uri": "http://dbpedia.org/resource/The_National_Herald_(India)"
      }
    ],
    "id": "b9bf97d01e9745d681eda36b557db3a8",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "List some things that Swedish people have become famous for?",
    "SerialNumber": "1201",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Swedish",
        "uri": "http://dbpedia.org/resource/Sweden"
      }
    ],
    "id": "b4ab98c79b904735bf86e5221256116e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "How many things are made by companies who produce mass media articles?",
    "SerialNumber": "1203",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Mass_media> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "entity mapping": [
      {
        "label": "mass media",
        "uri": "http://dbpedia.org/resource/Mass_media"
      }
    ],
    "id": "8265fe61d94940a4b5d099c217d00245",
    "predicate mapping": [
      {
        "label": "articles",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Name the rivers who originate from Essex?",
    "SerialNumber": "1204",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Essex>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Essex",
        "uri": "http://dbpedia.org/resource/Essex"
      }
    ],
    "id": "1d9fe6f6eb72444b935342fb4d81dad1",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/mouthPlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Is lion an animal?",
    "SerialNumber": "1208",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lion> <http://dbpedia.org/ontology/kingdom> <http://dbpedia.org/resource/Animal> }",
    "entity mapping": [
      {
        "label": "lion",
        "uri": "http://dbpedia.org/resource/Lion"
      },
      {
        "label": "animal",
        "uri": "http://dbpedia.org/resource/Animal"
      }
    ],
    "id": "6f768f7b19424f46bd39e6238cd0662c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/kingdom"
      }
    ]
  },
  {
    "question": "Which players have represented Los Angeles Angels of Anaheim?",
    "SerialNumber": "1209",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballPlayer>}",
    "entity mapping": [
      {
        "label": "Los Angeles Angels of Anaheim",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Angels_of_Anaheim"
      }
    ],
    "id": "6e7b5dec0d264850bf90a1ff6256427a",
    "predicate mapping": [
      {
        "label": "represented",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/BaseballPlayer"
      }
    ]
  },
  {
    "question": "List the shows whose network is run by BBC.",
    "SerialNumber": "1211",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/BBC> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC",
        "uri": "http://dbpedia.org/resource/BBC"
      }
    ],
    "id": "e0472e2206c9496a9f05207287956509",
    "predicate mapping": [
      {
        "label": "run",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are some games availible on nintendo's virtual console?",
    "SerialNumber": "1213",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "virtual console",
        "uri": "http://dbpedia.org/resource/Virtual_Console"
      }
    ],
    "id": "0cae9ed212d44d639d21c9747fe2c523",
    "predicate mapping": [
      {
        "label": "availible",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "For which party's PM did Chidambaram Subramaniam serve?",
    "SerialNumber": "1214",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chidambaram_Subramaniam> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Chidambaram Subramaniam",
        "uri": "http://dbpedia.org/resource/Chidambaram_Subramaniam"
      }
    ],
    "id": "2f91368c9d5c424791d014f111214078",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "List the movies whose cast member were born in Scotland.",
    "SerialNumber": "1219",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Scotland> . ?uri <http://dbpedia.org/ontology/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Scotland",
        "uri": "http://dbpedia.org/resource/Scotland"
      }
    ],
    "id": "faa44f1aaa984ca3b8508b206a3d0434",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which recognized title of Frank Thorne is also the product of Playboy Enterprise ?",
    "SerialNumber": "1221",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Playboy_Enterprises> <http://dbpedia.org/property/products> ?uri. <http://dbpedia.org/resource/Frank_Thorne> <http://dbpedia.org/ontology/award> ?uri} ",
    "entity mapping": [
      {
        "label": "Playboy Enterprise ",
        "uri": "http://dbpedia.org/resource/Playboy_Enterprises"
      },
      {
        "label": "Frank Thorne",
        "uri": "http://dbpedia.org/resource/Frank_Thorne"
      }
    ],
    "id": "b3e73fe9523d4661876a510c322a6d66",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "title",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What are the shows whose creator has worked as a screenwriter?",
    "SerialNumber": "1228",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriting> . ?uri <http://dbpedia.org/ontology/creator> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "screenwriter",
        "uri": "http://dbpedia.org/resource/Screenwriting"
      }
    ],
    "id": "3d48aaabb0914e66b31f1f131e6694fa",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "creator",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the person whose opponent's father is Newman Haynes Clanton?",
    "SerialNumber": "1229",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Newman_Haynes_Clanton> . ?uri <http://dbpedia.org/ontology/opponent> ?x  . }",
    "entity mapping": [
      {
        "label": "Newman Haynes Clanton",
        "uri": "http://dbpedia.org/resource/Newman_Haynes_Clanton"
      }
    ],
    "id": "a9c3b3eccb964ced854274422bbdec73",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      }
    ]
  },
  {
    "question": "Which religions are practiced in India?",
    "SerialNumber": "1231",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/India> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "India",
        "uri": "http://dbpedia.org/resource/India"
      }
    ],
    "id": "5f5159b391bc417294f896820d53baf8",
    "predicate mapping": [
      {
        "label": "practiced",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Is the Frank R Lillie House has the Chicago architecture?",
    "SerialNumber": "1236",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Frank_R._Lillie_House> <http://dbpedia.org/ontology/architecturalStyle> <http://dbpedia.org/resource/Chicago> }",
    "entity mapping": [
      {
        "label": "lillie house frank",
        "uri": "http://dbpedia.org/resource/Frank_R._Lillie_House"
      },
      {
        "label": "Chicago",
        "uri": "http://dbpedia.org/resource/Chicago"
      }
    ],
    "id": "9ca41a6f79a14b689dcfae0764808cd6",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/ontology/architecturalStyle"
      }
    ]
  },
  {
    "question": "Grey gppse and eristoff is produced by which company?",
    "SerialNumber": "1237",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grey_Goose_(vodka)> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri . }",
    "entity mapping": [
      {
        "label": "grey",
        "uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)"
      },
      {
        "label": "eristoff",
        "uri": "http://dbpedia.org/resource/Eristoff"
      }
    ],
    "id": "b727f0394eae4116bc3af96be4da1c1d",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/manufacturer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/manufacturer"
      }
    ]
  },
  {
    "question": "Which politician's constituency is led by the SF Board of Supervisors?",
    "SerialNumber": "1238",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors> . ?uri <http://dbpedia.org/property/constituency> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "SF Board of Supervisors",
        "uri": "http://dbpedia.org/resource/San_Francisco_Board_of_Supervisors"
      }
    ],
    "id": "6f9848de2af84f4fbcded6f13f857cf2",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderTitle"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What are the county seats of the region which operates the Boeing Field?",
    "SerialNumber": "1240",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Boeing_Field> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
    "entity mapping": [
      {
        "label": "Boeing Field",
        "uri": "http://dbpedia.org/resource/Boeing_Field"
      }
    ],
    "id": "19ab52b648234276ae7f2e54b88f4ea7",
    "predicate mapping": [
      {
        "label": "operates",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/Region"
      }
    ]
  },
  {
    "question": "Where did the 2015 MLS All-Star Game take place?",
    "SerialNumber": "1244",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2015_MLS_All-Star_Game> <http://dbpedia.org/property/city> ?uri } ",
    "entity mapping": [
      {
        "label": "2015 MLS All-Star Game",
        "uri": "http://dbpedia.org/resource/2015_MLS_All-Star_Game"
      }
    ],
    "id": "4a03be4b69ea4b10ba1e3d95a5f86f62",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/city"
      }
    ]
  },
  {
    "question": "Name some people working at someplace owned by News Corp.",
    "SerialNumber": "1246",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/owners> <http://dbpedia.org/resource/News_Corp> . ?uri <http://dbpedia.org/ontology/employer> ?x  . }",
    "entity mapping": [
      {
        "label": "News Corp",
        "uri": "http://dbpedia.org/resource/News_Corp"
      }
    ],
    "id": "447a43a67f144236a29b626f440ec2a0",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners"
      },
      {
        "label": "someplace",
        "uri": "http://dbpedia.org/ontology/employer"
      }
    ]
  },
  {
    "question": "What is the mascot of military in Quezon city?",
    "SerialNumber": "1248",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/Quezon_City> . ?x <http://dbpedia.org/property/mascot> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Quezon city",
        "uri": "http://dbpedia.org/resource/Quezon_City"
      }
    ],
    "id": "262bc6894dcd4fda8c651eb310b44496",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/garrison"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Who was the president at the time when the opponent of Benjamin Spock held office?",
    "SerialNumber": "1250",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Benjamin_Spock> . ?x <http://dbpedia.org/property/incumbent> ?uri  . }",
    "entity mapping": [
      {
        "label": "Benjamin Spock",
        "uri": "http://dbpedia.org/resource/Benjamin_Spock"
      }
    ],
    "id": "0213a459e69a402da238e1ea7bf48f91",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/incumbent"
      }
    ]
  },
  {
    "question": "Janaka Thissakuttiarachchi follows what religion, which once employed Atisa Srijnana too?",
    "SerialNumber": "1253",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Janaka_Thissakuttiarachchi> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Atiśa> <http://dbpedia.org/ontology/occupation> ?uri . }",
    "entity mapping": [
      {
        "label": "Janaka Thissakuttiarachchi",
        "uri": "http://dbpedia.org/resource/Janaka_Thissakuttiarachchi"
      },
      {
        "label": "Atisa",
        "uri": "http://dbpedia.org/resource/Atiśa"
      }
    ],
    "id": "c24ec1614e724dd8aa615e6054a4f8f3",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "List the served region of the organisations of Trade association.",
    "SerialNumber": "1255",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Trade_association> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Trade association",
        "uri": "http://dbpedia.org/resource/Trade_association"
      }
    ],
    "id": "6924f47eafe44da9954f729ada2342f5",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/type"
      },
      {
        "label": "served region",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "List the books whose authors are in Alcal de Henares.",
    "SerialNumber": "1261",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Alcalá_de_Henares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Alcal de Henares",
        "uri": "http://dbpedia.org/resource/Alcalá_de_Henares"
      }
    ],
    "id": "1cf22c99abb546c680faf2a6b74be80c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "authors",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Is Guatemala a unitary state?",
    "SerialNumber": "1262",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Guatemala> <http://dbpedia.org/ontology/governmentType> <http://dbpedia.org/resource/Unitary_state> }",
    "entity mapping": [
      {
        "label": "Guatemala",
        "uri": "http://dbpedia.org/resource/Guatemala"
      },
      {
        "label": "unitary state",
        "uri": "http://dbpedia.org/resource/Unitary_state"
      }
    ],
    "id": "bc844f916fc34914ad85428c10a7184c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/governmentType"
      }
    ]
  },
  {
    "question": "what are some journals of academic Philosophy",
    "SerialNumber": "1263",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/discipline> <http://dbpedia.org/resource/Philosophy> } ",
    "entity mapping": [
      {
        "label": "Philosophy",
        "uri": "http://dbpedia.org/resource/Philosophy"
      }
    ],
    "id": "498f586cd8424c38b3af6f802891e55a",
    "predicate mapping": [
      {
        "label": "academic",
        "uri": "http://dbpedia.org/property/discipline"
      }
    ]
  },
  {
    "question": "By which member of parliament was Provisional Government of Saskatchewan led?",
    "SerialNumber": "1264",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "entity mapping": [
      {
        "label": "Provisional Government of Saskatchewan",
        "uri": "http://dbpedia.org/resource/Provisional_Government_of_Saskatchewan"
      }
    ],
    "id": "5894b0cd2f60427089e1eb2fc7c0607f",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/order"
      },
      {
        "label": "member of parliament",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament"
      }
    ]
  },
  {
    "question": "Which drinks have emerged from the US?",
    "SerialNumber": "1267",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "953d596a5ee1434a969fadbb3a3741a1",
    "predicate mapping": [
      {
        "label": "emerged",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "emerged",
        "uri": "http://dbpedia.org/property/locationCity"
      },
      {
        "label": "emerged",
        "uri": "http://dbpedia.org/ontology/Beverage"
      }
    ]
  },
  {
    "question": "Where is Vietnam Airlines located ?",
    "SerialNumber": "1270",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Vietnam_Airlines> <http://dbpedia.org/ontology/location> ?uri } ",
    "entity mapping": [
      {
        "label": "Vietnam Airlines",
        "uri": "http://dbpedia.org/resource/Vietnam_Airlines"
      }
    ],
    "id": "3280fa6df4c244cfa8768b869e50218f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Who is the chancellor of the university which affiliates the Dartington College of Arts?",
    "SerialNumber": "1271",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Dartington_College_of_Arts> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Dartington College of Arts",
        "uri": "http://dbpedia.org/resource/Dartington_College_of_Arts"
      }
    ],
    "id": "685ddf1e1ed641888613c5f9c85267b7",
    "predicate mapping": [
      {
        "label": "affiliates",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "How many sitcoms are there whose theme music is composed by a New Yorker?",
    "SerialNumber": "1272",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/property/themeMusicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "New York",
        "uri": "http://dbpedia.org/resource/New_York"
      }
    ],
    "id": "e33e3f1a2e9d462cb891215cad82dc5b",
    "predicate mapping": [
      {
        "label": "er",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "er",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Comcast SportsNet is broadcasted in what area, which also has the Michigan Renaissance Festival?",
    "SerialNumber": "1273",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michigan_Renaissance_Festival> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Comcast_SportsNet_Chicago> <http://dbpedia.org/ontology/broadcastArea> ?uri . }",
    "entity mapping": [
      {
        "label": "Michigan Renaissance Festival",
        "uri": "http://dbpedia.org/resource/Michigan_Renaissance_Festival"
      },
      {
        "label": "sportsnet comcast",
        "uri": "http://dbpedia.org/resource/Comcast_SportsNet_Chicago"
      }
    ],
    "id": "5a8d27913f2348a5a0a9641d53ef1704",
    "predicate mapping": [
      {
        "label": "SportsNet",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      }
    ]
  },
  {
    "question": "List all the tenants of the stadium where the WWF Summer Slam 2004 took place.",
    "SerialNumber": "1274",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/SummerSlam_(2004)> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }",
    "entity mapping": [
      {
        "label": "summer slam 2004",
        "uri": "http://dbpedia.org/resource/SummerSlam_(2004)"
      }
    ],
    "id": "46394065a08e478b946f7994c131b013",
    "predicate mapping": [
      {
        "label": "Slam",
        "uri": "http://dbpedia.org/property/venue"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "Which venue of indy PopCon is also the death palce of Louis Le Cocqq ?",
    "SerialNumber": "1276",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indy_PopCon> <http://dbpedia.org/property/venue> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "indy PopCon",
        "uri": "http://dbpedia.org/resource/Indy_PopCon"
      },
      {
        "label": "louis",
        "uri": "http://dbpedia.org/resource/Louis_LeCocq"
      }
    ],
    "id": "6ad1a5e54b384e689efa82debf6b0c4f",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Name the TV show with theme music by Primus and broadcasted on Comedy Central ?",
    "SerialNumber": "1280",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Comedy Central",
        "uri": "http://dbpedia.org/resource/Comedy_Central"
      },
      {
        "label": "Primus",
        "uri": "http://dbpedia.org/resource/Primus_(band)"
      }
    ],
    "id": "e7cb1c037fd84b45a5a0b5e4de0f3ef2",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "theme music",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List down all the associcated musical artist of the artist of In a Word or 2 ?",
    "SerialNumber": "1282",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/In_a_Word_or_2> <http://dbpedia.org/property/artist> ?x . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . }",
    "entity mapping": [
      {
        "label": "In a Word or 2",
        "uri": "http://dbpedia.org/resource/In_a_Word_or_2"
      }
    ],
    "id": "5fa9fa2055eb4ddbb39a16de5cdc76ec",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "Is Lancy a city close to Geneva?",
    "SerialNumber": "1287",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Lancy> }",
    "entity mapping": [
      {
        "label": "Geneva",
        "uri": "http://dbpedia.org/resource/Geneva"
      },
      {
        "label": "Lancy",
        "uri": "http://dbpedia.org/resource/Lancy"
      }
    ],
    "id": "103349c9b1c646bca70a2c8d7a4458d3",
    "predicate mapping": [
      {
        "label": "close",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality"
      }
    ]
  },
  {
    "question": "Give me some organizations working for Environmentalism",
    "SerialNumber": "1290",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Environmentalism",
        "uri": "http://dbpedia.org/resource/Environmentalism"
      }
    ],
    "id": "f075032d8bb14876a93a95f98cda7330",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "What territory of Sino French War was the battle of Raoul Magrin-Vernerey fought ?",
    "SerialNumber": "1292",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri} ",
    "entity mapping": [
      {
        "label": "french sino war",
        "uri": "http://dbpedia.org/resource/Sino-French_War"
      },
      {
        "label": "Raoul Magrin-Vernerey",
        "uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey"
      }
    ],
    "id": "6205616c0ee048eab5e020480247818b",
    "predicate mapping": [
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "What games can be played in schools founded by Fr. Orlando?",
    "SerialNumber": "1298",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Fr._Orlando> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "Fr. Orlando",
        "uri": "http://dbpedia.org/resource/Fr._Orlando"
      }
    ],
    "id": "1ffae1c9ef7d48869e193bade845992d",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Which TV show distributed by Warner Bros. has Christopher Franke as one of the artist ?",
    "SerialNumber": "1300",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Warner_Bros._Television> . ?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "warner bros.",
        "uri": "http://dbpedia.org/resource/Warner_Bros._Television"
      },
      {
        "label": "Christopher Franke",
        "uri": "http://dbpedia.org/resource/Christopher_Franke"
      }
    ],
    "id": "1f3e42c050df4103ab6f4ee7b80bc037",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where did the graduates of Memphis, Tenessee continue their education?",
    "SerialNumber": "1301",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Memphis,_Tennessee> . ?x <http://dbpedia.org/ontology/school> ?uri  . }",
    "entity mapping": [
      {
        "label": "Memphis",
        "uri": "http://dbpedia.org/resource/Memphis,_Tennessee"
      }
    ],
    "id": "66629e2919e3457b92e9412d2765707f",
    "predicate mapping": [
      {
        "label": "education",
        "uri": "http://dbpedia.org/property/highschool"
      },
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/school"
      }
    ]
  },
  {
    "question": "Who is the employer of Ralph flanders ?",
    "SerialNumber": "1303",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ralph_Flanders> <http://dbpedia.org/property/occupation> ?uri } ",
    "entity mapping": [
      {
        "label": "Ralph flanders",
        "uri": "http://dbpedia.org/resource/Ralph_Flanders"
      }
    ],
    "id": "321da0a6b5db42d28b6af0d8130999ad",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/property/occupation"
      }
    ]
  },
  {
    "question": "What is an airport inside ontario?",
    "SerialNumber": "1304",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Ontario,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airport>}",
    "entity mapping": [
      {
        "label": "ontario",
        "uri": "http://dbpedia.org/resource/Ontario,_California"
      }
    ],
    "id": "95e2eff5a1b64e1b9ce1e7edf8adedcf",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/cityServed"
      },
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/Airport"
      }
    ]
  },
  {
    "question": "What is the city whose mayor is Anne Hidalgo?",
    "SerialNumber": "1310",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mayor> <http://dbpedia.org/resource/Anne_Hidalgo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "Anne Hidalgo",
        "uri": "http://dbpedia.org/resource/Anne_Hidalgo"
      }
    ],
    "id": "d645d34b10204b259900c68a10b1de61",
    "predicate mapping": [
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/property/mayor"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "Name some dishes made with flowering plants.",
    "SerialNumber": "1311",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Flowering_plant> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "entity mapping": [
      {
        "label": "flowering plant",
        "uri": "http://dbpedia.org/resource/Flowering_plant"
      }
    ],
    "id": "4c9dc9bbe2444c8890caed8026dde6df",
    "predicate mapping": [
      {
        "label": "s.",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "s.",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "s.",
        "uri": "http://dbpedia.org/ontology/Food"
      }
    ]
  },
  {
    "question": "Which nation's engineers have graduated in Poland?",
    "SerialNumber": "1312",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Poland> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engineer>}",
    "entity mapping": [
      {
        "label": "Poland",
        "uri": "http://dbpedia.org/resource/Poland"
      }
    ],
    "id": "0b8b29a0b2b745acbbed6037be44ec41",
    "predicate mapping": [
      {
        "label": "graduated",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "nation's",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "engineer",
        "uri": "http://dbpedia.org/ontology/Engineer"
      }
    ]
  },
  {
    "question": "What are some cities which have a Ferris wheel?",
    "SerialNumber": "1313",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/buildingType> <http://dbpedia.org/resource/Ferris_wheel> . ?x <http://dbpedia.org/property/locationTown> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ferris wheel",
        "uri": "http://dbpedia.org/resource/Ferris_wheel"
      }
    ],
    "id": "a7ad80582ef84f54bb67cf7108003796",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/buildingType"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/locationTown"
      }
    ]
  },
  {
    "question": "Which author inspired Susanna Clarke, and wrote Northanger Abbey?",
    "SerialNumber": "1316",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Northanger_Abbey> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/Susanna_Clarke> <http://dbpedia.org/property/influences> ?uri . }",
    "entity mapping": [
      {
        "label": "Northanger Abbey",
        "uri": "http://dbpedia.org/resource/Northanger_Abbey"
      },
      {
        "label": "Susanna Clarke",
        "uri": "http://dbpedia.org/resource/Susanna_Clarke"
      }
    ],
    "id": "1a98e56e3b3844d28ca9cb861532a949",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/influences"
      }
    ]
  },
  {
    "question": "In all the places with a stagecoach, where is a Peetz Table Wind Energy Center located too?",
    "SerialNumber": "1319",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stagecoach,_Colorado> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center> <http://dbpedia.org/property/location> ?uri . }",
    "entity mapping": [
      {
        "label": "stagecoach,",
        "uri": "http://dbpedia.org/resource/Stagecoach,_Colorado"
      },
      {
        "label": "Peetz Table Wind Energy Center",
        "uri": "http://dbpedia.org/resource/Peetz_Table_Wind_Energy_Center"
      }
    ],
    "id": "892b60fa57f743969c1fe9bf5708e9c0",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "List everything governed by the Democratic Party of US?",
    "SerialNumber": "1322",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Democratic_Party_(United_States)> . ?uri <http://dbpedia.org/ontology/location> ?x  . }",
    "entity mapping": [
      {
        "label": "Democratic Party",
        "uri": "http://dbpedia.org/resource/Democratic_Party_(United_States)"
      }
    ],
    "id": "d90cfc130f684d5a9c0c03a85e6e6dc3",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Of all the teams that Andrew Economos played for, which one did Jerrel Jackson play his first game for?",
    "SerialNumber": "1324",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerrell_Jackson> <http://dbpedia.org/ontology/debutTeam> ?uri. <http://dbpedia.org/resource/Andrew_Economos> <http://dbpedia.org/ontology/formerTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "jackson jerrel",
        "uri": "http://dbpedia.org/resource/Jerrell_Jackson"
      },
      {
        "label": "Andrew Economos",
        "uri": "http://dbpedia.org/resource/Andrew_Economos"
      }
    ],
    "id": "5f84770805fe4db48a22ddd19ae2daf5",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "What are some software which are written in languages that are run on Unix like OS?",
    "SerialNumber": "1325",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "unix like",
        "uri": "http://dbpedia.org/resource/Unix-like"
      }
    ],
    "id": "81237995d578482ea6accf7e9ffcd320",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/operatingSystem"
      },
      {
        "label": "languages",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Name the movies writtten by the group Monty Python ?",
    "SerialNumber": "1326",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Monty_Python>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Monty Python",
        "uri": "http://dbpedia.org/resource/Monty_Python"
      }
    ],
    "id": "ce5ddceafe844a9bb7a76194c0af8c7f",
    "predicate mapping": [
      {
        "label": "group",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Where did some of the matches take place where Columbus Crew SC played?",
    "SerialNumber": "1327",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Columbus_Crew_SC> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FootballMatch>}",
    "entity mapping": [
      {
        "label": "Columbus Crew SC",
        "uri": "http://dbpedia.org/resource/Columbus_Crew_SC"
      }
    ],
    "id": "b39233c5a03a4b7087e4b5546806cc80",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "matches",
        "uri": "http://dbpedia.org/ontology/FootballMatch"
      }
    ]
  },
  {
    "question": "List the agencies located someplace lead by Alex Chalk.",
    "SerialNumber": "1330",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leaderName> <http://dbpedia.org/resource/Alex_Chalk> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "entity mapping": [
      {
        "label": "Alex Chalk",
        "uri": "http://dbpedia.org/resource/Alex_Chalk"
      }
    ],
    "id": "f6ced5d820a1470b843b40391b01cf86",
    "predicate mapping": [
      {
        "label": "lead",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "someplace",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency"
      }
    ]
  },
  {
    "question": "Through which cities do the rivers starting at the Montauk State Park flow?",
    "SerialNumber": "1333",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Montauk_State_Park> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Montauk State Park",
        "uri": "http://dbpedia.org/resource/Montauk_State_Park"
      }
    ],
    "id": "78aeb7a8b2814ff1a4a9f813f7e41392",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "State",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "People from how many political parties exist in Maharashtra?",
    "SerialNumber": "1334",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Maharashtra",
        "uri": "http://dbpedia.org/resource/Maharashtra"
      }
    ],
    "id": "9c90326c60b94d57bf5ee570607ca6b5",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Which moto of american Classical League is also the academic discipline of Probus ?",
    "SerialNumber": "1337",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Classical_League> <http://dbpedia.org/property/motto> ?uri. <http://dbpedia.org/resource/Probus_(journal)> <http://dbpedia.org/ontology/academicDiscipline> ?uri} ",
    "entity mapping": [
      {
        "label": "american Classical League",
        "uri": "http://dbpedia.org/resource/American_Classical_League"
      },
      {
        "label": "Probus",
        "uri": "http://dbpedia.org/resource/Probus_(journal)"
      }
    ],
    "id": "7a65376ab49c4988a7e19d19ee8b0575",
    "predicate mapping": [
      {
        "label": "moto",
        "uri": "http://dbpedia.org/property/motto"
      },
      {
        "label": "academic discipline",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      }
    ]
  },
  {
    "question": "Who are the people whose alumna is a part of the National Collegiate Athletic Association?",
    "SerialNumber": "1338",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?uri <http://dbpedia.org/property/education> ?x  . }",
    "entity mapping": [
      {
        "label": "National Collegiate Athletic Association",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association"
      }
    ],
    "id": "28f1b38fd1fa43dcafd2eee7e5778775",
    "predicate mapping": [
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "part",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "What did the people buried in Toronto die of?",
    "SerialNumber": "1345",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "Toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      }
    ],
    "id": "17a32c37985d4016a2887aaeae4c165c",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "Was Yabanc Damat first aired in UAE?",
    "SerialNumber": "1348",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Yabancı_Damat> <http://dbpedia.org/property/firstAired> <http://dbpedia.org/resource/United_Arab_Emirates> }",
    "entity mapping": [
      {
        "label": "yabanc damat",
        "uri": "http://dbpedia.org/resource/Yabancı_Damat"
      },
      {
        "label": "UAE",
        "uri": "http://dbpedia.org/resource/United_Arab_Emirates"
      }
    ],
    "id": "4382d08ff34c47ffbf3c17b6a9451ce1",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired"
      }
    ]
  },
  {
    "question": "Name some basketball players who  have played for chicago bulls?",
    "SerialNumber": "1349",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "chicago bulls",
        "uri": "http://dbpedia.org/resource/Chicago_Bulls"
      }
    ],
    "id": "6aff1d15601947138c861eb36f7aa7ac",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "list the organisation with motive for peace and environmentalism?",
    "SerialNumber": "1350",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Peace> . ?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "peace",
        "uri": "http://dbpedia.org/resource/Peace"
      },
      {
        "label": "environmentalism",
        "uri": "http://dbpedia.org/resource/Environmentalism"
      }
    ],
    "id": "6f3fc96104a94a63a66096801b34bf71",
    "predicate mapping": [
      {
        "label": "motive",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "label": "motive",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "label": "organisation",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Which former team of Franois Beauchemin does the Nathan Dempsey played for ?",
    "SerialNumber": "1356",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nathan_Dempsey> <http://dbpedia.org/property/playedFor> ?uri. <http://dbpedia.org/resource/François_Beauchemin> <http://dbpedia.org/ontology/formerTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "Nathan Dempsey",
        "uri": "http://dbpedia.org/resource/Nathan_Dempsey"
      },
      {
        "label": "beauchemin",
        "uri": "http://dbpedia.org/resource/François_Beauchemin"
      }
    ],
    "id": "90670bde322f4fdb820424305500a826",
    "predicate mapping": [
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "How many sitcoms were produced by the company whose predecessor was the Desilu Productions",
    "SerialNumber": "1360",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Desilu_Productions> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Desilu Productions",
        "uri": "http://dbpedia.org/resource/Desilu_Productions"
      }
    ],
    "id": "0692b55140154ca68f9797dda50c0caa",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Under which president did the predecessor of Simon Ferro work?",
    "SerialNumber": "1364",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Simon_Ferro> . ?x <http://dbpedia.org/ontology/president> ?uri  . }",
    "entity mapping": [
      {
        "label": "Simon Ferro",
        "uri": "http://dbpedia.org/resource/Simon_Ferro"
      }
    ],
    "id": "ae8ea7fe77cc49459a8f5e49652308d4",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "In which municipalities does the NYC housing authority own buildings?",
    "SerialNumber": "1365",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/New_York_City_Housing_Authority> . ?x <http://dbpedia.org/ontology/municipality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "authority housing",
        "uri": "http://dbpedia.org/resource/New_York_City_Housing_Authority"
      }
    ],
    "id": "ffd7305acc7848ba94088cfcda3648c6",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      },
      {
        "label": "municipalities",
        "uri": "http://dbpedia.org/ontology/municipality"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "What are some team members of the team based in Camp Nou?",
    "SerialNumber": "1366",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/homeStadium> <http://dbpedia.org/resource/Camp_Nou> . ?x <http://dbpedia.org/property/name> ?uri  . }",
    "entity mapping": [
      {
        "label": "Camp Nou",
        "uri": "http://dbpedia.org/resource/Camp_Nou"
      }
    ],
    "id": "6ed618f4088e4b24921cb9a0130ce68c",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      },
      {
        "label": "based",
        "uri": "http://dbpedia.org/property/name"
      }
    ]
  },
  {
    "question": "Was andy worhol the director of the san diego surf?",
    "SerialNumber": "1367",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Diego_Surf_(film)> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Andy_Warhol> }",
    "entity mapping": [
      {
        "label": "san diego surf",
        "uri": "http://dbpedia.org/resource/San_Diego_Surf_(film)"
      },
      {
        "label": "andy worhol",
        "uri": "http://dbpedia.org/resource/Andy_Warhol"
      }
    ],
    "id": "2ca6b83130654efb9992783432c6e211",
    "predicate mapping": [
      {
        "label": "director",
        "uri": "http://dbpedia.org/ontology/cinematography"
      }
    ]
  },
  {
    "question": "Count the number of places where alumini of Edinburgh university have died?",
    "SerialNumber": "1369",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/University_of_Edinburgh> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Edinburgh university",
        "uri": "http://dbpedia.org/resource/University_of_Edinburgh"
      }
    ],
    "id": "bc8d8dac1f054a9eaaf3a61ebce0decd",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Is Cologny a neighbouring city of Geneva?",
    "SerialNumber": "1370",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Geneva> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> }",
    "entity mapping": [
      {
        "label": "Geneva",
        "uri": "http://dbpedia.org/resource/Geneva"
      },
      {
        "label": "Cologny",
        "uri": "http://dbpedia.org/resource/Cologny"
      }
    ],
    "id": "0f3f93023ae74d94bac356887ec1e15b",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      }
    ]
  },
  {
    "question": "Whose tomb is in cities under Dane County of Wisconsin?",
    "SerialNumber": "1372",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/territory> <http://dbpedia.org/resource/Dane_County,_Wisconsin> . ?uri <http://dbpedia.org/ontology/restingPlace> ?x  . }",
    "entity mapping": [
      {
        "label": "wisconsin county dane",
        "uri": "http://dbpedia.org/resource/Dane_County,_Wisconsin"
      }
    ],
    "id": "1efd0ef701644607af3ae7939ea319be",
    "predicate mapping": [
      {
        "label": "Wisconsin",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "Which of the continents that Digitalb worked in, was christine rolfes born in?",
    "SerialNumber": "1376",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Digit-Alb> <http://dbpedia.org/ontology/regionServed> ?uri. <http://dbpedia.org/resource/Christine_Rolfes> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Digitalb",
        "uri": "http://dbpedia.org/resource/Digit-Alb"
      },
      {
        "label": "christine rolfes",
        "uri": "http://dbpedia.org/resource/Christine_Rolfes"
      }
    ],
    "id": "8fce468edfb5414283a20c5f243e0728",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What famous musicians play the remo?",
    "SerialNumber": "1378",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Remo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "remo",
        "uri": "http://dbpedia.org/resource/Remo"
      }
    ],
    "id": "c39f9c9df5b147d49a09ee2a5ef485d3",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "List the television shows whose network's executive officer is Steve Burke.",
    "SerialNumber": "1380",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Steve Burke",
        "uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)"
      }
    ],
    "id": "6437c30f7c71486d9651bdf6c5109725",
    "predicate mapping": [
      {
        "label": "officer",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many pole drivers have been there in grand prixes where first driver was Damon Hill?",
    "SerialNumber": "1384",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
    "entity mapping": [
      {
        "label": "Damon Hill",
        "uri": "http://dbpedia.org/resource/Damon_Hill"
      }
    ],
    "id": "aaee7a24a90e47d3954f143bf64ca267",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      },
      {
        "label": "grand",
        "uri": "http://dbpedia.org/ontology/FormulaOneRacer"
      }
    ]
  },
  {
    "question": "In which city wasThe Triple Door (The Courage album)  performed live?",
    "SerialNumber": "1385",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)> <http://dbpedia.org/property/recorded> ?uri } ",
    "entity mapping": [
      {
        "label": "courage triple album)",
        "uri": "http://dbpedia.org/resource/Live_at_The_Triple_Door_(The_Courage_album)"
      }
    ],
    "id": "1a8cc713ccd443c9ba6a74d395b4b6b2",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/recorded"
      }
    ]
  },
  {
    "question": "Was the Model K designed by Herny Ford?",
    "SerialNumber": "1386",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Model_K> <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/Henry_Ford> }",
    "entity mapping": [
      {
        "label": "model ford",
        "uri": "http://dbpedia.org/resource/Ford_Model_K"
      },
      {
        "label": "ford",
        "uri": "http://dbpedia.org/resource/Henry_Ford"
      }
    ],
    "id": "3af799b07d8d4b5c8a03857948db6c6f",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designCompany"
      }
    ]
  },
  {
    "question": "Which local authority of Buckhurst Hill County High School is the palce of burial of Elizabeth Rhuddlan ?",
    "SerialNumber": "1387",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_of_Rhuddlan> <http://dbpedia.org/property/placeOfBurial> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri} ",
    "entity mapping": [
      {
        "label": "elizabeth rhuddlan",
        "uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan"
      },
      {
        "label": "Buckhurst Hill County High School",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School"
      }
    ],
    "id": "9e0dd9094d6b42b2ade24c563d35c3db",
    "predicate mapping": [
      {
        "label": "burial",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "What is manufactured by a company headed by Kazuo Hirai?",
    "SerialNumber": "1389",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Kazuo_Hirai> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "entity mapping": [
      {
        "label": "Kazuo Hirai",
        "uri": "http://dbpedia.org/resource/Kazuo_Hirai"
      }
    ],
    "id": "cf2c22fcebba4a6f86eed6755e915b2f",
    "predicate mapping": [
      {
        "label": "headed",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "List the outflows of the lake whose one of the outflows is Benu river ?",
    "SerialNumber": "1390",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Benué_River> . ?x <http://dbpedia.org/ontology/outflow> ?uri  . }",
    "entity mapping": [
      {
        "label": "river benu",
        "uri": "http://dbpedia.org/resource/Benué_River"
      }
    ],
    "id": "3c301cf561394deba7b635bc6a8f2877",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow"
      },
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/ontology/outflow"
      }
    ]
  },
  {
    "question": "Who created the Women in the Garden and also the L'Enfant a la tasse ?",
    "SerialNumber": "1395",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/L'Enfant_a_la_tasse> <http://dbpedia.org/property/artist> ?uri . }",
    "entity mapping": [
      {
        "label": "Women in the Garden",
        "uri": "http://dbpedia.org/resource/Women_in_the_Garden"
      },
      {
        "label": "L'Enfant a la tasse",
        "uri": "http://dbpedia.org/resource/L'Enfant_a_la_tasse"
      }
    ],
    "id": "ee30b589024f41ba94eeeb43ca06b2cb",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "Which state's largest city is Omaha?",
    "SerialNumber": "1398",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/largestCity> <http://dbpedia.org/resource/Omaha,_Nebraska>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "entity mapping": [
      {
        "label": "Omaha",
        "uri": "http://dbpedia.org/resource/Omaha,_Nebraska"
      }
    ],
    "id": "f7dc75036c854765af67522f62223266",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion"
      }
    ]
  },
  {
    "question": "In which wars has Steven Palazzo fought?",
    "SerialNumber": "1399",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri } ",
    "entity mapping": [
      {
        "label": "Steven Palazzo",
        "uri": "http://dbpedia.org/resource/Steven_Palazzo"
      }
    ],
    "id": "209493482df043e9ac2583b042622b16",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Which training center of William Anthony has also alumni named Philip W Pillsbury ?",
    "SerialNumber": "1401",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/property/training> ?uri. <http://dbpedia.org/resource/Philip_W._Pillsbury> <http://dbpedia.org/property/education> ?uri} ",
    "entity mapping": [
      {
        "label": "William Anthony",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)"
      },
      {
        "label": "pillsbury philip",
        "uri": "http://dbpedia.org/resource/Philip_W._Pillsbury"
      }
    ],
    "id": "fcbd2eb259ad4797a4de074a9e6ca51b",
    "predicate mapping": [
      {
        "label": "training",
        "uri": "http://dbpedia.org/property/training"
      },
      {
        "label": "Pillsbury",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "List all the nicknames of the city which has Toru gingerbread as one of it ?",
    "SerialNumber": "1403",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Toruń_gingerbread> . ?x <http://dbpedia.org/property/nickname> ?uri  . }",
    "entity mapping": [
      {
        "label": "gingerbread toru",
        "uri": "http://dbpedia.org/resource/Toruń_gingerbread"
      }
    ],
    "id": "9f6eaa108131427a9ac70decbdd4d153",
    "predicate mapping": [
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "Who was the writer of the novel Maniac Magee?",
    "SerialNumber": "1407",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Maniac_Magee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Maniac Magee",
        "uri": "http://dbpedia.org/resource/Maniac_Magee"
      }
    ],
    "id": "e52302c32d6440dba926e0d3ed0f97f9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "What are some movies whose distributer's CEO is Ted Hartley?",
    "SerialNumber": "1409",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Ted_Hartley> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Ted Hartley",
        "uri": "http://dbpedia.org/resource/Ted_Hartley"
      }
    ],
    "id": "990acb5fafe142619ee7ad93a614fcf9",
    "predicate mapping": [
      {
        "label": "CEO",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "CEO",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many artists' works are in Muse d'Orsay?",
    "SerialNumber": "1413",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/museum> <http://dbpedia.org/resource/Musée_d'Orsay> . ?x <http://dbpedia.org/property/artist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "d'orsay",
        "uri": "http://dbpedia.org/resource/Musée_d'Orsay"
      }
    ],
    "id": "48eb16573ec141a5ab3f8b412564aea6",
    "predicate mapping": [
      {
        "label": "muse",
        "uri": "http://dbpedia.org/property/museum"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "In how many different places does Canal and River Trust own its assets?",
    "SerialNumber": "1414",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Canal_&_River_Trust> . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "River Trust",
        "uri": "http://dbpedia.org/resource/Canal_&_River_Trust"
      }
    ],
    "id": "73c600f7e8e647769990e32d95c69f46",
    "predicate mapping": [
      {
        "label": "own",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "assets",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Where is the stadium of west Papus football team ?",
    "SerialNumber": "1416",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/West_Papua_football_team> <http://dbpedia.org/ontology/stadium> ?uri } ",
    "entity mapping": [
      {
        "label": "football",
        "uri": "http://dbpedia.org/resource/West_Papua_football_team"
      }
    ],
    "id": "19cf7033523648298b64a3b26c61d63c",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/stadium"
      }
    ]
  },
  {
    "question": "Who are some authoritative persons on the matter of Megabalanus concinnus?",
    "SerialNumber": "1417",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Megabalanus_concinnus> <http://dbpedia.org/ontology/binomialAuthority> ?uri } ",
    "entity mapping": [
      {
        "label": "Megabalanus concinnus",
        "uri": "http://dbpedia.org/resource/Megabalanus_concinnus"
      }
    ],
    "id": "b6ebb2f75c0a40edb2c5f55a8490d32f",
    "predicate mapping": [
      {
        "label": "matter",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      }
    ]
  },
  {
    "question": "Who is the father of Barbara Ann Crancer?",
    "SerialNumber": "1418",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Barbara_Ann_Crancer>  . }",
    "entity mapping": [
      {
        "label": "Barbara Ann Crancer",
        "uri": "http://dbpedia.org/resource/Barbara_Ann_Crancer"
      }
    ],
    "id": "8ff0158616ba4528a7ed38a4e45df6bf",
    "predicate mapping": [
      {
        "label": "father",
        "uri": "http://dbpedia.org/ontology/child"
      }
    ]
  },
  {
    "question": "Whose music composer is signed up with Sony Music Entertainment?",
    "SerialNumber": "1419",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . }",
    "entity mapping": [
      {
        "label": "Sony Music Entertainment",
        "uri": "http://dbpedia.org/resource/Sony_Music_Entertainment"
      }
    ],
    "id": "9977743655db452280ad8b646cb1901d",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      }
    ]
  },
  {
    "question": "What are some given names for males?",
    "SerialNumber": "1420",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Male> } ",
    "entity mapping": [
      {
        "label": "male",
        "uri": "http://dbpedia.org/resource/Male"
      }
    ],
    "id": "10b3153964714ccd855e09939b3fea93",
    "predicate mapping": [
      {
        "label": "names",
        "uri": "http://dbpedia.org/ontology/gender"
      }
    ]
  },
  {
    "question": "Which famous person is born in Marlboro Township, New Jersey?",
    "SerialNumber": "1421",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Marlboro_Township,_New_Jersey>  . }",
    "entity mapping": [
      {
        "label": "Marlboro Township, New Jersey",
        "uri": "http://dbpedia.org/resource/Marlboro_Township,_New_Jersey"
      }
    ],
    "id": "96c26048a5cc488796e2747513584530",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/homeTown"
      }
    ]
  },
  {
    "question": "Saores de costa built a bridge over which river?",
    "SerialNumber": "1423",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/builder> <http://dbpedia.org/resource/Soares_da_Costa> . ?x <http://dbpedia.org/ontology/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "costa",
        "uri": "http://dbpedia.org/resource/Soares_da_Costa"
      }
    ],
    "id": "9bc21c53162242ed83aa510e3a346546",
    "predicate mapping": [
      {
        "label": "built",
        "uri": "http://dbpedia.org/property/builder"
      },
      {
        "label": "bridge over",
        "uri": "http://dbpedia.org/ontology/crosses"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Chestnut colored horses have won which races?",
    "SerialNumber": "1426",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Chestnut_(coat)> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Chestnut",
        "uri": "http://dbpedia.org/resource/Chestnut_(coat)"
      }
    ],
    "id": "5b5d82f71a4c4d54989be43bbf8d4ce4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/colour"
      },
      {
        "uri": "http://dbpedia.org/ontology/honours"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "Of how many battles is Chickasaw Campaign of 1736 consisted?",
    "SerialNumber": "1428",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Chickasaw_Campaign_of_1736> <http://dbpedia.org/property/combatant> ?uri } ",
    "entity mapping": [
      {
        "label": "Chickasaw Campaign of 1736",
        "uri": "http://dbpedia.org/resource/Chickasaw_Campaign_of_1736"
      }
    ],
    "id": "bdbf00bc5747405fb0687f5da283e0d8",
    "predicate mapping": [
      {
        "label": "consisted",
        "uri": "http://dbpedia.org/property/combatant"
      }
    ]
  },
  {
    "question": "In what group Joe Jonas and Kevin Jonas were previously involved?",
    "SerialNumber": "1430",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Joe_Jonas> . ?uri <http://dbpedia.org/property/pastMembers> <http://dbpedia.org/resource/Kevin_Jonas> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Group>}",
    "entity mapping": [
      {
        "label": "Joe Jonas",
        "uri": "http://dbpedia.org/resource/Joe_Jonas"
      },
      {
        "label": "Kevin Jonas",
        "uri": "http://dbpedia.org/resource/Kevin_Jonas"
      }
    ],
    "id": "08365c0b072f40a6bc18e0f181f3518d",
    "predicate mapping": [
      {
        "label": "involved",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "involved",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "group",
        "uri": "http://dbpedia.org/ontology/Group"
      }
    ]
  },
  {
    "question": "Where were Micheal Santos and Wendy Jaquet born?",
    "SerialNumber": "1435",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_G._Santos> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Wendy_Jaquet> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "santos",
        "uri": "http://dbpedia.org/resource/Michael_G._Santos"
      },
      {
        "label": "Wendy Jaquet",
        "uri": "http://dbpedia.org/resource/Wendy_Jaquet"
      }
    ],
    "id": "24248e8d88324f82a0d46eb1449b6e7f",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Count the number of fileds of the scientist whose one of the interest is Chinese poetry ?",
    "SerialNumber": "1436",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Chinese_poetry> . ?x <http://dbpedia.org/property/fields> ?uri }",
    "entity mapping": [
      {
        "label": "Chinese poetry",
        "uri": "http://dbpedia.org/resource/Chinese_poetry"
      }
    ],
    "id": "6edb218446b8457c9a2ea5168ff7fb50",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "What borders the valley which falls under Lake County, Oregon?",
    "SerialNumber": "1440",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Lake_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Valley>}",
    "entity mapping": [
      {
        "label": "Lake County, Oregon",
        "uri": "http://dbpedia.org/resource/Lake_County,_Oregon"
      }
    ],
    "id": "2d048077fe044885a1f11a831df39ba7",
    "predicate mapping": [
      {
        "label": "falls",
        "uri": "http://dbpedia.org/ontology/municipality"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "valley",
        "uri": "http://dbpedia.org/ontology/Valley"
      }
    ]
  },
  {
    "question": "Name the television show created by CE Webber and also has actor named Companion?",
    "SerialNumber": "1441",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Companion_(Doctor_Who)> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/C._E._Webber>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Companion",
        "uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)"
      },
      {
        "label": "webber",
        "uri": "http://dbpedia.org/resource/C._E._Webber"
      }
    ],
    "id": "297480b7b3fd43e7819b9eb234501795",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "created by",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which company founded in New Mexico manufactures Visual Studio ?",
    "SerialNumber": "1442",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "New Mexico",
        "uri": "http://dbpedia.org/resource/New_Mexico"
      },
      {
        "label": "Visual Studio",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio"
      }
    ],
    "id": "6411e0733ae5460499b210f08633ce12",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "manufactures",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which developer of Go was also the predecssor of X compnay ?",
    "SerialNumber": "1444",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Go_(programming_language)> <http://dbpedia.org/ontology/developer> ?uri. <http://dbpedia.org/resource/X_(company)> <http://dbpedia.org/property/predecessor> ?uri} ",
    "entity mapping": [
      {
        "label": "Go",
        "uri": "http://dbpedia.org/resource/Go_(programming_language)"
      },
      {
        "label": "X",
        "uri": "http://dbpedia.org/resource/X_(company)"
      }
    ],
    "id": "6125911b7ddd4d3cbca857215c9e59c4",
    "predicate mapping": [
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "compnay",
        "uri": "http://dbpedia.org/property/predecessor"
      }
    ]
  },
  {
    "question": "What sports are played at universities affiliated by States Colleges and Universities athletic association?",
    "SerialNumber": "1445",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "universities association colleges athletic",
        "uri": "http://dbpedia.org/resource/State_Colleges_and_Universities_Athletic_Association"
      }
    ],
    "id": "31fb215b84b44ec5bed3253fc1734d5f",
    "predicate mapping": [
      {
        "label": "association",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Which team has had both Martin prochzka and garry unger as its players ?",
    "SerialNumber": "1446",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Procházka> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Garry_Unger> <http://dbpedia.org/ontology/formerTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Martin prochzka",
        "uri": "http://dbpedia.org/resource/Martin_Procházka"
      },
      {
        "label": "garry unger",
        "uri": "http://dbpedia.org/resource/Garry_Unger"
      }
    ],
    "id": "0f8e4549023f4e80849e86009ce04679",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "What is that river whose source gets water from the Shannon cave?",
    "SerialNumber": "1447",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/inflow> <http://dbpedia.org/resource/Shannon_Cave> . ?uri <http://dbpedia.org/ontology/source> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Shannon cave",
        "uri": "http://dbpedia.org/resource/Shannon_Cave"
      }
    ],
    "id": "80f27d6316b847f999d784e02ce6eaf2",
    "predicate mapping": [
      {
        "label": "water",
        "uri": "http://dbpedia.org/property/inflow"
      },
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "From what countries have people participated in the Excelsior Stakes?",
    "SerialNumber": "1451",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Excelsior_Stakes> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Excelsior Stakes",
        "uri": "http://dbpedia.org/resource/Excelsior_Stakes"
      }
    ],
    "id": "f38ad466348b4ec3ae7a9bcef89d6c51",
    "predicate mapping": [
      {
        "label": "participated",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "participated",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "List some people who were opponents of someone who was died by hanging? ",
    "SerialNumber": "1453",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Hanging> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "hanging",
        "uri": "http://dbpedia.org/resource/Hanging"
      }
    ],
    "id": "7372eadd97374e8b88eb962559850324",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/deathCause"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the company which produces Marionette and has key person as Edwin catmull ?",
    "SerialNumber": "1455",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Marionette_(software)> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Edwin_Catmull>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Marionette",
        "uri": "http://dbpedia.org/resource/Marionette_(software)"
      },
      {
        "label": "Edwin catmull",
        "uri": "http://dbpedia.org/resource/Edwin_Catmull"
      }
    ],
    "id": "0a6bea353ecd405497f5ceab8b5d3dc3",
    "predicate mapping": [
      {
        "label": "person",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "In which cities can i find drinks similar to the IBC root beer?",
    "SerialNumber": "1459",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/IBC_Root_Beer> . ?x <http://dbpedia.org/property/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "entity mapping": [
      {
        "label": "IBC root beer",
        "uri": "http://dbpedia.org/resource/IBC_Root_Beer"
      }
    ],
    "id": "07606daaf7b34904923872ec6df2df2d",
    "predicate mapping": [
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/property/locationCity"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Beverage"
      }
    ]
  },
  {
    "question": "Who all have developed softwares for Unix Like OSes?",
    "SerialNumber": "1461",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "unix like",
        "uri": "http://dbpedia.org/resource/Unix-like"
      }
    ],
    "id": "881b5cae435244b2b7caadf0a38478e0",
    "predicate mapping": [
      {
        "label": "OSes",
        "uri": "http://dbpedia.org/property/operatingSystem"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Who acted in the movies whose music is composed by Walter Scharf?",
    "SerialNumber": "1468",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Walter_Scharf> . ?x <http://dbpedia.org/property/artist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Walter Scharf",
        "uri": "http://dbpedia.org/resource/Walter_Scharf"
      }
    ],
    "id": "ed3ea597f28a40cbbf89b727e336a636",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What are some primates?",
    "SerialNumber": "1470",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate>  . }",
    "entity mapping": [
      {
        "label": "primates",
        "uri": "http://dbpedia.org/resource/Primate"
      }
    ],
    "id": "2eddea00fa824cbcaff727302f22ba39",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order"
      }
    ]
  },
  {
    "question": "How many companies were founded in Denton, texas?",
    "SerialNumber": "1472",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/Denton_County,_Texas> . ?uri <http://dbpedia.org/ontology/foundationPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Denton",
        "uri": "http://dbpedia.org/resource/Denton_County,_Texas"
      }
    ],
    "id": "89ff0d71b0d54f428fbebcc8d9f151ee",
    "predicate mapping": [
      {
        "label": "texas",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Count the different causes of death of Christians.",
    "SerialNumber": "1473",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Christianity> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "Christians",
        "uri": "http://dbpedia.org/resource/Christianity"
      }
    ],
    "id": "7fc3026611784ca68abe446d974bf7fb",
    "predicate mapping": [
      {
        "label": "Count",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "List all the teams which have someone who played their first game for the Yankees?",
    "SerialNumber": "1474",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/New_York_Yankees> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "entity mapping": [
      {
        "label": "yankees",
        "uri": "http://dbpedia.org/resource/New_York_Yankees"
      }
    ],
    "id": "a68039a3908e4104a6c881f0b0d1bac7",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "Name the TV show whose cast member is Companion (Doctor Who) and is related to The Sarah Jane Adventures?",
    "SerialNumber": "1477",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Companion_(Doctor_Who)> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Companion (Doctor Who)",
        "uri": "http://dbpedia.org/resource/Companion_(Doctor_Who)"
      },
      {
        "label": "The Sarah Jane Adventures",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures"
      }
    ],
    "id": "bf76f57f7884400e8f11ba71e1d0787b",
    "predicate mapping": [
      {
        "label": "Companion",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "In which sects were the aristocrats included, who were buried in Westminister abbey?",
    "SerialNumber": "1480",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Westminster_Abbey> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Westminister abbey",
        "uri": "http://dbpedia.org/resource/Westminster_Abbey"
      }
    ],
    "id": "4e06115370044892bc19f3433446d6c1",
    "predicate mapping": [
      {
        "label": "abbey",
        "uri": "http://dbpedia.org/property/majorShrine"
      },
      {
        "label": "abbey",
        "uri": "http://dbpedia.org/property/veneratedIn"
      },
      {
        "label": "abbey",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Name the  people whose residence is Beverly Hills, California?",
    "SerialNumber": "1483",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Beverly Hills, California",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California"
      }
    ],
    "id": "a98e065d3ca64e319fdeba4de8cd09f7",
    "predicate mapping": [
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What are some important people in NGOs headed by Donna Shalala?",
    "SerialNumber": "1489",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}",
    "entity mapping": [
      {
        "label": "Donna Shalala",
        "uri": "http://dbpedia.org/resource/Donna_Shalala"
      }
    ],
    "id": "0fd3b4501cd4447d9cf64dd71b596c3c",
    "predicate mapping": [
      {
        "label": "headed",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation"
      }
    ]
  },
  {
    "question": "How many relatives are there of the people who died in Germany?",
    "SerialNumber": "1492",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Germany> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Germany",
        "uri": "http://dbpedia.org/resource/Germany"
      }
    ],
    "id": "75aa8a417fa547bab0e8895242554497",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "What is the city nearest to the islands in the Northwestern Hawaiian Islands?",
    "SerialNumber": "1499",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Northwestern_Hawaiian_Islands> . ?x <http://dbpedia.org/property/nearestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "entity mapping": [
      {
        "label": "Northwestern Hawaiian Islands",
        "uri": "http://dbpedia.org/resource/Northwestern_Hawaiian_Islands"
      }
    ],
    "id": "78af55409ffc4e32b981e66132116fdd",
    "predicate mapping": [
      {
        "label": "nearest",
        "uri": "http://dbpedia.org/property/archipelago"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island"
      }
    ]
  },
  {
    "question": "Employees of Ottawa Citizen have come from which towns?",
    "SerialNumber": "1500",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Ottawa_Citizen> . ?x <http://dbpedia.org/property/homeTown> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ottawa Citizen",
        "uri": "http://dbpedia.org/resource/Ottawa_Citizen"
      }
    ],
    "id": "9efa225a4f6841b5a6304ffb5111a1ed",
    "predicate mapping": [
      {
        "label": "Employees",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "towns",
        "uri": "http://dbpedia.org/property/homeTown"
      }
    ]
  },
  {
    "question": "Name the televesion show which has artist named Christopher Franke ?",
    "SerialNumber": "1503",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "uri": "http://dbpedia.org/resource/Christopher_Franke"
      }
    ],
    "id": "5f620b019a9d4b988b56f5b4f3d4666a",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "named",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where are the philosophers from, whose main work is on the matter of feminism in Canada?",
    "SerialNumber": "1504",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mainInterest> <http://dbpedia.org/resource/Feminism_in_Canada> . ?x <http://dbpedia.org/property/region> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}",
    "entity mapping": [
      {
        "label": "feminism in Canada",
        "uri": "http://dbpedia.org/resource/Feminism_in_Canada"
      }
    ],
    "id": "a9026609cc0e4324bbc568de1e9c8f61",
    "predicate mapping": [
      {
        "label": "matter",
        "uri": "http://dbpedia.org/ontology/mainInterest"
      },
      {
        "label": "matter",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "philosopher",
        "uri": "http://dbpedia.org/ontology/Philosopher"
      }
    ]
  },
  {
    "question": "In how many different places can I fnd Modern Architectural buildings?",
    "SerialNumber": "1505",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/architecturalStyle> <http://dbpedia.org/resource/Modern_architecture> . ?x <http://dbpedia.org/property/address> ?uri  . }",
    "entity mapping": [
      {
        "label": "Modern Architectura",
        "uri": "http://dbpedia.org/resource/Modern_architecture"
      }
    ],
    "id": "f0157809a86545afa67e70029372d9ef",
    "predicate mapping": [
      {
        "label": "architectural",
        "uri": "http://dbpedia.org/property/architecturalStyle"
      },
      {
        "label": "buildings",
        "uri": "http://dbpedia.org/property/address"
      }
    ]
  },
  {
    "question": "What are some musicians who have worked with Dean Ambrose?",
    "SerialNumber": "1508",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Dean_Ambrose>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Dean Ambrose",
        "uri": "http://dbpedia.org/resource/Dean_Ambrose"
      }
    ],
    "id": "cefb9d24941c422d97cf5b0e1d6a517f",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Where did the president study, whose VP was Emilio Nez?",
    "SerialNumber": "1513",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/vicePresident> <http://dbpedia.org/resource/Emilio_Núñez> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Emilio Nez",
        "uri": "http://dbpedia.org/resource/Emilio_Núñez"
      }
    ],
    "id": "12c919e6fa354555971464cbeb961149",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      },
      {
        "label": "VP",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "In how many different places were the people born who are members of National Museum of Racing and Hall of Fame?",
    "SerialNumber": "1515",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "National Museum of Racing and Hall of Fame",
        "uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame"
      }
    ],
    "id": "3f08ba5c7c254c4391b45ec5efe64b44",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/honours"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Which military commander fought his battle at Fort Gadsen?",
    "SerialNumber": "1516",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Fort_Gadsden>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Fort Gadsen",
        "uri": "http://dbpedia.org/resource/Fort_Gadsden"
      }
    ],
    "id": "095c674f34ba4e68bbf07397d12a0aa9",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Did Phillippe Cabot go to Columbia for studying?",
    "SerialNumber": "1517",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Phillippe_Cabot> <http://dbpedia.org/ontology/university> <http://dbpedia.org/resource/Columbia_University> }",
    "entity mapping": [
      {
        "label": "Phillippe Cabot",
        "uri": "http://dbpedia.org/resource/Phillippe_Cabot"
      },
      {
        "label": "Columbia",
        "uri": "http://dbpedia.org/resource/Columbia_University"
      }
    ],
    "id": "988903c3f615471fbd0fe2adeafdd518",
    "predicate mapping": [
      {
        "label": "studying",
        "uri": "http://dbpedia.org/ontology/university"
      }
    ]
  },
  {
    "question": "Which rivers start at the Brower's Spring?",
    "SerialNumber": "1518",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Brower's_Spring> } ",
    "entity mapping": [
      {
        "label": "Brower's Spring",
        "uri": "http://dbpedia.org/resource/Brower's_Spring"
      }
    ],
    "id": "de86bc6a4b574f6ea396c7793787cb13",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      }
    ]
  },
  {
    "question": "For which reasons have the ones born in Edinburgh, died?",
    "SerialNumber": "1519",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Edinburgh> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "Edinburgh",
        "uri": "http://dbpedia.org/resource/Edinburgh"
      }
    ],
    "id": "29718ea92a0c4340b8220c80488cd310",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "What games are played in Protestant schools?",
    "SerialNumber": "1520",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/schooltype> <http://dbpedia.org/resource/Protestantism> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "protestant",
        "uri": "http://dbpedia.org/resource/Protestantism"
      }
    ],
    "id": "86af262ded0c418592ba045d1b609aab",
    "predicate mapping": [
      {
        "label": "schools",
        "uri": "http://dbpedia.org/property/schooltype"
      },
      {
        "label": "Protestant",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Which religion is followed by people in the family of Meadow Sopranos?",
    "SerialNumber": "1521",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Meadow_Soprano> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Meadow Soprano",
        "uri": "http://dbpedia.org/resource/Meadow_Soprano"
      }
    ],
    "id": "fd0df4cfc4fc439696f39dd5d17dc45a",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/property/family"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which software uses windows as it's operating system and is written in C++ ?",
    "SerialNumber": "1523",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C++>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      },
      {
        "label": "C++",
        "uri": "http://dbpedia.org/resource/C++"
      }
    ],
    "id": "5aebd57c3f2140568f2473946d068238",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/programmingLanguage"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Which draft team od Dale Mitchell is also the tenant of Master Card center /",
    "SerialNumber": "1524",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri. <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri} ",
    "entity mapping": [
      {
        "label": "Dale Mitchell",
        "uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)"
      },
      {
        "label": "master",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre"
      }
    ],
    "id": "65e7f354b21d4f9eb1902ef3435b1f59",
    "predicate mapping": [
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/ontology/draftTeam"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "Paris Sisters singles are of which language?",
    "SerialNumber": "1527",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/The_Paris_Sisters> . ?x <http://dbpedia.org/property/language> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "Paris Sisters",
        "uri": "http://dbpedia.org/resource/The_Paris_Sisters"
      }
    ],
    "id": "26de4237807b43509a696a7aa4460ae3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/musicalBand"
      },
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "Which models were featured in Playboy Playmates 1954?",
    "SerialNumber": "1529",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/succeeded> <http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PlayboyPlaymate>}",
    "entity mapping": [
      {
        "label": "1954",
        "uri": "http://dbpedia.org/resource/List_of_Playboy_Playmates_of_1954"
      }
    ],
    "id": "47af7157273449c9855fdc6169f53bc3",
    "predicate mapping": [
      {
        "label": "featured",
        "uri": "http://dbpedia.org/property/succeeded"
      },
      {
        "label": "Playboy Playmate",
        "uri": "http://dbpedia.org/ontology/PlayboyPlaymate"
      }
    ]
  },
  {
    "question": "Where is the sister station of Al Arabiya 99 located?",
    "SerialNumber": "1530",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sisterStations> <http://dbpedia.org/resource/Al_Arabiya_99> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "Al Arabiya 99",
        "uri": "http://dbpedia.org/resource/Al_Arabiya_99"
      }
    ],
    "id": "8a6b193951864f6599a5793d574b5f02",
    "predicate mapping": [
      {
        "label": "station sister",
        "uri": "http://dbpedia.org/property/sisterStations"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "station",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "Which cities are located around the sea into which the ionian flows?",
    "SerialNumber": "1533",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ionian_Sea> <http://dbpedia.org/ontology/outflow> ?x . ?x <http://dbpedia.org/property/cities> ?uri  . }",
    "entity mapping": [
      {
        "label": "ionian sea",
        "uri": "http://dbpedia.org/resource/Ionian_Sea"
      }
    ],
    "id": "32fab0cef56a47c1998aeed3476af6d2",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/outflow"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "What team were the people drafted to, which are in the National Hockey League?",
    "SerialNumber": "1535",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/property/draftTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "National Hockey League",
        "uri": "http://dbpedia.org/resource/National_Hockey_League"
      }
    ],
    "id": "8b85636931964fff9dbdd3890ae49b79",
    "predicate mapping": [
      {
        "label": "League",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who all are buried in Arlington national cementary?",
    "SerialNumber": "1537",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery> } ",
    "entity mapping": [
      {
        "label": "Arlington",
        "uri": "http://dbpedia.org/resource/Arlington_National_Cemetery"
      }
    ],
    "id": "1470a63eb37e4e13bd56e77aa0ebfe3d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial"
      }
    ]
  },
  {
    "question": "Where did Jerry Tagge do his elementary schooling?",
    "SerialNumber": "1538",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri } ",
    "entity mapping": [
      {
        "label": "Jerry Tagge",
        "uri": "http://dbpedia.org/resource/Jerry_Tagge"
      }
    ],
    "id": "321d971403c844f7b7233e28728d227e",
    "predicate mapping": [
      {
        "label": "schooling",
        "uri": "http://dbpedia.org/property/highSchool"
      }
    ]
  },
  {
    "question": "who manufactures the SHO V8?",
    "SerialNumber": "1539",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri } ",
    "entity mapping": [
      {
        "label": "sho v8",
        "uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine"
      }
    ],
    "id": "c425a861d015448ea91b7fbda3cc03cf",
    "predicate mapping": [
      {
        "label": "manufactures",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Which source of Water resources management in El Salvador is also the nation of the Sierra del Merendn?",
    "SerialNumber": "1540",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Water_resources_management_in_El_Salvador> <http://dbpedia.org/property/sourceCountry> ?uri. <http://dbpedia.org/resource/Sierra_del_Merendón> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Water resources management in El Salvador",
        "uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador"
      },
      {
        "label": "Sierra del Merendn",
        "uri": "http://dbpedia.org/resource/Sierra_del_Merendón"
      }
    ],
    "id": "aa6d6a9311c148d4ad8adcf7211e37d0",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceCountry"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "What awards are won by the screenwriter of Lucky You?",
    "SerialNumber": "1543",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Lucky_You_(film)> <http://dbpedia.org/property/screenplay> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lucky You",
        "uri": "http://dbpedia.org/resource/Lucky_You_(film)"
      }
    ],
    "id": "625ae94833b045a0a4baa5ce95d97900",
    "predicate mapping": [
      {
        "label": "screenwriter",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "In which areas can we find the networks owned by the govt of Mauritius?",
    "SerialNumber": "1546",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/owningCompany> <http://dbpedia.org/resource/Government_of_Mauritius> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "entity mapping": [
      {
        "label": "Mauritius",
        "uri": "http://dbpedia.org/resource/Government_of_Mauritius"
      }
    ],
    "id": "871775efcda94304826009853e33cb49",
    "predicate mapping": [
      {
        "label": "govt",
        "uri": "http://dbpedia.org/ontology/owningCompany"
      },
      {
        "label": "areas",
        "uri": "http://dbpedia.org/property/broadcastArea"
      },
      {
        "label": "networks",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork"
      }
    ]
  },
  {
    "question": "Which current players once played for Toronto argonauts?",
    "SerialNumber": "1547",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/Toronto_Argonauts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Toronto argonauts",
        "uri": "http://dbpedia.org/resource/Toronto_Argonauts"
      }
    ],
    "id": "7d3a614fe3294084b04b3d873b41c665",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "Which company builds Microsoft Azure and Microsoft Surface?",
    "SerialNumber": "1548",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Microsoft Azure",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure"
      },
      {
        "label": "Microsoft Surface",
        "uri": "http://dbpedia.org/resource/Microsoft_Surface"
      }
    ],
    "id": "7abda6e6bf294ae7a68497a1c4579a94",
    "predicate mapping": [
      {
        "label": "builds",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "builds",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which contnet license provider of Microsoft Office Picture Manager is also the game platform of Google Clud Connect ?",
    "SerialNumber": "1549",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_Office_Picture_Manager> <http://dbpedia.org/ontology/license> ?uri. <http://dbpedia.org/resource/Google_Cloud_Connect> <http://dbpedia.org/ontology/computingPlatform> ?uri} ",
    "entity mapping": [
      {
        "label": "Microsoft Office Picture Manager",
        "uri": "http://dbpedia.org/resource/Microsoft_Office_Picture_Manager"
      },
      {
        "label": "connect google",
        "uri": "http://dbpedia.org/resource/Google_Cloud_Connect"
      }
    ],
    "id": "13fd5d955c674770a707d5548231b9e1",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license"
      },
      {
        "label": "game platform",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      }
    ]
  },
  {
    "question": "Who has rented the stadiums owned by Toronto?",
    "SerialNumber": "1553",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/tenants> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      }
    ],
    "id": "c58dabff921c4dc18a7525f173f9b73d",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/property/tenants"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Who won a Norbert Wiener Award for Social and Professional Responsibility?",
    "SerialNumber": "1554",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility>  . }",
    "entity mapping": [
      {
        "label": "Norbert Wiener Award for Social and Professional Responsibility",
        "uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility"
      }
    ],
    "id": "1ce8eb889dc948598061a205d9ac8292",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes"
      }
    ]
  },
  {
    "question": "What currencies are circulated in the countries where people speak French?",
    "SerialNumber": "1557",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/French_language> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "entity mapping": [
      {
        "label": "French",
        "uri": "http://dbpedia.org/resource/French_language"
      }
    ],
    "id": "ebde94c05f654d6b8a9dc3a159f815e9",
    "predicate mapping": [
      {
        "label": "speak",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Location"
      }
    ]
  },
  {
    "question": "Which division of Serbia national team is also the region of Dobinsk Ice Cave ?",
    "SerialNumber": "1558",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Serbia_national_American_football_team> <http://dbpedia.org/ontology/division> ?uri. <http://dbpedia.org/resource/Dobšinská_Ice_Cave> <http://dbpedia.org/ontology/region> ?uri} ",
    "entity mapping": [
      {
        "label": "national serbia team",
        "uri": "http://dbpedia.org/resource/Serbia_national_American_football_team"
      },
      {
        "label": "Dobinsk Ice Cave",
        "uri": "http://dbpedia.org/resource/Dobšinská_Ice_Cave"
      }
    ],
    "id": "8d1df3c7e7af4760a3bf0077cd9afb56",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Name the common current team of the Shaun Thong and Kaannder ?",
    "SerialNumber": "1559",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shaun_Thong> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/Kaan_Önder> <http://dbpedia.org/property/currentTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Shaun Thong",
        "uri": "http://dbpedia.org/resource/Shaun_Thong"
      },
      {
        "label": "Kaannder",
        "uri": "http://dbpedia.org/resource/Kaan_Önder"
      }
    ],
    "id": "35a87d039618479c830132847e30888b",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam"
      },
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentTeam"
      }
    ]
  },
  {
    "question": "What is the television show which has cast member as Jason Carter and network is TNT (TV channel)?",
    "SerialNumber": "1560",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Jason Carter",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)"
      },
      {
        "label": "TNT (TV channel)",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)"
      }
    ],
    "id": "7a4d4807f7e44d8298c4c03226d00b85",
    "predicate mapping": [
      {
        "label": "TNT",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who hold stocks in the bank which is located at 731 Lexington Avenue?",
    "SerialNumber": "1561",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/731_Lexington_Avenue> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "731 Lexington Avenue",
        "uri": "http://dbpedia.org/resource/731_Lexington_Avenue"
      }
    ],
    "id": "4fa56fcae915405bb3dc2d843d72a39b",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "Who rented the stadium where the UFC 152 take place?",
    "SerialNumber": "1562",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/UFC_152> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "UFC 152",
        "uri": "http://dbpedia.org/resource/UFC_152"
      }
    ],
    "id": "99a59ee47bac4242b9a447372ed7862e",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/venue"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Which company's cars are assembled in Iran?",
    "SerialNumber": "1563",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Iran> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Iran",
        "uri": "http://dbpedia.org/resource/Iran"
      }
    ],
    "id": "d734bb40ec504463855c4d255151750f",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "company's",
        "uri": "http://dbpedia.org/property/parentCompany"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Which first driver of  European Grand Prix 1993 is also finished first in 1985 Portuguese Grand Prix ?",
    "SerialNumber": "1565",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1993_European_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1985_Portuguese_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri . }",
    "entity mapping": [
      {
        "label": "european grand prix",
        "uri": "http://dbpedia.org/resource/1993_European_Grand_Prix"
      },
      {
        "label": "1985 Portuguese Grand Prix",
        "uri": "http://dbpedia.org/resource/1985_Portuguese_Grand_Prix"
      }
    ],
    "id": "d229a447683c43bdab10a891ceb42456",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/property/firstDriver"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/property/firstDriver"
      }
    ]
  },
  {
    "question": "What place is the birthplace of Vijay Chavan where Eka Lagnachi Teesri Goshta is located as well?",
    "SerialNumber": "1566",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Vijay_Chavan> <http://dbpedia.org/property/placeOfBirth> ?uri . }",
    "entity mapping": [
      {
        "label": "Eka Lagnachi Teesri Goshta",
        "uri": "http://dbpedia.org/resource/Eka_Lagnachi_Teesri_Goshta"
      },
      {
        "label": "Vijay Chavan",
        "uri": "http://dbpedia.org/resource/Vijay_Chavan"
      }
    ],
    "id": "1df641d8a68b4fc085b0cb54337deb82",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "In which fields are both Paul Demiville and Sylvain levi experts?",
    "SerialNumber": "1567",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demiéville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Sylvain_Lévi> <http://dbpedia.org/property/fields> ?uri . }",
    "entity mapping": [
      {
        "label": "Paul Demiville",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville"
      },
      {
        "label": "sylvain",
        "uri": "http://dbpedia.org/resource/Sylvain_Lévi"
      }
    ],
    "id": "e9036a6c1a674f64a85a400eb987393b",
    "predicate mapping": [
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "Where were some people associated with Steve Winwood employed at?",
    "SerialNumber": "1570",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Steve_Winwood> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Steve Winwood",
        "uri": "http://dbpedia.org/resource/Steve_Winwood"
      }
    ],
    "id": "754a3bc265ae4fe1833884e86aceb12b",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who were involved in the wars where Jonathan Haskell battled?",
    "SerialNumber": "1572",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jonathan_Haskell> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jonathan Haskell",
        "uri": "http://dbpedia.org/resource/Jonathan_Haskell"
      }
    ],
    "id": "f58241b0c93f471fb1b44686630eccf1",
    "predicate mapping": [
      {
        "label": "battled",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant"
      }
    ]
  },
  {
    "question": "Does the river shannon originate from Dowra?",
    "SerialNumber": "1573",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/River_Shannon> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Dowra> }",
    "entity mapping": [
      {
        "label": "river shannon",
        "uri": "http://dbpedia.org/resource/River_Shannon"
      },
      {
        "label": "Dowra",
        "uri": "http://dbpedia.org/resource/Dowra"
      }
    ],
    "id": "950b70d788fa482b9c3855e96aebe7ac",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      }
    ]
  },
  {
    "question": "Does Jevan Snead play as Quarterback?",
    "SerialNumber": "1575",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jevan_Snead> <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Quarterback> }",
    "entity mapping": [
      {
        "label": "Jevan Snead",
        "uri": "http://dbpedia.org/resource/Jevan_Snead"
      },
      {
        "label": "Quarterback",
        "uri": "http://dbpedia.org/resource/Quarterback"
      }
    ],
    "id": "22fdf1b988044e3992540ed303e59a54",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/position"
      }
    ]
  },
  {
    "question": "Name the show whose jury consist of Jennifer Lopez and Randy Jackson?",
    "SerialNumber": "1577",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Jennifer Lopez",
        "uri": "http://dbpedia.org/resource/Jennifer_Lopez"
      },
      {
        "label": "Randy Jackson",
        "uri": "http://dbpedia.org/resource/Randy_Jackson"
      }
    ],
    "id": "d23c4c43e4f1484b99c8054143bf2438",
    "predicate mapping": [
      {
        "label": "consist",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "consist",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is tahiti in the Society Islands achipelago?",
    "SerialNumber": "1578",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tahiti> <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Society_Islands> }",
    "entity mapping": [
      {
        "label": "tahiti",
        "uri": "http://dbpedia.org/resource/Tahiti"
      },
      {
        "label": "Society Islands",
        "uri": "http://dbpedia.org/resource/Society_Islands"
      }
    ],
    "id": "50f9b25a3d0c408fb2383283fe04a6d3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/archipelago"
      }
    ]
  },
  {
    "question": "Where did the fashion designer study who died at the Stony Brook University Hospital?",
    "SerialNumber": "1580",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/Stony_Brook_University_Hospital> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FashionDesigner>}",
    "entity mapping": [
      {
        "label": "Stony Brook University Hospital",
        "uri": "http://dbpedia.org/resource/Stony_Brook_University_Hospital"
      }
    ],
    "id": "73b6ab3abf6f45c4b9e8d5139432cbc2",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "fashion designer",
        "uri": "http://dbpedia.org/ontology/FashionDesigner"
      }
    ]
  },
  {
    "question": "Name few television shows's anchored by Ryan Seacrest?",
    "SerialNumber": "1581",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest"
      }
    ],
    "id": "e47dfae4d0b64adf925f7961a27179fe",
    "predicate mapping": [
      {
        "label": "anchored",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Give me some shows related to the ones created by Russell Davies",
    "SerialNumber": "1583",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Russell_T_Davies> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Russell Davies",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      }
    ],
    "id": "c75bb3f9a6a54bc995eec394e964b45e",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where is the headquarters of the company which runs the Metro Blue Line in minnesota?",
    "SerialNumber": "1585",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Metro Blue Line",
        "uri": "http://dbpedia.org/resource/Metro_Blue_Line_(Minnesota)"
      }
    ],
    "id": "9bd93e910858410cb64bf86b0f1a17f5",
    "predicate mapping": [
      {
        "label": "minnesota",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Which religion's people are member of BJP?",
    "SerialNumber": "1587",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "BJP",
        "uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party"
      }
    ],
    "id": "a561ecf7220a4ede974139e2dd42ed14",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many dishes are made with an ingredient belonging to the flowering plant species?",
    "SerialNumber": "1589",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/division> <http://dbpedia.org/resource/Flowering_plant> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "entity mapping": [
      {
        "label": "flowering plant",
        "uri": "http://dbpedia.org/resource/Flowering_plant"
      }
    ],
    "id": "9e2d283b09f4408392359dbb0df6b0a3",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/division"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/Food"
      }
    ]
  },
  {
    "question": "Whose band members are known to play a PRS guitar?",
    "SerialNumber": "1591",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/PRS_Guitars> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . }",
    "entity mapping": [
      {
        "label": "PRS",
        "uri": "http://dbpedia.org/resource/PRS_Guitars"
      }
    ],
    "id": "6d530d8977fd4a4cbc5f2cb377470f1d",
    "predicate mapping": [
      {
        "label": "guitar",
        "uri": "http://dbpedia.org/property/notableInstruments"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/currentMembers"
      }
    ]
  },
  {
    "question": "Which is the city closest to both the Lodaiska site and the home of David w brown?",
    "SerialNumber": "1595",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri. <http://dbpedia.org/resource/David_W._Brown_House> <http://dbpedia.org/ontology/nearestCity> ?uri . }",
    "entity mapping": [
      {
        "label": "Lodaiska site",
        "uri": "http://dbpedia.org/resource/LoDaisKa_Site"
      },
      {
        "label": "david brown",
        "uri": "http://dbpedia.org/resource/David_W._Brown_House"
      }
    ],
    "id": "2dc904ef3c0548be8f0e6094c1d29e82",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      }
    ]
  },
  {
    "question": "Whose leaders are Willem-Alexander and Fredis Refunjol?",
    "SerialNumber": "1598",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands> . ?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Fredis_Refunjol> . }",
    "entity mapping": [
      {
        "label": "willem-alexander",
        "uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands"
      },
      {
        "label": "Fredis Refunjol",
        "uri": "http://dbpedia.org/resource/Fredis_Refunjol"
      }
    ],
    "id": "24fb6dd7a0ba43e2868b53007f2509e5",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "What are the airlines whose hub airport is operated by the Los Angeles World Airports?",
    "SerialNumber": "1604",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Los_Angeles_World_Airports> . ?uri <http://dbpedia.org/ontology/hubAirport> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Los Angeles World Airports",
        "uri": "http://dbpedia.org/resource/Los_Angeles_World_Airports"
      }
    ],
    "id": "de301d41a10c41a3a2d59f1551e5d9ac",
    "predicate mapping": [
      {
        "label": "operated",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "hub airport",
        "uri": "http://dbpedia.org/ontology/hubAirport"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "What is used as money for French Southern and Antarctic Lands is also the  product of the Karafarin Bank ?",
    "SerialNumber": "1605",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands> <http://dbpedia.org/ontology/currency> ?uri. <http://dbpedia.org/resource/Karafarin_Bank> <http://dbpedia.org/ontology/product> ?uri} ",
    "entity mapping": [
      {
        "label": "French Southern and Antarctic Lands",
        "uri": "http://dbpedia.org/resource/French_Southern_and_Antarctic_Lands"
      },
      {
        "label": "Karafarin Bank",
        "uri": "http://dbpedia.org/resource/Karafarin_Bank"
      }
    ],
    "id": "53c6290f51ab4906877de90618901cdd",
    "predicate mapping": [
      {
        "label": "money",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "Which office holder's resting place is in  Palo Alto, California and was succeeded by Adrian A. Basora ?",
    "SerialNumber": "1606",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Palo Alto, California",
        "uri": "http://dbpedia.org/resource/Palo_Alto,_California"
      },
      {
        "label": "Adrian A. Basora",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora"
      }
    ],
    "id": "e57b71a78a4646b0a3ce6c506fffc8e6",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Name the companies which are in cities under Denzil Minnan Wong?",
    "SerialNumber": "1607",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Denzil_Minnan-Wong> . ?uri <http://dbpedia.org/ontology/locationCity> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Denzil Minnan Wong",
        "uri": "http://dbpedia.org/resource/Denzil_Minnan-Wong"
      }
    ],
    "id": "fa5fce44a7e64b59826c7dba9a288670",
    "predicate mapping": [
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Where is the successor of john waldo from?",
    "SerialNumber": "1611",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/John_B._Waldo> . ?x <http://dbpedia.org/property/state> ?uri  . }",
    "entity mapping": [
      {
        "label": "waldo john",
        "uri": "http://dbpedia.org/resource/John_B._Waldo"
      }
    ],
    "id": "3bb7be1a180e47e49b6cc14c06051021",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "john",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "Which home town of Cline Buckens is the place of Death of Richard heron ?",
    "SerialNumber": "1612",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Céline_Buckens> <http://dbpedia.org/ontology/hometown> ?uri. <http://dbpedia.org/resource/Richard_Heron> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "buckens",
        "uri": "http://dbpedia.org/resource/Céline_Buckens"
      },
      {
        "label": "Richard heron",
        "uri": "http://dbpedia.org/resource/Richard_Heron"
      }
    ],
    "id": "22eeb146aa1f41a4b0db6df5844b3fed",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "place of Death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Name some cars similar to the ones which are assembled at the Jefferson North Assembly?",
    "SerialNumber": "1613",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Jefferson North Assembly",
        "uri": "http://dbpedia.org/resource/Jefferson_North_Assembly"
      }
    ],
    "id": "a501085682e8485f815a18df2b94a9a0",
    "predicate mapping": [
      {
        "label": "Assembly",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "at",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Which awards are presented by the committee located in Stockholm?",
    "SerialNumber": "1614",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . }",
    "entity mapping": [
      {
        "label": "Stockholm",
        "uri": "http://dbpedia.org/resource/Stockholm"
      }
    ],
    "id": "d7c077b487cb42b5869f72a3cd8d28be",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter"
      }
    ]
  },
  {
    "question": "List everything in which saxophone players have been casted.",
    "SerialNumber": "1617",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Saxophone> . ?uri <http://dbpedia.org/property/starring> ?x  . }",
    "entity mapping": [
      {
        "label": "saxophone",
        "uri": "http://dbpedia.org/resource/Saxophone"
      }
    ],
    "id": "e3bdce2f724541fc987861adb5d4e715",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/property/starring"
      }
    ]
  },
  {
    "question": "Who wrote Catch My soul ?",
    "SerialNumber": "1618",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)> <http://dbpedia.org/ontology/author> ?uri } ",
    "entity mapping": [
      {
        "label": "Catch My soul",
        "uri": "http://dbpedia.org/resource/Catch_My_Soul_(UK_stage_version)"
      }
    ],
    "id": "b25f5f59b6e44ff28e90122b0cd42a0f",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "How many bands collaborated with artists who signed up with EMI?",
    "SerialNumber": "1620",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "EMI",
        "uri": "http://dbpedia.org/resource/EMI"
      }
    ],
    "id": "0db563660d024f5db42e2ff6ddb9f966",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Where did the president study, who's the president of Besiktas JK?",
    "SerialNumber": "1621",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Beşiktaş_JK_(wheelchair_basketball)> <http://dbpedia.org/ontology/president> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Besiktas JK",
        "uri": "http://dbpedia.org/resource/Beşiktaş_JK_(wheelchair_basketball)"
      }
    ],
    "id": "83858d645fa74a698c361696ed79496f",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "who's",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "In which places can we find the people won the Project Runaway Canada?",
    "SerialNumber": "1623",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Project_Runway_Canada> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Canada",
        "uri": "http://dbpedia.org/resource/Project_Runway_Canada"
      }
    ],
    "id": "d30be769b8ad4830a948b6b989b27b12",
    "predicate mapping": [
      {
        "label": "Runaway",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "Runaway",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "Runaway",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many factions were fighting in the wars where Blue Jacket was a commander?",
    "SerialNumber": "1624",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Blue_Jacket> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "entity mapping": [
      {
        "label": "Blue Jacket",
        "uri": "http://dbpedia.org/resource/Blue_Jacket"
      }
    ],
    "id": "b8223f04582b4b20a1089758559d531f",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant"
      }
    ]
  },
  {
    "question": "How many record labels publish works of Jazz fusion?",
    "SerialNumber": "1626",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Jazz_fusion> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jazz fusion",
        "uri": "http://dbpedia.org/resource/Jazz_fusion"
      }
    ],
    "id": "7355543eae974888a7f58b4d3f0b935f",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "record label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      }
    ]
  },
  {
    "question": "Where was the person born whose successor was Le Hong Phong?",
    "SerialNumber": "1627",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Lê_Hồng_Phong> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Le Hong Phong",
        "uri": "http://dbpedia.org/resource/Lê_Hồng_Phong"
      }
    ],
    "id": "6593b0b0d9e445f68fe8d0c7cb6deb32",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "What is the former team of the Athens borned basketball players ?",
    "SerialNumber": "1633",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Athens> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer>}",
    "entity mapping": [
      {
        "label": "Athens",
        "uri": "http://dbpedia.org/resource/Athens"
      }
    ],
    "id": "9babaa2d96e64f1db42f3fb1df04a4bb",
    "predicate mapping": [
      {
        "label": "borned",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "basketball player",
        "uri": "http://dbpedia.org/ontology/BasketballPlayer"
      }
    ]
  },
  {
    "question": "Name the television show directed by Simon Fuller and judged by Jennifier Lopez ?",
    "SerialNumber": "1636",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "uri": "http://dbpedia.org/resource/Simon_Fuller"
      },
      {
        "label": "Jennifier Lopez",
        "uri": "http://dbpedia.org/resource/Jennifer_Lopez"
      }
    ],
    "id": "840cc802cdf04e8eac6a2f572777b0fa",
    "predicate mapping": [
      {
        "label": "Lopez",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "judged",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Give me some shows owned by BBC one and BBC hd?",
    "SerialNumber": "1637",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_One> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC one",
        "uri": "http://dbpedia.org/resource/BBC_One"
      },
      {
        "label": "BBC hd",
        "uri": "http://dbpedia.org/resource/BBC_HD"
      }
    ],
    "id": "0130934ed9434be69d31f035e062979a",
    "predicate mapping": [
      {
        "label": "owned",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "owned",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where do the rivers from greater London flow into?",
    "SerialNumber": "1639",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/Greater_London> . ?x <http://dbpedia.org/property/mouthLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "greater London",
        "uri": "http://dbpedia.org/resource/Greater_London"
      }
    ],
    "id": "f81e7f1fee7f4af2a3dcb722750b7137",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/property/sourceRegion"
      },
      {
        "label": "flow",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "List out the people who are related to the relatives of Jared Kushner ?",
    "SerialNumber": "1640",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jared_Kushner> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jared Kushner",
        "uri": "http://dbpedia.org/resource/Jared_Kushner"
      }
    ],
    "id": "2c1e5203a1b34f32b1e7d70c4086c339",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "Was Buzz Williams the headcoach of the Marquette Golden Eagles mens team?",
    "SerialNumber": "1641",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> <http://dbpedia.org/resource/Buzz_Williams> }",
    "entity mapping": [
      {
        "label": "marquette golden eagles team",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men's_basketball_team"
      },
      {
        "label": "Buzz Williams",
        "uri": "http://dbpedia.org/resource/Buzz_Williams"
      }
    ],
    "id": "a3791b21aca7437b82671f3c7f08d07d",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach"
      }
    ]
  },
  {
    "question": "Under which US president was a politician in opposition of John G Schmitz?",
    "SerialNumber": "1643",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/opponent> <http://dbpedia.org/resource/John_G._Schmitz> . ?x <http://dbpedia.org/ontology/incumbent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "schmitz john",
        "uri": "http://dbpedia.org/resource/John_G._Schmitz"
      }
    ],
    "id": "9833117a26d84052ac213535b41a7fd9",
    "predicate mapping": [
      {
        "label": "Schmitz",
        "uri": "http://dbpedia.org/property/opponent"
      },
      {
        "label": "Schmitz",
        "uri": "http://dbpedia.org/ontology/incumbent"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "Whcih creator of Theme Time Radio Hour also created subsequent work of Moondoc Matinee ?",
    "SerialNumber": "1644",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri. <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri} ",
    "entity mapping": [
      {
        "label": "matinee",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee"
      },
      {
        "label": "Theme Time Radio Hour",
        "uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour"
      }
    ],
    "id": "670aa15c90d24e1e973eaeb3581ebacd",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "creator",
        "uri": "http://dbpedia.org/property/creator"
      }
    ]
  },
  {
    "question": "Who was the United States president who also served as a governor of Indiana Territory?",
    "SerialNumber": "1647",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory> } ",
    "entity mapping": [
      {
        "label": "Indiana Territory",
        "uri": "http://dbpedia.org/resource/Indiana_Territory"
      }
    ],
    "id": "1b3cf7cd113c4026ae73b7cb071d05d8",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "Who built the Ford Y-block engine ?",
    "SerialNumber": "1648",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri } ",
    "entity mapping": [
      {
        "label": "Ford Y-block engine",
        "uri": "http://dbpedia.org/resource/Ford_Y-block_engine"
      }
    ],
    "id": "9682bc0632d6403e9e533df9f9bee572",
    "predicate mapping": [
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Who produced the Pixar Image Computer?",
    "SerialNumber": "1653",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Pixar_Image_Computer>  . }",
    "entity mapping": [
      {
        "label": "Pixar Image Computer",
        "uri": "http://dbpedia.org/resource/Pixar_Image_Computer"
      }
    ],
    "id": "00fb7cf892ed4de0a25b3d8c04526470",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "Name the royalty whose daughter was Cleopatra V and was married to Ptolemy XIV of Egypt?",
    "SerialNumber": "1654",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "cleopatra egypt",
        "uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt"
      },
      {
        "label": "Ptolemy XIV of Egypt",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt"
      }
    ],
    "id": "7ffdaaa1870e4b449f08ef6591198dfb",
    "predicate mapping": [
      {
        "label": "Cleopatra",
        "uri": "http://dbpedia.org/property/mother"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "What are some islands in the bahamas?",
    "SerialNumber": "1655",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/The_Bahamas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "entity mapping": [
      {
        "label": "bahamas",
        "uri": "http://dbpedia.org/resource/The_Bahamas"
      }
    ],
    "id": "8ef554c7762349339b7cecc0fdf1bf1e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/archipelago"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island"
      }
    ]
  },
  {
    "question": "Was mother teresa beatified by John Paul the second?",
    "SerialNumber": "1656",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mother_Teresa> <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> }",
    "entity mapping": [
      {
        "label": "mother teresa",
        "uri": "http://dbpedia.org/resource/Mother_Teresa"
      },
      {
        "label": "paul john",
        "uri": "http://dbpedia.org/resource/Pope_John_Paul_II"
      }
    ],
    "id": "dcf35e72e0e94e41bde4a681a72c6e01",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy"
      }
    ]
  },
  {
    "question": "Which  municipality is neighbored by Cologny and Chne-Bougeries?",
    "SerialNumber": "1661",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Chêne-Bougeries> . }",
    "entity mapping": [
      {
        "label": "Cologny",
        "uri": "http://dbpedia.org/resource/Cologny"
      },
      {
        "label": "Chne-Bougeries",
        "uri": "http://dbpedia.org/resource/Chêne-Bougeries"
      }
    ],
    "id": "a1b9bccd83024859887b1a4045cc1240",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      },
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      }
    ]
  },
  {
    "question": "Which common prime minister did Graham Richardson and Bon McMullan serve ?",
    "SerialNumber": "1664",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Graham_Richardson> <http://dbpedia.org/ontology/primeMinister> ?uri. <http://dbpedia.org/resource/Bob_McMullan> <http://dbpedia.org/ontology/primeMinister> ?uri . }",
    "entity mapping": [
      {
        "label": "Graham Richardson",
        "uri": "http://dbpedia.org/resource/Graham_Richardson"
      },
      {
        "label": "mcmullan",
        "uri": "http://dbpedia.org/resource/Bob_McMullan"
      }
    ],
    "id": "787190bf105a421a9ce3d9c43676b4e9",
    "predicate mapping": [
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      },
      {
        "label": "prime minister",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "Where does the Giannis Alafouzos originate?",
    "SerialNumber": "1666",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Giannis_Alafouzos> <http://dbpedia.org/ontology/stateOfOrigin> ?uri } ",
    "entity mapping": [
      {
        "label": "Giannis Alafouzos",
        "uri": "http://dbpedia.org/resource/Giannis_Alafouzos"
      }
    ],
    "id": "7d551dbcd79d403490a5b99b491823dd",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "What awards have been given to Screenwriters?",
    "SerialNumber": "1670",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Screenwriter",
        "uri": "http://dbpedia.org/resource/Screenwriter"
      }
    ],
    "id": "1f0727912ac34c55b9900d1943f9a7af",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/occupation"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "What companies are located in toronto?",
    "SerialNumber": "1672",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      }
    ],
    "id": "861f142fbb834b069b0085c225e1a899",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the city of the Maine School of Science and Mathematics is also the resting place of Charles A. Boutelle ?",
    "SerialNumber": "1674",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics> <http://dbpedia.org/ontology/authority> ?uri. <http://dbpedia.org/resource/Charles_A._Boutelle> <http://dbpedia.org/property/restingplace> ?uri} ",
    "entity mapping": [
      {
        "label": "Maine School of Science and Mathematics",
        "uri": "http://dbpedia.org/resource/Maine_School_of_Science_and_Mathematics"
      },
      {
        "label": "Charles A. Boutelle",
        "uri": "http://dbpedia.org/resource/Charles_A._Boutelle"
      }
    ],
    "id": "6d79d046defe4cb683dddbf548a4dbc1",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/authority"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "Which Harris County based company is a subsidiary of Tandem Computers?",
    "SerialNumber": "1675",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas> . ?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "harris county",
        "uri": "http://dbpedia.org/resource/Harris_County,_Texas"
      },
      {
        "label": "Tandem Computers",
        "uri": "http://dbpedia.org/resource/Tandem_Computers"
      }
    ],
    "id": "d1bcc9750c134471969808b985308178",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which spouse of Ptolemy XIV had a mother named Ptolemy XII auletes ?",
    "SerialNumber": "1678",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt>  . }",
    "entity mapping": [
      {
        "label": "Ptolemy XII auletes",
        "uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes"
      },
      {
        "label": "ptolemy xiv",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIV_of_Egypt"
      }
    ],
    "id": "17f767e9a51b4a3d935fa194d0de2f8d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "How many corporations were founded in Texas?",
    "SerialNumber": "1682",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Texas",
        "uri": "http://dbpedia.org/resource/Texas"
      }
    ],
    "id": "0adae92fcd52472bb68050b2bbb93c44",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "corporations",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "List some teams for which someone who has played as a defender, now plays?",
    "SerialNumber": "1687",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/team> ?uri  . }",
    "entity mapping": [
      {
        "label": "now",
        "uri": "http://dbpedia.org/resource/Defenceman"
      }
    ],
    "id": "b387a0ed9c02429981b6d661bfe7d779",
    "predicate mapping": [
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "In which place is the company which is known for Barbara bestor located ?",
    "SerialNumber": "1688",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Barbara_Bestor> <http://dbpedia.org/property/knownFor> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Barbara bestor",
        "uri": "http://dbpedia.org/resource/Barbara_Bestor"
      }
    ],
    "id": "81a19f6c64e14ffeb7f3f28e34230331",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Count all the places where companies located in Ontario operate.",
    "SerialNumber": "1689",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/locations> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ontario",
        "uri": "http://dbpedia.org/resource/Ontario"
      }
    ],
    "id": "b107d70a40bd4d58953a8a9b4aacc109",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locations"
      }
    ]
  },
  {
    "question": "Who was the architect of the stadium currently run by Brandenton?",
    "SerialNumber": "1693",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/Bradenton,_Florida> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Brandenton",
        "uri": "http://dbpedia.org/resource/Bradenton,_Florida"
      }
    ],
    "id": "75f2b0e695d0422494bcbf36743ad108",
    "predicate mapping": [
      {
        "label": "Brandenton",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Does Jean Louis Arcand work for Geneva?",
    "SerialNumber": "1696",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jean-Louis_Arcand> <http://dbpedia.org/property/institution> <http://dbpedia.org/resource/Geneva> }",
    "entity mapping": [
      {
        "label": "arcand louis jean",
        "uri": "http://dbpedia.org/resource/Jean-Louis_Arcand"
      },
      {
        "label": "Geneva",
        "uri": "http://dbpedia.org/resource/Geneva"
      }
    ],
    "id": "8e29eff6b17f4319b9c659532af37bad",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/institution"
      }
    ]
  },
  {
    "question": "How many religions are followed amongst the people who've worked in the Korean army?",
    "SerialNumber": "1697",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Republic_of_Korea_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Korean",
        "uri": "http://dbpedia.org/resource/Republic_of_Korea_Army"
      }
    ],
    "id": "c7dc969d31554373b40ef9f089a6bbc3",
    "predicate mapping": [
      {
        "label": "army",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What kind of buildings were designed by Pyusawhti?",
    "SerialNumber": "1699",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Pyusawhti> . ?x <http://dbpedia.org/ontology/type> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "Pyusawhti",
        "uri": "http://dbpedia.org/resource/Pyusawhti"
      }
    ],
    "id": "4c467d0fc1fd40a199f7c5588d0aaee0",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/type"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Which ship builder built the USS Camp and Sturtevant ?",
    "SerialNumber": "1703",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/USS_Camp_(DE-251)> <http://dbpedia.org/property/shipBuilder> ?uri. <http://dbpedia.org/resource/USS_Sturtevant_(DE-239)> <http://dbpedia.org/property/shipBuilder> ?uri . }",
    "entity mapping": [
      {
        "label": "USS Camp",
        "uri": "http://dbpedia.org/resource/USS_Camp_(DE-251)"
      },
      {
        "label": "sturtevant uss",
        "uri": "http://dbpedia.org/resource/USS_Sturtevant_(DE-239)"
      }
    ],
    "id": "526573654e8e40fe9c04f756f3343bd8",
    "predicate mapping": [
      {
        "label": "ship builder",
        "uri": "http://dbpedia.org/property/shipBuilder"
      },
      {
        "label": "ship builder",
        "uri": "http://dbpedia.org/property/shipBuilder"
      }
    ]
  },
  {
    "question": "What are some movies whose score is composed by relatives of Bodhi Elfman?",
    "SerialNumber": "1705",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Bodhi_Elfman> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Bodhi Elfman",
        "uri": "http://dbpedia.org/resource/Bodhi_Elfman"
      }
    ],
    "id": "e0e0942378134df3b26ed071efe372b3",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What sports can be played at universities in Metro Manila?",
    "SerialNumber": "1711",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/state> <http://dbpedia.org/resource/Metro_Manila> . ?x <http://dbpedia.org/property/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Metro Manila",
        "uri": "http://dbpedia.org/resource/Metro_Manila"
      }
    ],
    "id": "87ca63e3887e495ebe99cdef9dc9f3d7",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Where does Kafue and Shire river flow into?",
    "SerialNumber": "1712",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kafue_River> <http://dbpedia.org/ontology/riverMouth> ?uri. <http://dbpedia.org/resource/Shire_River> <http://dbpedia.org/ontology/riverMouth> ?uri . }",
    "entity mapping": [
      {
        "label": "river kafue",
        "uri": "http://dbpedia.org/resource/Kafue_River"
      },
      {
        "label": "Shire river",
        "uri": "http://dbpedia.org/resource/Shire_River"
      }
    ],
    "id": "14aeee6f609641969e67d616c245ed48",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      }
    ]
  },
  {
    "question": "Which US state gave  us Brian Deegan and Harold Lyold?",
    "SerialNumber": "1713",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brian_Deegan_(rider)> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Harold_Lloyd> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "Brian Deegan",
        "uri": "http://dbpedia.org/resource/Brian_Deegan_(rider)"
      },
      {
        "label": "harold",
        "uri": "http://dbpedia.org/resource/Harold_Lloyd"
      }
    ],
    "id": "2ae49f2b089243fe8429fb7fc6f37020",
    "predicate mapping": [
      {
        "label": "Harold",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "Harold",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "was Charlemagne canonized by antipope pachal 3?",
    "SerialNumber": "1715",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Charlemagne> <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Antipope_Paschal_III> }",
    "entity mapping": [
      {
        "label": "Charlemagne",
        "uri": "http://dbpedia.org/resource/Charlemagne"
      },
      {
        "label": "antipope",
        "uri": "http://dbpedia.org/resource/Antipope_Paschal_III"
      }
    ],
    "id": "56180046035946cf88878e6666d488c1",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy"
      }
    ]
  },
  {
    "question": "Is Akan spoken in Ghana?",
    "SerialNumber": "1717",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ghana> <http://dbpedia.org/property/languages> <http://dbpedia.org/resource/Akan_language> }",
    "entity mapping": [
      {
        "label": "Ghana",
        "uri": "http://dbpedia.org/resource/Ghana"
      },
      {
        "label": "akan",
        "uri": "http://dbpedia.org/resource/Akan_language"
      }
    ],
    "id": "5eb2e5439fa141a895d7ce6ec1c0460b",
    "predicate mapping": [
      {
        "label": "spoken",
        "uri": "http://dbpedia.org/property/languages"
      }
    ]
  },
  {
    "question": "List the work institute of the medicians who has also worked at University of Miami ?",
    "SerialNumber": "1722",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/University_of_Miami> . ?x <http://dbpedia.org/property/workInstitutions> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Medician>}",
    "entity mapping": [
      {
        "label": "University of Miami",
        "uri": "http://dbpedia.org/resource/University_of_Miami"
      }
    ],
    "id": "2ea87bee77ff44d2a1bd856fc6106c1c",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "medician",
        "uri": "http://dbpedia.org/ontology/Medician"
      }
    ]
  },
  {
    "question": "What ethinicity of Linda Hogan is also the state of origin of Holmes Colbert ?",
    "SerialNumber": "1723",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Linda_Hogan> <http://dbpedia.org/ontology/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "entity mapping": [
      {
        "label": "Linda Hogan",
        "uri": "http://dbpedia.org/resource/Linda_Hogan"
      },
      {
        "label": "Holmes Colbert",
        "uri": "http://dbpedia.org/resource/Holmes_Colbert"
      }
    ],
    "id": "fbc52b963d5141a6b89216bae276bf21",
    "predicate mapping": [
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Where are jockeys in Dubai World Cup from?",
    "SerialNumber": "1725",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/race> <http://dbpedia.org/resource/Dubai_World_Cup> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Jockey>}",
    "entity mapping": [
      {
        "label": "Dubai World Cup",
        "uri": "http://dbpedia.org/resource/Dubai_World_Cup"
      }
    ],
    "id": "3932dc742d734d208470a844d5484ced",
    "predicate mapping": [
      {
        "label": "jockeys",
        "uri": "http://dbpedia.org/ontology/race"
      },
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "jockeys",
        "uri": "http://dbpedia.org/ontology/Jockey"
      }
    ]
  },
  {
    "question": "Which american football players currently plays for Michigan Wolverines?",
    "SerialNumber": "1727",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Michigan Wolverines",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines"
      }
    ],
    "id": "fce78279c2e143a79652b8514207cd41",
    "predicate mapping": [
      {
        "label": "currently",
        "uri": "http://dbpedia.org/property/currentteam"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "What is the location of the Walter Evans Edge office which is also the place of birth of henry Miller ?",
    "SerialNumber": "1728",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Walter_Evans_Edge> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/Henry_Miller_Shreve> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Walter Evans Edge",
        "uri": "http://dbpedia.org/resource/Walter_Evans_Edge"
      },
      {
        "label": "miller henry",
        "uri": "http://dbpedia.org/resource/Henry_Miller_Shreve"
      }
    ],
    "id": "d6d1fdb7f3604da48fee7fba7961f107",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What other destinations do airlines go to, whose flights also come to Glasgow?",
    "SerialNumber": "1730",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Glasgow_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Glasgow",
        "uri": "http://dbpedia.org/resource/Glasgow_Airport"
      }
    ],
    "id": "5ba35b11cd8b47b3bdb0467bb646621b",
    "predicate mapping": [
      {
        "label": "flights",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      },
      {
        "label": "destinations",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "List down the common sports played by PATTS College of Aeronautics and lytechnic University of the Philippines Taguig ?",
    "SerialNumber": "1731",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "PATTS College of Aeronautics",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics"
      },
      {
        "label": "philippines university lytechnic",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig"
      }
    ],
    "id": "cd069e1c88ed4e77ae308cbb998f57ca",
    "predicate mapping": [
      {
        "label": "Taguig",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Of the sports commonly played at Islamic Azad Uni, tehran, which one does Jon Speelman play?",
    "SerialNumber": "1733",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "Jon Speelman",
        "uri": "http://dbpedia.org/resource/Jon_Speelman"
      },
      {
        "label": "islamic",
        "uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch"
      }
    ],
    "id": "6e794f3cb6e6412f993f19aa5cd71225",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/field"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Who have become famous by movies produced by Laurence Mark?",
    "SerialNumber": "1737",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Laurence_Mark> . ?uri <http://dbpedia.org/ontology/knownFor> ?x  . }",
    "entity mapping": [
      {
        "label": "Laurence Mark",
        "uri": "http://dbpedia.org/resource/Laurence_Mark"
      }
    ],
    "id": "69fee15c06f64c7eb69fdfc71e10c6d8",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "movies",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "What is the common country of Ganz UV and Balaton wine region ?",
    "SerialNumber": "1738",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri. <http://dbpedia.org/resource/Balaton_wine_region> <http://dbpedia.org/ontology/location> ?uri} ",
    "entity mapping": [
      {
        "label": "Ganz UV",
        "uri": "http://dbpedia.org/resource/Ganz_UV"
      },
      {
        "label": "Balaton wine region",
        "uri": "http://dbpedia.org/resource/Balaton_wine_region"
      }
    ],
    "id": "8553c4fee8b04dc18263ee3f07b81807",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "What organization is the parent of Greenpeace Nordic?",
    "SerialNumber": "1739",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Greenpeace_Nordic> <http://dbpedia.org/ontology/parentOrganisation> ?uri } ",
    "entity mapping": [
      {
        "label": "Greenpeace Nordic",
        "uri": "http://dbpedia.org/resource/Greenpeace_Nordic"
      }
    ],
    "id": "6f1d569a147d482ca609cfdbec7c9ed8",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      }
    ]
  },
  {
    "question": "Give me some softwares which run on mac os",
    "SerialNumber": "1740",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "mac os",
        "uri": "http://dbpedia.org/resource/Mac_OS"
      }
    ],
    "id": "aaf4a21d2ca04d3bb91aed5c6063223d",
    "predicate mapping": [
      {
        "label": "run",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Panthera leo fossils and Liger belong to which species?",
    "SerialNumber": "1744",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Panthera_leo_fossilis> <http://dbpedia.org/ontology/species> ?uri. <http://dbpedia.org/resource/Liger> <http://dbpedia.org/ontology/species> ?uri . }",
    "entity mapping": [
      {
        "label": "panthera",
        "uri": "http://dbpedia.org/resource/Panthera_leo_fossilis"
      },
      {
        "label": "Liger",
        "uri": "http://dbpedia.org/resource/Liger"
      }
    ],
    "id": "2006a24c1c3e478b98df523596714251",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/species"
      }
    ]
  },
  {
    "question": "which awards have been given to people who fought in the Battle of France?",
    "SerialNumber": "1745",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Battle_of_France> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Battle of France",
        "uri": "http://dbpedia.org/resource/Battle_of_France"
      }
    ],
    "id": "30d46acd81d9420f9bef5bbebec0d15f",
    "predicate mapping": [
      {
        "label": "Battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many people have been trained in an institute located in California?",
    "SerialNumber": "1746",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/city> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/property/training> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "44378225c4c7414bbcfefcb69cfc2d92",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/training"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which composer subsequent work of Moondog Matinee and also composed The TImes They are A changin ?",
    "SerialNumber": "1747",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/ontology/musicBy> ?uri. <http://dbpedia.org/resource/Moondog_Matinee> <http://dbpedia.org/ontology/subsequentWork> ?uri} ",
    "entity mapping": [
      {
        "label": "changin times they are",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)"
      },
      {
        "label": "Moondog Matinee",
        "uri": "http://dbpedia.org/resource/Moondog_Matinee"
      }
    ],
    "id": "a9fc9b062b16419dbf83984d9a7bcb0e",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/musicBy"
      },
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      }
    ]
  },
  {
    "question": "What magazine is Marritt Cabal known for which has Lucifer Hammer as publisher ?",
    "SerialNumber": "1753",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Lucifer's_Hammer> <http://dbpedia.org/ontology/publisher> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Merritt_Cabal"
      },
      {
        "label": "lucifer hammer",
        "uri": "http://dbpedia.org/resource/Lucifer's_Hammer"
      }
    ],
    "id": "5cf1e1c8ee184ab0aa42a8628980116b",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      }
    ]
  },
  {
    "question": "Which football teams is Shahid Khan proprietor to?",
    "SerialNumber": "1757",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Shahid_Khan> } ",
    "entity mapping": [
      {
        "label": "Shahid Khan",
        "uri": "http://dbpedia.org/resource/Shahid_Khan"
      }
    ],
    "id": "9e56e9f24bb64c5b894e7a47b2c9cd94",
    "predicate mapping": [
      {
        "label": "proprietor",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "Which football players currently have their contracts with Stoke City F.C.?",
    "SerialNumber": "1759",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.> } ",
    "entity mapping": [
      {
        "label": "Stoke City F.C.",
        "uri": "http://dbpedia.org/resource/Stoke_City_F.C."
      }
    ],
    "id": "2d3b740bd54a4388a8be9f63fcaef04d",
    "predicate mapping": [
      {
        "label": "currently",
        "uri": "http://dbpedia.org/property/currentclub"
      }
    ]
  },
  {
    "question": "What are all the prizes won by the writer of A Grand Day Out?",
    "SerialNumber": "1761",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Grand_Day_Out> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "A Grand Day Out",
        "uri": "http://dbpedia.org/resource/A_Grand_Day_Out"
      }
    ],
    "id": "9049b588d47b4566b827b69d457b3725",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Where are Thomas Franois Burgers and Johannes Gerhardus Strijdom buried?",
    "SerialNumber": "1764",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thomas_François_Burgers> <http://dbpedia.org/property/restingplace> ?uri. <http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom> <http://dbpedia.org/property/restingplace> ?uri . }",
    "entity mapping": [
      {
        "label": "Johannes Gerhardus Strijdom",
        "uri": "http://dbpedia.org/resource/Thomas_François_Burgers"
      },
      {
        "label": "Johannes Gerhardus Strijdom",
        "uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom"
      }
    ],
    "id": "b1d14746b41f47459edf2a268414687f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "where are renaissance centers located?",
    "SerialNumber": "1765",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/address> ?uri } ",
    "entity mapping": [
      {
        "label": "renaissance center",
        "uri": "http://dbpedia.org/resource/Renaissance_Center"
      }
    ],
    "id": "14d666af4e7f4944b90397bb7836911e",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address"
      }
    ]
  },
  {
    "question": "Give the name of the river with source place as Australian Alps and has mouth place as Goolwa , a place in Siyuth Australia ?",
    "SerialNumber": "1770",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Australian_Alps> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Goolwa,_South_Australia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Australian Alps",
        "uri": "http://dbpedia.org/resource/Australian_Alps"
      },
      {
        "label": "australia",
        "uri": "http://dbpedia.org/resource/Goolwa,_South_Australia"
      }
    ],
    "id": "d3c5d6d98b654e44bbd5b942e911e74a",
    "predicate mapping": [
      {
        "label": "source place",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which artists have co-starred with Kris Kristofferson?",
    "SerialNumber": "1774",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Kris_Kristofferson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "Kris Kristofferson",
        "uri": "http://dbpedia.org/resource/Kris_Kristofferson"
      }
    ],
    "id": "191277ee793a402ab582ed1fbba59680",
    "predicate mapping": [
      {
        "label": "co-starred",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Count the total religions followed by the ones living in England.",
    "SerialNumber": "1775",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "1cedfca911824453b06451cbc8104541",
    "predicate mapping": [
      {
        "label": "living",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Which club of Michael Springer is also the parent organization of Syracuse University press ?",
    "SerialNumber": "1776",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Syracuse_University_Press> <http://dbpedia.org/property/parent> ?uri} ",
    "entity mapping": [
      {
        "label": "Michael Springer",
        "uri": "http://dbpedia.org/resource/Michael_Springer"
      },
      {
        "label": "Syracuse University press",
        "uri": "http://dbpedia.org/resource/Syracuse_University_Press"
      }
    ],
    "id": "569d57916252412ab7543cdd78e851a3",
    "predicate mapping": [
      {
        "label": "organization",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/property/parent"
      }
    ]
  },
  {
    "question": "Which river flows through both eastern and western washington?",
    "SerialNumber": "1778",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eastern_Washington> <http://dbpedia.org/ontology/river> ?uri. <http://dbpedia.org/resource/Central_Washington> <http://dbpedia.org/ontology/river> ?uri . }",
    "entity mapping": [
      {
        "label": "washington eastern",
        "uri": "http://dbpedia.org/resource/Eastern_Washington"
      },
      {
        "label": "washington",
        "uri": "http://dbpedia.org/resource/Central_Washington"
      }
    ],
    "id": "0d9332702ee748b2a87f19d9c50726e4",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "Who was the president under which people won the United States House of Representatives elections in 1790 ?",
    "SerialNumber": "1780",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "representatives elections",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections,_1790"
      }
    ],
    "id": "3fd0cb3a9d11496ca7d876547a5e6409",
    "predicate mapping": [
      {
        "label": "elections",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "elections",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Terminal Station at Chattanooga is made by architects from which University?",
    "SerialNumber": "1782",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Terminal_Station_(Chattanooga)> . ?x <http://dbpedia.org/property/education> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Architect>}",
    "entity mapping": [
      {
        "label": "Terminal Station",
        "uri": "http://dbpedia.org/resource/Terminal_Station_(Chattanooga)"
      }
    ],
    "id": "b8180174343249208cb2beeebf8476a0",
    "predicate mapping": [
      {
        "label": "University",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "University",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/Architect"
      }
    ]
  },
  {
    "question": "Which home stadium of 2011-12 FC Spartak Moscow season is also the location of birth of the Svetlana Gounkina ?",
    "SerialNumber": "1783",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "spartak season moscow",
        "uri": "http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season"
      },
      {
        "label": "Svetlana Gounkina",
        "uri": "http://dbpedia.org/resource/Svetlana_Gounkina"
      }
    ],
    "id": "d2b7dba56c5f4859813272dda053e0a1",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      },
      {
        "label": "location of birth",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "How many different pole drivers are there, of the GPs when Renault was the first team?",
    "SerialNumber": "1786",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Renault_in_Formula_One> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FormulaOneRacer>}",
    "entity mapping": [
      {
        "label": "renault",
        "uri": "http://dbpedia.org/resource/Renault_in_Formula_One"
      }
    ],
    "id": "c015a34029f941aeb5c25cfc4bab4c52",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      },
      {
        "label": "Renault",
        "uri": "http://dbpedia.org/ontology/FormulaOneRacer"
      }
    ]
  },
  {
    "question": "Amongst the winner of Lovelace medal, who has John Robert as doctoral supervisor ?",
    "SerialNumber": "1788",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Lovelace_Medal>  . }",
    "entity mapping": [
      {
        "label": "robert john",
        "uri": "http://dbpedia.org/resource/John_Robert_Woodyard"
      },
      {
        "label": "Lovelace medal",
        "uri": "http://dbpedia.org/resource/Lovelace_Medal"
      }
    ],
    "id": "e179bec4f0ea4b508f69fac03d08356e",
    "predicate mapping": [
      {
        "label": "doctoral supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "Robert",
        "uri": "http://dbpedia.org/property/prizes"
      }
    ]
  },
  {
    "question": "who was the australian flagbearer of 2008 Summer Olympics?",
    "SerialNumber": "1789",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri } ",
    "entity mapping": [
      {
        "label": "2008 Summer Olympics",
        "uri": "http://dbpedia.org/resource/Australia_at_the_2008_Summer_Olympics"
      }
    ],
    "id": "b9b35134084c486ab2f02ecdc549e6bc",
    "predicate mapping": [
      {
        "label": "flagbearer",
        "uri": "http://dbpedia.org/property/flagbearer"
      }
    ]
  },
  {
    "question": "Whose mam is Bertrada of Laon?",
    "SerialNumber": "1790",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Bertrada_of_Laon> } ",
    "entity mapping": [
      {
        "label": "Bertrada of Laon",
        "uri": "http://dbpedia.org/resource/Bertrada_of_Laon"
      }
    ],
    "id": "3230de5fe63a44debe27de6c25e6aedf",
    "predicate mapping": [
      {
        "label": "mam",
        "uri": "http://dbpedia.org/property/mother"
      }
    ]
  },
  {
    "question": "List the leaders of all the cities through which the Ganga river flows ?",
    "SerialNumber": "1791",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "Ganga",
        "uri": "http://dbpedia.org/resource/Ganges"
      }
    ],
    "id": "7652df11d2a14922acffd1e9556bfb09",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "leaders",
        "uri": "http://dbpedia.org/ontology/leaderName"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "What is the common citizenship between JSM Hopoer and Robert Valentine ?",
    "SerialNumber": "1792",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/J._S._M._Hooper> <http://dbpedia.org/ontology/citizenship> ?uri. <http://dbpedia.org/resource/Robert_Valentine_(composer)> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "JSM Hopoer",
        "uri": "http://dbpedia.org/resource/J._S._M._Hooper"
      },
      {
        "label": "Robert Valentine",
        "uri": "http://dbpedia.org/resource/Robert_Valentine_(composer)"
      }
    ],
    "id": "4b41483f7e73472da3d5fafa4cc448d6",
    "predicate mapping": [
      {
        "label": "citizenship",
        "uri": "http://dbpedia.org/ontology/citizenship"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "How many people have worked in the band one of whose current member is Hynief?",
    "SerialNumber": "1797",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Hynief> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Hynief",
        "uri": "http://dbpedia.org/resource/Hynief"
      }
    ],
    "id": "9287889114534eda9daed4e2d79a4680",
    "predicate mapping": [
      {
        "label": "current member",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "member band",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the residence of the bronze medalist of Alpine skiing at the women's downhill competition at the 1972 Winter Olympics?",
    "SerialNumber": "1798",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_–_Women's_downhill> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "olympics downhill women's winter skiing",
        "uri": "http://dbpedia.org/resource/Alpine_skiing_at_the_1972_Winter_Olympics_–_Women's_downhill"
      }
    ],
    "id": "42c827cfc2294a5390f501f2f6447b1a",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist"
      },
      {
        "label": "Olympics",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Does Mt St. Peter Churt follow the architectural style of art deco?",
    "SerialNumber": "1799",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_St._Peter_Church> <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/Art_Deco> }",
    "entity mapping": [
      {
        "label": "peter",
        "uri": "http://dbpedia.org/resource/Mount_St._Peter_Church"
      },
      {
        "label": "art deco",
        "uri": "http://dbpedia.org/resource/Art_Deco"
      }
    ],
    "id": "4a9b50b6f10f4e23bfacaee43d35e802",
    "predicate mapping": [
      {
        "label": "architectural style",
        "uri": "http://dbpedia.org/property/architecture"
      }
    ]
  },
  {
    "question": "King crimson has been recorded in which places?",
    "SerialNumber": "1801",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/King_Crimson> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }",
    "entity mapping": [
      {
        "label": "King crimson",
        "uri": "http://dbpedia.org/resource/King_Crimson"
      }
    ],
    "id": "711db5b7af9245649c23c84820a2671c",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/artist"
      },
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      }
    ]
  },
  {
    "question": "Does Ford own the Ford Kansas Assembly plant?",
    "SerialNumber": "1807",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ford_Motor_Company> }",
    "entity mapping": [
      {
        "label": "assembly kansas plant ford",
        "uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant"
      },
      {
        "label": "Ford",
        "uri": "http://dbpedia.org/resource/Ford_Motor_Company"
      }
    ],
    "id": "7de6776232624ca297b978ded3f8f754",
    "predicate mapping": [
      {
        "label": "Ford own",
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      }
    ]
  },
  {
    "question": "What are the nicknames of the schools whose color is royal blue?",
    "SerialNumber": "1808",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/colour> <http://dbpedia.org/resource/Royal_blue> . ?x <http://dbpedia.org/property/nickname> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "royal blue",
        "uri": "http://dbpedia.org/resource/Royal_blue"
      }
    ],
    "id": "dcb85ef5573c48b38fec1148f6076eae",
    "predicate mapping": [
      {
        "label": "color",
        "uri": "http://dbpedia.org/ontology/colour"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Name the office holder who has a child named lori Black and Harvard Westlake school as one of the educational institute ?",
    "SerialNumber": "1810",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "lori Black",
        "uri": "http://dbpedia.org/resource/Lori_Black"
      },
      {
        "label": "westlake harvard school",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School"
      }
    ],
    "id": "305a5e72abde4540a896cb6f4e731952",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "education",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which ppolitical party of Yashpal Kapur is also the owner of National Herald ?",
    "SerialNumber": "1811",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_National_Herald_(India)> <http://dbpedia.org/ontology/owner> ?uri. <http://dbpedia.org/resource/Yashpal_Kapur> <http://dbpedia.org/ontology/party> ?uri} ",
    "entity mapping": [
      {
        "label": "national herald",
        "uri": "http://dbpedia.org/resource/The_National_Herald_(India)"
      },
      {
        "label": "Yashpal Kapur",
        "uri": "http://dbpedia.org/resource/Yashpal_Kapur"
      }
    ],
    "id": "53399784d528412faa510052199348bf",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "Where is the tombstone of the congressman who died in the McLean hospital?",
    "SerialNumber": "1814",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathPlace> <http://dbpedia.org/resource/McLean_Hospital> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Congressman>}",
    "entity mapping": [
      {
        "label": "McLean hospital",
        "uri": "http://dbpedia.org/resource/McLean_Hospital"
      }
    ],
    "id": "208d4114c72d4eb8aa2dc244a8f1e842",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "tombstone",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "congressman",
        "uri": "http://dbpedia.org/ontology/Congressman"
      }
    ]
  },
  {
    "question": "Where did the athlete start his career, who did his highschool in Red Lion Area School District?",
    "SerialNumber": "1817",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/highschool> <http://dbpedia.org/resource/Red_Lion_Area_School_District> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Red Lion Area School District",
        "uri": "http://dbpedia.org/resource/Red_Lion_Area_School_District"
      }
    ],
    "id": "bdc8518615b54204b29359054a6ad859",
    "predicate mapping": [
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/ontology/highschool"
      },
      {
        "label": "School",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "athlete",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "What faith of Buddhist Tai Hung College is also the acadmeic interest of Paul Demiville ?",
    "SerialNumber": "1821",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Paul_Demiéville> <http://dbpedia.org/property/fields> ?uri. <http://dbpedia.org/resource/Buddhist_Tai_Hung_College> <http://dbpedia.org/property/religion> ?uri} ",
    "entity mapping": [
      {
        "label": "Paul Demiville",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville"
      },
      {
        "label": "Buddhist Tai Hung College",
        "uri": "http://dbpedia.org/resource/Buddhist_Tai_Hung_College"
      }
    ],
    "id": "efe69ad1cb94450398a0a0a408332d63",
    "predicate mapping": [
      {
        "label": "Paul",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Is jim harbaugh currently in the Michigan Wolverines?",
    "SerialNumber": "1825",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jim_Harbaugh> <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> }",
    "entity mapping": [
      {
        "label": "jim harbaugh",
        "uri": "http://dbpedia.org/resource/Jim_Harbaugh"
      },
      {
        "label": "Michigan Wolverines",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines"
      }
    ],
    "id": "8ce6aa741f5047309e078d1c2a08e7a4",
    "predicate mapping": [
      {
        "label": "currently",
        "uri": "http://dbpedia.org/property/currentteam"
      }
    ]
  },
  {
    "question": "How many awards have been received by graduates of University of Melbourne, Faculty of VCA & MCM?",
    "SerialNumber": "1826",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/resource/University_of_Melbourne_Faculty_of_VCA_and_MCM"
      }
    ],
    "id": "82a6252eb38448dba20dc6489bc2b39c",
    "predicate mapping": [
      {
        "label": "MCM",
        "uri": "http://dbpedia.org/ontology/training"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "To which books Thomas Egerton, an editor?",
    "SerialNumber": "1827",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Thomas_Egerton_(publisher)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Thomas Egerton",
        "uri": "http://dbpedia.org/resource/Thomas_Egerton_(publisher)"
      }
    ],
    "id": "58cf5b8a4f4e47bcb79a98fac51edd37",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "List the people with final resting place as Plymouth, Vermont and has Samuel W. McCall as predecessor?",
    "SerialNumber": "1828",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Plymouth,_Vermont> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Samuel_W._McCall>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Plymouth, Vermont",
        "uri": "http://dbpedia.org/resource/Plymouth,_Vermont"
      },
      {
        "label": "Samuel W. McCall",
        "uri": "http://dbpedia.org/resource/Samuel_W._McCall"
      }
    ],
    "id": "bef8f6aac12d4d6283dceb45a5a45f15",
    "predicate mapping": [
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "final",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "In how many places has Garbage recorded their songs?",
    "SerialNumber": "1830",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Garbage_(band)> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }",
    "entity mapping": [
      {
        "label": "Garbage",
        "uri": "http://dbpedia.org/resource/Garbage_(band)"
      }
    ],
    "id": "595c138b55a942dd940bede3ff72b507",
    "predicate mapping": [
      {
        "label": "songs",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      }
    ]
  },
  {
    "question": "Whose songs are Tickle Me and Viva Las Vegas?",
    "SerialNumber": "1833",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tickle_Me> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/Viva_Las_Vegas> <http://dbpedia.org/property/artist> ?uri . }",
    "entity mapping": [
      {
        "label": "Tickle Me",
        "uri": "http://dbpedia.org/resource/Tickle_Me"
      },
      {
        "label": "Viva Las Vegas",
        "uri": "http://dbpedia.org/resource/Viva_Las_Vegas"
      }
    ],
    "id": "264c4445e1374947ab6f8121e12c286c",
    "predicate mapping": [
      {
        "label": "songs",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "songs",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "Among the scientist known for Manhattan Project who had a doctoral student named Charles Ellis ?",
    "SerialNumber": "1834",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Charles_Drummond_Ellis> . ?uri <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Manhattan_Project>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "charles ellis",
        "uri": "http://dbpedia.org/resource/Charles_Drummond_Ellis"
      },
      {
        "label": "Manhattan Project",
        "uri": "http://dbpedia.org/resource/Manhattan_Project"
      }
    ],
    "id": "0da441743df14fafb7bc6b4bcacc81bf",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Which education center Sidney Catlin Partrodge attended which was also the alma mater of Lisa Brummel ?",
    "SerialNumber": "1835",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Lisa_Brummel> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge"
      },
      {
        "label": "Lisa Brummel",
        "uri": "http://dbpedia.org/resource/Lisa_Brummel"
      }
    ],
    "id": "9abe253ae8a348c8b5f3b85f4cf62072",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Which club of perianne Lones is also the home town of the Kady O'Malley ?",
    "SerialNumber": "1836",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kady_O'Malley> <http://dbpedia.org/property/homeTown> ?uri. <http://dbpedia.org/resource/Perianne_Jones> <http://dbpedia.org/property/club> ?uri} ",
    "entity mapping": [
      {
        "label": "Kady O'Malley",
        "uri": "http://dbpedia.org/resource/Kady_O'Malley"
      },
      {
        "label": "perianne",
        "uri": "http://dbpedia.org/resource/Perianne_Jones"
      }
    ],
    "id": "b225170899d7462d96eaf7899775423b",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club"
      }
    ]
  },
  {
    "question": "Which countries share a similar sociocultural and ethnic heritage of that of Native Indonesians?",
    "SerialNumber": "1837",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Native_Indonesians> <http://dbpedia.org/property/region> ?uri } ",
    "entity mapping": [
      {
        "label": "Native Indonesians",
        "uri": "http://dbpedia.org/resource/Native_Indonesians"
      }
    ],
    "id": "176507c0f98f445c85cccae3d80a54b0",
    "predicate mapping": [
      {
        "label": "heritage",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "What are some organizations in Auckland created to do?",
    "SerialNumber": "1840",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Auckland> . ?x <http://dbpedia.org/property/purpose> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Auckland",
        "uri": "http://dbpedia.org/resource/Auckland"
      }
    ],
    "id": "35d4c9e5bb0d403a8949fe9fb0639704",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "label": "organizations",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Where are the agencies headquartered at, which are under the Colorado Dept of Natural Resources?",
    "SerialNumber": "1841",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parentOrganisation> <http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources> . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "entity mapping": [
      {
        "label": "Colorado Dept of Natural Resources",
        "uri": "http://dbpedia.org/resource/Colorado_Department_of_Natural_Resources"
      }
    ],
    "id": "fe21b9172386466fb7fef8d29772878e",
    "predicate mapping": [
      {
        "label": "agencies headquartered",
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      },
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency"
      }
    ]
  },
  {
    "question": "How many different religions have economists followed?",
    "SerialNumber": "1843",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Economist> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "economist",
        "uri": "http://dbpedia.org/resource/Economist"
      }
    ],
    "id": "4bae6679286944e0ab5bae123d3b66f8",
    "predicate mapping": [
      {
        "label": "economists",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "In which city where there is a headquarters of Orient News and also Feras Saied died?",
    "SerialNumber": "1846",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Orient_News> <http://dbpedia.org/property/headquarters> ?uri. <http://dbpedia.org/resource/Feras_Saied> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Orient News",
        "uri": "http://dbpedia.org/resource/Orient_News"
      },
      {
        "label": "Feras Saied",
        "uri": "http://dbpedia.org/resource/Feras_Saied"
      }
    ],
    "id": "2c9ee30345e3457898f20d4bc672ae79",
    "predicate mapping": [
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "In which department does Raymond Baldwin work?",
    "SerialNumber": "1848",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Raymond_E._Baldwin> <http://dbpedia.org/property/branch> ?uri } ",
    "entity mapping": [
      {
        "label": "Raymond Baldwin",
        "uri": "http://dbpedia.org/resource/Raymond_E._Baldwin"
      }
    ],
    "id": "026887c01dd8473f92d6ec1da23af18d",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "What teams did the ex teamplayers of lighthouse boy club start their career with?",
    "SerialNumber": "1849",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Lighthouse_Boys_Club> . ?x <http://dbpedia.org/property/debutteam> ?uri  . }",
    "entity mapping": [
      {
        "label": "lighthouse club",
        "uri": "http://dbpedia.org/resource/Lighthouse_Boys_Club"
      }
    ],
    "id": "b7f41cde28da47ef84c2c318244b7edd",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/youthclubs"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/debutteam"
      }
    ]
  },
  {
    "question": "Which producer of Purvis Eureka engine is also the owner of Ford Theatre ?",
    "SerialNumber": "1853",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Purvis_Eureka> <http://dbpedia.org/property/engine> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ",
    "entity mapping": [
      {
        "label": "Purvis Eureka",
        "uri": "http://dbpedia.org/resource/Purvis_Eureka"
      },
      {
        "label": "Ford Theatre",
        "uri": "http://dbpedia.org/resource/Ford_Theatre"
      }
    ],
    "id": "ce99d86c121449bda242a1944532331a",
    "predicate mapping": [
      {
        "label": "engine",
        "uri": "http://dbpedia.org/property/engine"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/company"
      }
    ]
  },
  {
    "question": "Among the companies who has product named Chinook who has a key person as Dennis Muilenburg ?",
    "SerialNumber": "1855",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg"
      },
      {
        "label": "chinook",
        "uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook"
      }
    ],
    "id": "59a2342df2b04a22832b4b8d099295ea",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who gave guest appearances on the show which is the next episode after the Bombshell one?",
    "SerialNumber": "1857",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Bombshell_(Smash)> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}",
    "entity mapping": [
      {
        "label": "Bombshell",
        "uri": "http://dbpedia.org/resource/Bombshell_(Smash)"
      }
    ],
    "id": "6cd5cdc40f6e4af8a04465a6699c16ea",
    "predicate mapping": [
      {
        "label": "episode",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests"
      },
      {
        "label": "episode one",
        "uri": "http://dbpedia.org/ontology/TelevisionEpisode"
      }
    ]
  },
  {
    "question": "Miluk and Cayuse are still spoken in which part of the world?",
    "SerialNumber": "1858",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miluk_language> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Cayuse_language> <http://dbpedia.org/property/region> ?uri . }",
    "entity mapping": [
      {
        "label": "miluk",
        "uri": "http://dbpedia.org/resource/Miluk_language"
      },
      {
        "label": "cayuse",
        "uri": "http://dbpedia.org/resource/Cayuse_language"
      }
    ],
    "id": "bbc69cd1992d42deba2ecb4e218a9349",
    "predicate mapping": [
      {
        "label": "world",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "world",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "With whom is the institution of David Charles affiliated?",
    "SerialNumber": "1860",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/David_Charles_(physician)> <http://dbpedia.org/property/workInstitutions> ?x . ?x <http://dbpedia.org/property/affiliation> ?uri  . }",
    "entity mapping": [
      {
        "label": "David Charles",
        "uri": "http://dbpedia.org/resource/David_Charles_(physician)"
      }
    ],
    "id": "0394d1d9bb67406ebe89217042530952",
    "predicate mapping": [
      {
        "label": "institution",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation"
      }
    ]
  },
  {
    "question": "Which battle did both Steven Palazao and tony hogg fight in?",
    "SerialNumber": "1861",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steven_Palazzo> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Tony_Hogg> <http://dbpedia.org/property/battles> ?uri . }",
    "entity mapping": [
      {
        "label": "steven",
        "uri": "http://dbpedia.org/resource/Steven_Palazzo"
      },
      {
        "label": "tony hogg",
        "uri": "http://dbpedia.org/resource/Tony_Hogg"
      }
    ],
    "id": "ce165bf79de24f10844b39944b1c118c",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Who was the coach of marquette Golden Eagles men's basketball team-2012,13 season ?",
    "SerialNumber": "1866",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2012–13_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri } ",
    "entity mapping": [
      {
        "label": "basketball marquette golden eagles men's",
        "uri": "http://dbpedia.org/resource/2012–13_Marquette_Golden_Eagles_men's_basketball_team"
      }
    ],
    "id": "2462f71d97294217948911559d7808a7",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      }
    ]
  },
  {
    "question": "What made Jon Speelman and Eric Schiller famous?",
    "SerialNumber": "1868",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri. <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri} ",
    "entity mapping": [
      {
        "label": "Jon Speelman",
        "uri": "http://dbpedia.org/resource/Jon_Speelman"
      },
      {
        "label": "Eric Schiller",
        "uri": "http://dbpedia.org/resource/Eric_Schiller"
      }
    ],
    "id": "cad47dbadca34d12a26f9f492cee5f29",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/field"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "In which wars army men awarded with the Croix de Guerre, fought?",
    "SerialNumber": "1869",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/awards> <http://dbpedia.org/resource/Croix_de_guerre_1939–1945_(France)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "Croix de Guerre",
        "uri": "http://dbpedia.org/resource/Croix_de_guerre_1939–1945_(France)"
      }
    ],
    "id": "7b7764c0196d461999cc23dd0df6c84e",
    "predicate mapping": [
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "Which manufacturer of the Boeing B-17 Flying fortress is the manager of burro Flats Painted Caves ?",
    "SerialNumber": "1870",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Burro_Flats_Painted_Cave> <http://dbpedia.org/ontology/governingBody> ?uri. <http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "entity mapping": [
      {
        "label": "burro Flats Painted Cave",
        "uri": "http://dbpedia.org/resource/Burro_Flats_Painted_Cave"
      },
      {
        "label": "Boeing B-17 Flying fortress",
        "uri": "http://dbpedia.org/resource/Boeing_B-17_Flying_Fortress"
      }
    ],
    "id": "4d44f78d46374b24819e6cdf6753aad7",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/governingBody"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "How many people currently play for Stoke City F.C.?",
    "SerialNumber": "1872",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Stoke_City_F.C.>  . }",
    "entity mapping": [
      {
        "label": "Stoke City F.C.",
        "uri": "http://dbpedia.org/resource/Stoke_City_F.C."
      }
    ],
    "id": "e6e655798ed9475796f9df8aa87c9a4e",
    "predicate mapping": [
      {
        "label": "currently",
        "uri": "http://dbpedia.org/property/currentclub"
      }
    ]
  },
  {
    "question": "In how many different places can I find companies which were founded in toronto?",
    "SerialNumber": "1873",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Toronto> . ?x <http://dbpedia.org/property/locations> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      }
    ],
    "id": "ec75426ef9034e49baa03c7c16d57f2a",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/locations"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "How many organizations own the website to which Jimmy Wales contributes?",
    "SerialNumber": "1874",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jimmy_Wales> . ?x <http://dbpedia.org/ontology/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Jimmy Wales",
        "uri": "http://dbpedia.org/resource/Jimmy_Wales"
      }
    ],
    "id": "55b86a8a22e4483d935168408545caa7",
    "predicate mapping": [
      {
        "label": "contributes",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "own",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "organizations",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Through how many cities does the river flowing into Arkansas go?",
    "SerialNumber": "1876",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Arkansas> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "Arkansas",
        "uri": "http://dbpedia.org/resource/Arkansas"
      }
    ],
    "id": "5c2111f2815f4809b9548ab2c0c677d3",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "Which fictional character's relatives were made by Ted Osborne?",
    "SerialNumber": "1877",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Ted_Osborne> . ?uri <http://dbpedia.org/property/relatives> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Ted Osborne",
        "uri": "http://dbpedia.org/resource/Ted_Osborne"
      }
    ],
    "id": "74671972de564fbe97ece8a85fd86fcd",
    "predicate mapping": [
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Which designer of RENFE also owns Renaissance Center ?",
    "SerialNumber": "1880",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/RENFE_Class_333> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Renaissance_Center> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "renfe",
        "uri": "http://dbpedia.org/resource/RENFE_Class_333"
      },
      {
        "label": "Renaissance Center",
        "uri": "http://dbpedia.org/resource/Renaissance_Center"
      }
    ],
    "id": "9b8b445ddfbb463187269990961ac846",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "What shows are on the networks which are from the United States?",
    "SerialNumber": "1882",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/locationCountry> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "United States",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "99a06bb6d4f3448da8d9b37aec6a17fe",
    "predicate mapping": [
      {
        "label": "from",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who have rented the stadium operated by Maple Leaf S&E?",
    "SerialNumber": "1883",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Maple_Leaf_Sports_&_Entertainment> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "maple",
        "uri": "http://dbpedia.org/resource/Maple_Leaf_Sports_&_Entertainment"
      }
    ],
    "id": "2bce3f2fcdbd463ebbcd84e5b65eb439",
    "predicate mapping": [
      {
        "label": "S&E",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "S&E",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Where is Snake Island located ?",
    "SerialNumber": "1885",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Snake_Island_(Black_Sea)> <http://dbpedia.org/property/locationCountry> ?uri } ",
    "entity mapping": [
      {
        "label": "Snake Island",
        "uri": "http://dbpedia.org/resource/Snake_Island_(Black_Sea)"
      }
    ],
    "id": "586e586025864050b16699cda92980a7",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCountry"
      }
    ]
  },
  {
    "question": "What are the relatives of the parliament member whose successor is Peter Thorneycroft?",
    "SerialNumber": "1890",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Peter_Thorneycroft> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "entity mapping": [
      {
        "label": "Peter Thorneycroft",
        "uri": "http://dbpedia.org/resource/Peter_Thorneycroft"
      }
    ],
    "id": "3ece33a3b26c44ba89d83c5af7910d5a",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "parliament member",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament"
      }
    ]
  },
  {
    "question": "Which american football player's current team is Michigan Wolverines and former team was  Baltimore Ravens ?",
    "SerialNumber": "1893",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentteam> <http://dbpedia.org/resource/Michigan_Wolverines> . ?uri <http://dbpedia.org/ontology/formerTeam> <http://dbpedia.org/resource/1998_Baltimore_Ravens_season>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Michigan Wolverines",
        "uri": "http://dbpedia.org/resource/Michigan_Wolverines"
      },
      {
        "label": "baltimore ravens",
        "uri": "http://dbpedia.org/resource/1998_Baltimore_Ravens_season"
      }
    ],
    "id": "b82d8ce46e1a4a6ba75108b376994f10",
    "predicate mapping": [
      {
        "label": "current team",
        "uri": "http://dbpedia.org/property/currentteam"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "What famous work is derived from the one whose lyrics are written by Inma Gonzales?",
    "SerialNumber": "1894",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/lyrics> <http://dbpedia.org/resource/Inma_González> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Inma_González"
      }
    ],
    "id": "6afc2e0ce3f244ce93a5bed1fab03623",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/ontology/lyrics"
      },
      {
        "label": "derived from",
        "uri": "http://dbpedia.org/ontology/basedOn"
      }
    ]
  },
  {
    "question": "What are the veneration of the one for which there's a major shrine in Hebron?",
    "SerialNumber": "1898",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/Hebron> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . }",
    "entity mapping": [
      {
        "label": "Hebron",
        "uri": "http://dbpedia.org/resource/Hebron"
      }
    ],
    "id": "18eeaa768fa343b285501be229538892",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine"
      },
      {
        "label": "there's",
        "uri": "http://dbpedia.org/property/veneratedIn"
      }
    ]
  },
  {
    "question": "How many politicians are in the militia?",
    "SerialNumber": "1901",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Militia>  . }",
    "entity mapping": [
      {
        "label": "militia",
        "uri": "http://dbpedia.org/resource/Militia"
      }
    ],
    "id": "b3de1886f6a34847a46f036db7e7f0f2",
    "predicate mapping": [
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "What is the source country of Water resources managemnt in EL Salvador is also the land of Jos MAra Orellana ?",
    "SerialNumber": "1903",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Water_resources_management_in_El_Salvador> <http://dbpedia.org/property/sourceCountry> ?uri. <http://dbpedia.org/resource/José_María_Orellana> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "resources",
        "uri": "http://dbpedia.org/resource/Water_resources_management_in_El_Salvador"
      },
      {
        "label": "orellana",
        "uri": "http://dbpedia.org/resource/José_María_Orellana"
      }
    ],
    "id": "a38439a78e5c4e43954ba3096b10f6c6",
    "predicate mapping": [
      {
        "label": "source country",
        "uri": "http://dbpedia.org/property/sourceCountry"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Some movies whose screenplay is done by american born people?",
    "SerialNumber": "1906",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . }",
    "entity mapping": [
      {
        "label": "american",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "b9b27ecb9a874649a57739e1ec0b5ab4",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      }
    ]
  },
  {
    "question": "Which colonel consort is Dolley Madison?",
    "SerialNumber": "1908",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Dolley_Madison>  . }",
    "entity mapping": [
      {
        "label": "colonel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)"
      },
      {
        "label": "Dolley Madison",
        "uri": "http://dbpedia.org/resource/Dolley_Madison"
      }
    ],
    "id": "c45b083d0f4e4d43b3c84cbb54b3e598",
    "predicate mapping": [
      {
        "label": "colonel consort",
        "uri": "http://dbpedia.org/property/rank"
      },
      {
        "label": "consort",
        "uri": "http://dbpedia.org/property/spouse"
      }
    ]
  },
  {
    "question": "Which company ownes stock in Dagenham turbines and Ford Motor credit?",
    "SerialNumber": "1910",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Motor_Credit_Company> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri . }",
    "entity mapping": [
      {
        "label": "Ford Motor credit",
        "uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company"
      },
      {
        "label": "turbines dagenham",
        "uri": "http://dbpedia.org/resource/Dagenham_wind_turbines"
      }
    ],
    "id": "1d50c91b6a7745c6818f2e8464d35108",
    "predicate mapping": [
      {
        "label": "ownes",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "ownes",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Was Michael Schumacher a pole driver in the 1999 GP?",
    "SerialNumber": "1915",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1999_Japanese_Grand_Prix> <http://dbpedia.org/property/poleDriver> <http://dbpedia.org/resource/Michael_Schumacher> }",
    "entity mapping": [
      {
        "label": "1999",
        "uri": "http://dbpedia.org/resource/1999_Japanese_Grand_Prix"
      },
      {
        "label": "Michael Schumacher",
        "uri": "http://dbpedia.org/resource/Michael_Schumacher"
      }
    ],
    "id": "9167d5c750d0472389d1ae6346e74154",
    "predicate mapping": [
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/property/poleDriver"
      }
    ]
  },
  {
    "question": "How many universities participate in the NCAA Division I Football Bowl Subdivision?",
    "SerialNumber": "1916",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "NCAA Division I Football Bowl Subdivision",
        "uri": "http://dbpedia.org/resource/NCAA_Division_I_Football_Bowl_Subdivision"
      }
    ],
    "id": "125b4ddfca3f45c987a4f7d3791fd239",
    "predicate mapping": [
      {
        "label": "participate",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Which writer of the Snaman is also the writer of Neverwher ?",
    "SerialNumber": "1920",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Sandman_(Vertigo)> <http://dbpedia.org/property/writers> ?uri. <http://dbpedia.org/resource/Neverwhere_(radio_play)> <http://dbpedia.org/ontology/writer> ?uri} ",
    "entity mapping": [
      {
        "label": "the Snaman",
        "uri": "http://dbpedia.org/resource/The_Sandman_(Vertigo)"
      },
      {
        "label": "neverwher",
        "uri": "http://dbpedia.org/resource/Neverwhere_(radio_play)"
      }
    ],
    "id": "8eea4bb7e4f9442a8153aa8ae835ffeb",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writers"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/writer"
      }
    ]
  },
  {
    "question": "How many people have managed a club which owns the Riverside Stadium?",
    "SerialNumber": "1922",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/ground> <http://dbpedia.org/resource/Riverside_Stadium> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Riverside Stadium",
        "uri": "http://dbpedia.org/resource/Riverside_Stadium"
      }
    ],
    "id": "bf8962801bda4524830a4a9e93f343ae",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/ground"
      },
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/managerClub"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What Orson Welles directed movie has  photography director as Gregg Toland ?",
    "SerialNumber": "1930",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Orson_Welles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Gregg Toland",
        "uri": "http://dbpedia.org/resource/Gregg_Toland"
      },
      {
        "label": "Orson Welles",
        "uri": "http://dbpedia.org/resource/Orson_Welles"
      }
    ],
    "id": "bf9af6758f024671b29e7786a3bd5039",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "List the driver of SA MArino Grand Prix is also the Pole driver of Canadian Grand Proix ?",
    "SerialNumber": "1932",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1999_San_Marino_Grand_Prix> <http://dbpedia.org/property/firstDriver> ?uri. <http://dbpedia.org/resource/1997_Canadian_Grand_Prix> <http://dbpedia.org/property/poleDriver> ?uri} ",
    "entity mapping": [
      {
        "label": "marino",
        "uri": "http://dbpedia.org/resource/1999_San_Marino_Grand_Prix"
      },
      {
        "label": "canadian grand prix",
        "uri": "http://dbpedia.org/resource/1997_Canadian_Grand_Prix"
      }
    ],
    "id": "7eb44afae7a540749ea01a4484cc116c",
    "predicate mapping": [
      {
        "label": "driver",
        "uri": "http://dbpedia.org/property/firstDriver"
      },
      {
        "label": "Pole driver",
        "uri": "http://dbpedia.org/property/poleDriver"
      }
    ]
  },
  {
    "question": "How many awards have screenwriters won?",
    "SerialNumber": "1933",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "screenwriter",
        "uri": "http://dbpedia.org/resource/Screenwriter"
      }
    ],
    "id": "ccfb1eb8fbba41d2931dfb71598a8784",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What is the local authority of the Buckhurst Hill County High School is also the birth palce of Sarah hampion ?",
    "SerialNumber": "1934",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Sarah_Champion_(presenter)> <http://dbpedia.org/property/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Buckhurst Hill County High School",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School"
      },
      {
        "label": "hampion sarah",
        "uri": "http://dbpedia.org/resource/Sarah_Champion_(presenter)"
      }
    ],
    "id": "c7974233b0ce42da82267d5081901e7d",
    "predicate mapping": [
      {
        "label": "local authority",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "List the countries through which European rout E39 and E8 passes ?",
    "SerialNumber": "1936",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_route_E39> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/European_route_E8> <http://dbpedia.org/ontology/county> ?uri . }",
    "entity mapping": [
      {
        "label": "european rout",
        "uri": "http://dbpedia.org/resource/European_route_E39"
      },
      {
        "label": "european rout",
        "uri": "http://dbpedia.org/resource/European_route_E8"
      }
    ],
    "id": "82515aca204c44bb8a57aef8e97e9753",
    "predicate mapping": [
      {
        "label": "passes",
        "uri": "http://dbpedia.org/ontology/county"
      },
      {
        "label": "passes",
        "uri": "http://dbpedia.org/ontology/county"
      }
    ]
  },
  {
    "question": "What are some orthonychidae birds?",
    "SerialNumber": "1945",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Orthonychidae>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bird>}",
    "entity mapping": [
      {
        "label": "orthonychidae",
        "uri": "http://dbpedia.org/resource/Orthonychidae"
      }
    ],
    "id": "f8980026033540a6b7278aa9d07efa35",
    "predicate mapping": [
      {
        "label": "orthonychidae birds",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "bird",
        "uri": "http://dbpedia.org/ontology/Bird"
      }
    ]
  },
  {
    "question": "List the music played in television episode which came after The Colonel (The Americans) ?",
    "SerialNumber": "1946",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Colonel_(The_Americans)> <http://dbpedia.org/ontology/subsequentWork> ?x . ?x <http://dbpedia.org/property/music> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Colonel (The Americans)",
        "uri": "http://dbpedia.org/resource/The_Colonel_(The_Americans)"
      }
    ],
    "id": "13aa00a577f340fcbdb046e59b4c6be3",
    "predicate mapping": [
      {
        "label": "Colonel",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      }
    ]
  },
  {
    "question": "where did Alfred Tarnowski die?",
    "SerialNumber": "1951",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alfred_Tarnowski> <http://dbpedia.org/property/placeOfDeath> ?uri } ",
    "entity mapping": [
      {
        "label": "Alfred Tarnowski",
        "uri": "http://dbpedia.org/resource/Alfred_Tarnowski"
      }
    ],
    "id": "16e81494f124480cb7ff4c58f496996a",
    "predicate mapping": [
      {
        "label": "where",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Was the Incredibles released before Finding Nemo?",
    "SerialNumber": "1953",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Incredibles_(film_score)> <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Finding_Nemo> }",
    "entity mapping": [
      {
        "label": "the Incredibles",
        "uri": "http://dbpedia.org/resource/The_Incredibles_(film_score)"
      },
      {
        "label": "Finding Nemo",
        "uri": "http://dbpedia.org/resource/Finding_Nemo"
      }
    ],
    "id": "f6acd592b57c4dac95edb3c787a5980e",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/ontology/previousWork"
      }
    ]
  },
  {
    "question": "Which river originates from Cape Vincent and Kingston, Ontario?",
    "SerialNumber": "1955",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Cape_Vincent,_New_York> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Kingston,_Ontario> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Cape Vincent",
        "uri": "http://dbpedia.org/resource/Cape_Vincent,_New_York"
      },
      {
        "label": "Kingston, Ontario",
        "uri": "http://dbpedia.org/resource/Kingston,_Ontario"
      }
    ],
    "id": "94b09d893f4549c8aa8340eebf9f2e4f",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "originates",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many thesis were supervised by Ernest Rutherford?",
    "SerialNumber": "1958",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford"
      }
    ],
    "id": "8de783323c0a490694c0e920f0ad07b8",
    "predicate mapping": [
      {
        "label": "supervised",
        "uri": "http://dbpedia.org/ontology/doctoralAdvisor"
      }
    ]
  },
  {
    "question": "How many people currently play for the NYC FC?",
    "SerialNumber": "1962",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC>  . }",
    "entity mapping": [
      {
        "label": "NYC FC",
        "uri": "http://dbpedia.org/resource/New_York_City_FC"
      }
    ],
    "id": "54e227ff2d2e417f99bcbc650ff5d8a7",
    "predicate mapping": [
      {
        "label": "currently",
        "uri": "http://dbpedia.org/property/currentclub"
      }
    ]
  },
  {
    "question": "Is Gutenberg neighbouring with Madiswil?",
    "SerialNumber": "1964",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Madiswil> <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Gutenburg,_Switzerland> }",
    "entity mapping": [
      {
        "label": "Madiswil",
        "uri": "http://dbpedia.org/resource/Madiswil"
      },
      {
        "label": "Gutenberg",
        "uri": "http://dbpedia.org/resource/Gutenburg,_Switzerland"
      }
    ],
    "id": "6182dae45a7a40889fd0d2797e4209ff",
    "predicate mapping": [
      {
        "label": "Gutenberg",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      }
    ]
  },
  {
    "question": "Over what do Concor holdings have a bridge?",
    "SerialNumber": "1967",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/Concor_Holdings> . ?x <http://dbpedia.org/property/crosses> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Concor holdings",
        "uri": "http://dbpedia.org/resource/Concor_Holdings"
      }
    ],
    "id": "079e2720dce04b76bb7bc051f96ba21b",
    "predicate mapping": [
      {
        "label": "Concor holdings",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "Over",
        "uri": "http://dbpedia.org/property/crosses"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Daniel L D Granger and Job Durfee have based their political career in which US state?",
    "SerialNumber": "1970",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Daniel_L._D._Granger> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Job_Durfee> <http://dbpedia.org/property/state> ?uri . }",
    "entity mapping": [
      {
        "label": "granger daniel",
        "uri": "http://dbpedia.org/resource/Daniel_L._D._Granger"
      },
      {
        "label": "Job Durfee",
        "uri": "http://dbpedia.org/resource/Job_Durfee"
      }
    ],
    "id": "e35b89affcbc4e069a971dce50f9fd26",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "How many different mascots are there of the NCAA teams?",
    "SerialNumber": "1974",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/National_Collegiate_Athletic_Association> . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "entity mapping": [
      {
        "label": "NCAA",
        "uri": "http://dbpedia.org/resource/National_Collegiate_Athletic_Association"
      }
    ],
    "id": "21aefb3be51e45ccb573c41d235eb2c4",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Where do the stockholders of Pathaninaikos F.C. live?",
    "SerialNumber": "1975",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Panathinaikos_F.C.> <http://dbpedia.org/ontology/owner> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }",
    "entity mapping": [
      {
        "label": "Pathaninaikos F.C.",
        "uri": "http://dbpedia.org/resource/Panathinaikos_F.C."
      }
    ],
    "id": "a325797e93f24edab0569ec125f0d080",
    "predicate mapping": [
      {
        "label": "stockholders",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "What is the common ideology followed by Katyayana and Palang Dharma Party ?",
    "SerialNumber": "1977",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri} ",
    "entity mapping": [
      {
        "label": "Katyayana",
        "uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)"
      },
      {
        "label": "Palang Dharma Party",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party"
      }
    ],
    "id": "2ba1fd420a3144f68cb807b475c66dd5",
    "predicate mapping": [
      {
        "label": "common",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "ideology",
        "uri": "http://dbpedia.org/ontology/ideology"
      }
    ]
  },
  {
    "question": "Where can I find some buildings of modern architecture?",
    "SerialNumber": "1980",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architecturalStyle> <http://dbpedia.org/resource/Modern_architecture> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "modern architecture",
        "uri": "http://dbpedia.org/resource/Modern_architecture"
      }
    ],
    "id": "58c006275fb04301a88992b18018e5f8",
    "predicate mapping": [
      {
        "label": "architecture",
        "uri": "http://dbpedia.org/property/architecturalStyle"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/address"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Name the team Ramiro Pea played for, which was also the first team of Steve Ontiveros?",
    "SerialNumber": "1981",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Steve_Ontiveros_(infielder)> <http://dbpedia.org/property/debutteam> ?uri. <http://dbpedia.org/resource/Ramiro_Peña> <http://dbpedia.org/ontology/team> ?uri} ",
    "entity mapping": [
      {
        "label": "Steve Ontiveros",
        "uri": "http://dbpedia.org/resource/Steve_Ontiveros_(infielder)"
      },
      {
        "label": "ramiro",
        "uri": "http://dbpedia.org/resource/Ramiro_Peña"
      }
    ],
    "id": "1b6199ceb90d4d089a7a2933476ec371",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "List the companies operating in Australia?",
    "SerialNumber": "1985",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/regionServed> <http://dbpedia.org/resource/Australia> } ",
    "entity mapping": [
      {
        "label": "Australia",
        "uri": "http://dbpedia.org/resource/Australia"
      }
    ],
    "id": "4973207551934a3bbfe9a31d282f7aa1",
    "predicate mapping": [
      {
        "label": "operating",
        "uri": "http://dbpedia.org/ontology/regionServed"
      }
    ]
  },
  {
    "question": "What all are in the states whose anthem is Ja, vi esker dette landet?",
    "SerialNumber": "1986",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/anthem> <http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet> . ?uri <http://dbpedia.org/ontology/country> ?x  . }",
    "entity mapping": [
      {
        "label": "landet",
        "uri": "http://dbpedia.org/resource/Ja,_vi_elsker_dette_landet"
      }
    ],
    "id": "6e3344185dfb4c5dbeed1d2254ad79fb",
    "predicate mapping": [
      {
        "label": "anthem",
        "uri": "http://dbpedia.org/ontology/anthem"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Which country are the players of the Atletico Petroleos de Luanda from?",
    "SerialNumber": "1988",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/club> <http://dbpedia.org/resource/Atlético_Petróleos_de_Luanda_(handball)> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Atletico Petroleos de Luanda",
        "uri": "http://dbpedia.org/resource/Atlético_Petróleos_de_Luanda_(handball)"
      }
    ],
    "id": "4b373e478fb544ff89ce330c0d13a38d",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/club"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Who owns the ford kansas assembly plant?",
    "SerialNumber": "1989",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri } ",
    "entity mapping": [
      {
        "label": "assembly kansas plant ford",
        "uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant"
      }
    ],
    "id": "7fe19c7b8b7e4a719c02a2308891d646",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      }
    ]
  },
  {
    "question": "Which saints were the messengers of Islam?",
    "SerialNumber": "1990",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/veneratedIn> <http://dbpedia.org/resource/Islam>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Saint>}",
    "entity mapping": [
      {
        "label": "Islam",
        "uri": "http://dbpedia.org/resource/Islam"
      }
    ],
    "id": "d225159e360c4ab99b91e8064247d40a",
    "predicate mapping": [
      {
        "label": "messengers",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      },
      {
        "label": "saint",
        "uri": "http://dbpedia.org/ontology/Saint"
      }
    ]
  },
  {
    "question": "What do the relatives of James Hartness do?",
    "SerialNumber": "1992",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/James_Hartness> . ?x <http://dbpedia.org/property/occupation> ?uri  . }",
    "entity mapping": [
      {
        "label": "James Hartness",
        "uri": "http://dbpedia.org/resource/James_Hartness"
      }
    ],
    "id": "02d9f9ed093c4c9bac55160e89a71635",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/occupation"
      }
    ]
  },
  {
    "question": "Where was the predecessor of Sevan Ross born?",
    "SerialNumber": "1995",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Sevan_Ross> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sevan Ross",
        "uri": "http://dbpedia.org/resource/Sevan_Ross"
      }
    ],
    "id": "113256a516bc4fd6b1b550678ccd7750",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Which company produced the car which was a new version of Daewoo's Tico?",
    "SerialNumber": "1996",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Daewoo_Tico> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Daewoo's Tico",
        "uri": "http://dbpedia.org/resource/Daewoo_Tico"
      }
    ],
    "id": "359b7ca38c6d488cb3ebdbb52b991c87",
    "predicate mapping": [
      {
        "label": "Tico",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/parentCompany"
      },
      {
        "label": "Tico",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Who built the stadiums where 2014 FIFA under 17 woman's world cup took place?",
    "SerialNumber": "1997",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }",
    "entity mapping": [
      {
        "label": "woman's world cup",
        "uri": "http://dbpedia.org/resource/2014_FIFA_U-17_Women's_World_Cup"
      }
    ],
    "id": "68cc4d86a23e4564a5b88efbd61a347b",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/builder"
      }
    ]
  },
  {
    "question": "Name the source of Raa ?",
    "SerialNumber": "1998",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Raša_(river)> <http://dbpedia.org/ontology/source> ?uri } ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Raša_(river)"
      }
    ],
    "id": "1230514af3324678b0f4930db7543258",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      }
    ]
  },
  {
    "question": "In which countries does the sea lie on whose shore is the city of Cumana?",
    "SerialNumber": "1999",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Cumaná> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Cumana",
        "uri": "http://dbpedia.org/resource/Cumaná"
      }
    ],
    "id": "4e66595b1889429ea3cc642a64440f99",
    "predicate mapping": [
      {
        "label": "shore",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "For which teams did the Hawai graduated players play their first game?",
    "SerialNumber": "2002",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/college> <http://dbpedia.org/resource/Hawaii> . ?x <http://dbpedia.org/ontology/debutTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Hawai ",
        "uri": "http://dbpedia.org/resource/Hawaii"
      }
    ],
    "id": "e4f65c146f2447c0b3c8147f59a837e1",
    "predicate mapping": [
      {
        "label": "game",
        "uri": "http://dbpedia.org/property/college"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "game",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Movie's produced by Michael Deeley has Jordan Cronenweth as director of photography",
    "SerialNumber": "2004",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Michael_Deeley> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Michael Deeley",
        "uri": "http://dbpedia.org/resource/Michael_Deeley"
      },
      {
        "label": "Jordan Cronenweth",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth"
      }
    ],
    "id": "4b43dbb1aa6943abab5354ce97147e72",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography"
      },
      {
        "label": "Movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who has written works found in the Gangan comics?",
    "SerialNumber": "2007",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Gangan_Comics> . ?x <http://dbpedia.org/property/author> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gangan comics",
        "uri": "http://dbpedia.org/resource/Gangan_Comics"
      }
    ],
    "id": "a45050c81a4d44f28d5f4050ae9db959",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/magazine"
      },
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "Who has given guest appearances on the TV Episodes whose was music done by Mama Makes 3?",
    "SerialNumber": "2009",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Mama_Makes_Three> . ?x <http://dbpedia.org/property/guests> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}",
    "entity mapping": [
      {
        "label": "makes mama",
        "uri": "http://dbpedia.org/resource/Mama_Makes_Three"
      }
    ],
    "id": "0c03e9d597b44f8bbef68457b98bb7c1",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "guest",
        "uri": "http://dbpedia.org/property/guests"
      },
      {
        "label": "episodes",
        "uri": "http://dbpedia.org/ontology/TelevisionEpisode"
      }
    ]
  },
  {
    "question": "In which countries have the Start + Flug aircrafts originated?",
    "SerialNumber": "2012",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Start_+_Flug> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}",
    "entity mapping": [
      {
        "label": "Start + Flug",
        "uri": "http://dbpedia.org/resource/Start_+_Flug"
      }
    ],
    "id": "9f314843488844988113ecbbe314006d",
    "predicate mapping": [
      {
        "label": "originated",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "originated",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      },
      {
        "label": "aircraft",
        "uri": "http://dbpedia.org/ontology/Aircraft"
      }
    ]
  },
  {
    "question": "return some  players who have played in the NBA?",
    "SerialNumber": "2013",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Basketball_Association> } ",
    "entity mapping": [
      {
        "label": "NBA",
        "uri": "http://dbpedia.org/resource/National_Basketball_Association"
      }
    ],
    "id": "1979785c219b4798a0610b3ffc06873b",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/league"
      }
    ]
  },
  {
    "question": "What is the resting place of the politician who succeeded Samuel Hayes?",
    "SerialNumber": "2017",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Samuel_Hayes_(settler)> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Samuel Hayes",
        "uri": "http://dbpedia.org/resource/Samuel_Hayes_(settler)"
      }
    ],
    "id": "fa9fedea238d4402b21a174c49cb2e2b",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "Where did the wrestler trained by Ring of Honour get billed?",
    "SerialNumber": "2023",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Ring_of_Honor> . ?x <http://dbpedia.org/property/billed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Ring of Honou",
        "uri": "http://dbpedia.org/resource/Ring_of_Honor"
      }
    ],
    "id": "ac781ca0b046427fb17b9f7d786504b9",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/property/trainer"
      },
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed"
      },
      {
        "label": "wrestler",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "What is the television show whose cast members are Jeff Conaway and Jason Carter?",
    "SerialNumber": "2024",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Jeff Conaway",
        "uri": "http://dbpedia.org/resource/Jeff_Conaway"
      },
      {
        "label": "Jason Carter",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)"
      }
    ],
    "id": "34f7503c1f79416eaf15faa883428f9d",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who founded the city where Pat Vincent die?",
    "SerialNumber": "2025",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Pat_Vincent> <http://dbpedia.org/ontology/deathPlace> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . }",
    "entity mapping": [
      {
        "label": "Pat Vincent",
        "uri": "http://dbpedia.org/resource/Pat_Vincent"
      }
    ],
    "id": "7eab338cb255401796c57269d23ae776",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/founder"
      }
    ]
  },
  {
    "question": "The successor of Ellsworth Bunker belongs to which religion?",
    "SerialNumber": "2026",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ellsworth_Bunker> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ellsworth Bunker",
        "uri": "http://dbpedia.org/resource/Ellsworth_Bunker"
      }
    ],
    "id": "beb30f1a6feb4cb2a855e669bf3f7555",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "In which wars were people from the Saudi Arabian ministry of defense involved?",
    "SerialNumber": "2029",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/office> <http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Saudi Arabian",
        "uri": "http://dbpedia.org/resource/Minister_of_Defense_(Saudi_Arabia)"
      }
    ],
    "id": "778e7cfd62804443a18d4c3eb9a42131",
    "predicate mapping": [
      {
        "label": "of",
        "uri": "http://dbpedia.org/property/office"
      },
      {
        "label": "involved",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "involved",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many factions were involved in the battles fought by Arthur St. Clair?",
    "SerialNumber": "2034",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Arthur_St._Clair> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "entity mapping": [
      {
        "label": "Arthur St. Clair",
        "uri": "http://dbpedia.org/resource/Arthur_St._Clair"
      }
    ],
    "id": "d73ddbee285644de8877440e530c8c3a",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant"
      }
    ]
  },
  {
    "question": "What are the artists that have been in the band Framptons camel?",
    "SerialNumber": "2038",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Frampton's_Camel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "Framptons",
        "uri": "http://dbpedia.org/resource/Frampton's_Camel"
      }
    ],
    "id": "ace6d15c16bc4a83b76485ccda9762e6",
    "predicate mapping": [
      {
        "label": "camel",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Who is the headcoach of 2013-14 Marquette Golden Eagles men's basketball team ?",
    "SerialNumber": "2041",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ",
    "entity mapping": [
      {
        "label": "basketball marquette golden eagles",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men's_basketball_team"
      }
    ],
    "id": "f08fb8d368d348e482a1d9c778dd17d5",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach"
      }
    ]
  },
  {
    "question": "In which military conflict were Phm Vn ng and John McEwen commanders ?",
    "SerialNumber": "2043",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Phạm_Văn_Đồng> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Phm Vn",
        "uri": "http://dbpedia.org/resource/Phạm_Văn_Đồng"
      },
      {
        "label": "John McEwen",
        "uri": "http://dbpedia.org/resource/John_McEwen"
      }
    ],
    "id": "86ca35205b364789addf51963601e201",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "military conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Does Air 2000 fly to the north american continent?",
    "SerialNumber": "2044",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/ontology/destination> <http://dbpedia.org/resource/North_America> }",
    "entity mapping": [
      {
        "label": "Air 2000",
        "uri": "http://dbpedia.org/resource/Air_2000"
      },
      {
        "label": "north american continent",
        "uri": "http://dbpedia.org/resource/North_America"
      }
    ],
    "id": "7ab5eba0fa5e4d2db3867b842e966443",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/destination"
      }
    ]
  },
  {
    "question": "What is the predecessor of the car engine which was succeeded by  BMW M43 ?",
    "SerialNumber": "2046",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/BMW_M43> . ?x <http://dbpedia.org/property/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}",
    "entity mapping": [
      {
        "label": "BMW M43",
        "uri": "http://dbpedia.org/resource/BMW_M43"
      }
    ],
    "id": "298ec5bdf98b4eaead3626a3d1fd8456",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "engine",
        "uri": "http://dbpedia.org/ontology/Engine"
      }
    ]
  },
  {
    "question": "How many players debuted their careers from San Francisco 49ers?",
    "SerialNumber": "2047",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/San_Francisco_49ers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "San Francisco 49ers",
        "uri": "http://dbpedia.org/resource/San_Francisco_49ers"
      }
    ],
    "id": "5809473753f34eeab40d9ef6574a79a6",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "careers",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Did Bob Dylan write the lyrics of the times they are a changin'?",
    "SerialNumber": "2050",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)> <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Bob_Dylan> }",
    "entity mapping": [
      {
        "label": "changin' times they",
        "uri": "http://dbpedia.org/resource/The_Times_They_Are_a-Changin'_(musical)"
      },
      {
        "label": "Bob Dylan",
        "uri": "http://dbpedia.org/resource/Bob_Dylan"
      }
    ],
    "id": "e8cf794706634a76b62c2aaf12adf298",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/property/lyrics"
      }
    ]
  },
  {
    "question": "To which country do gabriel paris gordillo and gustavo rojas pinilla owe their allegiance?",
    "SerialNumber": "2051",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gabriel_París_Gordillo> <http://dbpedia.org/property/allegiance> ?uri. <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> <http://dbpedia.org/property/allegiance> ?uri . }",
    "entity mapping": [
      {
        "label": "gordillo gabriel",
        "uri": "http://dbpedia.org/resource/Gabriel_París_Gordillo"
      },
      {
        "label": "gustavo rojas pinilla",
        "uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla"
      }
    ],
    "id": "3fa147b6f8f440749b08abb421bf2035",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      }
    ]
  },
  {
    "question": "Who is the co-founder of the city where Owen Dougherty died?",
    "SerialNumber": "2055",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Owen_Dougherty> <http://dbpedia.org/property/placeOfDeath> ?x . ?x <http://dbpedia.org/ontology/founder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "Owen Dougherty",
        "uri": "http://dbpedia.org/resource/Owen_Dougherty"
      }
    ],
    "id": "1e48900f6c1847c7832e07b1e02cb22c",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "What awards have the alumni of Academy of Fine Arts in Lodz achieved?",
    "SerialNumber": "2060",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/Academy_of_Fine_Arts_In_Łódź> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "academy",
        "uri": "http://dbpedia.org/resource/Academy_of_Fine_Arts_In_Łódź"
      }
    ],
    "id": "70c8d9f0e7c64d31b9e09f06e888d0ed",
    "predicate mapping": [
      {
        "label": "achieved",
        "uri": "http://dbpedia.org/ontology/training"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "How many TV shows are of the company which are of company which is a subsidiary of Big  Ticket Entertainment ?",
    "SerialNumber": "2061",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Big_Ticket_Entertainment> . ?uri <http://dbpedia.org/property/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "entertainment ticket",
        "uri": "http://dbpedia.org/resource/Big_Ticket_Entertainment"
      }
    ],
    "id": "0ca6c27bc7d045a09658ba31af63d7d0",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name a person who works in Open Society Foundation and has wife named Susan Weber Soros ?",
    "SerialNumber": "2066",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Susan_Weber_Soros>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Open Society Foundation ",
        "uri": "http://dbpedia.org/resource/Open_Society_Foundations"
      },
      {
        "label": "Susan Weber Soros",
        "uri": "http://dbpedia.org/resource/Susan_Weber_Soros"
      }
    ],
    "id": "996ec9ddd3fb4c8ea7715aea366c4f9d",
    "predicate mapping": [
      {
        "label": "named",
        "uri": "http://dbpedia.org/property/employer"
      },
      {
        "label": "wife",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which athletics of Jaimatu Muslim Mindano is same as the genre of the Fritz Chess ?",
    "SerialNumber": "2069",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri. <http://dbpedia.org/resource/Fritz_Chess> <http://dbpedia.org/ontology/genre> ?uri} ",
    "entity mapping": [
      {
        "label": "Jaimatu Muslim Mindano",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao"
      },
      {
        "label": "Fritz Chess",
        "uri": "http://dbpedia.org/resource/Fritz_Chess"
      }
    ],
    "id": "c44ba26fe4574a649b78f1dc00246dfd",
    "predicate mapping": [
      {
        "label": "athletics",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "In what battles did president Park Chung-hee participate?",
    "SerialNumber": "2072",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Park Chung-hee",
        "uri": "http://dbpedia.org/resource/Park_Chung-hee"
      }
    ],
    "id": "b381525459274ec79b5b9168839aa7b4",
    "predicate mapping": [
      {
        "label": "participate",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "participate",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Is stephanie a female?",
    "SerialNumber": "2073",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stephanie> <http://dbpedia.org/property/gender> <http://dbpedia.org/resource/Female> }",
    "entity mapping": [
      {
        "label": "stephanie",
        "uri": "http://dbpedia.org/resource/Stephanie"
      },
      {
        "label": "female",
        "uri": "http://dbpedia.org/resource/Female"
      }
    ],
    "id": "2c54bb98872f4466b6a36426db7f553d",
    "predicate mapping": [
      {
        "label": "female",
        "uri": "http://dbpedia.org/property/gender"
      }
    ]
  },
  {
    "question": "Count the number of religions followed by BJP members.",
    "SerialNumber": "2076",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/party> <http://dbpedia.org/resource/Bharatiya_Janata_Party> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "BJP",
        "uri": "http://dbpedia.org/resource/Bharatiya_Janata_Party"
      }
    ],
    "id": "ac1933135e72469c8eb4faa146c394db",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "How many people have been the head coach for Middlesbrough FC?",
    "SerialNumber": "2077",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Middlesbrough FC",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C."
      }
    ],
    "id": "0b31ffed88a540dc80c450e15236a114",
    "predicate mapping": [
      {
        "label": "head",
        "uri": "http://dbpedia.org/property/club"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager"
      },
      {
        "label": "head",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What games are played at universities in Lanao Del Sur?",
    "SerialNumber": "2079",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/state> <http://dbpedia.org/resource/Lanao_del_Sur> . ?x <http://dbpedia.org/ontology/athletics> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Lanao Del Sur",
        "uri": "http://dbpedia.org/resource/Lanao_del_Sur"
      }
    ],
    "id": "f8733a59b674426dac53692d6ac50bb0",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Name the movie in which Vangelis gave the music and Jordan was the cinematographer ?",
    "SerialNumber": "2086",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Vangelis> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Vangelis",
        "uri": "http://dbpedia.org/resource/Vangelis"
      },
      {
        "label": "jordan",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth"
      }
    ],
    "id": "190465152dd44639aab83ac6b0e1d0fa",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "cinematographer",
        "uri": "http://dbpedia.org/ontology/cinematography"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many people won the Gold Medal of the Royal Astronomical Society?",
    "SerialNumber": "2088",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society>  . }",
    "entity mapping": [
      {
        "label": "Gold Medal of the Royal Astronomical Society",
        "uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society"
      }
    ],
    "id": "a6904e9b6e164493af1fde284d08f558",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes"
      }
    ]
  },
  {
    "question": "With whom were the engagements of Alpine Brigade Taurinense?",
    "SerialNumber": "2090",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alpine_Brigade_Taurinense> <http://dbpedia.org/ontology/battle> ?uri } ",
    "entity mapping": [
      {
        "label": "Alpine Brigade Taurinense",
        "uri": "http://dbpedia.org/resource/Alpine_Brigade_Taurinense"
      }
    ],
    "id": "6289a18178e44e02b341c0614bad4c81",
    "predicate mapping": [
      {
        "label": "engagements",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "In how many different places have US people died?",
    "SerialNumber": "2092",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "a4572121e3a84ab491141bad9959a94e",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/Location"
      }
    ]
  },
  {
    "question": "Terry Pratchett has written about how many topics?",
    "SerialNumber": "2096",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Terry_Pratchett> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
    "entity mapping": [
      {
        "label": "Terry Pratchett",
        "uri": "http://dbpedia.org/resource/Terry_Pratchett"
      }
    ],
    "id": "f38d40e812a24ed08486f86b89c75ca7",
    "predicate mapping": [
      {
        "label": "topics",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "Terry Pratchett",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      }
    ]
  },
  {
    "question": "Martin Ferguson and Mike Kelly served under which aussie PM?",
    "SerialNumber": "2099",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Martin_Ferguson> <http://dbpedia.org/property/primeminister> ?uri. <http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)> <http://dbpedia.org/property/primeminister> ?uri . }",
    "entity mapping": [
      {
        "label": "Martin Ferguson",
        "uri": "http://dbpedia.org/resource/Martin_Ferguson"
      },
      {
        "label": "Mike Kelly",
        "uri": "http://dbpedia.org/resource/Mike_Kelly_(Australian_politician)"
      }
    ],
    "id": "2453d5655cc8407182387fe5d0514477",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "PM",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "Who has fought in the conflicts around the Mississippi river?",
    "SerialNumber": "2101",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Mississippi_River> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Mississippi river",
        "uri": "http://dbpedia.org/resource/Mississippi_River"
      }
    ],
    "id": "e0ad5d9267d544bea41199ce7045fc36",
    "predicate mapping": [
      {
        "label": "Mississippi river",
        "uri": "http://dbpedia.org/property/place"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "conflicts",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "List the relegion of tani University which is also the life stance of udit Raj ?",
    "SerialNumber": "2102",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ōtani_University> <http://dbpedia.org/property/affiliation> ?uri. <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri} ",
    "entity mapping": [
      {
        "label": "university tani",
        "uri": "http://dbpedia.org/resource/Ōtani_University"
      },
      {
        "label": "udit Raj",
        "uri": "http://dbpedia.org/resource/Udit_Raj"
      }
    ],
    "id": "95ad975ecd3f4f8a96cdc1d5ad089e0a",
    "predicate mapping": [
      {
        "label": "University",
        "uri": "http://dbpedia.org/property/affiliation"
      },
      {
        "label": "life stance",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Does the San Macros River start in Texas?",
    "SerialNumber": "2103",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Marcos_River> <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Texas> }",
    "entity mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/resource/San_Marcos_River"
      },
      {
        "label": "Texas",
        "uri": "http://dbpedia.org/resource/Texas"
      }
    ],
    "id": "33560cb70a394c659afde50ea4d2fa43",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      }
    ]
  },
  {
    "question": "Which university's graduates have worked in the Quartermaster corps?",
    "SerialNumber": "2104",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Quartermaster corps",
        "uri": "http://dbpedia.org/resource/Quartermaster_Corps_(United_States_Army)"
      }
    ],
    "id": "a6a548a2d1ac484d8b94cd09ecf53768",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "graduates",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "What is the mascot of the military unit of David Prowse?",
    "SerialNumber": "2105",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/David_Prowse_(politician)> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "entity mapping": [
      {
        "label": "David Prowse",
        "uri": "http://dbpedia.org/resource/David_Prowse_(politician)"
      }
    ],
    "id": "b19ab8c472b24e6b8dd6a089d1b46d61",
    "predicate mapping": [
      {
        "label": "unit",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Which music band made Take Me There, and to which Tedd Riley was associated?",
    "SerialNumber": "2106",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Teddy_Riley> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_Mýa_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ",
    "entity mapping": [
      {
        "label": "riley tedd",
        "uri": "http://dbpedia.org/resource/Teddy_Riley"
      },
      {
        "label": "Take Me There",
        "uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_Mýa_song)"
      }
    ],
    "id": "551b48df0734464987251916a5e96362",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "music band",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "Mouse Morris' horses have raced in which races?",
    "SerialNumber": "2107",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/trainer> <http://dbpedia.org/resource/Mouse_Morris> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Mouse Morris",
        "uri": "http://dbpedia.org/resource/Mouse_Morris"
      }
    ],
    "id": "2e6a230473e948a29d59e965ed724a74",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/trainer"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "What religion is Kabir Suman from?",
    "SerialNumber": "2110",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/birthName> <http://dbpedia.org/resource/Kabir_Suman> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kabir Suman",
        "uri": "http://dbpedia.org/resource/Kabir_Suman"
      }
    ],
    "id": "a47123efd7d64ca9aa928cfb92693d4d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/birthName"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "What company made the front row and distributed big top ballet?",
    "SerialNumber": "2112",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Big_Top_Ballet> <http://dbpedia.org/property/distributor> ?uri. <http://dbpedia.org/resource/Front_Row_(software)> <http://dbpedia.org/property/developer> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "big top ballet",
        "uri": "http://dbpedia.org/resource/Big_Top_Ballet"
      },
      {
        "label": "front row",
        "uri": "http://dbpedia.org/resource/Front_Row_(software)"
      }
    ],
    "id": "7e818c143d0646119c7a6274c4471970",
    "predicate mapping": [
      {
        "label": "distributed",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which company is located in Harris County, Texas?",
    "SerialNumber": "2114",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Harris County, Texas",
        "uri": "http://dbpedia.org/resource/Harris_County,_Texas"
      }
    ],
    "id": "7ba27bb9e46648a595380f3277ca4f2f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the alma mater of the scientist famous for Email filtering ?",
    "SerialNumber": "2115",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/knownFor> <http://dbpedia.org/resource/Email_filtering> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Email filtering",
        "uri": "http://dbpedia.org/resource/Email_filtering"
      }
    ],
    "id": "c588fe59d877476892d39589f6172632",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Name the team which is owned by Dafenham wind turbines and stood first in 1967 mexican Grand Prix ?",
    "SerialNumber": "2117",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/Dagenham_wind_turbines> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "1967 mexican Grand Prix",
        "uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix"
      },
      {
        "label": "turbines",
        "uri": "http://dbpedia.org/resource/Dagenham_wind_turbines"
      }
    ],
    "id": "b01d261027ab4a75ad6a18e3a4808236",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "is owned by",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Tell me the number of writers whose works have been recorded in Criteria Studios?",
    "SerialNumber": "2118",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Criteria_Studios> . ?x <http://dbpedia.org/property/writer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "Criteria Studios",
        "uri": "http://dbpedia.org/resource/Criteria_Studios"
      }
    ],
    "id": "c885120c181e4448adfcbe1da45585fb",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "List all crafts of the people whose one of the profession is Kingdom of Naples ?",
    "SerialNumber": "2120",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Kingdom_of_Naples> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Kingdom of Naples",
        "uri": "http://dbpedia.org/resource/Kingdom_of_Naples"
      }
    ],
    "id": "f3576d71ce1f48a6b87e8fb5a3713b6e",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Was Apollo 11 a mission of Niel Armstrong?",
    "SerialNumber": "2122",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neil_Armstrong> <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> }",
    "entity mapping": [
      {
        "label": "armstrong",
        "uri": "http://dbpedia.org/resource/Neil_Armstrong"
      },
      {
        "label": "Apollo 11",
        "uri": "http://dbpedia.org/resource/Apollo_11"
      }
    ],
    "id": "d3f64fbb4efc4bf583de0d8ffe4be68d",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      }
    ]
  },
  {
    "question": "What are the movies whose music composer uses a Hammond organ?",
    "SerialNumber": "2123",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Hammond_organ> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Hammond organ",
        "uri": "http://dbpedia.org/resource/Hammond_organ"
      }
    ],
    "id": "093e9fad547341e2a4784bd946f8d8cf",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What religion do the Wickramabahu Centeral College and Neungin High School both follow?",
    "SerialNumber": "2126",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri . }",
    "entity mapping": [
      {
        "label": "wickramabahu college",
        "uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)"
      },
      {
        "label": "Neungin High School",
        "uri": "http://dbpedia.org/resource/Neungin_High_School"
      }
    ],
    "id": "f2e6e08d863b45a0b2fde08ff71c4d93",
    "predicate mapping": [
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      }
    ]
  },
  {
    "question": "How many television shows are broadcasted on Fox Broadcasting Company?",
    "SerialNumber": "2127",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Fox Broadcasting Company",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      }
    ],
    "id": "900f0ac67c2d4655b104b6664838d60c",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the fictional character which belongs to families of Darth Vader and Padm Amidala?",
    "SerialNumber": "2128",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Darth_Vader> . ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padmé_Amidala> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Darth Vader",
        "uri": "http://dbpedia.org/resource/Darth_Vader"
      },
      {
        "label": "amidala padm",
        "uri": "http://dbpedia.org/resource/Padmé_Amidala"
      }
    ],
    "id": "3fd0705b3a18418ca9748691d9ad8be4",
    "predicate mapping": [
      {
        "label": "families",
        "uri": "http://dbpedia.org/property/family"
      },
      {
        "label": "families",
        "uri": "http://dbpedia.org/property/family"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Where Everybody knows you is the theme album of which show ?",
    "SerialNumber": "2129",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> <http://dbpedia.org/ontology/album> ?uri } ",
    "entity mapping": [
      {
        "label": "everybody where knows",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name"
      }
    ],
    "id": "cff31d6e2dee48de9fc46d0ecb40ced5",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      }
    ]
  },
  {
    "question": "Does Ronaldinho play in the brazil's under 23 team?",
    "SerialNumber": "2130",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Ronaldinho> <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Brazil_national_under-23_football_team> }",
    "entity mapping": [
      {
        "label": "Ronaldinho",
        "uri": "http://dbpedia.org/resource/Ronaldinho"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Brazil_national_under-23_football_team"
      }
    ],
    "id": "2d605f84b9af4256b26d59a784cee86e",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/nationalteam"
      }
    ]
  },
  {
    "question": "What are some rivers in Zambia which have a dam on them?",
    "SerialNumber": "2131",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/river> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Dam>}",
    "entity mapping": [
      {
        "label": "Zambia",
        "uri": "http://dbpedia.org/resource/Zambia"
      }
    ],
    "id": "c37f438af3ac4daf95e2ddf9341f360d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      },
      {
        "label": "dam",
        "uri": "http://dbpedia.org/ontology/Dam"
      }
    ]
  },
  {
    "question": "Which office's people have died on the US Route 165?",
    "SerialNumber": "2132",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/U.S._Route_165> . ?x <http://dbpedia.org/property/office> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "route 165",
        "uri": "http://dbpedia.org/resource/U.S._Route_165"
      }
    ],
    "id": "4e26840031c64a15a7abe3e1330a50b7",
    "predicate mapping": [
      {
        "label": "Route",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      },
      {
        "label": "Route",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name some shows similar to the one whose theme song is made by Murray Gold.",
    "SerialNumber": "2133",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Murray_Gold> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Murray Gold",
        "uri": "http://dbpedia.org/resource/Murray_Gold"
      }
    ],
    "id": "eea52cce6ad445d8a6611b1b4d4538e7",
    "predicate mapping": [
      {
        "label": "theme",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is on the border of the places which fall under crook county municipality, oregon?",
    "SerialNumber": "2137",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/municipality> <http://dbpedia.org/resource/Crook_County,_Oregon> . ?x <http://dbpedia.org/ontology/border> ?uri  . }",
    "entity mapping": [
      {
        "label": "oregon county crook",
        "uri": "http://dbpedia.org/resource/Crook_County,_Oregon"
      }
    ],
    "id": "a71853071a1b40a59c6ce4714b1ef5ee",
    "predicate mapping": [
      {
        "label": "municipality",
        "uri": "http://dbpedia.org/ontology/municipality"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      }
    ]
  },
  {
    "question": "Who are some people whose relation is hqed in Gold Base?",
    "SerialNumber": "2139",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . }",
    "entity mapping": [
      {
        "label": "Gold Base",
        "uri": "http://dbpedia.org/resource/Gold_Base"
      }
    ],
    "id": "44960e14ef46436fbcc7c4d75318662a",
    "predicate mapping": [
      {
        "label": "hq",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "ed",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which New Mexico company provides One Drive as a service ?",
    "SerialNumber": "2141",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "New Mexico",
        "uri": "http://dbpedia.org/resource/New_Mexico"
      },
      {
        "label": "One Drive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      }
    ],
    "id": "f08ad0e14fc34ee599e3747215483fca",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who operates the bridges designed by Malaysian PWD?",
    "SerialNumber": "2143",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Malaysian",
        "uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department"
      }
    ],
    "id": "8cc77d4272db4da5a60221753631cf13",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "PWD",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Among which city where Geography Club played also had the Kenticky Cycle ?",
    "SerialNumber": "2145",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Geography_Club_(play)> <http://dbpedia.org/property/place> ?uri. <http://dbpedia.org/resource/The_Kentucky_Cycle> <http://dbpedia.org/property/place> ?uri . }",
    "entity mapping": [
      {
        "label": "Geography Club",
        "uri": "http://dbpedia.org/resource/Geography_Club_(play)"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/The_Kentucky_Cycle"
      }
    ],
    "id": "8365e95b808d440cac8c8e713017ab1c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place"
      },
      {
        "uri": "http://dbpedia.org/property/place"
      }
    ]
  },
  {
    "question": "Who was the animator of both Tommy Tucker's Tooth and Skeleton Dance?",
    "SerialNumber": "2146",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?uri} ",
    "entity mapping": [
      {
        "label": "Tommy Tucker's Tooth",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth"
      },
      {
        "label": "skeleton dance the",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance"
      }
    ],
    "id": "13b47c5d160c4d96ad28e6814def4b42",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator"
      },
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator"
      }
    ]
  },
  {
    "question": "What is the nationality of the economist who is one of the important people in the Foundation for Economic Education?",
    "SerialNumber": "2148",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Foundation_for_Economic_Education> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Economist>}",
    "entity mapping": [
      {
        "label": "Foundation for Economic Education",
        "uri": "http://dbpedia.org/resource/Foundation_for_Economic_Education"
      }
    ],
    "id": "1f97981f73884227b98d2e193e4793c4",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "economist",
        "uri": "http://dbpedia.org/ontology/Economist"
      }
    ]
  },
  {
    "question": "Name the rivers which originate from within Pittsburg?",
    "SerialNumber": "2149",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Pittsburg,_New_Hampshire> . ?uri <http://dbpedia.org/ontology/source> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Pittsburg",
        "uri": "http://dbpedia.org/resource/Pittsburg,_New_Hampshire"
      }
    ],
    "id": "60918268c9dc4bc9a944056cf08df4b5",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the place of death of the gymnast who was the silver medalist at the 1956 Summer Olympics Men's rings ?",
    "SerialNumber": "2150",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_–_Men's_rings> <http://dbpedia.org/ontology/silverMedalist> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "entity mapping": [
      {
        "label": "olympics gymnast summer rings men's",
        "uri": "http://dbpedia.org/resource/Gymnastics_at_the_1956_Summer_Olympics_–_Men's_rings"
      }
    ],
    "id": "151f565ef0bc4267b5db57b098e82284",
    "predicate mapping": [
      {
        "label": "medalist silver",
        "uri": "http://dbpedia.org/ontology/silverMedalist"
      },
      {
        "label": "place of death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "What religion are the characters of Absolutely Fabulous from?",
    "SerialNumber": "2151",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/series> <http://dbpedia.org/resource/Absolutely_Fabulous> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Absolutely Fabulous",
        "uri": "http://dbpedia.org/resource/Absolutely_Fabulous"
      }
    ],
    "id": "8b983e3a0771427fa876d31b4806a6a2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/series"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Where does the river begin whose left tributary is Krapanski Potok?",
    "SerialNumber": "2152",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Krapanski_Potok> . ?x <http://dbpedia.org/ontology/source> ?uri  . }",
    "entity mapping": [
      {
        "label": "Krapanski Potok",
        "uri": "http://dbpedia.org/resource/Krapanski_Potok"
      }
    ],
    "id": "079c81f8aa684b9c90a281e08a9c84d5",
    "predicate mapping": [
      {
        "label": "left tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      },
      {
        "label": "begin",
        "uri": "http://dbpedia.org/ontology/source"
      }
    ]
  },
  {
    "question": "Name all the soccer players who played in a under 18 club for La Liga?",
    "SerialNumber": "2153",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "entity mapping": [
      {
        "label": "La Liga",
        "uri": "http://dbpedia.org/resource/La_Liga"
      }
    ],
    "id": "fe429424b0b34adda047a3ba868f0489",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/youthclubs"
      },
      {
        "label": "soccer player",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer"
      }
    ]
  },
  {
    "question": "How many people have coached the players of Middlesbrough FC?",
    "SerialNumber": "2154",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Middlesbrough FC",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C."
      }
    ],
    "id": "53e44c387e97481c93a92afe3bf4dd57",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Give me a count of the services by the company which provides Data center as the services ?",
    "SerialNumber": "2158",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/services> <http://dbpedia.org/resource/Data_center_services> . ?x <http://dbpedia.org/property/services> ?uri }",
    "entity mapping": [
      {
        "label": "services center",
        "uri": "http://dbpedia.org/resource/Data_center_services"
      }
    ],
    "id": "1f6748d64d834a7f9f8a849a841bb8fb",
    "predicate mapping": [
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "services",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "List the people with Scientology as their religious belief?",
    "SerialNumber": "2161",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Scientology>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Scientology",
        "uri": "http://dbpedia.org/resource/Scientology"
      }
    ],
    "id": "6d69d75249944430948e09c0741a01b2",
    "predicate mapping": [
      {
        "label": "religious",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "belief",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which program was on NBC network with executive producer as Glen and Les Charles?",
    "SerialNumber": "2163",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/NBC> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "NBC",
        "uri": "http://dbpedia.org/resource/NBC"
      },
      {
        "label": "Glen and Les Charles",
        "uri": "http://dbpedia.org/resource/Glen_and_Les_Charles"
      }
    ],
    "id": "978a09e0cd01477cb3b794cae035132a",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "program",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is the book The Buddha and his Dhamma a book about Buddhism?",
    "SerialNumber": "2166",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Buddha_and_His_Dhamma> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }",
    "entity mapping": [
      {
        "label": "The Buddha and his Dhamma",
        "uri": "http://dbpedia.org/resource/The_Buddha_and_His_Dhamma"
      },
      {
        "label": "Buddhism",
        "uri": "http://dbpedia.org/resource/Buddhism"
      }
    ],
    "id": "f45f71305db04f20a4880e91502a2d7e",
    "predicate mapping": [
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      }
    ]
  },
  {
    "question": "Who is the person opposed  by Tom McLaury and Ike Clanton?",
    "SerialNumber": "2168",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Tom_McLaury> . ?uri <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/Ike_Clanton> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Tom McLaury",
        "uri": "http://dbpedia.org/resource/Tom_McLaury"
      },
      {
        "label": "Ike Clanton",
        "uri": "http://dbpedia.org/resource/Ike_Clanton"
      }
    ],
    "id": "3814808bac334e5f8d76f56a99bf5403",
    "predicate mapping": [
      {
        "label": "opposed",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "opposed",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who all have developed a cross platform software?",
    "SerialNumber": "2169",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Cross-platform> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "platform cross",
        "uri": "http://dbpedia.org/resource/Cross-platform"
      }
    ],
    "id": "7fe6c4ee43cd4a048ae22cb336c1e62a",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/property/operatingSystem"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Who attended Great Ayton university?",
    "SerialNumber": "2170",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/education> <http://dbpedia.org/resource/Great_Ayton>  . }",
    "entity mapping": [
      {
        "label": "Great Ayton",
        "uri": "http://dbpedia.org/resource/Great_Ayton"
      }
    ],
    "id": "e60e13c61f15439ab1d8ee9a7d9e3956",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/education"
      }
    ]
  },
  {
    "question": "The pope whose shrine is in St Peter's Basilica was venerated in which sects?",
    "SerialNumber": "2179",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Peter's_Basilica> . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}",
    "entity mapping": [
      {
        "label": "basilica peter's",
        "uri": "http://dbpedia.org/resource/St._Peter's_Basilica"
      }
    ],
    "id": "04c55a217eca42488ea5a3fadb654924",
    "predicate mapping": [
      {
        "label": "shrine",
        "uri": "http://dbpedia.org/property/majorShrine"
      },
      {
        "label": "venerated in",
        "uri": "http://dbpedia.org/property/veneratedIn"
      },
      {
        "label": "pope",
        "uri": "http://dbpedia.org/ontology/Pope"
      }
    ]
  },
  {
    "question": "For a position in which institution were both Jack Ryan and Robert sarvis both appointed?",
    "SerialNumber": "2181",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Jack Ryan",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)"
      },
      {
        "label": "Robert sarvis",
        "uri": "http://dbpedia.org/resource/Robert_Sarvis"
      }
    ],
    "id": "7bfbc6d46c534d2bb0f4d755d9dc591b",
    "predicate mapping": [
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/nominee"
      },
      {
        "label": "appointed",
        "uri": "http://dbpedia.org/ontology/nominee"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Count the total number of conflicts people who were part of conflict in afghanisthan ?",
    "SerialNumber": "2183",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Afghanistan> . ?x <http://dbpedia.org/ontology/battle> ?uri }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Afghanistan"
      }
    ],
    "id": "5de5a571a8944ee88bd9e7605b13f4da",
    "predicate mapping": [
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/battle"
      }
    ]
  },
  {
    "question": "Which tennis players live in Kenthurst, new south wales?",
    "SerialNumber": "2184",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Kenthurst,_New_South_Wales>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TennisPlayer>}",
    "entity mapping": [
      {
        "label": "Kenthurst",
        "uri": "http://dbpedia.org/resource/Kenthurst,_New_South_Wales"
      }
    ],
    "id": "cc4ae85ad1744fa583816c7460e19d3b",
    "predicate mapping": [
      {
        "label": "wales",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "tennis player",
        "uri": "http://dbpedia.org/ontology/TennisPlayer"
      }
    ]
  },
  {
    "question": "Where is the head quarters of the parent company of Mall of America located?",
    "SerialNumber": "2188",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mall_of_America> <http://dbpedia.org/property/owned> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mall of America",
        "uri": "http://dbpedia.org/resource/Mall_of_America"
      }
    ],
    "id": "13d8d20650a94f7cbef49822770fa47f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/owned"
      },
      {
        "label": "head quarters",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "Where was Sino-French War fought ?",
    "SerialNumber": "2189",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri } ",
    "entity mapping": [
      {
        "label": "Sino-French War",
        "uri": "http://dbpedia.org/resource/Sino-French_War"
      }
    ],
    "id": "de5d715dbba14433bd2751418749b376",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/territory"
      }
    ]
  },
  {
    "question": "What genre isPyChess from, which employes Craig Van Tilbury?",
    "SerialNumber": "2195",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/property/genre> ?uri} ",
    "entity mapping": [
      {
        "label": "Craig Van Tilbury",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury"
      },
      {
        "label": "PyChess",
        "uri": "http://dbpedia.org/resource/PyChess"
      }
    ],
    "id": "a99633a7312140699f6da5ec60b3545a",
    "predicate mapping": [
      {
        "label": "employes",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "In which cities are there stations of SCOLA?",
    "SerialNumber": "2197",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/broadcastNetwork> <http://dbpedia.org/resource/SCOLA_(TV_service)> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "entity mapping": [
      {
        "label": "SCOLA",
        "uri": "http://dbpedia.org/resource/SCOLA_(TV_service)"
      }
    ],
    "id": "8a63017795e246a49a5be13cbb278cc2",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/broadcastNetwork"
      },
      {
        "label": "In",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "stations",
        "uri": "http://dbpedia.org/ontology/TelevisionStation"
      }
    ]
  },
  {
    "question": "What are some bands out to texarkana?",
    "SerialNumber": "2200",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/origin> <http://dbpedia.org/resource/Texarkana,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "texarkana",
        "uri": "http://dbpedia.org/resource/Texarkana,_Texas"
      }
    ],
    "id": "2adb8b5dae3e4e8ea92922a707e6341e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "What famous politician died in the Petersen House?",
    "SerialNumber": "2201",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/Petersen_House>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Petersen House",
        "uri": "http://dbpedia.org/resource/Petersen_House"
      }
    ],
    "id": "61066d63cf6b4c3d9e4dfdec5c6a430c",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which cover artist of the The Adventures of Tom Sawyer also the source of inspiration of The Appple Tree ?",
    "SerialNumber": "2202",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/The_Apple_Tree> <http://dbpedia.org/ontology/basedOn> ?uri} ",
    "entity mapping": [
      {
        "label": "The Adventures of Tom Sawyer",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/The_Apple_Tree"
      }
    ],
    "id": "ac76f62cf58949f59c0a4e39a351a377",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/ontology/coverArtist"
      },
      {
        "label": "Tree",
        "uri": "http://dbpedia.org/ontology/basedOn"
      }
    ]
  },
  {
    "question": "Where was the person born who died in Bryn Mawr Hospital?",
    "SerialNumber": "2204",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Bryn_Mawr_Hospital> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bryn Mawr Hospital",
        "uri": "http://dbpedia.org/resource/Bryn_Mawr_Hospital"
      }
    ],
    "id": "2b12d0b229e446478c13760e9b57a5ea",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "In which common territory did Sino French war and the Tonkin campaign take place?",
    "SerialNumber": "2207",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sino-French_War> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri . }",
    "entity mapping": [
      {
        "label": "french sino war",
        "uri": "http://dbpedia.org/resource/Sino-French_War"
      },
      {
        "label": "Tonkin campaign",
        "uri": "http://dbpedia.org/resource/Tonkin_Campaign"
      }
    ],
    "id": "0ef7dd290adb47cc9515959eaf8bd328",
    "predicate mapping": [
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "territory",
        "uri": "http://dbpedia.org/ontology/territory"
      }
    ]
  },
  {
    "question": "Which distributer of Glover is also the stockholde of Seattle Mariners ?",
    "SerialNumber": "2208",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri. <http://dbpedia.org/resource/Seattle_Mariners> <http://dbpedia.org/ontology/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "Glover",
        "uri": "http://dbpedia.org/resource/Glover_(video_game)"
      },
      {
        "label": "Seattle Mariners",
        "uri": "http://dbpedia.org/resource/Seattle_Mariners"
      }
    ],
    "id": "098a7f4275924007b358ee48cefc7b23",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "What are some important works of US citizens?",
    "SerialNumber": "2210",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "c0f69ac1ab584bbaaca5272c9dd4aa74",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "How many characters were made by Paul Dini?",
    "SerialNumber": "2211",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/creators> <http://dbpedia.org/resource/Paul_Dini>  . }",
    "entity mapping": [
      {
        "label": "Paul Dini",
        "uri": "http://dbpedia.org/resource/Paul_Dini"
      }
    ],
    "id": "444b6f68ae4145c1a8e151fe606ade0a",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/creators"
      }
    ]
  },
  {
    "question": "What is the religion of the relatives of Ananda Weerasekara?",
    "SerialNumber": "2213",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Ananda_Weerasekara> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ananda Weerasekara",
        "uri": "http://dbpedia.org/resource/Ananda_Weerasekara"
      }
    ],
    "id": "c1d9817b260a4d0ead5c03372c35d776",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "In which country's cuisine, ham is an important part?",
    "SerialNumber": "2215",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Ham> . ?x <http://dbpedia.org/property/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "ham",
        "uri": "http://dbpedia.org/resource/Ham"
      }
    ],
    "id": "ec8b9535d59d4655b5ff3f5a185c99cc",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/property/mainIngredient"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "What is the purpose of the Maharashtra Chess Association which is genere of PyChess?",
    "SerialNumber": "2216",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maharashtra_Chess_Association> <http://dbpedia.org/property/purpose> ?uri. <http://dbpedia.org/resource/PyChess> <http://dbpedia.org/ontology/genre> ?uri} ",
    "entity mapping": [
      {
        "label": "Maharashtra Chess Association",
        "uri": "http://dbpedia.org/resource/Maharashtra_Chess_Association"
      },
      {
        "label": "PyChess",
        "uri": "http://dbpedia.org/resource/PyChess"
      }
    ],
    "id": "b34ea6d0eb0e4dc9878f34a21bde3842",
    "predicate mapping": [
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "uri": "http://dbpedia.org/ontology/genre"
      }
    ]
  },
  {
    "question": "What medals have been given to people who died of lung cancer?",
    "SerialNumber": "2219",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Lung_cancer> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "lung cancer",
        "uri": "http://dbpedia.org/resource/Lung_cancer"
      }
    ],
    "id": "2d27c6297df54cbd99d354a61045dba8",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "medals",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which country's engineered have studied at Aero Klub in Wroclaw?",
    "SerialNumber": "2222",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/AeroKlub_Wrocław> . ?x <http://dbpedia.org/property/nationality> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/AeroKlub_Wrocław"
      }
    ],
    "id": "d2da7d56a898475493bd3e92b6d60c91",
    "predicate mapping": [
      {
        "label": "Wroclaw",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "country's",
        "uri": "http://dbpedia.org/property/nationality"
      }
    ]
  },
  {
    "question": "Count the drinks originated in England.",
    "SerialNumber": "2224",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/England>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "665c48a565514b8d9451667f8ac5d5cb",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "ated",
        "uri": "http://dbpedia.org/ontology/Beverage"
      }
    ]
  },
  {
    "question": "What place did Edwin Adams die at, which gave birth to William A Purtell?",
    "SerialNumber": "2225",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Edwin_Adams_(politician)> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/William_A._Purtell> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "Edwin Adams",
        "uri": "http://dbpedia.org/resource/Edwin_Adams_(politician)"
      },
      {
        "label": "william purtell",
        "uri": "http://dbpedia.org/resource/William_A._Purtell"
      }
    ],
    "id": "c44978af32a3433daf71471ea770529b",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "place birth",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Trainees at the national film school of Lodz have received what awards?",
    "SerialNumber": "2228",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/training> <http://dbpedia.org/resource/National_Film_School_in_Łódź> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "national film school",
        "uri": "http://dbpedia.org/resource/National_Film_School_in_Łódź"
      }
    ],
    "id": "1074b9904318467e873e1d05472c6ace",
    "predicate mapping": [
      {
        "label": "received",
        "uri": "http://dbpedia.org/property/training"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Is the Providence Chapel, Charlwood made in New English style of architecture?",
    "SerialNumber": "2229",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Providence_Chapel,_Charlwood> <http://dbpedia.org/property/style> <http://dbpedia.org/resource/New_England> }",
    "entity mapping": [
      {
        "label": "Providence Chapel, Charlwood",
        "uri": "http://dbpedia.org/resource/Providence_Chapel,_Charlwood"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/New_England"
      }
    ],
    "id": "c53debb465374190985a381113d5e2e1",
    "predicate mapping": [
      {
        "label": "style",
        "uri": "http://dbpedia.org/property/style"
      }
    ]
  },
  {
    "question": "Which tema did Dough Acomb played for which is also the drafty team of Dale Mitchell ?",
    "SerialNumber": "2230",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)> <http://dbpedia.org/ontology/draftTeam> ?uri. <http://dbpedia.org/resource/Doug_Acomb> <http://dbpedia.org/property/playedFor> ?uri} ",
    "entity mapping": [
      {
        "label": "Dale Mitchell",
        "uri": "http://dbpedia.org/resource/Dale_Mitchell_(ice_hockey)"
      },
      {
        "label": "acomb",
        "uri": "http://dbpedia.org/resource/Doug_Acomb"
      }
    ],
    "id": "a0e3214b00d7484d9630cf4983167626",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/draftTeam"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "What is the river whose origin is North-Western Province, Zambia?",
    "SerialNumber": "2231",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> } ",
    "entity mapping": [
      {
        "label": "North-Western Province, Zambia",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia"
      }
    ],
    "id": "0ecf1c79d31641a3b107442ce8b8399b",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/sourceRegion"
      }
    ]
  },
  {
    "question": "Is Tenzing Norgay  the first person to scale Mt. Everest?",
    "SerialNumber": "2232",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Tenzing_Norgay> }",
    "entity mapping": [
      {
        "label": "everest",
        "uri": "http://dbpedia.org/resource/Mount_Everest"
      },
      {
        "label": "Tenzing Norgay",
        "uri": "http://dbpedia.org/resource/Tenzing_Norgay"
      }
    ],
    "id": "3271ac84219e4f5995da87af671eaab7",
    "predicate mapping": [
      {
        "label": "person first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "What is the state of Umatilla language which is also the state of James K. Kelly ?",
    "SerialNumber": "2234",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/James_K._Kelly> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/Umatilla_language> <http://dbpedia.org/property/region> ?uri} ",
    "entity mapping": [
      {
        "label": "James K. Kelly",
        "uri": "http://dbpedia.org/resource/James_K._Kelly"
      },
      {
        "label": "Umatilla language",
        "uri": "http://dbpedia.org/resource/Umatilla_language"
      }
    ],
    "id": "5d6c7cfe9fca43d7bf22d03f9f9d205e",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "In which country can I find the State Academic Opera and Ballet Theater and Baku Puppet Theatre?",
    "SerialNumber": "2235",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "academic theater ballet",
        "uri": "http://dbpedia.org/resource/Azerbaijan_State_Academic_Opera_and_Ballet_Theater"
      },
      {
        "label": "Baku Puppet Theatre",
        "uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre"
      }
    ],
    "id": "7cd083a1baa944fb93b2df81ca11207c",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "What band was Afrika Baby Bam a part of, and often performed with Q Tip?",
    "SerialNumber": "2236",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Afrika_Baby_Bam> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Q-Tip_(musician)> <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri} ",
    "entity mapping": [
      {
        "label": "Afrika Baby Bam",
        "uri": "http://dbpedia.org/resource/Afrika_Baby_Bam"
      },
      {
        "label": "tip",
        "uri": "http://dbpedia.org/resource/Q-Tip_(musician)"
      }
    ],
    "id": "e4204a1a2f2040a6aadcc27f9ff9c8a0",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "Tip",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      }
    ]
  },
  {
    "question": "List the governers of Jimmie Lou Fisher?",
    "SerialNumber": "2237",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmie_Lou_Fisher> <http://dbpedia.org/property/governor> ?uri } ",
    "entity mapping": [
      {
        "label": "Jimmie Lou Fisher",
        "uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher"
      }
    ],
    "id": "842c6e8c6a8b49ba99364b98105af678",
    "predicate mapping": [
      {
        "label": "governers",
        "uri": "http://dbpedia.org/property/governor"
      }
    ]
  },
  {
    "question": "Where has GARAGE recorded its singles?",
    "SerialNumber": "2239",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Garbage_(band)> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Garbage_(band)"
      }
    ],
    "id": "7dd6d733dada4602b5f9249a4418c0ce",
    "predicate mapping": [
      {
        "label": "GARAGE",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "Which employer of Manu Cornet has alsoe written Google.by ?",
    "SerialNumber": "2240",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri. <http://dbpedia.org/resource/Google.by> <http://dbpedia.org/ontology/author> ?uri} ",
    "entity mapping": [
      {
        "label": "Manu Cornet",
        "uri": "http://dbpedia.org/resource/Manu_Cornet"
      },
      {
        "label": "Google.by",
        "uri": "http://dbpedia.org/resource/Google.by"
      }
    ],
    "id": "0d8127d7d9f94ef6ad941ee30b14e54c",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/property/employer"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "Which field's journals are edited by Paul Morphy?",
    "SerialNumber": "2242",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/editor> <http://dbpedia.org/resource/Paul_Morphy> . ?x <http://dbpedia.org/property/discipline> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AcademicJournal>}",
    "entity mapping": [
      {
        "label": "Paul Morphy",
        "uri": "http://dbpedia.org/resource/Paul_Morphy"
      }
    ],
    "id": "a44e98fa4c1e4f79b3c341844a6db478",
    "predicate mapping": [
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/ontology/editor"
      },
      {
        "uri": "http://dbpedia.org/property/discipline"
      },
      {
        "label": "journals",
        "uri": "http://dbpedia.org/ontology/AcademicJournal"
      }
    ]
  },
  {
    "question": "List the sports of PATTS College of Aeronautics which are of interest of Jon Speelman ?",
    "SerialNumber": "2244",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/PATTS_College_of_Aeronautics> <http://dbpedia.org/property/athletics> ?uri. <http://dbpedia.org/resource/Jon_Speelman> <http://dbpedia.org/ontology/field> ?uri} ",
    "entity mapping": [
      {
        "label": "PATTS College of Aeronautics",
        "uri": "http://dbpedia.org/resource/PATTS_College_of_Aeronautics"
      },
      {
        "label": "Jon Speelman",
        "uri": "http://dbpedia.org/resource/Jon_Speelman"
      }
    ],
    "id": "d945ca666231404ea5dbf05646dcc45d",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "interest",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "Give me the count of newspaper whose language is Sweedish and headquartered at stockholm ?",
    "SerialNumber": "2249",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm> } ",
    "entity mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/resource/Swedish_language"
      },
      {
        "label": "stockholm",
        "uri": "http://dbpedia.org/resource/Stockholm"
      }
    ],
    "id": "01086492a07e4c6eb96f182023d92f9f",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "In how many places are the companies founded in Canada operating?",
    "SerialNumber": "2250",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/locations> ?uri  . }",
    "entity mapping": [
      {
        "label": "Canada",
        "uri": "http://dbpedia.org/resource/Canada"
      }
    ],
    "id": "b7d04c385e304556962dfa6f26906db4",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "operating",
        "uri": "http://dbpedia.org/property/locations"
      }
    ]
  },
  {
    "question": "Name a person whose sucessor was Adrian A. basora and was educated at Harvard-Westlake School?",
    "SerialNumber": "2251",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School"
      },
      {
        "label": "Adrian A. basora",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora"
      }
    ],
    "id": "b049e9b6c3d84f8db89c6dad58c1b742",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "cated",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which continents can be reached by flight companies available on Gatwick Airport?",
    "SerialNumber": "2257",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Gatwick_Airport> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Gatwick Airport",
        "uri": "http://dbpedia.org/resource/Gatwick_Airport"
      }
    ],
    "id": "1330392af821465988520c7e62465234",
    "predicate mapping": [
      {
        "label": "airport",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Who is the head coach of 2009-10 Middlesbrough F.C. season ?",
    "SerialNumber": "2260",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2009–10_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ",
    "entity mapping": [
      {
        "label": "middlesbrough season",
        "uri": "http://dbpedia.org/resource/2009–10_Middlesbrough_F.C._season"
      }
    ],
    "id": "71f8fa4b19a547668255c9310216a8f3",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager"
      }
    ]
  },
  {
    "question": "Which builder has made concrete bridges?",
    "SerialNumber": "2261",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Concrete> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "concrete",
        "uri": "http://dbpedia.org/resource/Concrete"
      }
    ],
    "id": "edc54c2ea5cb4ecca8de2091fad5fbf7",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/material"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "How many venues are located in the US?",
    "SerialNumber": "2264",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/address> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "11bda0b4ba6e488ca7e8255d984a7792",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address"
      },
      {
        "label": "venue",
        "uri": "http://dbpedia.org/ontology/Venue"
      }
    ]
  },
  {
    "question": "Which vice president of Warren G. Harsing is also the president of Evans Hughes ?",
    "SerialNumber": "2265",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Warren_G._Harding> <http://dbpedia.org/ontology/vicePresident> ?uri. <http://dbpedia.org/resource/Charles_Evans_Hughes> <http://dbpedia.org/ontology/president> ?uri} ",
    "entity mapping": [
      {
        "label": "warren",
        "uri": "http://dbpedia.org/resource/Warren_G._Harding"
      },
      {
        "label": "hughes",
        "uri": "http://dbpedia.org/resource/Charles_Evans_Hughes"
      }
    ],
    "id": "d8dbbad92b504881bd9c0c8a1932d15e",
    "predicate mapping": [
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      }
    ]
  },
  {
    "question": "in which movies have momoki kochi acted",
    "SerialNumber": "2266",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_Kōchi> } ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Momoko_Kōchi"
      }
    ],
    "id": "0fd9b98ee3744db6b234eecdfcbe9e70",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring"
      }
    ]
  },
  {
    "question": "In which countries can i find broadcasted TV in southeast asia?",
    "SerialNumber": "2267",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/broadcastArea> <http://dbpedia.org/resource/Southeast_Asia> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionStation>}",
    "entity mapping": [
      {
        "label": "southeast asia",
        "uri": "http://dbpedia.org/resource/Southeast_Asia"
      }
    ],
    "id": "954385119c2440dc9e9ee5c3b6adab5b",
    "predicate mapping": [
      {
        "label": "broadcasted",
        "uri": "http://dbpedia.org/property/broadcastArea"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "TV",
        "uri": "http://dbpedia.org/ontology/TelevisionStation"
      }
    ]
  },
  {
    "question": "Where can i find teams whose coach has been Rodney Eade.",
    "SerialNumber": "2268",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Rodney_Eade> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Rodney Eade",
        "uri": "http://dbpedia.org/resource/Rodney_Eade"
      }
    ],
    "id": "f6837bbaf0614048ab98cba4cad9d380",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Count all those whose youthclub performed at the 14-15 La Liga?",
    "SerialNumber": "2269",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014–15_La_Liga> . ?uri <http://dbpedia.org/property/youthclubs> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "liga",
        "uri": "http://dbpedia.org/resource/2014–15_La_Liga"
      }
    ],
    "id": "44babf14274042b6a9d97382855b1f6f",
    "predicate mapping": [
      {
        "label": "Liga",
        "uri": "http://dbpedia.org/ontology/season"
      },
      {
        "label": "youthclub",
        "uri": "http://dbpedia.org/property/youthclubs"
      },
      {
        "label": "Liga",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "What city is it where Wayne Allard governs and Juli Ashton was born?",
    "SerialNumber": "2271",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wayne_Allard> <http://dbpedia.org/ontology/region> ?uri. <http://dbpedia.org/resource/Juli_Ashton> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Wayne Allard",
        "uri": "http://dbpedia.org/resource/Wayne_Allard"
      },
      {
        "label": "Juli Ashton",
        "uri": "http://dbpedia.org/resource/Juli_Ashton"
      }
    ],
    "id": "766f8af12e0948349fb3a59be11f74e5",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Which neighboring municipalities of Cologny has a mayor named Ester Alder ?",
    "SerialNumber": "2272",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder>  . }",
    "entity mapping": [
      {
        "label": "Cologny",
        "uri": "http://dbpedia.org/resource/Cologny"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Esther_Alder"
      }
    ],
    "id": "9617ad4477da40298f1e0e562959fcc3",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      },
      {
        "label": "mayor",
        "uri": "http://dbpedia.org/ontology/mayor"
      }
    ]
  },
  {
    "question": "Where did Doug Walgren and Lee Si Chen study?",
    "SerialNumber": "2277",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lee_Si-Chen> <http://dbpedia.org/property/almaMater> ?uri. <http://dbpedia.org/resource/Doug_Walgren> <http://dbpedia.org/ontology/almaMater> ?uri . }",
    "entity mapping": [
      {
        "label": "chen lee",
        "uri": "http://dbpedia.org/resource/Lee_Si-Chen"
      },
      {
        "label": "Doug Walgren",
        "uri": "http://dbpedia.org/resource/Doug_Walgren"
      }
    ],
    "id": "7bc28b110ed544cc8e98bdcf752d9c47",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Where are the politicians buried who succeeded George Whitefield Davis?",
    "SerialNumber": "2278",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/George_Whitefield_Davis> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "George Whitefield Davis",
        "uri": "http://dbpedia.org/resource/George_Whitefield_Davis"
      }
    ],
    "id": "fc9e2cac170a44a2abdca158f66cd5af",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Is the assembly of tofa ahin ethopia?",
    "SerialNumber": "2280",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tofaş_Şahin> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Ethiopia> }",
    "entity mapping": [
      {
        "label": "tofa ahin",
        "uri": "http://dbpedia.org/resource/Tofaş_Şahin"
      },
      {
        "label": "ethopia",
        "uri": "http://dbpedia.org/resource/Ethiopia"
      }
    ],
    "id": "87876aa79cba44138cff493d5e2315c7",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly"
      }
    ]
  },
  {
    "question": "How many food items have an ingredient from the Sapindales family?",
    "SerialNumber": "2283",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Sapindales> . ?uri <http://dbpedia.org/ontology/ingredient> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "entity mapping": [
      {
        "label": "Sapindales",
        "uri": "http://dbpedia.org/resource/Sapindales"
      }
    ],
    "id": "ec821782125a4c71bd3630880a66897e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "food",
        "uri": "http://dbpedia.org/ontology/Food"
      }
    ]
  },
  {
    "question": "Which type of  building is Qun Thnh Temple ?",
    "SerialNumber": "2285",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Quán_Thánh_Temple> <http://dbpedia.org/property/buildingType> ?uri } ",
    "entity mapping": [
      {
        "label": "temple",
        "uri": "http://dbpedia.org/resource/Quán_Thánh_Temple"
      }
    ],
    "id": "287db86b21b143a9a561c5ba6db3d528",
    "predicate mapping": [
      {
        "label": "building type",
        "uri": "http://dbpedia.org/property/buildingType"
      }
    ]
  },
  {
    "question": "Does Stanley Cavell study Shakespeare?",
    "SerialNumber": "2286",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Stanley_Cavell> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/William_Shakespeare> }",
    "entity mapping": [
      {
        "label": "Stanley Cavell",
        "uri": "http://dbpedia.org/resource/Stanley_Cavell"
      },
      {
        "label": "Shakespeare",
        "uri": "http://dbpedia.org/resource/William_Shakespeare"
      }
    ],
    "id": "bf777652c816485f8385ae21e670622b",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "Who is the common distributer of Bombay Sapphire and Rev ?",
    "SerialNumber": "2288",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri. <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/ontology/distributor> ?uri} ",
    "entity mapping": [
      {
        "label": "Bombay Sapphire",
        "uri": "http://dbpedia.org/resource/Bombay_Sapphire"
      },
      {
        "label": "Rev",
        "uri": "http://dbpedia.org/resource/Rev_(drink)"
      }
    ],
    "id": "d369a9c08c2447f2b26af647610308bc",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/ontology/distributor"
      }
    ]
  },
  {
    "question": "Who is the headcoach of 2008-09 Marquette Golden Eagles men's basketball team ?",
    "SerialNumber": "2294",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2008–09_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ",
    "entity mapping": [
      {
        "label": "basketball marquette golden eagles",
        "uri": "http://dbpedia.org/resource/2008–09_Marquette_Golden_Eagles_men's_basketball_team"
      }
    ],
    "id": "0223d728dead415fa225cd560eb8ad33",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach"
      }
    ]
  },
  {
    "question": "In which continent do Air 2000 and Novair International airways operate?",
    "SerialNumber": "2300",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Air_2000> <http://dbpedia.org/property/destinations> ?uri. <http://dbpedia.org/resource/Novair_International_Airways> <http://dbpedia.org/property/destinations> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Continent>}",
    "entity mapping": [
      {
        "label": "Air 2000",
        "uri": "http://dbpedia.org/resource/Air_2000"
      },
      {
        "label": "Novair International airways",
        "uri": "http://dbpedia.org/resource/Novair_International_Airways"
      }
    ],
    "id": "8eaed436923e4051b575c7c6b88b9797",
    "predicate mapping": [
      {
        "label": "operate",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "operate",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "continent",
        "uri": "http://dbpedia.org/ontology/Continent"
      }
    ]
  },
  {
    "question": "Does Abdelhameed Amarri currently play for Khartoum?",
    "SerialNumber": "2303",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Abdelhameed_Amarri> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Khartoum> }",
    "entity mapping": [
      {
        "label": "Abdelhameed Amarri",
        "uri": "http://dbpedia.org/resource/Abdelhameed_Amarri"
      },
      {
        "label": "Khartoum",
        "uri": "http://dbpedia.org/resource/Khartoum"
      }
    ],
    "id": "5fe5d9294f7a466290ef022f51f60336",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub"
      }
    ]
  },
  {
    "question": "What are the name of the casualties affected by shooting rampage of Eric Harris and Dylan Klebold?",
    "SerialNumber": "2305",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Eric Harris",
        "uri": "http://dbpedia.org/resource/Eric_Harris_and_Dylan_Klebold"
      }
    ],
    "id": "9b7b817753ae40aeae2859d4023cc052",
    "predicate mapping": [
      {
        "label": "Klebold",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "Klebold",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the awards that have been given to the writer made famous for Creature Comforts?",
    "SerialNumber": "2307",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Creature_Comforts> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Creature Comforts",
        "uri": "http://dbpedia.org/resource/Creature_Comforts"
      }
    ],
    "id": "5ffd4aac7b004bd480d28d364aeb2aa4",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Who produces the tv series which made Scott Haran famous?",
    "SerialNumber": "2308",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Scott_Haran> <http://dbpedia.org/ontology/knownFor> ?x . ?x <http://dbpedia.org/ontology/producer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Scott Haran",
        "uri": "http://dbpedia.org/resource/Scott_Haran"
      }
    ],
    "id": "6e94b499964c49839c36fe479f49b5ce",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "produces",
        "uri": "http://dbpedia.org/ontology/producer"
      }
    ]
  },
  {
    "question": "List all the faiths that British Columbian politicians follow?",
    "SerialNumber": "2309",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "British Columbia",
        "uri": "http://dbpedia.org/resource/British_Columbia"
      }
    ],
    "id": "c0c8c5735c8c4188978cb1911173a8df",
    "predicate mapping": [
      {
        "label": "follow",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "What are some devices made by Taiwanese companies?",
    "SerialNumber": "2314",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}",
    "entity mapping": [
      {
        "label": "Taiwan",
        "uri": "http://dbpedia.org/resource/Taiwan"
      }
    ],
    "id": "6ba75b7096eb497b85706c1872a9dbdd",
    "predicate mapping": [
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/locationCity"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "device",
        "uri": "http://dbpedia.org/ontology/Device"
      }
    ]
  },
  {
    "question": "What is a salthill?",
    "SerialNumber": "2315",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Salthill> <http://dbpedia.org/ontology/type> ?uri } ",
    "entity mapping": [
      {
        "label": "salthill",
        "uri": "http://dbpedia.org/resource/Salthill"
      }
    ],
    "id": "fb24fef4bec1494480df389bd6d410c1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/type"
      }
    ]
  },
  {
    "question": "Does the white river flow into the connecticut river{u'_id': u'97e02dcf44aa43c1b7cc7a7c155b118f',",
    "SerialNumber": "2322",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Connecticut_River> <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/White_River_(Vermont)> }",
    "entity mapping": [
      {
        "label": "connecticut river",
        "uri": "http://dbpedia.org/resource/Connecticut_River"
      },
      {
        "label": "white river",
        "uri": "http://dbpedia.org/resource/White_River_(Vermont)"
      }
    ],
    "id": "9aa99d04670a49e185afbcd4d2a451f5",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/rightTributary"
      }
    ]
  },
  {
    "question": "What are some cars similar to luxury cars?",
    "SerialNumber": "2324",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Luxury_vehicle> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "luxury",
        "uri": "http://dbpedia.org/resource/Luxury_vehicle"
      }
    ],
    "id": "cdd77de1c8c7471fa087116e8d6f3f19",
    "predicate mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/class"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "What is the regional radio sports network associated with?",
    "SerialNumber": "2326",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Regional_Radio_Sports_Network> <http://dbpedia.org/property/affiliations> ?uri } ",
    "entity mapping": [
      {
        "label": "regional radio sports network",
        "uri": "http://dbpedia.org/resource/Regional_Radio_Sports_Network"
      }
    ],
    "id": "d8830ee89d0547a7ba604e685fe17819",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/affiliations"
      }
    ]
  },
  {
    "question": "In which state does the ambassador who is in related with J Bennett Johnston live?",
    "SerialNumber": "2329",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/J._Bennett_Johnston> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }",
    "entity mapping": [
      {
        "label": "J Bennett Johnston",
        "uri": "http://dbpedia.org/resource/J._Bennett_Johnston"
      }
    ],
    "id": "c9d240e63ba642689eb8e646e435a6e5",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "Does mumbai manage the railway line going to the daund railway junction?",
    "SerialNumber": "2331",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Daund_Junction_railway_station> <http://dbpedia.org/ontology/servingRailwayLine> <http://dbpedia.org/resource/Mumbai> }",
    "entity mapping": [
      {
        "label": "junction railway daund",
        "uri": "http://dbpedia.org/resource/Daund_Junction_railway_station"
      },
      {
        "label": "mumbai",
        "uri": "http://dbpedia.org/resource/Mumbai"
      }
    ],
    "id": "9f9eec1d2b8b4a918048a556e1a1bda5",
    "predicate mapping": [
      {
        "label": "railway",
        "uri": "http://dbpedia.org/ontology/servingRailwayLine"
      }
    ]
  },
  {
    "question": "Whihc place of birth of the Union State is also the largest city of Union Staete ?",
    "SerialNumber": "2332",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Nina_Vislova> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "Union State",
        "uri": "http://dbpedia.org/resource/Union_State"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Nina_Vislova"
      }
    ],
    "id": "7f5ac3d1ae004898ac4a4452eb9f8633",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Who is the stockholder of the road tunnels operated by the Massachusetts Department of Transportation?",
    "SerialNumber": "2333",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Massachusetts_Department_of_Transportation> . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RoadTunnel>}",
    "entity mapping": [
      {
        "label": "Massachusetts Department of Transportation",
        "uri": "http://dbpedia.org/resource/Massachusetts_Department_of_Transportation"
      }
    ],
    "id": "fbd32172a29a4fa99c58fb5f6b536bff",
    "predicate mapping": [
      {
        "label": "operated",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "road tunnel",
        "uri": "http://dbpedia.org/ontology/RoadTunnel"
      }
    ]
  },
  {
    "question": "Through which counties does the road go which starts at the Port Klang?",
    "SerialNumber": "2334",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Port_Klang> . ?x <http://dbpedia.org/ontology/county> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Road>}",
    "entity mapping": [
      {
        "label": "Port Klang",
        "uri": "http://dbpedia.org/resource/Port_Klang"
      }
    ],
    "id": "921cd73c37684f80bc35975c857bc622",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "counties",
        "uri": "http://dbpedia.org/ontology/county"
      },
      {
        "label": "road",
        "uri": "http://dbpedia.org/ontology/Road"
      }
    ]
  },
  {
    "question": "Under which president did some politicians live in Kensington?",
    "SerialNumber": "2335",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Kensington,_Maryland> . ?x <http://dbpedia.org/ontology/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Kensington",
        "uri": "http://dbpedia.org/resource/Kensington,_Maryland"
      }
    ],
    "id": "f3545d9f2444478d8c70f13b4ead6094",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "To what companies is Dennis Muilenburg important?",
    "SerialNumber": "2338",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg"
      }
    ],
    "id": "1220a8e5611d4f3da78af05e41f06c15",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who operates the railway line which begins in Minneapolis?",
    "SerialNumber": "2343",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/routeStart> <http://dbpedia.org/resource/Minneapolis> . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "entity mapping": [
      {
        "label": "Minneapolis",
        "uri": "http://dbpedia.org/resource/Minneapolis"
      }
    ],
    "id": "35a6ca70f4ec420db9bc0726e28369a3",
    "predicate mapping": [
      {
        "label": "begins",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/RailwayLine"
      }
    ]
  },
  {
    "question": "Wo which countries have the members of Ukrainian ministry of internal affairs swore their oath?",
    "SerialNumber": "2347",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)> . ?x <http://dbpedia.org/property/allegiance> ?uri  . }",
    "entity mapping": [
      {
        "label": "ministry of internal affairs",
        "uri": "http://dbpedia.org/resource/Ministry_of_Internal_Affairs_(Ukraine)"
      }
    ],
    "id": "78406ab0c12f410ea4fe01eb52998c48",
    "predicate mapping": [
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/allegiance"
      }
    ]
  },
  {
    "question": "Where did the conflict take place in which Henri Putz fought?",
    "SerialNumber": "2348",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Henri_Putz> <http://dbpedia.org/ontology/battle> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . }",
    "entity mapping": [
      {
        "label": "Henri Putz",
        "uri": "http://dbpedia.org/resource/Henri_Putz"
      }
    ],
    "id": "95206ae40dfc4899ae52dc8c2629db84",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/territory"
      }
    ]
  },
  {
    "question": "Which producer of  the Eristoff is also the  distributor of  Bombay Sapphire?",
    "SerialNumber": "2349",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eristoff> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri} ",
    "entity mapping": [
      {
        "label": "Eristoff",
        "uri": "http://dbpedia.org/resource/Eristoff"
      },
      {
        "label": "Bombay Sapphire",
        "uri": "http://dbpedia.org/resource/Bombay_Sapphire"
      }
    ],
    "id": "dc8a5681c7d44c77b2ca46dfd4f97216",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/manufacturer"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      }
    ]
  },
  {
    "question": "Which company of Ford Theatre is the owning organization of F0ord Kansa City Assemply Plant ?",
    "SerialNumber": "2353",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant> <http://dbpedia.org/ontology/owningOrganisation> ?uri. <http://dbpedia.org/resource/Ford_Theatre> <http://dbpedia.org/property/company> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Ford_Kansas_City_Assembly_Plant"
      },
      {
        "label": "Ford Theatre",
        "uri": "http://dbpedia.org/resource/Ford_Theatre"
      }
    ],
    "id": "fa0015d04c344e6cb138c160055c7bc6",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      }
    ]
  },
  {
    "question": "Is Lyndon bridge a kind of Truss bridge?",
    "SerialNumber": "2355",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lyndon_Bridge> <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Truss_bridge> }",
    "entity mapping": [
      {
        "label": "Lyndon bridge",
        "uri": "http://dbpedia.org/resource/Lyndon_Bridge"
      },
      {
        "label": "Truss bridge",
        "uri": "http://dbpedia.org/resource/Truss_bridge"
      }
    ],
    "id": "ff5b48cd5c5346e19a026ec964d8fc9d",
    "predicate mapping": [
      {
        "label": "kind",
        "uri": "http://dbpedia.org/property/design"
      }
    ]
  },
  {
    "question": "Which country gave birth to the Lemberger LD20b and Start+Flug H101 aircrafts?",
    "SerialNumber": "2356",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lemberger_LD20b> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }",
    "entity mapping": [
      {
        "label": "Lemberger LD20b",
        "uri": "http://dbpedia.org/resource/Lemberger_LD20b"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Start_+_Flug_H-101"
      }
    ],
    "id": "df292d030ce14f19904cf9e50c046181",
    "predicate mapping": [
      {
        "label": "aircrafts",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      },
      {
        "label": "aircrafts",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      }
    ]
  },
  {
    "question": "Where is Ethiopian Parliament Building located ?",
    "SerialNumber": "2358",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ethiopian_Parliament_Building> <http://dbpedia.org/property/locationCountry> ?uri } ",
    "entity mapping": [
      {
        "label": "Ethiopian Parliament Building",
        "uri": "http://dbpedia.org/resource/Ethiopian_Parliament_Building"
      }
    ],
    "id": "07d85a1276ff4600947c0e31a1cfbdb8",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCountry"
      }
    ]
  },
  {
    "question": "Enumerate the cars related to the ones assembled in Toluca?",
    "SerialNumber": "2362",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Toluca> . ?x <http://dbpedia.org/property/related> ?uri  . }",
    "entity mapping": [
      {
        "label": "Toluca",
        "uri": "http://dbpedia.org/resource/Toluca"
      }
    ],
    "id": "390932ca27634c5d95ed6cc8e1cc22e1",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/related"
      }
    ]
  },
  {
    "question": "Who wrote the album coming right before Dead Man's Chest's OST?",
    "SerialNumber": "2364",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nextAlbum> <http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Pirates_of_the_Caribbean:_Dead_Man's_Chest_(soundtrack)"
      }
    ],
    "id": "1151e6908881444aab1d23d7ba18118b",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/nextAlbum"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "Where can I find companies which originated in Canada?",
    "SerialNumber": "2367",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/locations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Canada",
        "uri": "http://dbpedia.org/resource/Canada"
      }
    ],
    "id": "133cd7d5f379447cba8204eebe933035",
    "predicate mapping": [
      {
        "label": "originated",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "originated",
        "uri": "http://dbpedia.org/property/locations"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which school of jack mcGregor attend which was also the training center of William Anthony ?",
    "SerialNumber": "2368",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/William_Anthony_(artist)> <http://dbpedia.org/ontology/training> ?uri} ",
    "entity mapping": [
      {
        "label": "jack mcGregor",
        "uri": "http://dbpedia.org/resource/Jack_McGregor"
      },
      {
        "label": "William Anthony",
        "uri": "http://dbpedia.org/resource/William_Anthony_(artist)"
      }
    ],
    "id": "bed42761fb204d2d921d29f6c2f208f9",
    "predicate mapping": [
      {
        "label": "center",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "training",
        "uri": "http://dbpedia.org/ontology/training"
      }
    ]
  },
  {
    "question": "What is the university to which Erica Frank went, and where Ivan Toplak was a club manager?",
    "SerialNumber": "2369",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Ivan_Toplak> <http://dbpedia.org/ontology/managerClub> ?uri} ",
    "entity mapping": [
      {
        "label": "Erica Frank",
        "uri": "http://dbpedia.org/resource/Erica_Frank"
      },
      {
        "label": "Ivan Toplak",
        "uri": "http://dbpedia.org/resource/Ivan_Toplak"
      }
    ],
    "id": "3d59ca37e4b14a8cb41c75edc17b64a4",
    "predicate mapping": [
      {
        "label": "manager",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "manager club",
        "uri": "http://dbpedia.org/ontology/managerClub"
      }
    ]
  },
  {
    "question": "To which party do the politicians who died in Delhi belong?",
    "SerialNumber": "2370",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfDeath> <http://dbpedia.org/resource/Delhi> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Delhi",
        "uri": "http://dbpedia.org/resource/Delhi"
      }
    ],
    "id": "2777b95873e84c3fb7296d2c71c9a917",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which appointer of William Clark is the successor of Levi Lincoln Sr ?",
    "SerialNumber": "2371",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Levi_Lincoln,_Sr.> <http://dbpedia.org/property/successor> ?uri. <http://dbpedia.org/resource/William_Clark> <http://dbpedia.org/property/appointer> ?uri} ",
    "entity mapping": [
      {
        "label": "lincoln levi",
        "uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr."
      },
      {
        "label": "William Clark",
        "uri": "http://dbpedia.org/resource/William_Clark"
      }
    ],
    "id": "e3b7d06679344c72ad872f44eef2b7ec",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/property/appointer"
      }
    ]
  },
  {
    "question": "What is the hometown of the residents of Martha's vineyards?",
    "SerialNumber": "2372",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Martha's_Vineyard> . ?x <http://dbpedia.org/ontology/hometown> ?uri  . }",
    "entity mapping": [
      {
        "label": "Martha's vineyard",
        "uri": "http://dbpedia.org/resource/Martha's_Vineyard"
      }
    ],
    "id": "a1e36ed22095495ebef02d6a2bcc945b",
    "predicate mapping": [
      {
        "label": "residents",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/ontology/hometown"
      }
    ]
  },
  {
    "question": "Which companies have launched a rocket from Cape Canaveral Air Force station?",
    "SerialNumber": "2373",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Rocket>}",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force station",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station"
      }
    ],
    "id": "76748f8d6e754610ad1d151828b63d55",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "rocket",
        "uri": "http://dbpedia.org/ontology/Rocket"
      }
    ]
  },
  {
    "question": "Does the north carolina highway 280 end in Arden?",
    "SerialNumber": "2375",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/North_Carolina_Highway_280> <http://dbpedia.org/ontology/routeEnd> <http://dbpedia.org/resource/Arden,_North_Carolina> }",
    "entity mapping": [
      {
        "label": "north carolina highway 280",
        "uri": "http://dbpedia.org/resource/North_Carolina_Highway_280"
      },
      {
        "label": "carolina north arden",
        "uri": "http://dbpedia.org/resource/Arden,_North_Carolina"
      }
    ],
    "id": "4672bed413aa4edca536b02a3e76dd48",
    "predicate mapping": [
      {
        "label": "end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "Scientists at the University of Queensland have won which awards?",
    "SerialNumber": "2385",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Queensland> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "University of Queensland",
        "uri": "http://dbpedia.org/resource/University_of_Queensland"
      }
    ],
    "id": "e487c6936b554e3d8395e85c17492758",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "Scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "name the Glover's distributer ?",
    "SerialNumber": "2391",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri } ",
    "entity mapping": [
      {
        "label": "Glover",
        "uri": "http://dbpedia.org/resource/Glover_(video_game)"
      }
    ],
    "id": "72cc5d9d290e4955a73f49b22c0110b3",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/ontology/distributor"
      }
    ]
  },
  {
    "question": "What nation is Hornito located in, where Jamie Bateman Cayn died too?",
    "SerialNumber": "2392",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jaime_Bateman_Cayón> <http://dbpedia.org/ontology/deathPlace> ?uri. <http://dbpedia.org/resource/Hornito,_Chiriquí> <http://dbpedia.org/ontology/country> ?uri . }",
    "entity mapping": [
      {
        "label": "bateman",
        "uri": "http://dbpedia.org/resource/Jaime_Bateman_Cayón"
      },
      {
        "label": "hornito",
        "uri": "http://dbpedia.org/resource/Hornito,_Chiriquí"
      }
    ],
    "id": "83a8ac74414c41bdb0cbf6842d12b28f",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "List the Sci-fi TV shows with theme music given by Ron Grainer?",
    "SerialNumber": "2394",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Ron_Grainer>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Science_fiction"
      },
      {
        "label": "Ron Grainer",
        "uri": "http://dbpedia.org/resource/Ron_Grainer"
      }
    ],
    "id": "cd9712900aa94048b9a54b08142c25f4",
    "predicate mapping": [
      {
        "label": "TV",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "theme music",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "who are all the people who have managed the England's under 20 soccer team?",
    "SerialNumber": "2396",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/managerClub> <http://dbpedia.org/resource/England_national_under-20_football_team> } ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/England_national_under-20_football_team"
      }
    ],
    "id": "fa725591411f4ce1ae2beceed79c3adb",
    "predicate mapping": [
      {
        "label": "managed",
        "uri": "http://dbpedia.org/ontology/managerClub"
      }
    ]
  },
  {
    "question": "Where are all the protected areas near Bend, Oregon?",
    "SerialNumber": "2398",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nearestCity> <http://dbpedia.org/resource/Bend,_Oregon> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ProtectedArea>}",
    "entity mapping": [
      {
        "label": "Bend, Oregon",
        "uri": "http://dbpedia.org/resource/Bend,_Oregon"
      }
    ],
    "id": "2af11bb3bb23402891e39bffb10bc960",
    "predicate mapping": [
      {
        "label": "near",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      },
      {
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "protected area",
        "uri": "http://dbpedia.org/ontology/ProtectedArea"
      }
    ]
  },
  {
    "question": "Does the hudson river flow into the lower manhatten?",
    "SerialNumber": "2399",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hudson_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Lower_Manhattan> }",
    "entity mapping": [
      {
        "label": "hudson river",
        "uri": "http://dbpedia.org/resource/Hudson_River"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Lower_Manhattan"
      }
    ],
    "id": "ede4d3ef0e754051afede4dcc6babe40",
    "predicate mapping": [
      {
        "label": "lower",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      }
    ]
  },
  {
    "question": "In how many places did Julian Leow Beng Kim study?",
    "SerialNumber": "2400",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Julian_Leow_Beng_Kim> <http://dbpedia.org/property/almaMater> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Julian Leow Beng Kim",
        "uri": "http://dbpedia.org/resource/Julian_Leow_Beng_Kim"
      }
    ],
    "id": "229e4197d78f417ca569f31cb727d19d",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "How many movies have been directed by almunies of Parsons School of Design?",
    "SerialNumber": "2403",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Parsons_School_of_Design> . ?uri <http://dbpedia.org/ontology/director> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Parsons School of Design",
        "uri": "http://dbpedia.org/resource/Parsons_School_of_Design"
      }
    ],
    "id": "a9dbfce5738c47e2bb59273f4492c7b3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Was einstein a doctoral student of Alfred Kleiner?",
    "SerialNumber": "2405",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Alfred_Kleiner> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Albert_Einstein> }",
    "entity mapping": [
      {
        "label": "Alfred Kleiner",
        "uri": "http://dbpedia.org/resource/Alfred_Kleiner"
      },
      {
        "label": "einstein",
        "uri": "http://dbpedia.org/resource/Albert_Einstein"
      }
    ],
    "id": "f107c093f6cd4143af7f686892a28d70",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      }
    ]
  },
  {
    "question": "Is the Mount St Peter Church made in the international architectural style?",
    "SerialNumber": "2406",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_St._Peter_Church> <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/International_Style_(architecture)> }",
    "entity mapping": [
      {
        "label": "church peter mount",
        "uri": "http://dbpedia.org/resource/Mount_St._Peter_Church"
      },
      {
        "label": "international architectural style",
        "uri": "http://dbpedia.org/resource/International_Style_(architecture)"
      }
    ],
    "id": "36f0f09f20ba45daacd083a3e57bd8b2",
    "predicate mapping": [
      {
        "label": "architectural style",
        "uri": "http://dbpedia.org/property/architecture"
      }
    ]
  },
  {
    "question": "Who owns the bank where Fabio Mercurio works?",
    "SerialNumber": "2411",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Fabio_Mercurio> <http://dbpedia.org/property/institution> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "Fabio Mercurio",
        "uri": "http://dbpedia.org/resource/Fabio_Mercurio"
      }
    ],
    "id": "8da4d7ea35a54979b46ddfbfc64b1b5c",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/property/institution"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "What shows are aired on sister channels of BBC Parliaments",
    "SerialNumber": "2412",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/BBC_Parliament> . ?uri <http://dbpedia.org/ontology/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "BBC Parliament",
        "uri": "http://dbpedia.org/resource/BBC_Parliament"
      }
    ],
    "id": "2f903de0d05c4f3c9eb0fcf478f43406",
    "predicate mapping": [
      {
        "label": "sister",
        "uri": "http://dbpedia.org/property/sisterNames"
      },
      {
        "label": "channels",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Starwood operates in which places?",
    "SerialNumber": "2414",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }",
    "entity mapping": [
      {
        "label": "Starwood",
        "uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide"
      }
    ],
    "id": "00922db47d90435cb5df5903a5025450",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/address"
      }
    ]
  },
  {
    "question": "Which fictional character portrayed by Roger barton has Padm Amidala as family ?",
    "SerialNumber": "2417",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/portrayer> <http://dbpedia.org/resource/Roger_Barton_(film_editor)> . ?uri <http://dbpedia.org/property/family> <http://dbpedia.org/resource/Padmé_Amidala>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Roger barton",
        "uri": "http://dbpedia.org/resource/Roger_Barton_(film_editor)"
      },
      {
        "label": "amidala padm",
        "uri": "http://dbpedia.org/resource/Padmé_Amidala"
      }
    ],
    "id": "f14f313e8dc0452884affe033d0a04fe",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/property/portrayer"
      },
      {
        "label": "family",
        "uri": "http://dbpedia.org/property/family"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Which things have been located, where governance is Houston City Council?",
    "SerialNumber": "2420",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/Houston_City_Council> . ?uri <http://dbpedia.org/ontology/location> ?x  . }",
    "entity mapping": [
      {
        "label": "Houston City Council",
        "uri": "http://dbpedia.org/resource/Houston_City_Council"
      }
    ],
    "id": "82f48c9c0f194d4090c22604bf2864c5",
    "predicate mapping": [
      {
        "label": "governance",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "governance",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "What awards have been given to people schooled in the Everton park state high?",
    "SerialNumber": "2421",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/education> <http://dbpedia.org/resource/Everton_Park_State_High_School> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Everton",
        "uri": "http://dbpedia.org/resource/Everton_Park_State_High_School"
      }
    ],
    "id": "832739b6967a4676b06c86e5b1426922",
    "predicate mapping": [
      {
        "label": "high",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "high",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Where is the south shore plaza located?",
    "SerialNumber": "2423",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Shore_Plaza> <http://dbpedia.org/property/address> ?uri } ",
    "entity mapping": [
      {
        "label": "south shore plaza",
        "uri": "http://dbpedia.org/resource/South_Shore_Plaza"
      }
    ],
    "id": "31a8e6b4c59a4b4eac26800d28fb8078",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address"
      }
    ]
  },
  {
    "question": "What is written in a programming language developed by GNOME Project?",
    "SerialNumber": "2427",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/The_GNOME_Project> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . }",
    "entity mapping": [
      {
        "label": "project gnome",
        "uri": "http://dbpedia.org/resource/The_GNOME_Project"
      }
    ],
    "id": "8e7ec89e4ed941bf8ca2d3ac48db3969",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      }
    ]
  },
  {
    "question": "Count all the stateless people",
    "SerialNumber": "2428",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/citizenship> <http://dbpedia.org/resource/Statelessness>  . }",
    "entity mapping": [
      {
        "label": "stateless",
        "uri": "http://dbpedia.org/resource/Statelessness"
      }
    ],
    "id": "35abbfdef65f48d399ea86f591412293",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/citizenship"
      }
    ]
  },
  {
    "question": "What is the television show with presentator as Ryan Seacrest and theme music composer as Julian Gingell?",
    "SerialNumber": "2433",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest"
      },
      {
        "label": "Julian Gingell",
        "uri": "http://dbpedia.org/resource/Julian_Gingell"
      }
    ],
    "id": "d36cd4157a5647ac96cd3a1013473247",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "River which flows into the eugene mahoney state park pass through which states?",
    "SerialNumber": "2434",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park> . ?x <http://dbpedia.org/ontology/state> ?uri  . }",
    "entity mapping": [
      {
        "label": "mahoney eugene state",
        "uri": "http://dbpedia.org/resource/Eugene_T._Mahoney_State_Park"
      }
    ],
    "id": "8aefda4d445e431ba18e9893471a7d0e",
    "predicate mapping": [
      {
        "label": "pass",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      }
    ]
  },
  {
    "question": "For how many cities's teams did David Bowens play?",
    "SerialNumber": "2436",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/David_Bowens> <http://dbpedia.org/ontology/formerTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "David Bowens",
        "uri": "http://dbpedia.org/resource/David_Bowens"
      }
    ],
    "id": "e3e4596a38cd41b5925a1131d75af14f",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Give me a count of everything made by the company which offers electronical manufacturing too.",
    "SerialNumber": "2451",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Electronics_manufacturing_services> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "entity mapping": [
      {
        "label": "manufacturing",
        "uri": "http://dbpedia.org/resource/Electronics_manufacturing_services"
      }
    ],
    "id": "0c63debd713445eebabef107c1f94b34",
    "predicate mapping": [
      {
        "label": "manufacturing",
        "uri": "http://dbpedia.org/ontology/service"
      },
      {
        "label": "made by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "What currencies are prevalent in the countries governed by the President of France?",
    "SerialNumber": "2454",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_France> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "President of France",
        "uri": "http://dbpedia.org/resource/President_of_France"
      }
    ],
    "id": "86c4146411a441b9b7ae67962a14c5a7",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leaderTitle"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Which teams have used the stadium whose architect was Populous ?",
    "SerialNumber": "2455",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Populous",
        "uri": "http://dbpedia.org/resource/Populous_(company)"
      }
    ],
    "id": "804153ef4a04420d9160d3b4da5a2545",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "How many contries surround the seas on the banks of which is the city of Cancun?",
    "SerialNumber": "2459",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Cancún> . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cancun",
        "uri": "http://dbpedia.org/resource/Cancún"
      }
    ],
    "id": "4b63d37cdc444e47bb79f766451d32ac",
    "predicate mapping": [
      {
        "label": "banks",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Which city was designed by saleen Pator which is also the birht location of Jimmy Diggs ?",
    "SerialNumber": "2462",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Saleen_S5S_Raptor> <http://dbpedia.org/property/designer> ?uri. <http://dbpedia.org/resource/Jimmy_Diggs> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "saleen",
        "uri": "http://dbpedia.org/resource/Saleen_S5S_Raptor"
      },
      {
        "label": "Jimmy Diggs",
        "uri": "http://dbpedia.org/resource/Jimmy_Diggs"
      }
    ],
    "id": "888e5195b6724c50955a1020e553cbf6",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Name the office holder whose theatre is Siege of Fort Recovery and belongs to Indian territory branch ?",
    "SerialNumber": "2464",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Indiana_Territory>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Siege of Fort Recovery",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery"
      },
      {
        "label": "territory indian",
        "uri": "http://dbpedia.org/resource/Indiana_Territory"
      }
    ],
    "id": "b7ffb05378d2452b978792c947b826e3",
    "predicate mapping": [
      {
        "label": "theatre",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What was the university of the rugby player who coached the Stanford rugby teams during 1906-1917?",
    "SerialNumber": "2465",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/1906–17_Stanford_rugby_teams> <http://dbpedia.org/property/headcoach> ?x . ?x <http://dbpedia.org/ontology/university> ?uri  . }",
    "entity mapping": [
      {
        "label": "stanford",
        "uri": "http://dbpedia.org/resource/1906–17_Stanford_rugby_teams"
      }
    ],
    "id": "6aad2feaead44d8e87827dc6c1ff9a57",
    "predicate mapping": [
      {
        "label": "coached",
        "uri": "http://dbpedia.org/property/headcoach"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university"
      }
    ]
  },
  {
    "question": "Which sports are played at both the Polytech uni of Bataan and Taguig?",
    "SerialNumber": "2466",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri . }",
    "entity mapping": [
      {
        "label": "polytech bataan",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan"
      },
      {
        "label": "polytech taguig",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig"
      }
    ],
    "id": "235bac8ebb9049149d10aec4b92b6881",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "What layout can be found in cars similar to the Subaru Outback?",
    "SerialNumber": "2469",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Subaru Outback",
        "uri": "http://dbpedia.org/resource/Subaru_Outback"
      }
    ],
    "id": "3de0eac5123f4e209570dffcc7b9e398",
    "predicate mapping": [
      {
        "label": "similar",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "How many organizations work for Environmentalism?",
    "SerialNumber": "2471",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/purpose> <http://dbpedia.org/resource/Environmentalism>  . }",
    "entity mapping": [
      {
        "label": "Environmentalism",
        "uri": "http://dbpedia.org/resource/Environmentalism"
      }
    ],
    "id": "a8dde84d23764e07b345f79862bd2561",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/purpose"
      }
    ]
  },
  {
    "question": "Which producer of Boeing F/A-18E/F Super Hornet has a key person Dennis Muilenburg ?",
    "SerialNumber": "2472",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet>  . }",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg"
      }
    ],
    "id": "1876b2c28ef241b785166c94d876c850",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "hornet super",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet"
      }
    ]
  },
  {
    "question": "To which uni. did  sidney c patridge and cyril hume both once went?",
    "SerialNumber": "2473",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sidney_Catlin_Partridge> <http://dbpedia.org/property/education> ?uri. <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Sidney_Catlin_Partridge"
      },
      {
        "label": "cyril hume",
        "uri": "http://dbpedia.org/resource/Cyril_Hume"
      }
    ],
    "id": "f15503debeab476e92bec7104ca5599b",
    "predicate mapping": [
      {
        "label": "sidney",
        "uri": "http://dbpedia.org/property/education"
      },
      {
        "label": "sidney",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "To which party does the politician belong, who was born in Nandurbar?",
    "SerialNumber": "2477",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Nandurbar> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "Nandurbar",
        "uri": "http://dbpedia.org/resource/Nandurbar"
      }
    ],
    "id": "6ba161b8976648ed9d66e2ddb758f1f2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "People who debuted from Houston Astros have played in which clubs?",
    "SerialNumber": "2482",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/debutTeam> <http://dbpedia.org/resource/Houston_Astros> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Houston Astros",
        "uri": "http://dbpedia.org/resource/Houston_Astros"
      }
    ],
    "id": "cfcc12ca99344c948bb29580893f960e",
    "predicate mapping": [
      {
        "label": "debuted",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What sport played at Islamic azad uni employes Craig Van Tilbury?",
    "SerialNumber": "2483",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "Craig Van Tilbury",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury"
      },
      {
        "label": "islamic azad",
        "uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch"
      }
    ],
    "id": "0cf0d3fc76114f5bb2970fc5db230b49",
    "predicate mapping": [
      {
        "label": "employes",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Where are Solidus and Aureus used?",
    "SerialNumber": "2484",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Solidus_(coin)> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus> . }",
    "entity mapping": [
      {
        "label": "Solidus",
        "uri": "http://dbpedia.org/resource/Solidus_(coin)"
      },
      {
        "label": "Aureus",
        "uri": "http://dbpedia.org/resource/Aureus"
      }
    ],
    "id": "1a1fe17b13dd4e109fdd6073577080a4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "Did Christian Barnard study in the University of Minnesota?",
    "SerialNumber": "2491",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Christiaan_Barnard> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/University_of_Minnesota> }",
    "entity mapping": [
      {
        "label": "Christian Barnard",
        "uri": "http://dbpedia.org/resource/Christiaan_Barnard"
      },
      {
        "label": "University of Minnesota",
        "uri": "http://dbpedia.org/resource/University_of_Minnesota"
      }
    ],
    "id": "bd015efa79cc4cf6ace73ea181c96abd",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/institution"
      }
    ]
  },
  {
    "question": "What is the home town of the Rolando Gomez is the DOD of the Clyde McNeal ?",
    "SerialNumber": "2495",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rolando_Gomez> <http://dbpedia.org/property/homeTown> ?uri. <http://dbpedia.org/resource/Clyde_McNeal> <http://dbpedia.org/property/deathDate> ?uri} ",
    "entity mapping": [
      {
        "label": "Rolando Gomez",
        "uri": "http://dbpedia.org/resource/Rolando_Gomez"
      },
      {
        "label": "Clyde McNeal",
        "uri": "http://dbpedia.org/resource/Clyde_McNeal"
      }
    ],
    "id": "78242b591ed14293a5c985c9cdb0a3ab",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown"
      },
      {
        "label": "DOD",
        "uri": "http://dbpedia.org/property/deathDate"
      }
    ]
  },
  {
    "question": "List the home town of the people who have Ontario as one of it ?",
    "SerialNumber": "2499",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/homeTown> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ontario",
        "uri": "http://dbpedia.org/resource/Ontario"
      }
    ],
    "id": "87b748e0d7f448dfad6f4d9e657df140",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/property/homeTown"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Pennsylvania has how many american football teams?",
    "SerialNumber": "2501",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Pennsylvania>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "entity mapping": [
      {
        "label": "Pennsylvania",
        "uri": "http://dbpedia.org/resource/Pennsylvania"
      }
    ],
    "id": "1a867d312a124069949fc1d4e7e99000",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam"
      }
    ]
  },
  {
    "question": "name the region served by Jerusalem Institue of Justice which was also the conflict region in GazaIsrael ?",
    "SerialNumber": "2503",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerusalem_Institute_of_Justice> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/Gaza–Israel_conflict> <http://dbpedia.org/property/result> ?uri} ",
    "entity mapping": [
      {
        "label": "jerusalem",
        "uri": "http://dbpedia.org/resource/Jerusalem_Institute_of_Justice"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gaza–Israel_conflict"
      }
    ],
    "id": "b2cd1f2860c74a409807a44fab5702ff",
    "predicate mapping": [
      {
        "label": "region",
        "uri": "http://dbpedia.org/ontology/service"
      },
      {
        "label": "region",
        "uri": "http://dbpedia.org/property/result"
      }
    ]
  },
  {
    "question": "Count the number of different religions that field marshals have followed?",
    "SerialNumber": "2504",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Field_marshal> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "field marshals",
        "uri": "http://dbpedia.org/resource/Field_marshal"
      }
    ],
    "id": "880132cb380144518ffc1218cb9fb11e",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Who wrote the singles on the Main Course?",
    "SerialNumber": "2508",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Main_Course> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "Main Course",
        "uri": "http://dbpedia.org/resource/Main_Course"
      }
    ],
    "id": "ff272b89f0e04ea683d6f633ea223754",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/album"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "Name a few whose live in a place where Indian English is an official language",
    "SerialNumber": "2513",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Indian_English> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
    "entity mapping": [
      {
        "label": "Indian English",
        "uri": "http://dbpedia.org/resource/Indian_English"
      }
    ],
    "id": "000c7ab2bce24308b9e2d7886852c5ab",
    "predicate mapping": [
      {
        "label": "official language",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "What are some Louisiana based models known for?",
    "SerialNumber": "2516",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
    "entity mapping": [
      {
        "label": "Louisiana",
        "uri": "http://dbpedia.org/resource/Louisiana"
      }
    ],
    "id": "b1e194a22c164d3a9200e8ed3425fd1b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "model",
        "uri": "http://dbpedia.org/ontology/Model"
      }
    ]
  },
  {
    "question": "List the awards given to the important people of Aardman Animations?",
    "SerialNumber": "2518",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Aardman_Animations> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Aardman Animations",
        "uri": "http://dbpedia.org/resource/Aardman_Animations"
      }
    ],
    "id": "ea43482e56b84335b891f1be6326132e",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Where does the publisher of Kathimerini live?",
    "SerialNumber": "2522",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kathimerini> <http://dbpedia.org/ontology/publisher> ?x . ?x <http://dbpedia.org/property/residence> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kathimerini",
        "uri": "http://dbpedia.org/resource/Kathimerini"
      }
    ],
    "id": "c830276732964533b201803bc7dbe949",
    "predicate mapping": [
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "To which places do the flights go by airlines headquartered in the UK?",
    "SerialNumber": "2524",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/United_Kingdom> . ?x <http://dbpedia.org/property/destinations> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "UK",
        "uri": "http://dbpedia.org/resource/United_Kingdom"
      }
    ],
    "id": "efb84d67dd2347d9b6b254799a4661c3",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "ed",
        "uri": "http://dbpedia.org/property/destinations"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "Relatives of Moses used to follow which religions?",
    "SerialNumber": "2525",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Moses> <http://dbpedia.org/ontology/relative> ?x . ?x <http://dbpedia.org/ontology/veneratedIn> ?uri  . }",
    "entity mapping": [
      {
        "label": "Moses",
        "uri": "http://dbpedia.org/resource/Moses"
      }
    ],
    "id": "1b85b83eced84ed5bac6ce3b7641fe6b",
    "predicate mapping": [
      {
        "label": "Relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "religions",
        "uri": "http://dbpedia.org/ontology/veneratedIn"
      }
    ]
  },
  {
    "question": "What sports are played at institutes affiliated by the Association of Southeast Asian Institutes of Higher Learning?",
    "SerialNumber": "2526",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning> . ?x <http://dbpedia.org/ontology/sport> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "entity mapping": [
      {
        "label": "Association of Southeast Asian Institutes",
        "uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning"
      }
    ],
    "id": "e1bf04582dd24181bedaeba350fbf86e",
    "predicate mapping": [
      {
        "label": "Learning",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "Learning",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution"
      }
    ]
  },
  {
    "question": "What sport amongst the one Lagos Preparatory School practices, did Willian Garne play for?",
    "SerialNumber": "2528",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lagos_Preparatory_School> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/William_Garne> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "entity mapping": [
      {
        "label": "Lagos Preparatory School",
        "uri": "http://dbpedia.org/resource/Lagos_Preparatory_School"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/William_Garne"
      }
    ],
    "id": "16c8192ee06a41f8b0849022a7a0a8d0",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "With which artist did the musical artist of Groove Thang collaborated ?",
    "SerialNumber": "2530",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Groove_Thang> <http://dbpedia.org/ontology/musicalArtist> ?x . ?x <http://dbpedia.org/property/associatedActs> ?uri  . }",
    "entity mapping": [
      {
        "label": "Groove Thang",
        "uri": "http://dbpedia.org/resource/Groove_Thang"
      }
    ],
    "id": "bb2d7162c47e46b9a5ccd94bed534a92",
    "predicate mapping": [
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      },
      {
        "label": "collaborated",
        "uri": "http://dbpedia.org/property/associatedActs"
      }
    ]
  },
  {
    "question": "Where can i find salad based food?",
    "SerialNumber": "2531",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Salad> . ?x <http://dbpedia.org/property/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "salad",
        "uri": "http://dbpedia.org/resource/Salad"
      }
    ],
    "id": "e4e55365215047349dcabad761023fd4",
    "predicate mapping": [
      {
        "label": "food",
        "uri": "http://dbpedia.org/property/mainIngredient"
      },
      {
        "label": "food",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "In which state do darren brass and belvin perry live?",
    "SerialNumber": "2533",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Darren_Brass> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Belvin_Perry> <http://dbpedia.org/ontology/residence> ?uri . }",
    "entity mapping": [
      {
        "label": "darren brass",
        "uri": "http://dbpedia.org/resource/Darren_Brass"
      },
      {
        "label": "belvin perry",
        "uri": "http://dbpedia.org/resource/Belvin_Perry"
      }
    ],
    "id": "f01521d56f7e45d38d7855d22371b453",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Which team did wolfred McDonald is also the prospect team of Milkhail Pashnin ?",
    "SerialNumber": "2535",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mikhail_Pashnin> <http://dbpedia.org/property/prospectTeam> ?uri. <http://dbpedia.org/resource/Wilfred_McDonald> <http://dbpedia.org/property/playedFor> ?uri} ",
    "entity mapping": [
      {
        "label": "pashnin",
        "uri": "http://dbpedia.org/resource/Mikhail_Pashnin"
      },
      {
        "label": "mcdonald",
        "uri": "http://dbpedia.org/resource/Wilfred_McDonald"
      }
    ],
    "id": "9c6b233ade344cbfa7f26302aa1584cc",
    "predicate mapping": [
      {
        "label": "prospect team",
        "uri": "http://dbpedia.org/property/prospectTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      }
    ]
  },
  {
    "question": "Where did Andy Wyant die and Robert Rodi was born in?",
    "SerialNumber": "2536",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Rodi> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/Andy_Wyant> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "Robert Rodi",
        "uri": "http://dbpedia.org/resource/Robert_Rodi"
      },
      {
        "label": "Andy Wyant",
        "uri": "http://dbpedia.org/resource/Andy_Wyant"
      }
    ],
    "id": "7cedb64c402a4e7cacbcc2a3d3a3280a",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Name a colonel whose resting place is Montpelier ?",
    "SerialNumber": "2537",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }",
    "entity mapping": [
      {
        "label": "colonel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)"
      },
      {
        "label": "Montpelier",
        "uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)"
      }
    ],
    "id": "95aa0849c5cc45f18b94c5427546188b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/rank"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "Where did the ultimate fighter: a champion will be crowned tonight and ultimate fighter: team rousey vs team tate take place?",
    "SerialNumber": "2539",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned> <http://dbpedia.org/property/city> ?uri. <http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate> <http://dbpedia.org/property/city> ?uri . }",
    "entity mapping": [
      {
        "label": "the ultimate fighter: a champion will be crowned",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_A_Champion_Will_Be_Crowned"
      },
      {
        "label": "ultimate fighter: rousey",
        "uri": "http://dbpedia.org/resource/The_Ultimate_Fighter:_Team_Rousey_vs._Team_Tate"
      }
    ],
    "id": "364043e289af4b249909ba7a1c28c8ac",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/city"
      }
    ]
  },
  {
    "question": "Is The Universe in a Single Atom a book about buddhism?",
    "SerialNumber": "2542",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Universe_in_a_Single_Atom> <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Buddhism> }",
    "entity mapping": [
      {
        "label": "The Universe in a Single Atom",
        "uri": "http://dbpedia.org/resource/The_Universe_in_a_Single_Atom"
      },
      {
        "label": "buddhism",
        "uri": "http://dbpedia.org/resource/Buddhism"
      }
    ],
    "id": "459dcf9d415e401787e5bfb3af170b9b",
    "predicate mapping": [
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      }
    ]
  },
  {
    "question": "Which musician was born in Harriman, NY?",
    "SerialNumber": "2544",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Harriman,_New_York>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "harriman,",
        "uri": "http://dbpedia.org/resource/Harriman,_New_York"
      }
    ],
    "id": "992095c492cf4b5ab41703a61761cbab",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "What are the famous Uni Toronto scientists known for?",
    "SerialNumber": "2545",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/University_of_Toronto> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Uni Toronto",
        "uri": "http://dbpedia.org/resource/University_of_Toronto"
      }
    ],
    "id": "01676793d39944c3aa2728c8e59460dd",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many veterans are buried in the US?",
    "SerialNumber": "2546",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "ccdd008db26a4b1bb06b083c9a25de17",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "Count the PhD students whose thesis are supervised by National Medal of Science winners?",
    "SerialNumber": "2547",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/National_Medal_of_Science> . ?x <http://dbpedia.org/property/doctoralStudents> ?uri  . }",
    "entity mapping": [
      {
        "label": "National Medal of Science",
        "uri": "http://dbpedia.org/resource/National_Medal_of_Science"
      }
    ],
    "id": "d8cbe0bde1c74580876d692bc41e1096",
    "predicate mapping": [
      {
        "label": "winners",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "students",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      }
    ]
  },
  {
    "question": "Count number of people who follow a religion which has an important office in Gold Base ?",
    "SerialNumber": "2548",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Gold_Base> . ?uri <http://dbpedia.org/ontology/religion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Gold Base",
        "uri": "http://dbpedia.org/resource/Gold_Base"
      }
    ],
    "id": "0b008d07b5aa42aeb3116f72525c05a2",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the relegious affiliations of Katyayana ?",
    "SerialNumber": "2552",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Katyayana_(Buddhist)> <http://dbpedia.org/property/religion> ?uri } ",
    "entity mapping": [
      {
        "label": "Katyayana",
        "uri": "http://dbpedia.org/resource/Katyayana_(Buddhist)"
      }
    ],
    "id": "ac18c05943054b51a0b6a6c6483e24fa",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "List the name of those who became famous for something garrisoned at Tennessee?",
    "SerialNumber": "2556",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/garrison> <http://dbpedia.org/resource/Tennessee> . ?uri <http://dbpedia.org/property/knownFor> ?x  . }",
    "entity mapping": [
      {
        "label": "Tennessee",
        "uri": "http://dbpedia.org/resource/Tennessee"
      }
    ],
    "id": "ae1e012a0df44d74ab74f9890661c43e",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      },
      {
        "label": "ed",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "How many people have led agencies in German occupied Europe?",
    "SerialNumber": "2557",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "entity mapping": [
      {
        "label": "German occupied Europe",
        "uri": "http://dbpedia.org/resource/German-occupied_Europe"
      }
    ],
    "id": "7e7d19cbdc3d4fb7b2b4b7110f6aab4e",
    "predicate mapping": [
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/property/jurisdiction"
      },
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "Who was the cover artist of The Adventure of Tom Sawyer also wrote mark Twain Tonight ?",
    "SerialNumber": "2559",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer> <http://dbpedia.org/ontology/coverArtist> ?uri. <http://dbpedia.org/resource/Mark_Twain_Tonight> <http://dbpedia.org/property/writer> ?uri} ",
    "entity mapping": [
      {
        "label": "adventure sawyer",
        "uri": "http://dbpedia.org/resource/The_Adventures_of_Tom_Sawyer"
      },
      {
        "label": "mark Twain Tonight",
        "uri": "http://dbpedia.org/resource/Mark_Twain_Tonight"
      }
    ],
    "id": "b73800c673354bf3b828496ea3a2c9d6",
    "predicate mapping": [
      {
        "label": "cover artist",
        "uri": "http://dbpedia.org/ontology/coverArtist"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "What is the subject of the book which preceded Sagan's Cosmos?",
    "SerialNumber": "2562",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/subject> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cosmos",
        "uri": "http://dbpedia.org/resource/Cosmos_(Carl_Sagan_book)"
      }
    ],
    "id": "4ef62e8a57af45229de3bc04ae17a70b",
    "predicate mapping": [
      {
        "label": "preceded",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      }
    ]
  },
  {
    "question": "What was developed by someone working in Cockroach Labs?",
    "SerialNumber": "2563",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Cockroach_Labs> . ?uri <http://dbpedia.org/property/author> ?x  . }",
    "entity mapping": [
      {
        "label": "Cockroach Labs",
        "uri": "http://dbpedia.org/resource/Cockroach_Labs"
      }
    ],
    "id": "cb47161368654599a123ac5ecc45c968",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/employer"
      },
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "How did Letitia MacTavish Hargrave died ?",
    "SerialNumber": "2565",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri } ",
    "entity mapping": [
      {
        "label": "Letitia MacTavish Hargrave",
        "uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave"
      }
    ],
    "id": "d47969ab783e4582a2e2fb7e0f0f5e8e",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "In how many different stadiums are the seasons of the 2015 NA Soccer league held?",
    "SerialNumber": "2572",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/2015_North_American_Soccer_League_season> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "soccer league",
        "uri": "http://dbpedia.org/resource/2015_North_American_Soccer_League_season"
      }
    ],
    "id": "f10350d3685640838feea5fdeaf7d694",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "held",
        "uri": "http://dbpedia.org/ontology/ground"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "In which countries were the Russian volleyball team players born?",
    "SerialNumber": "2573",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Russia_women's_national_volleyball_team> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Russian",
        "uri": "http://dbpedia.org/resource/Russia_women's_national_volleyball_team"
      }
    ],
    "id": "7713d7e1c178466791f85588f6e6bc0f",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/nationalteam"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Which river originate from limerick?",
    "SerialNumber": "2575",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Limerick>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "limerick",
        "uri": "http://dbpedia.org/resource/Limerick"
      }
    ],
    "id": "f01085ed6c1646a49adc3df33bf1df55",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Name the veneration of the monarch who is the predecessor of Solomon?",
    "SerialNumber": "2577",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Solomon> <http://dbpedia.org/property/predecessor> ?x . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Monarch>}",
    "entity mapping": [
      {
        "label": "Solomon",
        "uri": "http://dbpedia.org/resource/Solomon"
      }
    ],
    "id": "f53a548559d847459560227f6de16c73",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "veneration",
        "uri": "http://dbpedia.org/property/veneratedIn"
      },
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/Monarch"
      }
    ]
  },
  {
    "question": "Who operates the Ganz UV?",
    "SerialNumber": "2578",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri } ",
    "entity mapping": [
      {
        "label": "Ganz UV",
        "uri": "http://dbpedia.org/resource/Ganz_UV"
      }
    ],
    "id": "7f98833cf8c94eed9fdf6fb194c481be",
    "predicate mapping": [
      {
        "label": "operates",
        "uri": "http://dbpedia.org/ontology/operator"
      }
    ]
  },
  {
    "question": "In which country was GM was firt aired which is also the mouth country of Upper Neretva?",
    "SerialNumber": "2580",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/mouthCountry> ?uri. <http://dbpedia.org/resource/Gümüş_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri} ",
    "entity mapping": [
      {
        "label": "Upper Neretva",
        "uri": "http://dbpedia.org/resource/Upper_Neretva"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gümüş_(TV_series)"
      }
    ],
    "id": "13acb5e7c9d2488ba706f3eabb8e78c0",
    "predicate mapping": [
      {
        "label": "mouth country",
        "uri": "http://dbpedia.org/ontology/mouthCountry"
      },
      {
        "label": "aired",
        "uri": "http://dbpedia.org/property/firstAired"
      }
    ]
  },
  {
    "question": "Which city's foundeer is John Forbes?",
    "SerialNumber": "2587",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/John_Forbes_(British_Army_officer)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "John Forbes",
        "uri": "http://dbpedia.org/resource/John_Forbes_(British_Army_officer)"
      }
    ],
    "id": "132b8410eb304e7a89c8c7717e9ed33f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "How many times has Jeff Conaway been casted?",
    "SerialNumber": "2588",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jeff_Conaway>  . }",
    "entity mapping": [
      {
        "label": "Jeff Conaway",
        "uri": "http://dbpedia.org/resource/Jeff_Conaway"
      }
    ],
    "id": "deb86e66bf6b4246b747867c3fd40564",
    "predicate mapping": [
      {
        "label": "casted",
        "uri": "http://dbpedia.org/ontology/starring"
      }
    ]
  },
  {
    "question": "How many people were drafted in the LA Clippers?",
    "SerialNumber": "2590",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "LA Clippers",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Clippers"
      }
    ],
    "id": "3cd3e5a6d4944cbe8c95808f0407e8d0",
    "predicate mapping": [
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Where did the beverages sold by Refriango originate?",
    "SerialNumber": "2591",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Refriango> . ?x <http://dbpedia.org/property/origin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Beverage>}",
    "entity mapping": [
      {
        "label": "Refriango",
        "uri": "http://dbpedia.org/resource/Refriango"
      }
    ],
    "id": "0564d9c87b7544ec8c5ee392b68afadc",
    "predicate mapping": [
      {
        "label": "ate",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/property/origin"
      },
      {
        "label": "beverage",
        "uri": "http://dbpedia.org/ontology/Beverage"
      }
    ]
  },
  {
    "question": "In which wars did commanders born in Indochina fight?",
    "SerialNumber": "2592",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Indochina> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Indochina",
        "uri": "http://dbpedia.org/resource/Indochina"
      }
    ],
    "id": "3bb919a7b4894ae6afc9fc796ba76554",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "fight",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "CN Atletic-Barceloneta has a stadium in Barcelona?",
    "SerialNumber": "2595",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/CN_Atlètic-Barceloneta> <http://dbpedia.org/ontology/stadium> <http://dbpedia.org/resource/Barcelona> }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/CN_Atlètic-Barceloneta"
      },
      {
        "label": "Barcelona",
        "uri": "http://dbpedia.org/resource/Barcelona"
      }
    ],
    "id": "858f8152827d43efa3d30f8630da9251",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/stadium"
      }
    ]
  },
  {
    "question": "Is morrissey in the smiths?",
    "SerialNumber": "2596",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Morrissey> <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Smiths> }",
    "entity mapping": [
      {
        "label": "morrissey",
        "uri": "http://dbpedia.org/resource/Morrissey"
      },
      {
        "label": "the smiths",
        "uri": "http://dbpedia.org/resource/The_Smiths"
      }
    ],
    "id": "40311c537af740a8829bdfa1cfaef4b1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "In how many different wars have people graduated from the Army Command and General staff college fought?",
    "SerialNumber": "2597",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College> . ?x <http://dbpedia.org/property/battles> ?uri  . }",
    "entity mapping": [
      {
        "label": "Army Command",
        "uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College"
      }
    ],
    "id": "59c88192a89f429c98c06556c15f3aad",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Was the street dogs of south central narrated by Queen Latifah?",
    "SerialNumber": "2599",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Street_Dogs_of_South_Central> <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Queen_Latifah> }",
    "entity mapping": [
      {
        "label": "street dogs of south central",
        "uri": "http://dbpedia.org/resource/Street_Dogs_of_South_Central"
      },
      {
        "label": "Queen Latifah",
        "uri": "http://dbpedia.org/resource/Queen_Latifah"
      }
    ],
    "id": "4f51e2f2604c49609c5b28c6d129bf7d",
    "predicate mapping": [
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrator"
      }
    ]
  },
  {
    "question": "Name the common sports played at Polytechnic University of Philippines San Juan and Islamic Azad University?",
    "SerialNumber": "2604",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch> <http://dbpedia.org/ontology/sport> ?uri . }",
    "entity mapping": [
      {
        "label": "polytechnic philippines university",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan"
      },
      {
        "label": "university islamic",
        "uri": "http://dbpedia.org/resource/Islamic_Azad_University_Central_Tehran_Branch"
      }
    ],
    "id": "da487a9e2aa64d0d900ccb99d5eb6fc5",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Who acted in the work written by Colin Brake?",
    "SerialNumber": "2605",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Colin_Brake> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
    "entity mapping": [
      {
        "label": "Colin Brake",
        "uri": "http://dbpedia.org/resource/Colin_Brake"
      }
    ],
    "id": "ffdb4d5b27464d26bc824dced4615e8c",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "acted",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/Work"
      }
    ]
  },
  {
    "question": "Give me a count of companies located in Texas ?",
    "SerialNumber": "2608",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Texas",
        "uri": "http://dbpedia.org/resource/Texas"
      }
    ],
    "id": "7ddbd538a02143ec8dc92396be31453e",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What are the books written by authors who died in Madrid?",
    "SerialNumber": "2612",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Madrid> . ?uri <http://dbpedia.org/property/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Madrid",
        "uri": "http://dbpedia.org/resource/Madrid"
      }
    ],
    "id": "14c91859f31f43e99bc47c8be8f02f16",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Name  some ww1 veterans?",
    "SerialNumber": "2613",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/World_War_I>  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/World_War_I"
      }
    ],
    "id": "d3cc7a7f2f7b40afb2398e62b690580e",
    "predicate mapping": [
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Where can one find some quick bread in the world?",
    "SerialNumber": "2614",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Quick_bread> . ?x <http://dbpedia.org/ontology/region> ?uri  . }",
    "entity mapping": [
      {
        "label": "quick bread",
        "uri": "http://dbpedia.org/resource/Quick_bread"
      }
    ],
    "id": "b8eb36910321468d898a9e2d1db1d016",
    "predicate mapping": [
      {
        "label": "world",
        "uri": "http://dbpedia.org/property/type"
      },
      {
        "label": "world",
        "uri": "http://dbpedia.org/ontology/region"
      }
    ]
  },
  {
    "question": "Where is Tahual located which is also the country of Ren Romano ?",
    "SerialNumber": "2616",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/René_Romano> <http://dbpedia.org/property/citizenship> ?uri. <http://dbpedia.org/resource/Tahual> <http://dbpedia.org/property/location> ?uri} ",
    "entity mapping": [
      {
        "label": "romano ren",
        "uri": "http://dbpedia.org/resource/René_Romano"
      },
      {
        "label": "Tahual",
        "uri": "http://dbpedia.org/resource/Tahual"
      }
    ],
    "id": "37d0eb12d3c94597911b7c985670d4c2",
    "predicate mapping": [
      {
        "label": "Romano",
        "uri": "http://dbpedia.org/property/citizenship"
      },
      {
        "label": "Romano",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "What is the river on which the Kariba Dam and Batoka Gorge Hydroelectirc power station exist?",
    "SerialNumber": "2621",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kariba_Dam> <http://dbpedia.org/ontology/river> ?uri. <http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station> <http://dbpedia.org/ontology/river> ?uri . }",
    "entity mapping": [
      {
        "label": "Kariba Dam",
        "uri": "http://dbpedia.org/resource/Kariba_Dam"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Batoka_Gorge_Hydroelectric_Power_Station"
      }
    ],
    "id": "f3c826d486634c9d83b4d891f9c0eb35",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      }
    ]
  },
  {
    "question": "What is the name of the information appliance by sony whose predecessor is PlayStation 2?",
    "SerialNumber": "2623",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "sony",
        "uri": "http://dbpedia.org/resource/Sony"
      },
      {
        "label": "PlayStation 2",
        "uri": "http://dbpedia.org/resource/PlayStation_2"
      }
    ],
    "id": "070e0e36e87b4eeda426afc352710eae",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "information appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Is the College Sainte Marie in Mauritius?",
    "SerialNumber": "2624",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/College_Sainte-Marie> <http://dbpedia.org/property/county> <http://dbpedia.org/resource/Mauritius> }",
    "entity mapping": [
      {
        "label": "college sainte marie",
        "uri": "http://dbpedia.org/resource/College_Sainte-Marie"
      },
      {
        "label": "Mauritius",
        "uri": "http://dbpedia.org/resource/Mauritius"
      }
    ],
    "id": "e5ba33e4f5e84baba047469c0c00fa35",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/county"
      }
    ]
  },
  {
    "question": "Who were the narrators of the albums which had Ringo Starr as one of the narrator ?",
    "SerialNumber": "2625",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Ringo_Starr> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Ringo Starr",
        "uri": "http://dbpedia.org/resource/Ringo_Starr"
      }
    ],
    "id": "661df655b8234afdb7975e82bacf8c18",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "What awards have been given to race horses bred by Bert Michell?",
    "SerialNumber": "2627",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/trainer> <http://dbpedia.org/resource/Bert_S._Michell> . ?x <http://dbpedia.org/ontology/honours> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
    "entity mapping": [
      {
        "label": "Bert Michell",
        "uri": "http://dbpedia.org/resource/Bert_S._Michell"
      }
    ],
    "id": "c44d40b04a6344f0b925ae5a869a162e",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/property/trainer"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours"
      },
      {
        "label": "race horse",
        "uri": "http://dbpedia.org/ontology/RaceHorse"
      }
    ]
  },
  {
    "question": "Danny Felice, the Gibraltarian guitarist is from which city?",
    "SerialNumber": "2628",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Danny_Felice> <http://dbpedia.org/ontology/hometown> ?uri } ",
    "entity mapping": [
      {
        "label": "Danny Felice",
        "uri": "http://dbpedia.org/resource/Danny_Felice"
      }
    ],
    "id": "1f283dc1bb87433d804608abb6d42fb9",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/hometown"
      }
    ]
  },
  {
    "question": "Where is Bogobiri House located ?",
    "SerialNumber": "2633",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Bogobiri_House> <http://dbpedia.org/property/locationCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Bogobiri House",
        "uri": "http://dbpedia.org/resource/Bogobiri_House"
      }
    ],
    "id": "c6a2f3f300014efbb98edeadddbbd5f5",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCity"
      }
    ]
  },
  {
    "question": "How many areas are led by Willem Alexander?",
    "SerialNumber": "2635",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands>  . }",
    "entity mapping": [
      {
        "label": "Willem Alexander",
        "uri": "http://dbpedia.org/resource/Willem-Alexander_of_the_Netherlands"
      }
    ],
    "id": "672bf19ac1154092909bd114c425c125",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "What sports are played in schools where Swahili is the official language?",
    "SerialNumber": "2636",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Swahili_language> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "language swahili",
        "uri": "http://dbpedia.org/resource/Swahili_language"
      }
    ],
    "id": "248fbcca0cc84ab7a183eeb56854398e",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Count the awards received by Immunologists?",
    "SerialNumber": "2637",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Immunology> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "Immunologi",
        "uri": "http://dbpedia.org/resource/Immunology"
      }
    ],
    "id": "68b2123a04bb4f809d1d4e74e6c6d5a0",
    "predicate mapping": [
      {
        "label": "sts",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards received",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "What is the occupation of the people who are born in Iowa?",
    "SerialNumber": "2640",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Iowa> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Iowa",
        "uri": "http://dbpedia.org/resource/Iowa"
      }
    ],
    "id": "1e325840e9a4488d9ab113c9cf46d4dd",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who holds shares in something famous for the Seven Spring Mountain Resort?",
    "SerialNumber": "2641",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Seven_Springs_Mountain_Resort> . ?uri <http://dbpedia.org/property/owner> ?x  . }",
    "entity mapping": [
      {
        "label": "mountain spring resort seven",
        "uri": "http://dbpedia.org/resource/Seven_Springs_Mountain_Resort"
      }
    ],
    "id": "5a343f2e17ff49d3abcce067bc9113ca",
    "predicate mapping": [
      {
        "label": "Resort",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "Resort",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Who all were involved in the wars fought by the commander Blue Jacket?",
    "SerialNumber": "2643",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/commander> <http://dbpedia.org/resource/Blue_Jacket> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Blue Jacket",
        "uri": "http://dbpedia.org/resource/Blue_Jacket"
      }
    ],
    "id": "fa87970fbd454ac58ae0fd59fa7f59ea",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/property/commander"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "What are some people who are on the board of companies founded in NY?",
    "SerialNumber": "2644",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York_City> . ?uri <http://dbpedia.org/ontology/board> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/resource/New_York_City"
      }
    ],
    "id": "1b7009c254174184a4496ada2462fa8e",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What are some cars similar to the ones assembled at Toluca?",
    "SerialNumber": "2645",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Toluca> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Toluca",
        "uri": "http://dbpedia.org/resource/Toluca"
      }
    ],
    "id": "37341d4902c249d1a926afdf3ec6895d",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "at",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Which governer of Winston bryant is also the president of Carl Stokes ?",
    "SerialNumber": "2646",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Carl_Stokes> <http://dbpedia.org/property/president> ?uri} ",
    "entity mapping": [
      {
        "label": "Winston bryant",
        "uri": "http://dbpedia.org/resource/Winston_Bryant"
      },
      {
        "label": "Carl Stokes",
        "uri": "http://dbpedia.org/resource/Carl_Stokes"
      }
    ],
    "id": "edf2e6aeff7841b9bd3da7e23089514b",
    "predicate mapping": [
      {
        "label": "governer",
        "uri": "http://dbpedia.org/property/governor"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "What sport is Eric Schiller known for, and employes Craig Van Tibury?",
    "SerialNumber": "2650",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Eric_Schiller> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri} ",
    "entity mapping": [
      {
        "label": "Eric Schiller",
        "uri": "http://dbpedia.org/resource/Eric_Schiller"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury"
      }
    ],
    "id": "eca9dd9de8cf482bad043751461e8aac",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "Van",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Which minister was responsible for Kriminalpolizie?",
    "SerialNumber": "2651",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kriminalpolizei> <http://dbpedia.org/ontology/leader> ?uri } ",
    "entity mapping": [
      {
        "label": "Kriminalpolizie",
        "uri": "http://dbpedia.org/resource/Kriminalpolizei"
      }
    ],
    "id": "eb264bdc56224986bac08332b3941a2d",
    "predicate mapping": [
      {
        "label": "responsible",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "What is the river whose mouth is in deadsea?",
    "SerialNumber": "2654",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Dead_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Dead_Sea"
      }
    ],
    "id": "d2c55064c2b1442aa5d1e53946aaec43",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which Stanley Kubrick's movie has music by Laurie Johnson?",
    "SerialNumber": "2657",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick"
      },
      {
        "label": "Laurie Johnson",
        "uri": "http://dbpedia.org/resource/Laurie_Johnson"
      }
    ],
    "id": "e18646f7fb64400cbcaff2210d28e040",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/director"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Where does the river flows into, which starts in Gredelj?",
    "SerialNumber": "2658",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Gredelj> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gredelj",
        "uri": "http://dbpedia.org/resource/Gredelj"
      }
    ],
    "id": "6a93144b4a8a49b8b9ea07d4b5392496",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      }
    ]
  },
  {
    "question": "What artist was associated closely with the bare necessities and rock a doodle?",
    "SerialNumber": "2662",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Bare_Necessities> <http://dbpedia.org/ontology/artist> ?uri. <http://dbpedia.org/resource/Rock-a-Doodle> <http://dbpedia.org/ontology/starring> ?uri} ",
    "entity mapping": [
      {
        "label": "the bare necessities",
        "uri": "http://dbpedia.org/resource/The_Bare_Necessities"
      },
      {
        "label": "doodle rock",
        "uri": "http://dbpedia.org/resource/Rock-a-Doodle"
      }
    ],
    "id": "691beaad90c049ee8b594572b8dbc124",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/artist"
      },
      {
        "label": "doodle",
        "uri": "http://dbpedia.org/ontology/starring"
      }
    ]
  },
  {
    "question": "In what tv shows did Jason Carter act?",
    "SerialNumber": "2666",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Jason Carter",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)"
      }
    ],
    "id": "cdc7afa4efc24c619aebfe90b366a6da",
    "predicate mapping": [
      {
        "label": "act",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name some books by Spanish speaking authors.",
    "SerialNumber": "2667",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/property/author> ?x  . }",
    "entity mapping": [
      {
        "label": "Spanish",
        "uri": "http://dbpedia.org/resource/Spanish_language"
      }
    ],
    "id": "47bc9fd86bf54061b9df63ac5d6789c1",
    "predicate mapping": [
      {
        "label": "speaking",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "authors",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "Which  siler medalist of the Tennis at the 2012 Summer Olympics  Men's singles was also the  flagbearer of the Switzerland at the 2008 Summer Olympics",
    "SerialNumber": "2668",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_–_Men's_singles> <http://dbpedia.org/ontology/silverMedalist> ?uri. <http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics> <http://dbpedia.org/property/flagbearer> ?uri} ",
    "entity mapping": [
      {
        "label": "olympics singles tennis summer",
        "uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_–_Men's_singles"
      },
      {
        "label": "Switzerland at the 2008 Summer Olympics",
        "uri": "http://dbpedia.org/resource/Switzerland_at_the_2008_Summer_Olympics"
      }
    ],
    "id": "811b775c0148423ebd8f7f213fb6fafa",
    "predicate mapping": [
      {
        "label": "siler medalist",
        "uri": "http://dbpedia.org/ontology/silverMedalist"
      },
      {
        "label": "flagbearer",
        "uri": "http://dbpedia.org/property/flagbearer"
      }
    ]
  },
  {
    "question": "In which states are there bridges over the Pequea Creek?",
    "SerialNumber": "2670",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/river> <http://dbpedia.org/resource/Pequea_Creek> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Pequea Creek",
        "uri": "http://dbpedia.org/resource/Pequea_Creek"
      }
    ],
    "id": "e162c9820c6a4768bf7ffd8afc11a55b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/river"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "List the birthplace of the medicians who studied in Harvard.",
    "SerialNumber": "2672",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Harvard_Medical_School> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Medician>}",
    "entity mapping": [
      {
        "label": "Harvard",
        "uri": "http://dbpedia.org/resource/Harvard_Medical_School"
      }
    ],
    "id": "5313a4dd9c5a451ebf0c06bd24ed2b0a",
    "predicate mapping": [
      {
        "label": "studied",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "medician",
        "uri": "http://dbpedia.org/ontology/Medician"
      }
    ]
  },
  {
    "question": "Name some Texas based companies ?",
    "SerialNumber": "2673",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Texas",
        "uri": "http://dbpedia.org/resource/Texas"
      }
    ],
    "id": "07747709891b435d84ae5c14259e92f7",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is common between genre of battle chess and purpose of New Zealand Chess ?",
    "SerialNumber": "2674",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/New_Zealand_Chess_Federation> <http://dbpedia.org/property/purpose> ?uri} ",
    "entity mapping": [
      {
        "label": "battle chess",
        "uri": "http://dbpedia.org/resource/Battle_Chess"
      },
      {
        "label": "zealand chess",
        "uri": "http://dbpedia.org/resource/New_Zealand_Chess_Federation"
      }
    ],
    "id": "4ae6b12b53054ad29b07c61a48527249",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      }
    ]
  },
  {
    "question": "Was John Boehner the winner of the US House of Representatives elections in Ohio in 2010?",
    "SerialNumber": "2675",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> <http://dbpedia.org/resource/John_Boehner> }",
    "entity mapping": [
      {
        "label": "representatives elections house ohio 2010",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010"
      },
      {
        "label": "John Boehner",
        "uri": "http://dbpedia.org/resource/John_Boehner"
      }
    ],
    "id": "a1e1a70a1c92405e903356d3f058bda5",
    "predicate mapping": [
      {
        "label": "Ohio",
        "uri": "http://dbpedia.org/property/incumbent"
      }
    ]
  },
  {
    "question": "who is the governer of New Castile?",
    "SerialNumber": "2677",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/order> <http://dbpedia.org/resource/Governorate_of_New_Castile> } ",
    "entity mapping": [
      {
        "label": "New Castile",
        "uri": "http://dbpedia.org/resource/Governorate_of_New_Castile"
      }
    ],
    "id": "cb24b43a6ea14f8691476c986fd94deb",
    "predicate mapping": [
      {
        "label": "governer",
        "uri": "http://dbpedia.org/property/order"
      }
    ]
  },
  {
    "question": "In which country is the Baku puppet Theater located which is also the birth palce of Anar Salmanov ?",
    "SerialNumber": "2678",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baku_Puppet_Theatre> <http://dbpedia.org/ontology/locationCountry> ?uri. <http://dbpedia.org/resource/Anar_Salmanov> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "puppet",
        "uri": "http://dbpedia.org/resource/Baku_Puppet_Theatre"
      },
      {
        "label": "Anar Salmanov",
        "uri": "http://dbpedia.org/resource/Anar_Salmanov"
      }
    ],
    "id": "1a35a6119a4a482286916e22a00ff89f",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/locationCountry"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Which military unit's  garrison is Pentagon and command structure is United States Department of Defense?",
    "SerialNumber": "2681",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/garrison> <http://dbpedia.org/resource/The_Pentagon> . ?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "pentagon",
        "uri": "http://dbpedia.org/resource/The_Pentagon"
      },
      {
        "label": "United States Department of Defense",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense"
      }
    ],
    "id": "45ef969f39544740a00aabf182833319",
    "predicate mapping": [
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/property/garrison"
      },
      {
        "label": "command structure",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      },
      {
        "label": "military unit",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Which university with athletics department in NCAA Division I Football Bowl Subdivision has nickname Tulane Green Wave ?",
    "SerialNumber": "2682",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/St._Louis> . ?uri <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Madison_River>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/St._Louis"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Madison_River"
      }
    ],
    "id": "560edd5735a04aed942d6c71d7d47f1f",
    "predicate mapping": [
      {
        "label": "Wave",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      },
      {
        "label": "Wave",
        "uri": "http://dbpedia.org/ontology/rightTributary"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Which countries were the first to play Gumus and Ne daj se, Nina?",
    "SerialNumber": "2685",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gümüş_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri. <http://dbpedia.org/resource/Ne_daj_se,_Nina> <http://dbpedia.org/property/firstAired> ?uri . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gümüş_(TV_series)"
      },
      {
        "label": "Ne daj se, Nina",
        "uri": "http://dbpedia.org/resource/Ne_daj_se,_Nina"
      }
    ],
    "id": "156a0839803f4a9d9e14200615736044",
    "predicate mapping": [
      {
        "label": "first",
        "uri": "http://dbpedia.org/property/firstAired"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/property/firstAired"
      }
    ]
  },
  {
    "question": "Where did the people beatified by Pope Pius X die?",
    "SerialNumber": "2686",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/beatifiedBy> <http://dbpedia.org/resource/Pope_Pius_X> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Pope Pius X",
        "uri": "http://dbpedia.org/resource/Pope_Pius_X"
      }
    ],
    "id": "d5315c64d719430e9602df94b8a89c09",
    "predicate mapping": [
      {
        "label": "beatified by",
        "uri": "http://dbpedia.org/property/beatifiedBy"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who were the pole drivers in GP when Damon hill was a first driver?",
    "SerialNumber": "2689",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/firstDriver> <http://dbpedia.org/resource/Damon_Hill> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "entity mapping": [
      {
        "label": "Damon hill",
        "uri": "http://dbpedia.org/resource/Damon_Hill"
      }
    ],
    "id": "0517011b2e174b5cb27a397265665cbd",
    "predicate mapping": [
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver"
      },
      {
        "label": "pole driver",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      },
      {
        "label": "GP",
        "uri": "http://dbpedia.org/ontology/GrandPrix"
      }
    ]
  },
  {
    "question": "Where is the headquarters of the public transit system which owns Target Field, a Metro Transit Station  ?",
    "SerialNumber": "2691",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . }",
    "entity mapping": [
      {
        "label": "Target Field",
        "uri": "http://dbpedia.org/resource/Target_Field_(Metro_Transit_station)"
      }
    ],
    "id": "4854b75bd8f94014ad4edb9315ad62a4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      }
    ]
  },
  {
    "question": "List the relatives of the governor of Gabriel Slaughter?",
    "SerialNumber": "2692",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Gabriel_Slaughter> <http://dbpedia.org/ontology/governor> ?x . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gabriel Slaughter",
        "uri": "http://dbpedia.org/resource/Gabriel_Slaughter"
      }
    ],
    "id": "7d303bc28df742ec80b74432bd497aff",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor"
      },
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "What continent of the world has Baja California peninsula and also has WEPG in one of it's cities?",
    "SerialNumber": "2693",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Baja_California_Peninsula> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/WEPG> <http://dbpedia.org/property/city> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Continent>}",
    "entity mapping": [
      {
        "label": "Baja California peninsula",
        "uri": "http://dbpedia.org/resource/Baja_California_Peninsula"
      },
      {
        "label": "WEPG",
        "uri": "http://dbpedia.org/resource/WEPG"
      }
    ],
    "id": "1afef26545cf4f17bb7933a2939142af",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "continent",
        "uri": "http://dbpedia.org/ontology/Continent"
      }
    ]
  },
  {
    "question": "Which party won both the general electoin and the andhra pradesh election in 2004?",
    "SerialNumber": "2694",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri . }",
    "entity mapping": [
      {
        "label": "election general",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Delhi)"
      },
      {
        "label": "election pradesh general",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)"
      }
    ],
    "id": "412afcb751c4440083508ff2aa23abe8",
    "predicate mapping": [
      {
        "label": "election",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "election",
        "uri": "http://dbpedia.org/ontology/affiliation"
      }
    ]
  },
  {
    "question": "How many games are released for virtual consoles?",
    "SerialNumber": "2695",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "virtual console",
        "uri": "http://dbpedia.org/resource/Virtual_Console"
      }
    ],
    "id": "876a44de32e64aaa9855928c078039df",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "To what political party do the politicians graduated from Somerville college, Oxford belong to?",
    "SerialNumber": "2697",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Somerville_College,_Oxford> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Somerville college, Oxford",
        "uri": "http://dbpedia.org/resource/Somerville_College,_Oxford"
      }
    ],
    "id": "e3a7059770184b25a4d9b0398742786f",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Where did Wallace Dollase die?",
    "SerialNumber": "2698",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wallace_Dollase> <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Wallace Dollase",
        "uri": "http://dbpedia.org/resource/Wallace_Dollase"
      }
    ],
    "id": "8e08009e99dc455d922ce7a0ada9717a",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Where did the people canonized by John Paul II die?",
    "SerialNumber": "2699",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/canonizedBy> <http://dbpedia.org/resource/Pope_John_Paul_II> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "John Paul II",
        "uri": "http://dbpedia.org/resource/Pope_John_Paul_II"
      }
    ],
    "id": "b73c98e1a1cc4ebeb320c1268ec30b4e",
    "predicate mapping": [
      {
        "label": "canonized by",
        "uri": "http://dbpedia.org/property/canonizedBy"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "Where did the editor of Charlie Mensuel die ?",
    "SerialNumber": "2700",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Charlie_Mensuel> <http://dbpedia.org/property/editor> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "entity mapping": [
      {
        "label": "Charlie Mensuel",
        "uri": "http://dbpedia.org/resource/Charlie_Mensuel"
      }
    ],
    "id": "39963beccde446c8944047f4d4cb3b84",
    "predicate mapping": [
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Where is Denver Broncos located ?",
    "SerialNumber": "2702",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Denver Broncos",
        "uri": "http://dbpedia.org/resource/Denver_Broncos"
      }
    ],
    "id": "617982e40b1c40909cdb633c1b374e5f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      }
    ]
  },
  {
    "question": "What is the birthplace of Adugna Deyas and the place where Fiq is located?",
    "SerialNumber": "2704",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fiq,_Ethiopia> <http://dbpedia.org/ontology/country> ?uri. <http://dbpedia.org/resource/Adugna_Deyas> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Fiq,_Ethiopia"
      },
      {
        "label": "Adugna Deyas",
        "uri": "http://dbpedia.org/resource/Adugna_Deyas"
      }
    ],
    "id": "3fab7450096d4585bd162a32f10f08f9",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Where is the team of Abdel Boucker located ?",
    "SerialNumber": "2708",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Abdel_Bouckar> <http://dbpedia.org/property/team> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "Abdel Boucker",
        "uri": "http://dbpedia.org/resource/Abdel_Bouckar"
      }
    ],
    "id": "dc81947e16094c54835cf356fa78365b",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Count the different religions practiced by people who are in the Malaysian and Chinese association.",
    "SerialNumber": "2711",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/party> <http://dbpedia.org/resource/Malaysian_Chinese_Association> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Malaysian_Chinese_Association"
      }
    ],
    "id": "cf59b2f2f22e46d1af44c855e60632fe",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Name few companies where don berlin and michael sears have worked together?",
    "SerialNumber": "2712",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Don_R._Berlin> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri . }",
    "entity mapping": [
      {
        "label": "berlin don",
        "uri": "http://dbpedia.org/resource/Don_R._Berlin"
      },
      {
        "label": "michael sears",
        "uri": "http://dbpedia.org/resource/Michael_M._Sears"
      }
    ],
    "id": "c9e971b03aac43bcba9df9779256b126",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/employer"
      }
    ]
  },
  {
    "question": "To which country is Svetlana Navasardyan from?",
    "SerialNumber": "2713",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Svetlana_Navasardyan> <http://dbpedia.org/property/origin> ?uri } ",
    "entity mapping": [
      {
        "label": "Svetlana Navasardyan",
        "uri": "http://dbpedia.org/resource/Svetlana_Navasardyan"
      }
    ],
    "id": "e89c7b6d4201411dadea15fc7a9138db",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/origin"
      }
    ]
  },
  {
    "question": "Which distributer of Bombay Sapphire also makes Grewy goose ?",
    "SerialNumber": "2721",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Grey_Goose_(vodka)> <http://dbpedia.org/property/manufacturer> ?uri. <http://dbpedia.org/resource/Bombay_Sapphire> <http://dbpedia.org/property/distributor> ?uri} ",
    "entity mapping": [
      {
        "label": "goose",
        "uri": "http://dbpedia.org/resource/Grey_Goose_(vodka)"
      },
      {
        "label": "Bombay Sapphire",
        "uri": "http://dbpedia.org/resource/Bombay_Sapphire"
      }
    ],
    "id": "8e47a69cb3824a16a86d9f02afd2a593",
    "predicate mapping": [
      {
        "label": "makes",
        "uri": "http://dbpedia.org/property/manufacturer"
      },
      {
        "label": "goose",
        "uri": "http://dbpedia.org/property/distributor"
      }
    ]
  },
  {
    "question": "Name the TV show broadcasted by Fox and presented by Ryan Seacrest ?",
    "SerialNumber": "2723",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/presenter> <http://dbpedia.org/resource/Ryan_Seacrest> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Ryan Seacrest",
        "uri": "http://dbpedia.org/resource/Ryan_Seacrest"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      }
    ],
    "id": "679e1082fff84c878024ee1d62389f0b",
    "predicate mapping": [
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "Fox",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which university has affiliations to Graham Holdings and Kaplan, Inc.?",
    "SerialNumber": "2724",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "holdings graham",
        "uri": "http://dbpedia.org/resource/Graham_Holdings_Company"
      },
      {
        "label": "Kaplan, Inc.",
        "uri": "http://dbpedia.org/resource/Kaplan,_Inc."
      }
    ],
    "id": "fe42aff9ce524c13950df850ed4d0737",
    "predicate mapping": [
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "affiliations",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Name the person who was educated at Harvard-Westlake and won the Screen Actor Guild Life Achievement Award ?",
    "SerialNumber": "2726",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "harvard-westlake",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School"
      },
      {
        "label": "achievement screen guild award actor",
        "uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award"
      }
    ],
    "id": "ec4218ce66a54c50ad5b8d8fc802f0e7",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "Award",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the place of birth of the badminton player who is the bronze medalist of Badminton at the 2012 Summer Olympics  Women's doubles ?",
    "SerialNumber": "2727",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_–_Women's_doubles> <http://dbpedia.org/ontology/bronzeMedalist> ?x . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BadmintonPlayer>}",
    "entity mapping": [
      {
        "label": "badminton olympics women's doubles",
        "uri": "http://dbpedia.org/resource/Badminton_at_the_2012_Summer_Olympics_–_Women's_doubles"
      }
    ],
    "id": "18f4530b96d3413c887a761ef3de1cf0",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist"
      },
      {
        "label": "place of birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "badminton player",
        "uri": "http://dbpedia.org/ontology/BadmintonPlayer"
      }
    ]
  },
  {
    "question": "Where do bachelor of arts live?",
    "SerialNumber": "2728",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Bachelor_of_Arts> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
    "entity mapping": [
      {
        "label": "bachelor of arts",
        "uri": "http://dbpedia.org/resource/Bachelor_of_Arts"
      }
    ],
    "id": "fc455f282c6549adaa1614637ae68991",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "How many people live in the Beverly Hills, California?",
    "SerialNumber": "2729",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Beverly_Hills,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Beverly Hills, California",
        "uri": "http://dbpedia.org/resource/Beverly_Hills,_California"
      }
    ],
    "id": "1cf3ba4382444e65880adff73f7125e7",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which religion do the people follow, whose constituency is Jadavpur?",
    "SerialNumber": "2734",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Jadavpur",
        "uri": "http://dbpedia.org/resource/Jadavpur_(Lok_Sabha_constituency)"
      }
    ],
    "id": "08165fd11c3f4e49bdd932736db1e9c3",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What other things are provided by the producer of Office 365?",
    "SerialNumber": "2736",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/service> <http://dbpedia.org/resource/Office_365> . ?x <http://dbpedia.org/property/services> ?uri  . }",
    "entity mapping": [
      {
        "label": "Office 365",
        "uri": "http://dbpedia.org/resource/Office_365"
      }
    ],
    "id": "cc70615cda2f4cd19a95e83f87285f3d",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/service"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/services"
      }
    ]
  },
  {
    "question": "Who are the people who died in a place architected by Jens Jensen",
    "SerialNumber": "2738",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)> . ?uri <http://dbpedia.org/ontology/deathPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Jens Jensen",
        "uri": "http://dbpedia.org/resource/Jens_Jensen_(landscape_architect)"
      }
    ],
    "id": "50ba41d267374555bc6bf5c1cf570b75",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "ed",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What are the software whose programming language are Multilingual?",
    "SerialNumber": "2739",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Multilingualism> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "multilingual",
        "uri": "http://dbpedia.org/resource/Multilingualism"
      }
    ],
    "id": "452343f0f60b42b399b7d2cb29d6bb91",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "programming language",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "What is the political party of the person succeeded by A.K. Singh?",
    "SerialNumber": "2740",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/A._K._Singh> . ?x <http://dbpedia.org/property/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "A.K. Singh",
        "uri": "http://dbpedia.org/resource/A._K._Singh"
      }
    ],
    "id": "882d32179f904be8b3678aa0b25fb3c7",
    "predicate mapping": [
      {
        "label": "succeeded",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "political party",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What tv show is created by Brian Graden?",
    "SerialNumber": "2742",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Brian Graden",
        "uri": "http://dbpedia.org/resource/Brian_Graden"
      }
    ],
    "id": "1b967dc18818484ba213913e39ac2215",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which operator of ganz UV is also the nationality of the Gza Horvth ?",
    "SerialNumber": "2744",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ganz_UV> <http://dbpedia.org/ontology/operator> ?uri. <http://dbpedia.org/resource/Géza_Horváth> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "ganz UV",
        "uri": "http://dbpedia.org/resource/Ganz_UV"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Géza_Horváth"
      }
    ],
    "id": "2cbe6f6028204f2db497e7aa21514cae",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "What was the career of some people who have committed suicide?",
    "SerialNumber": "2745",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "entity mapping": [
      {
        "label": "suicide",
        "uri": "http://dbpedia.org/resource/Suicide"
      }
    ],
    "id": "9e4c63f453514fb8b3ebf0531dfa0cd7",
    "predicate mapping": [
      {
        "label": "committed",
        "uri": "http://dbpedia.org/property/deathCause"
      },
      {
        "label": "career",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Name the institute of Alton Ochsner ?",
    "SerialNumber": "2748",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alton_Ochsner> <http://dbpedia.org/ontology/institution> ?uri } ",
    "entity mapping": [
      {
        "label": "Alton Ochsner",
        "uri": "http://dbpedia.org/resource/Alton_Ochsner"
      }
    ],
    "id": "4ff9b452822549048ab6fb060739559c",
    "predicate mapping": [
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/institution"
      }
    ]
  },
  {
    "question": "Who won the general elections in India in 2009, and had also won the AP elections in 2004 ?",
    "SerialNumber": "2750",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)> <http://dbpedia.org/ontology/affiliation> ?uri. <http://dbpedia.org/resource/Indian_general_election,_2009> <http://dbpedia.org/ontology/affiliation> ?uri . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2004_(Andhra_Pradesh)"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Indian_general_election,_2009"
      }
    ],
    "id": "19a01f4fb64d4746969d681e2913f645",
    "predicate mapping": [
      {
        "label": "elections",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "elections",
        "uri": "http://dbpedia.org/ontology/affiliation"
      }
    ]
  },
  {
    "question": "What is the common palce of study for jack McGregor and Philip W. Pillsbury ?",
    "SerialNumber": "2751",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jack_McGregor> <http://dbpedia.org/ontology/education> ?uri. <http://dbpedia.org/resource/Philip_W._Pillsbury> <http://dbpedia.org/property/education> ?uri} ",
    "entity mapping": [
      {
        "label": "jack McGregor",
        "uri": "http://dbpedia.org/resource/Jack_McGregor"
      },
      {
        "label": "Philip W. Pillsbury",
        "uri": "http://dbpedia.org/resource/Philip_W._Pillsbury"
      }
    ],
    "id": "d0c96c44212d47e1b3ebd9752421d1f7",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/education"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "Is Ian Thorpe the bronze medalist of Swimming at the 2004 Summer Olympics  Men's 100 metre freestyle?",
    "SerialNumber": "2752",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_–_Men's_100_metre_freestyle> <http://dbpedia.org/ontology/bronzeMedalist> <http://dbpedia.org/resource/Ian_Thorpe> }",
    "entity mapping": [
      {
        "label": "freestyle swimming olympics summer",
        "uri": "http://dbpedia.org/resource/Swimming_at_the_2004_Summer_Olympics_–_Men's_100_metre_freestyle"
      },
      {
        "label": "Ian Thorpe",
        "uri": "http://dbpedia.org/resource/Ian_Thorpe"
      }
    ],
    "id": "c124e98b0ceb4a70a62e4f8655c08c56",
    "predicate mapping": [
      {
        "label": "bronze medalist",
        "uri": "http://dbpedia.org/ontology/bronzeMedalist"
      }
    ]
  },
  {
    "question": "Where can I find people whose hometown is Ann Arbour in Michigan?",
    "SerialNumber": "2754",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Ann_Arbor,_Michigan> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "michigan",
        "uri": "http://dbpedia.org/resource/Ann_Arbor,_Michigan"
      }
    ],
    "id": "95b3fafcb14440d895c1336ced355494",
    "predicate mapping": [
      {
        "label": "hometown",
        "uri": "http://dbpedia.org/property/homeTown"
      },
      {
        "label": "Michigan",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "Michigan",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Where did the wrestler die who was billed in Norman, Oklahoma?",
    "SerialNumber": "2759",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/billed> <http://dbpedia.org/resource/Norman,_Oklahoma> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Wrestler>}",
    "entity mapping": [
      {
        "label": "Norman, Oklahoma",
        "uri": "http://dbpedia.org/resource/Norman,_Oklahoma"
      }
    ],
    "id": "503e2359a25a4b54a614650a40b1ab55",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/property/billed"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "wrestler",
        "uri": "http://dbpedia.org/ontology/Wrestler"
      }
    ]
  },
  {
    "question": "How many different genres of games can I find which are compatible with the Commodore 64?",
    "SerialNumber": "2760",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_64> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "Commodore 64",
        "uri": "http://dbpedia.org/resource/Commodore_64"
      }
    ],
    "id": "f30e5b31cebd42fca8e78aee5f693598",
    "predicate mapping": [
      {
        "label": "compatible",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "Where did the relatives of David Hume study?",
    "SerialNumber": "2761",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relative> <http://dbpedia.org/resource/David_Hume> . ?x <http://dbpedia.org/property/education> ?uri  . }",
    "entity mapping": [
      {
        "label": "David Hume",
        "uri": "http://dbpedia.org/resource/David_Hume"
      }
    ],
    "id": "6b5ad23d383444478ce3e8e1acbbc649",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relative"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "Which producer of Boeing F/A has Dennis Muilenburg as an important person ?",
    "SerialNumber": "2762",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg>  . }",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg"
      }
    ],
    "id": "1534fc10e4894ed2b6b0d699ae7dd80c",
    "predicate mapping": [
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "Name the constituency of Jonas Gahr where Sverre Krogh was born ?",
    "SerialNumber": "2763",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jonas_Gahr_Støre> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/Sverre_Krogh_Sundbø> <http://dbpedia.org/property/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "jonas gahr",
        "uri": "http://dbpedia.org/resource/Jonas_Gahr_Støre"
      },
      {
        "label": "sverre krogh",
        "uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundbø"
      }
    ],
    "id": "f67fb0a1674440259432e6bf7019bf1a",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Does the owyhee river flow into oregon?",
    "SerialNumber": "2765",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Owyhee_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Oregon> }",
    "entity mapping": [
      {
        "label": "owyhee river",
        "uri": "http://dbpedia.org/resource/Owyhee_River"
      },
      {
        "label": "oregon",
        "uri": "http://dbpedia.org/resource/Oregon"
      }
    ],
    "id": "fef9e0b2920a4196a4fb2a73724a9af3",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      }
    ]
  },
  {
    "question": "Count all the books written by an author buried in the Convent of Barefoot Trinitarians?",
    "SerialNumber": "2777",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/restingPlace> <http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "trinitarians barefoot convent",
        "uri": "http://dbpedia.org/resource/Convent_of_the_Barefoot_Trinitarians"
      }
    ],
    "id": "9615aa0561ce4e4a960d23ede56fc21a",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Which director of On deadly Ground also released Mojo Priest ?",
    "SerialNumber": "2778",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mojo_Priest> <http://dbpedia.org/property/artist> ?uri. <http://dbpedia.org/resource/On_Deadly_Ground> <http://dbpedia.org/property/director> ?uri . }",
    "entity mapping": [
      {
        "label": "Mojo Priest",
        "uri": "http://dbpedia.org/resource/Mojo_Priest"
      },
      {
        "label": "On deadly Ground",
        "uri": "http://dbpedia.org/resource/On_Deadly_Ground"
      }
    ],
    "id": "2a96555f9e0048bbb838499c8484797b",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/property/director"
      }
    ]
  },
  {
    "question": "Who were some governmental heads in Nazi Germany?",
    "SerialNumber": "2779",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/Nazi_Germany> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "entity mapping": [
      {
        "label": "Nazi Germany",
        "uri": "http://dbpedia.org/resource/Nazi_Germany"
      }
    ],
    "id": "615091ae47f447b2996f509c01cc4b6f",
    "predicate mapping": [
      {
        "label": "heads",
        "uri": "http://dbpedia.org/ontology/jurisdiction"
      },
      {
        "label": "heads",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "What are some TV shows whose voice actors are from Truckee, California, US?",
    "SerialNumber": "2781",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Truckee,_California> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Truckee, California",
        "uri": "http://dbpedia.org/resource/Truckee,_California"
      }
    ],
    "id": "3722e91c57c84a39bac14bfe89532583",
    "predicate mapping": [
      {
        "label": "actors",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What is the total number of office holders who preceded the people working under president bill clinton?",
    "SerialNumber": "2782",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/president> <http://dbpedia.org/resource/Bill_Clinton> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "bill clinton",
        "uri": "http://dbpedia.org/resource/Bill_Clinton"
      }
    ],
    "id": "ebace02293c84cddabf5803a707d140d",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Is wizard rock inspired from Harry potter?",
    "SerialNumber": "2788",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Wizard_rock> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/Harry_Potter> }",
    "entity mapping": [
      {
        "label": "wizard rock",
        "uri": "http://dbpedia.org/resource/Wizard_rock"
      },
      {
        "label": "Harry",
        "uri": "http://dbpedia.org/resource/Harry_Potter"
      }
    ],
    "id": "4d16a08db93348988792d0efc91d6ae6",
    "predicate mapping": [
      {
        "label": "potter",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      }
    ]
  },
  {
    "question": "Who made the Y block engine and the SHO V8 engine?",
    "SerialNumber": "2790",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Y-block_engine> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri . }",
    "entity mapping": [
      {
        "label": "engine block",
        "uri": "http://dbpedia.org/resource/Ford_Y-block_engine"
      },
      {
        "label": "engine sho v8",
        "uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine"
      }
    ],
    "id": "ae24568ec2e94bb3b2c5de7ef38478e5",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "How many subjects have been covered in fantasy novels?",
    "SerialNumber": "2793",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Fantasy> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
    "entity mapping": [
      {
        "label": "fantasy",
        "uri": "http://dbpedia.org/resource/Fantasy"
      }
    ],
    "id": "7b67e23763bd4b55a7a2c6e9ad44b195",
    "predicate mapping": [
      {
        "label": "novels",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      },
      {
        "label": "subjects",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      }
    ]
  },
  {
    "question": "Name the tenants of MAsterCard center wich is also the draft team of Antoine Bibeau?",
    "SerialNumber": "2798",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/MasterCard_Centre> <http://dbpedia.org/property/tenants> ?uri. <http://dbpedia.org/resource/Antoine_Bibeau> <http://dbpedia.org/property/draftTeam> ?uri} ",
    "entity mapping": [
      {
        "label": "mastercard",
        "uri": "http://dbpedia.org/resource/MasterCard_Centre"
      },
      {
        "label": "Antoine Bibeau",
        "uri": "http://dbpedia.org/resource/Antoine_Bibeau"
      }
    ],
    "id": "3a34f7c15c0e48bba64cbc21b231ee6b",
    "predicate mapping": [
      {
        "label": "tenants",
        "uri": "http://dbpedia.org/property/tenants"
      },
      {
        "label": "draft team",
        "uri": "http://dbpedia.org/property/draftTeam"
      }
    ]
  },
  {
    "question": "Which teams participate in the football seasons headed by Patricia Amorim?",
    "SerialNumber": "2799",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patrícia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsSeason>}",
    "entity mapping": [
      {
        "label": "Patricia Amorim",
        "uri": "http://dbpedia.org/resource/Patrícia_Amorim"
      }
    ],
    "id": "d5c6186b35e84d629ac4471b606ac5ea",
    "predicate mapping": [
      {
        "label": "headed",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "headed",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "seasons",
        "uri": "http://dbpedia.org/ontology/SportsSeason"
      }
    ]
  },
  {
    "question": "In which wars did Percy Fitzwallace fight?",
    "SerialNumber": "2801",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Percy_Fitzwallace> <http://dbpedia.org/property/battles> ?uri } ",
    "entity mapping": [
      {
        "label": "Percy Fitzwallace",
        "uri": "http://dbpedia.org/resource/Percy_Fitzwallace"
      }
    ],
    "id": "826719619f624cc08c74945255b6df1d",
    "predicate mapping": [
      {
        "label": "fight",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Who are some US colonels?",
    "SerialNumber": "2804",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }",
    "entity mapping": [
      {
        "label": "colonel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)"
      }
    ],
    "id": "c07f906674b1433bbb4e9555d8ff28a4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/rank"
      }
    ]
  },
  {
    "question": "How many places were ruled by Elizabeth II?",
    "SerialNumber": "2805",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Elizabeth_II>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Elizabeth II",
        "uri": "http://dbpedia.org/resource/Elizabeth_II"
      }
    ],
    "id": "ccaaf32b5f0f46d699458212fd57221a",
    "predicate mapping": [
      {
        "label": "ruled",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "What is the rank of Julius C. Burrows politically?",
    "SerialNumber": "2808",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Julius_C._Burrows> <http://dbpedia.org/property/order> ?uri } ",
    "entity mapping": [
      {
        "label": "Julius C. Burrows",
        "uri": "http://dbpedia.org/resource/Julius_C._Burrows"
      }
    ],
    "id": "5a6ec3749e5e4c7ab7af6a94563ea793",
    "predicate mapping": [
      {
        "label": "politically",
        "uri": "http://dbpedia.org/property/order"
      }
    ]
  },
  {
    "question": "Artists trained at art students league NY are buried where?",
    "SerialNumber": "2811",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/Art_Students_League_of_New_York> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/resource/Art_Students_League_of_New_York"
      }
    ],
    "id": "5bc9919a43db4252ba6316057cf3b8e0",
    "predicate mapping": [
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/training"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      },
      {
        "label": "Artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Which country of Montaas Mayas Chiquibul is the birth place of Jos Bernardo Escobar?",
    "SerialNumber": "2816",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Montañas_Mayas_Chiquibul> <http://dbpedia.org/property/country> ?uri. <http://dbpedia.org/resource/José_Bernardo_Escobar> <http://dbpedia.org/property/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "chiquibul",
        "uri": "http://dbpedia.org/resource/Montañas_Mayas_Chiquibul"
      },
      {
        "label": "bernardo escobar",
        "uri": "http://dbpedia.org/resource/José_Bernardo_Escobar"
      }
    ],
    "id": "3c710b7cf9c740f1ab2af4ee8e84d4db",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Was Francisco Pizarro of the monarch of Charles 5, of the roman empire?",
    "SerialNumber": "2817",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Francisco_Pizarro> <http://dbpedia.org/ontology/monarch> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> }",
    "entity mapping": [
      {
        "label": "Francisco Pizarro",
        "uri": "http://dbpedia.org/resource/Francisco_Pizarro"
      },
      {
        "label": "charles roman",
        "uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor"
      }
    ],
    "id": "8cd244d8962b4f808264a0ce811cf46a",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch"
      }
    ]
  },
  {
    "question": "In which part of the world will I find Kim Sawchuk and Vuelta Mexico Telmex?",
    "SerialNumber": "2828",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kim_Sawchuk> <http://dbpedia.org/property/region> ?uri. <http://dbpedia.org/resource/Vuelta_Mexico_Telmex> <http://dbpedia.org/property/region> ?uri . }",
    "entity mapping": [
      {
        "label": "Kim Sawchuk",
        "uri": "http://dbpedia.org/resource/Kim_Sawchuk"
      },
      {
        "label": "Vuelta Mexico Telmex",
        "uri": "http://dbpedia.org/resource/Vuelta_Mexico_Telmex"
      }
    ],
    "id": "7a206da5629442c7a1853a9b62464368",
    "predicate mapping": [
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/region"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "List everything written in languages developed by EXperimental Computing Facility?",
    "SerialNumber": "2829",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/EXperimental_Computing_Facility> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Work>}",
    "entity mapping": [
      {
        "label": "EXperimental Computing Facility",
        "uri": "http://dbpedia.org/resource/EXperimental_Computing_Facility"
      }
    ],
    "id": "9c31f5b82f7345a08d1845c0744d8eac",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "languages",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/Work"
      }
    ]
  },
  {
    "question": "Who is the singer of the album which has a song Me and My arrow ?",
    "SerialNumber": "2830",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Me_and_My_Arrow> <http://dbpedia.org/ontology/album> ?x . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Me and My arrow",
        "uri": "http://dbpedia.org/resource/Me_and_My_Arrow"
      }
    ],
    "id": "5e40045c1ab34eae8400e7bb2de5784d",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      },
      {
        "label": "song",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "How many albums did the maker of The Band produce?",
    "SerialNumber": "2833",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/The_Band> . ?x <http://dbpedia.org/ontology/subsequentWork> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "The Band",
        "uri": "http://dbpedia.org/resource/The_Band"
      }
    ],
    "id": "f08d139cd5f1417a98264657c0c71637",
    "predicate mapping": [
      {
        "label": "Band",
        "uri": "http://dbpedia.org/ontology/artist"
      },
      {
        "label": "produce",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "What are some non fiction subjects dealt with in fantasy novels?",
    "SerialNumber": "2837",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Fantasy> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "fantasy",
        "uri": "http://dbpedia.org/resource/Fantasy"
      }
    ],
    "id": "42fdd268b8604dadbb164492ae3450eb",
    "predicate mapping": [
      {
        "label": "novels",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      },
      {
        "label": "fiction",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      },
      {
        "label": "novels",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Who has fought in wars under commander Arthur St Clair?",
    "SerialNumber": "2840",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "entity mapping": [
      {
        "label": "Arthur St Clair",
        "uri": "http://dbpedia.org/resource/Arthur_St._Clair"
      }
    ],
    "id": "14ded43faabe4a51af41cfafc21363c2",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant"
      }
    ]
  },
  {
    "question": "Which awards have been given to immunologists?",
    "SerialNumber": "2841",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/fields> <http://dbpedia.org/resource/Immunology> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "immunologi",
        "uri": "http://dbpedia.org/resource/Immunology"
      }
    ],
    "id": "61573482fe9745b38c65109394bdc050",
    "predicate mapping": [
      {
        "label": "sts",
        "uri": "http://dbpedia.org/property/fields"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Foxconn makes how many things?",
    "SerialNumber": "2848",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Foxconn>  . }",
    "entity mapping": [
      {
        "label": "Foxconn",
        "uri": "http://dbpedia.org/resource/Foxconn"
      }
    ],
    "id": "785671e67373470d82a70c72bbe1184d",
    "predicate mapping": [
      {
        "label": "things",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "What is telecasted on the network where Deborah Turness holds important position?",
    "SerialNumber": "2850",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Deborah_Turness> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
    "entity mapping": [
      {
        "label": "Deborah Turness",
        "uri": "http://dbpedia.org/resource/Deborah_Turness"
      }
    ],
    "id": "b46c1b706504419494f4cccf84754e62",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      }
    ]
  },
  {
    "question": "Which actors have performed in plays performed in New York?",
    "SerialNumber": "2851",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York_City> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Play>}",
    "entity mapping": [
      {
        "label": "New York",
        "uri": "http://dbpedia.org/resource/New_York_City"
      }
    ],
    "id": "da4845645dbf4dd5b072c54980634196",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place"
      },
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Play"
      }
    ]
  },
  {
    "question": "What currencies are used in the countries which have been governed by Francois Hollande?",
    "SerialNumber": "2852",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/François_Hollande> . ?x <http://dbpedia.org/ontology/currency> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Francois Hollande",
        "uri": "http://dbpedia.org/resource/François_Hollande"
      }
    ],
    "id": "dcae078ebdd74499a63310fa184928ff",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "land",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Where did the office holder died who also have faith in Episcopal Church ?",
    "SerialNumber": "2855",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Episcopal_Church_(United_States)> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Episcopal Church",
        "uri": "http://dbpedia.org/resource/Episcopal_Church_(United_States)"
      }
    ],
    "id": "52e919158ffa4ce9bdb2817cebd96da5",
    "predicate mapping": [
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What are the political parties whose leaders have lived in the Prime Minister's House?",
    "SerialNumber": "2861",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)> . ?uri <http://dbpedia.org/ontology/leader> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "entity mapping": [
      {
        "label": "Prime Minister's House",
        "uri": "http://dbpedia.org/resource/Prime_Minister's_House_(Colombo)"
      }
    ],
    "id": "d7c709165e3246d1b9cbeb191dd2c877",
    "predicate mapping": [
      {
        "label": "lived",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "political",
        "uri": "http://dbpedia.org/ontology/PoliticalParty"
      }
    ]
  },
  {
    "question": "Name a TV show judged by Jennifier Lopez and presented by Brian Dunkleman ?",
    "SerialNumber": "2863",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Jennifer_Lopez> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Jennifer_Lopez"
      },
      {
        "label": "Brian Dunkleman",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman"
      }
    ],
    "id": "be2a715e677a435cabaf67c8f17f8a02",
    "predicate mapping": [
      {
        "label": "judged",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is the Chiva Bus by the Ford Motor Company?",
    "SerialNumber": "2864",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chiva_bus> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Ford_Motor_Company> }",
    "entity mapping": [
      {
        "label": "Chiva Bus",
        "uri": "http://dbpedia.org/resource/Chiva_bus"
      },
      {
        "label": "Ford Motor Company",
        "uri": "http://dbpedia.org/resource/Ford_Motor_Company"
      }
    ],
    "id": "92cd517187c04052aa28c65e8e7ba93e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      }
    ]
  },
  {
    "question": "From how many different places have participants of Breeders's Cup Turf come?",
    "SerialNumber": "2865",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Breeders'_Cup_Turf> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cup Turf",
        "uri": "http://dbpedia.org/resource/Breeders'_Cup_Turf"
      }
    ],
    "id": "13648ac67f4843b3ad93c7137fcb34bd",
    "predicate mapping": [
      {
        "label": "participants",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Was Lionel Messi a member  of the 2009 FIFA World Cup squads?",
    "SerialNumber": "2866",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads> <http://dbpedia.org/ontology/currentMember> <http://dbpedia.org/resource/Lionel_Messi> }",
    "entity mapping": [
      {
        "label": "squads world fifa 2009",
        "uri": "http://dbpedia.org/resource/2009_FIFA_Club_World_Cup_squads"
      },
      {
        "label": "Lionel Messi",
        "uri": "http://dbpedia.org/resource/Lionel_Messi"
      }
    ],
    "id": "3e2b19f37e1342c5a7856184624b9fd1",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/currentMember"
      }
    ]
  },
  {
    "question": "Name the company founded by Jim Harris located in Harris County, Texas ?",
    "SerialNumber": "2867",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Harris_County,_Texas>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Jim Harris",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)"
      },
      {
        "label": "Harris County, Texas",
        "uri": "http://dbpedia.org/resource/Harris_County,_Texas"
      }
    ],
    "id": "30679d014e3749319a88ec1614bdb393",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which video game composed by Hirokazu Tanaka can be played on virtual Console ?",
    "SerialNumber": "2868",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Virtual_Console> . ?uri <http://dbpedia.org/property/composer> <http://dbpedia.org/resource/Hirokazu_Tanaka>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "virtual Console",
        "uri": "http://dbpedia.org/resource/Virtual_Console"
      },
      {
        "label": "Hirokazu Tanaka",
        "uri": "http://dbpedia.org/resource/Hirokazu_Tanaka"
      }
    ],
    "id": "b9faf98cfa3b43fb928d2b9eb258ae41",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/composer"
      },
      {
        "label": "video game",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "what kind of things play on WBIG FM?",
    "SerialNumber": "2870",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/WBIG-FM> <http://dbpedia.org/ontology/programmeFormat> ?uri } ",
    "entity mapping": [
      {
        "label": "wbig fm",
        "uri": "http://dbpedia.org/resource/WBIG-FM"
      }
    ],
    "id": "84f0e1da1e174000b08ae2510b0bf079",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat"
      }
    ]
  },
  {
    "question": "Who was the prime minister under which the predecessor of Derick Heathcoat Amory served?",
    "SerialNumber": "2872",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory> . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
    "entity mapping": [
      {
        "label": "Derick Heathcoat Amory",
        "uri": "http://dbpedia.org/resource/Derick_Heathcoat-Amory,_1st_Viscount_Amory"
      }
    ],
    "id": "ae588c3050cf4a769d629c8c2ecc8893",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "What are the birth place of the people who are the star of Dhoondte Reh Jaaoge?",
    "SerialNumber": "2874",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Dhoondte Reh Jaaoge",
        "uri": "http://dbpedia.org/resource/Dhoondte_Reh_Jaaoge!_(1998_film)"
      }
    ],
    "id": "bac4ecaac8954b3d83266bf1363bd5c8",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which relative of George Madison is the appointer of John Drayton ?",
    "SerialNumber": "2877",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Drayton> <http://dbpedia.org/property/appointer> ?uri. <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri} ",
    "entity mapping": [
      {
        "label": "John Drayton",
        "uri": "http://dbpedia.org/resource/John_Drayton"
      },
      {
        "label": "George Madison",
        "uri": "http://dbpedia.org/resource/George_Madison"
      }
    ],
    "id": "7507c5dcd77b4a1f8662415059e43340",
    "predicate mapping": [
      {
        "label": "appointer",
        "uri": "http://dbpedia.org/property/appointer"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "List the movies edited by Julian Doyle in which music was composed by Geoffrey Brugon ?",
    "SerialNumber": "2879",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Geoffrey_Burgon> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "geoffrey",
        "uri": "http://dbpedia.org/resource/Geoffrey_Burgon"
      },
      {
        "label": "Julian Doyle",
        "uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)"
      }
    ],
    "id": "0881b71d464e4be09d6650e2467d8008",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What genres of games are available on the Commodore 64?",
    "SerialNumber": "2886",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Commodore_64> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Commodore 64",
        "uri": "http://dbpedia.org/resource/Commodore_64"
      }
    ],
    "id": "692a622dfa204b6faf27d4609436b8ae",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "How many companies have launched their rockets from the Vandenerg Air base?",
    "SerialNumber": "2888",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Vandenerg Air",
        "uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base"
      }
    ],
    "id": "bdf990ee5daf4f10a200bcfd984e01f6",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "base",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "In which city of Pittsburg Steelers was the Congress of Inductrial Organization founded ?",
    "SerialNumber": "2892",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Congress_of_Industrial_Organizations> <http://dbpedia.org/property/founded> ?uri. <http://dbpedia.org/resource/Pittsburgh_Steelers> <http://dbpedia.org/property/city> ?uri} ",
    "entity mapping": [
      {
        "label": "organization",
        "uri": "http://dbpedia.org/resource/Congress_of_Industrial_Organizations"
      },
      {
        "label": "Pittsburg Steelers",
        "uri": "http://dbpedia.org/resource/Pittsburgh_Steelers"
      }
    ],
    "id": "2e984fcd973d4c79ae9ab371222218af",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/founded"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      }
    ]
  },
  {
    "question": "Was Duanne Allman famous for playing the Gibson SG?",
    "SerialNumber": "2894",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Duane_Allman> <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_SG> }",
    "entity mapping": [
      {
        "label": "allman",
        "uri": "http://dbpedia.org/resource/Duane_Allman"
      },
      {
        "label": "Gibson SG",
        "uri": "http://dbpedia.org/resource/Gibson_SG"
      }
    ],
    "id": "fdb525be2aca4cfda57372b41b1b6b79",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/property/notableInstruments"
      }
    ]
  },
  {
    "question": "List the people casted in Betsy's Wedding and 16 candles?",
    "SerialNumber": "2895",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Betsy's_Wedding> <http://dbpedia.org/ontology/starring> ?uri. <http://dbpedia.org/resource/Sixteen_Candles> <http://dbpedia.org/property/starring> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Betsy's Wedding",
        "uri": "http://dbpedia.org/resource/Betsy's_Wedding"
      },
      {
        "label": "candles",
        "uri": "http://dbpedia.org/resource/Sixteen_Candles"
      }
    ],
    "id": "7d51f1bf12ac4424b780213dac02bcb2",
    "predicate mapping": [
      {
        "label": "candles",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "candles",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "candles",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "For how many things are people famous, who were born in Nebraska?",
    "SerialNumber": "2898",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Nebraska> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Nebraska",
        "uri": "http://dbpedia.org/resource/Nebraska"
      }
    ],
    "id": "77907c919f714ac4ac233e3c93545099",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Which rivers start from the Provinces of Zambia?",
    "SerialNumber": "2902",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/settlementType> <http://dbpedia.org/resource/Provinces_of_Zambia> . ?uri <http://dbpedia.org/ontology/sourceRegion> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Provinces of Zambia",
        "uri": "http://dbpedia.org/resource/Provinces_of_Zambia"
      }
    ],
    "id": "436413f766614075bd1ac508ff48ff64",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/property/settlementType"
      },
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceRegion"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What awards have been given to some screenwriters?",
    "SerialNumber": "2906",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "screenwriter",
        "uri": "http://dbpedia.org/resource/Screenwriter"
      }
    ],
    "id": "9d4bc4521629455eae2f5b6be2f76dc2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Where is the spouse of Henry Bourchier of Essex buried?",
    "SerialNumber": "2909",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/spouse> <http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex> . ?x <http://dbpedia.org/property/placeOfBurial> ?uri  . }",
    "entity mapping": [
      {
        "label": "bourchier henry essex",
        "uri": "http://dbpedia.org/resource/Henry_Bourchier,_1st_Earl_of_Essex"
      }
    ],
    "id": "b38a612b13ec49d4b8be8365b8a0d89b",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      }
    ]
  },
  {
    "question": "How many movies have a screenplay located in the States?",
    "SerialNumber": "2912",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/screenplay> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "States",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "20c51164ad5a4b42acd9a417f6770edc",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which companies were behind the renovation of McKechnie Field ?",
    "SerialNumber": "2913",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/McKechnie_Field> <http://dbpedia.org/property/architect> ?uri } ",
    "entity mapping": [
      {
        "label": "McKechnie Field",
        "uri": "http://dbpedia.org/resource/McKechnie_Field"
      }
    ],
    "id": "691ab450f3054f89b7b59afe0c27f96f",
    "predicate mapping": [
      {
        "label": "renovation",
        "uri": "http://dbpedia.org/property/architect"
      }
    ]
  },
  {
    "question": "what cities are close by LoDaisKa ?",
    "SerialNumber": "2920",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/LoDaisKa_Site> <http://dbpedia.org/ontology/nearestCity> ?uri } ",
    "entity mapping": [
      {
        "label": "lodaiska",
        "uri": "http://dbpedia.org/resource/LoDaisKa_Site"
      }
    ],
    "id": "c1aabd659ada47e2b412d630a3a3814b",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/ontology/nearestCity"
      }
    ]
  },
  {
    "question": "Why did Letita McTavish Hargrave and Sextus Barbour die?",
    "SerialNumber": "2921",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Letitia_MacTavish_Hargrave> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Sextus_Barbour> <http://dbpedia.org/property/deathCause> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Letitia_MacTavish_Hargrave"
      },
      {
        "label": "Sextus Barbour",
        "uri": "http://dbpedia.org/resource/Sextus_Barbour"
      }
    ],
    "id": "7d39f4c231f744dfb4e0f7f5f4f15b7f",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathCause"
      }
    ]
  },
  {
    "question": "List the softwares which runs on Microsoft Windows and has license as Software as a service?",
    "SerialNumber": "2924",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      },
      {
        "label": "Software as a service",
        "uri": "http://dbpedia.org/resource/Software_as_a_service"
      }
    ],
    "id": "29584b2edbec44168d3adb4cd1d3f20f",
    "predicate mapping": [
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "license",
        "uri": "http://dbpedia.org/ontology/license"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "What are the TV shows whose network is also known as the CW?",
    "SerialNumber": "2926",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/sisterNames> <http://dbpedia.org/resource/The_CW> . ?uri <http://dbpedia.org/property/network> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "the CW",
        "uri": "http://dbpedia.org/resource/The_CW"
      }
    ],
    "id": "a6de49d9743f440db28ce26337d15730",
    "predicate mapping": [
      {
        "label": "known",
        "uri": "http://dbpedia.org/property/sisterNames"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are some tv shows created by Simon Fuller?",
    "SerialNumber": "2927",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "uri": "http://dbpedia.org/resource/Simon_Fuller"
      }
    ],
    "id": "ce328b878c624b718d5f92fe48d01626",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Count the number of sports played by the universities whose one of the sports is baketball ?",
    "SerialNumber": "2928",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/athletics> <http://dbpedia.org/resource/Basketball> . ?x <http://dbpedia.org/property/athletics> ?uri }",
    "entity mapping": [
      {
        "label": "one",
        "uri": "http://dbpedia.org/resource/Basketball"
      }
    ],
    "id": "f250fdf5363442e1a68b1575a75f7649",
    "predicate mapping": [
      {
        "label": "baketball",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "baketball",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Where was the engineer born who manufactured EP R.E.P. 1?",
    "SerialNumber": "2929",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1> <http://dbpedia.org/property/manufacturer> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "1",
        "uri": "http://dbpedia.org/resource/Esnault-Pelterie_R.E.P._1"
      }
    ],
    "id": "c5ad9696ccbc49d48f66061c12d9fce0",
    "predicate mapping": [
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/property/manufacturer"
      },
      {
        "label": "EP",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Where has the employee of Columbia Records  worked ?",
    "SerialNumber": "2931",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Columbia_Records> . ?x <http://dbpedia.org/ontology/employer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Columbia Records",
        "uri": "http://dbpedia.org/resource/Columbia_Records"
      }
    ],
    "id": "91fac607c06844458a5a93efbc30e6cb",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/employer"
      }
    ]
  },
  {
    "question": "What are the sports played by the universities who also plays taekwondo ?",
    "SerialNumber": "2933",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/Taekwondo> . ?x <http://dbpedia.org/property/athletics> ?uri  . }",
    "entity mapping": [
      {
        "label": "taekwondo",
        "uri": "http://dbpedia.org/resource/Taekwondo"
      }
    ],
    "id": "574c7a40663240129e6f74a6c30fa086",
    "predicate mapping": [
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Under which scientist did doctoral students erban ieica and Erich Bagge study?",
    "SerialNumber": "2937",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Șerban_Țițeica> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica"
      },
      {
        "label": "Erich Bagge",
        "uri": "http://dbpedia.org/resource/Erich_Bagge"
      }
    ],
    "id": "5f766cb18b93417495ec541e7749269c",
    "predicate mapping": [
      {
        "label": "doctoral students",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "doctoral students",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Who did the associated act which is a Peter Frampton production ?",
    "SerialNumber": "2938",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Peter_Frampton> . ?uri <http://dbpedia.org/property/associatedActs> ?x  . }",
    "entity mapping": [
      {
        "label": "Peter Frampton",
        "uri": "http://dbpedia.org/resource/Peter_Frampton"
      }
    ],
    "id": "c34a5952b1a648adbac30cc484fc4092",
    "predicate mapping": [
      {
        "label": "production",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "associated act",
        "uri": "http://dbpedia.org/property/associatedActs"
      }
    ]
  },
  {
    "question": "Give me list of people who were the first to climb a peak in the Yosemite park?",
    "SerialNumber": "2939",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }",
    "entity mapping": [
      {
        "label": "yosemite park",
        "uri": "http://dbpedia.org/resource/Yosemite_National_Park"
      }
    ],
    "id": "47d731bad7474102bd95407a15b6f410",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "Where does the river end which starts in Richmond Park?",
    "SerialNumber": "2943",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Richmond_Park> . ?x <http://dbpedia.org/property/mouthLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}",
    "entity mapping": [
      {
        "label": "Richmond Park",
        "uri": "http://dbpedia.org/resource/Richmond_Park"
      }
    ],
    "id": "6611d96f0da74bd29467f037c7bc8e9c",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/Stream"
      }
    ]
  },
  {
    "question": "Is the Kia Sportage similar to the Hyundai Lavita?",
    "SerialNumber": "2945",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Kia_Sportage> }",
    "entity mapping": [
      {
        "label": "Hyundai Lavita",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita"
      },
      {
        "label": "Kia Sportage",
        "uri": "http://dbpedia.org/resource/Kia_Sportage"
      }
    ],
    "id": "fc606b3fc3404643a264ed538a54c5c2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation"
      }
    ]
  },
  {
    "question": "How many nations' volleyball players have played for the Russian women volleyball team?",
    "SerialNumber": "2947",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/nationalteam> <http://dbpedia.org/resource/Russia_women's_national_volleyball_team> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Russian",
        "uri": "http://dbpedia.org/resource/Russia_women's_national_volleyball_team"
      }
    ],
    "id": "3778cf6328e9432b8c36e0c47ae65f85",
    "predicate mapping": [
      {
        "label": "nations'",
        "uri": "http://dbpedia.org/property/nationalteam"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Which garrison of East Indies Station is also the route end of Mumbai Vadodara Express ?",
    "SerialNumber": "2948",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/East_Indies_Station> <http://dbpedia.org/ontology/garrison> ?uri} ",
    "entity mapping": [
      {
        "label": "vadodara express mumbai",
        "uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway"
      },
      {
        "label": "East Indies Station",
        "uri": "http://dbpedia.org/resource/East_Indies_Station"
      }
    ],
    "id": "1db09b3583d54788bc6313956b79499f",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "garrison",
        "uri": "http://dbpedia.org/ontology/garrison"
      }
    ]
  },
  {
    "question": "Name the tiemzone of Banlung ?",
    "SerialNumber": "2949",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Banlung> <http://dbpedia.org/ontology/timeZone> ?uri } ",
    "entity mapping": [
      {
        "label": "Banlung",
        "uri": "http://dbpedia.org/resource/Banlung"
      }
    ],
    "id": "ae2e45495c164835a9538dec49cb3cd3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/timeZone"
      }
    ]
  },
  {
    "question": "Who made the engine whose predecessor is the SHO V6?",
    "SerialNumber": "2950",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Ford_SHO_V6_engine> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Engine>}",
    "entity mapping": [
      {
        "label": "engine sho",
        "uri": "http://dbpedia.org/resource/Ford_SHO_V6_engine"
      }
    ],
    "id": "fccee4f131814d4c999faf99f9c8a641",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "engine",
        "uri": "http://dbpedia.org/ontology/Engine"
      }
    ]
  },
  {
    "question": "Does Mauritius follow a parliamentary republic?",
    "SerialNumber": "2951",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mauritius> <http://dbpedia.org/property/governmentType> <http://dbpedia.org/resource/Parliamentary_republic> }",
    "entity mapping": [
      {
        "label": "Mauritius",
        "uri": "http://dbpedia.org/resource/Mauritius"
      },
      {
        "label": "parliamentary republic",
        "uri": "http://dbpedia.org/resource/Parliamentary_republic"
      }
    ],
    "id": "1d52560a0c664dd69770aed6f1cd971b",
    "predicate mapping": [
      {
        "label": "follow",
        "uri": "http://dbpedia.org/property/governmentType"
      }
    ]
  },
  {
    "question": "In how many places was the album of King Crimson recorded?",
    "SerialNumber": "2952",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/King_Crimson> . ?x <http://dbpedia.org/ontology/recordedIn> ?uri  . }",
    "entity mapping": [
      {
        "label": "King Crimson",
        "uri": "http://dbpedia.org/resource/King_Crimson"
      }
    ],
    "id": "a44318040305431cb237c6809f2a8e7c",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/artist"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      }
    ]
  },
  {
    "question": "In how many teams have people previously played who play as defencemen?",
    "SerialNumber": "2954",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "previously",
        "uri": "http://dbpedia.org/resource/Defenceman"
      }
    ],
    "id": "907d667fb8614bfdbc8a5ce883fa99bd",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "What is the name of Mary's divine child?",
    "SerialNumber": "2961",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Mary_(mother_of_Jesus)>  . }",
    "entity mapping": [
      {
        "label": "Mary",
        "uri": "http://dbpedia.org/resource/Mary_(mother_of_Jesus)"
      }
    ],
    "id": "3609e1969825458f81798bea8a86a387",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent"
      }
    ]
  },
  {
    "question": "Among which sitcoms in which theme music is composed by Gary Portnoy is located in Massachusetts ?",
    "SerialNumber": "2964",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Gary_Portnoy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Massachusetts",
        "uri": "http://dbpedia.org/resource/Massachusetts"
      },
      {
        "label": "Gary Portnoy",
        "uri": "http://dbpedia.org/resource/Gary_Portnoy"
      }
    ],
    "id": "44e437e237a94b7abe806fcc1f7ae2e4",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Over which rivers, does a cable stayed bridge exists?",
    "SerialNumber": "2965",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/design> <http://dbpedia.org/resource/Cable-stayed_bridge> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "entity mapping": [
      {
        "label": "cable stayed bridge",
        "uri": "http://dbpedia.org/resource/Cable-stayed_bridge"
      }
    ],
    "id": "3dd19cd66683497889c840e33ab0e00d",
    "predicate mapping": [
      {
        "label": "exists",
        "uri": "http://dbpedia.org/property/design"
      },
      {
        "label": "Over",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "Give me everything owned by networks which is lead by Steve Burke?",
    "SerialNumber": "2966",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Steve_Burke_(businessman)> . ?uri <http://dbpedia.org/ontology/network> ?x  . }",
    "entity mapping": [
      {
        "label": "Steve Burke",
        "uri": "http://dbpedia.org/resource/Steve_Burke_(businessman)"
      }
    ],
    "id": "3dbc2bb2e2064e068bbd736158623ba3",
    "predicate mapping": [
      {
        "label": "lead",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/network"
      }
    ]
  },
  {
    "question": "Ontario's ice hockey players have been a part of which teams?",
    "SerialNumber": "2967",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
    "entity mapping": [
      {
        "label": "Ontario",
        "uri": "http://dbpedia.org/resource/Ontario"
      }
    ],
    "id": "471a1edfae9f4e0b86d10cce7f064dd3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "ice hockey player",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer"
      }
    ]
  },
  {
    "question": "List the battles in which alumni of US Army Command and General Staff College fought?",
    "SerialNumber": "2969",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College> . ?x <http://dbpedia.org/property/battles> ?uri  . }",
    "entity mapping": [
      {
        "label": "general command college staff",
        "uri": "http://dbpedia.org/resource/United_States_Army_Command_and_General_Staff_College"
      }
    ],
    "id": "39b773349eeb4776848bd72b621b281a",
    "predicate mapping": [
      {
        "label": "alumni of",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Name the city with leader as Esther Alder and neighboring municipality as Pregny-Chambsy?",
    "SerialNumber": "2971",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mayor> <http://dbpedia.org/resource/Esther_Alder> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chambésy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "entity mapping": [
      {
        "label": "Esther Alder",
        "uri": "http://dbpedia.org/resource/Esther_Alder"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Pregny-Chambésy"
      }
    ],
    "id": "928515f8deaa4a1b9982acd9bd90e877",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/ontology/mayor"
      },
      {
        "label": "neighboring municipality",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location"
      }
    ]
  },
  {
    "question": "List all the mmebers of  Mekong River Commission?",
    "SerialNumber": "2973",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mekong_River_Commission> <http://dbpedia.org/property/membership> ?uri } ",
    "entity mapping": [
      {
        "label": "Mekong River Commission",
        "uri": "http://dbpedia.org/resource/Mekong_River_Commission"
      }
    ],
    "id": "3720fc28f3f94a57bdf95083816cdf8a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "What are the academic interests of the advisor of Paul Demiville ?",
    "SerialNumber": "2974",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Paul_Demiéville> <http://dbpedia.org/ontology/academicAdvisor> ?x . ?x <http://dbpedia.org/property/fields> ?uri  . }",
    "entity mapping": [
      {
        "label": "Paul Demiville",
        "uri": "http://dbpedia.org/resource/Paul_Demiéville"
      }
    ],
    "id": "588f69a6c10c4bfca7c6ecf3d36b73f0",
    "predicate mapping": [
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "advisor",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "Who is the founder of the trade union which affiliates Amalgamated Association of Iron and Steel Workers?",
    "SerialNumber": "2976",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TradeUnion>}",
    "entity mapping": [
      {
        "label": "Amalgamated Association of Iron and Steel Workers",
        "uri": "http://dbpedia.org/resource/Amalgamated_Association_of_Iron_and_Steel_Workers"
      }
    ],
    "id": "2fe30687c5644f9096c50927e10ec2fe",
    "predicate mapping": [
      {
        "label": "affiliates",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founded"
      },
      {
        "label": "trade union",
        "uri": "http://dbpedia.org/ontology/TradeUnion"
      }
    ]
  },
  {
    "question": "What royalties's sepulchre is Mausoleum of Augustus?",
    "SerialNumber": "2977",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Mausoleum_of_Augustus> } ",
    "entity mapping": [
      {
        "label": "Mausoleum of Augustus",
        "uri": "http://dbpedia.org/resource/Mausoleum_of_Augustus"
      }
    ],
    "id": "c8578e413e244216a605fd070fa1096b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBurial"
      }
    ]
  },
  {
    "question": "How many cars are similar to the ones assembled in the Jefferson North Assembly?",
    "SerialNumber": "2983",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Jefferson_North_Assembly> . ?x <http://dbpedia.org/property/related> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jefferson North Assembly",
        "uri": "http://dbpedia.org/resource/Jefferson_North_Assembly"
      }
    ],
    "id": "e2d4df3f532942f8947a0ead70798b87",
    "predicate mapping": [
      {
        "label": "Assembly",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/related"
      }
    ]
  },
  {
    "question": "What does the river flow into, whose left tributary is Bukovica?",
    "SerialNumber": "2984",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Bukovica_(river)> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bukovica",
        "uri": "http://dbpedia.org/resource/Bukovica_(river)"
      }
    ],
    "id": "583ab0d388bd4c158b0862155dc190de",
    "predicate mapping": [
      {
        "label": "left tributary",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      },
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/mouthCountry"
      }
    ]
  },
  {
    "question": "which astronaut's mission was Apollo 11?",
    "SerialNumber": "2987",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> } ",
    "entity mapping": [
      {
        "label": "Apollo 11",
        "uri": "http://dbpedia.org/resource/Apollo_11"
      }
    ],
    "id": "a4aaefe71b4c47fb82c079c3ec2cf474",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      }
    ]
  },
  {
    "question": "What came before  PlayStation 4 and uses PlayStation 3 system software as OS?",
    "SerialNumber": "2988",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/os> <http://dbpedia.org/resource/PlayStation_3_system_software>  . }",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "uri": "http://dbpedia.org/resource/PlayStation_4"
      },
      {
        "label": "PlayStation 3 system software",
        "uri": "http://dbpedia.org/resource/PlayStation_3_system_software"
      }
    ],
    "id": "76af8656dedf4ec2bf0348b2eddf906b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os"
      }
    ]
  },
  {
    "question": "List the common sports played by Polytechnic University of the Philippines Bataan and Jamiatu Muslim Mindanao ?",
    "SerialNumber": "2995",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri} ",
    "entity mapping": [
      {
        "label": "polytechnic philippines university bataan",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_–_Bataan"
      },
      {
        "label": "Jamiatu Muslim Mindanao",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao"
      }
    ],
    "id": "0f029e1473eb473db6af6662d3cb6fa4",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "Bataan",
        "uri": "http://dbpedia.org/ontology/athletics"
      }
    ]
  },
  {
    "question": "List down all the cast members of Tony n' Tina's Wedding ?",
    "SerialNumber": "2996",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tony_n'_Tina's_Wedding> <http://dbpedia.org/property/starring> ?uri } ",
    "entity mapping": [
      {
        "label": "Tony n' Tina's Wedding",
        "uri": "http://dbpedia.org/resource/Tony_n'_Tina's_Wedding"
      }
    ],
    "id": "6dabffad323d44009367b7eaaf220c21",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/starring"
      }
    ]
  },
  {
    "question": "What are some seas inside europe ?",
    "SerialNumber": "3002",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "europe",
        "uri": "http://dbpedia.org/resource/Europe"
      }
    ],
    "id": "f8412d27be264040b18097376e40aa6f",
    "predicate mapping": [
      {
        "label": "inside",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Where do the politicians, Blanche Bruce and John Franklin Miller work?",
    "SerialNumber": "3006",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Blanche_Bruce> <http://dbpedia.org/property/office> ?uri. <http://dbpedia.org/resource/John_Franklin_Miller_(senator)> <http://dbpedia.org/property/office> ?uri . }",
    "entity mapping": [
      {
        "label": "Blanche Bruce",
        "uri": "http://dbpedia.org/resource/Blanche_Bruce"
      },
      {
        "label": "John Franklin Miller",
        "uri": "http://dbpedia.org/resource/John_Franklin_Miller_(senator)"
      }
    ],
    "id": "6c76c96b0fa54b84a967935d0fa16694",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/office"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "What region was Gloria Schaffer born in, which also contains Newington?",
    "SerialNumber": "3010",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gloria_Schaffer> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Newington,_Connecticut> <http://dbpedia.org/ontology/isPartOf> ?uri . }",
    "entity mapping": [
      {
        "label": "Gloria Schaffer",
        "uri": "http://dbpedia.org/resource/Gloria_Schaffer"
      },
      {
        "label": "newington",
        "uri": "http://dbpedia.org/resource/Newington,_Connecticut"
      }
    ],
    "id": "f49d08f78f3a4c64a3963126cb43d7e9",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/isPartOf"
      }
    ]
  },
  {
    "question": "which award has been won by Claudia Moro?",
    "SerialNumber": "3011",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Claudia_Moro> <http://dbpedia.org/property/title> ?uri } ",
    "entity mapping": [
      {
        "label": "Claudia Moro",
        "uri": "http://dbpedia.org/resource/Claudia_Moro"
      }
    ],
    "id": "169a1ce1f8ac4c5ba9a92103237113c6",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/title"
      }
    ]
  },
  {
    "question": "Where was Henri, Duke of Rohan laid to rest?",
    "SerialNumber": "3013",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Henri,_Duke_of_Rohan> <http://dbpedia.org/ontology/placeOfBurial> ?uri } ",
    "entity mapping": [
      {
        "label": "Henri, Duke of Rohan",
        "uri": "http://dbpedia.org/resource/Henri,_Duke_of_Rohan"
      }
    ],
    "id": "311bb63ae12d4dd999e195d827cf60d2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/placeOfBurial"
      }
    ]
  },
  {
    "question": "Does the lena river flow into the Laptev Sea?",
    "SerialNumber": "3016",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Lena_River> <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Laptev_Sea> }",
    "entity mapping": [
      {
        "label": "lena river",
        "uri": "http://dbpedia.org/resource/Lena_River"
      },
      {
        "label": "Laptev Sea",
        "uri": "http://dbpedia.org/resource/Laptev_Sea"
      }
    ],
    "id": "363f13c9bc2242038c131f095d4c866d",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      }
    ]
  },
  {
    "question": "List the things for which people of New Orleans are famous for?",
    "SerialNumber": "3022",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/New_Orleans> . ?x <http://dbpedia.org/property/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "New Orleans",
        "uri": "http://dbpedia.org/resource/New_Orleans"
      }
    ],
    "id": "5aa02b6827bf4e9590a49a469b64904a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which artist was taught by Jos Ruiz y Blasco?",
    "SerialNumber": "3027",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/training> <http://dbpedia.org/resource/José_Ruiz_y_Blasco>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "Jos Ruiz y Blasco",
        "uri": "http://dbpedia.org/resource/José_Ruiz_y_Blasco"
      }
    ],
    "id": "64641fa005c74f08b24a64c47b15f3be",
    "predicate mapping": [
      {
        "label": "taught",
        "uri": "http://dbpedia.org/property/training"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Was Zachary taylor a major general?",
    "SerialNumber": "3029",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Zachary_Taylor> <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Major_general_(United_States)> }",
    "entity mapping": [
      {
        "label": "Zachary taylor",
        "uri": "http://dbpedia.org/resource/Zachary_Taylor"
      },
      {
        "label": "major general",
        "uri": "http://dbpedia.org/resource/Major_general_(United_States)"
      }
    ],
    "id": "7e2d4902f5374b70b03c59179b9e2ac1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/rank"
      }
    ]
  },
  {
    "question": "Which country's people have graduated from Ghana School of Law?",
    "SerialNumber": "3034",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Ghana_School_of_Law> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ghana School of Law",
        "uri": "http://dbpedia.org/resource/Ghana_School_of_Law"
      }
    ],
    "id": "8b827358accc43048f434244318b58c5",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "country's",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What awards have been given to the dude who made Shaun the Sheep?",
    "SerialNumber": "3035",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Shaun_the_Sheep> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Shaun the Sheep",
        "uri": "http://dbpedia.org/resource/Shaun_the_Sheep"
      }
    ],
    "id": "37f1ac3a34a64c90ab93ffe69af727ca",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Where is  Dofinivka Estuary  located ?",
    "SerialNumber": "3036",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dofinivka_Estuary> <http://dbpedia.org/property/location> ?uri } ",
    "entity mapping": [
      {
        "label": "Dofinivka Estuary",
        "uri": "http://dbpedia.org/resource/Dofinivka_Estuary"
      }
    ],
    "id": "aab7be38505a4ecdb2689be99d9d9de4",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "Does Shaun Thong a member of Audi?",
    "SerialNumber": "3042",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Shaun_Thong> <http://dbpedia.org/property/currentTeam> <http://dbpedia.org/resource/Audi> }",
    "entity mapping": [
      {
        "label": "Shaun Thong",
        "uri": "http://dbpedia.org/resource/Shaun_Thong"
      },
      {
        "label": "Audi",
        "uri": "http://dbpedia.org/resource/Audi"
      }
    ],
    "id": "ef36454fc013444f981fe8a7069ceee8",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/currentTeam"
      }
    ]
  },
  {
    "question": "Give me a list of computers whose CPU is in the US.",
    "SerialNumber": "3043",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/cpu> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "c6d4e596834546d09a59e92ba09dc966",
    "predicate mapping": [
      {
        "label": "US.",
        "uri": "http://dbpedia.org/property/locationCity"
      },
      {
        "label": "CPU",
        "uri": "http://dbpedia.org/ontology/cpu"
      },
      {
        "label": "me",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Where does the river end, into which the Rakitnica flows?",
    "SerialNumber": "3046",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/rightTributary> <http://dbpedia.org/resource/Rakitnica> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
    "entity mapping": [
      {
        "label": "Rakitnica",
        "uri": "http://dbpedia.org/resource/Rakitnica"
      }
    ],
    "id": "e65463440f1f4b59b6d0163ad10c490e",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/rightTributary"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/mouthCountry"
      }
    ]
  },
  {
    "question": "Do the west coast airlines fly to seattle?",
    "SerialNumber": "3048",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/West_Coast_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Seattle> }",
    "entity mapping": [
      {
        "label": "west coast airlines",
        "uri": "http://dbpedia.org/resource/West_Coast_Airlines"
      },
      {
        "label": "seattle",
        "uri": "http://dbpedia.org/resource/Seattle"
      }
    ],
    "id": "b4b6b1d0dcab4cbb934923e070092d67",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      }
    ]
  },
  {
    "question": "Who was the silver medalist of Gymnastics at the 2008 Summer Olympics  Women's artistic individual all-around ?",
    "SerialNumber": "3050",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_–_Women's_artistic_individual_all-around> <http://dbpedia.org/ontology/silverMedalist> ?uri } ",
    "entity mapping": [
      {
        "label": "individual gymnastics all-around olympics artistic",
        "uri": "http://dbpedia.org/resource/Gymnastics_at_the_2008_Summer_Olympics_–_Women's_artistic_individual_all-around"
      }
    ],
    "id": "ec0ca62208e240c396994de301d25f2b",
    "predicate mapping": [
      {
        "label": "medalist silver",
        "uri": "http://dbpedia.org/ontology/silverMedalist"
      }
    ]
  },
  {
    "question": "Who  works  at the American Magazine and New York Post?",
    "SerialNumber": "3051",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/The_American_Magazine> . ?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/New_York_Post> . }",
    "entity mapping": [
      {
        "label": "the American Magazine",
        "uri": "http://dbpedia.org/resource/The_American_Magazine"
      },
      {
        "label": "New York Post",
        "uri": "http://dbpedia.org/resource/New_York_Post"
      }
    ],
    "id": "5c3207ee849d4e9cb44f0ee1d698b602",
    "predicate mapping": [
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "works",
        "uri": "http://dbpedia.org/ontology/employer"
      }
    ]
  },
  {
    "question": "Which past members of the The Conglomerate (American group) also sang Take Me There (Blackstreet & Ma song)?",
    "SerialNumber": "3052",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Conglomerate_(American_group)> <http://dbpedia.org/property/pastMembers> ?uri. <http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_Mýa_song)> <http://dbpedia.org/ontology/musicalBand> ?uri} ",
    "entity mapping": [
      {
        "label": "The Conglomerate (American group)",
        "uri": "http://dbpedia.org/resource/The_Conglomerate_(American_group)"
      },
      {
        "label": "Take Me There",
        "uri": "http://dbpedia.org/resource/Take_Me_There_(Blackstreet_&_Mýa_song)"
      }
    ],
    "id": "5f0af10a644a420ebcd9811b94687f7d",
    "predicate mapping": [
      {
        "label": "past members",
        "uri": "http://dbpedia.org/property/pastMembers"
      },
      {
        "label": "Ma",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "Collaborators of Demis Roussos have composed music for which movies?",
    "SerialNumber": "3054",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Demis_Roussos> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Demis Roussos",
        "uri": "http://dbpedia.org/resource/Demis_Roussos"
      }
    ],
    "id": "7f55bf607c9e490aae4ff2f9f40a27e2",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Where did these popular aeroplanes - Focke Wulf 260 and Start+Flug H 101 originate?",
    "SerialNumber": "3058",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Focke-Wulf_Fw_260> <http://dbpedia.org/property/nationalOrigin> ?uri. <http://dbpedia.org/resource/Start_+_Flug_H-101> <http://dbpedia.org/property/nationalOrigin> ?uri . }",
    "entity mapping": [
      {
        "label": "focke wulf 260",
        "uri": "http://dbpedia.org/resource/Focke-Wulf_Fw_260"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Start_+_Flug_H-101"
      }
    ],
    "id": "2130571cb0394b1b82ad2a8c6f4f159f",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      }
    ]
  },
  {
    "question": "Which source of river Raa is the sovereign state of Adriatic sea ?",
    "SerialNumber": "3059",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Raša_(river)> <http://dbpedia.org/ontology/source> ?uri. <http://dbpedia.org/resource/Adriatic_Sea> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/resource/Raša_(river)"
      },
      {
        "label": "Adriatic sea",
        "uri": "http://dbpedia.org/resource/Adriatic_Sea"
      }
    ],
    "id": "da0c3ca5edfb4bad9ef869c38119a10e",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "sovereign state",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Where did the film director of Kala Pani die?",
    "SerialNumber": "3067",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kala_Pani_(1958_film)> <http://dbpedia.org/ontology/director> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kala Pani",
        "uri": "http://dbpedia.org/resource/Kala_Pani_(1958_film)"
      }
    ],
    "id": "0cd31fba24c240f588c0916b021f4d63",
    "predicate mapping": [
      {
        "label": "film director",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Does Timothy Morton study Buddhism?",
    "SerialNumber": "3068",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Timothy_Morton> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Buddhism> }",
    "entity mapping": [
      {
        "label": "Timothy Morton",
        "uri": "http://dbpedia.org/resource/Timothy_Morton"
      },
      {
        "label": "Buddhism",
        "uri": "http://dbpedia.org/resource/Buddhism"
      }
    ],
    "id": "18e1b907a21644199bcf31fb9629f79c",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "Name a queen whose parent is Ptolemy XII Auletes and consort is Ptolemy XIII Theos Philopator?",
    "SerialNumber": "3069",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes> . ?uri <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Ptolemy XII Auletes",
        "uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes"
      },
      {
        "label": "Ptolemy XIII Theos Philopator",
        "uri": "http://dbpedia.org/resource/Ptolemy_XIII_Theos_Philopator"
      }
    ],
    "id": "81ced9f9e10b4380a691a73a17095c6e",
    "predicate mapping": [
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "consort",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "queen",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Which universit's affiliation is with Kalpan, Inc. and has campus at Iowa ?",
    "SerialNumber": "3070",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Kaplan,_Inc.> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Kaplan,_Inc."
      },
      {
        "label": "Iowa",
        "uri": "http://dbpedia.org/resource/Iowa"
      }
    ],
    "id": "c3fb5965d89548719ebf83511d9e262a",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "universit's",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Which movies have someone on their cast from Shelby County in Tennessee?",
    "SerialNumber": "3072",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Shelby_County,_Tennessee> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "tennessee shelby county",
        "uri": "http://dbpedia.org/resource/Shelby_County,_Tennessee"
      }
    ],
    "id": "b4a89e8c9b55499eaa9963fe4b9d6152",
    "predicate mapping": [
      {
        "label": "Tennessee",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which venues are located at places governed by John Roberts?",
    "SerialNumber": "3074",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/John_Roberts> . ?uri <http://dbpedia.org/property/address> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Venue>}",
    "entity mapping": [
      {
        "label": "John Roberts",
        "uri": "http://dbpedia.org/resource/John_Roberts"
      }
    ],
    "id": "1a7b4ab5c3674875a82e577a3fcb3a55",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/address"
      },
      {
        "label": "venue",
        "uri": "http://dbpedia.org/ontology/Venue"
      }
    ]
  },
  {
    "question": "How many people are in the continental army?",
    "SerialNumber": "3075",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Continental_Army>  . }",
    "entity mapping": [
      {
        "label": "continental army",
        "uri": "http://dbpedia.org/resource/Continental_Army"
      }
    ],
    "id": "7abaec31e6094f6eac72313b8dd8dc32",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      }
    ]
  },
  {
    "question": "What river originates in the Connecticut Lakes?",
    "SerialNumber": "3077",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Connecticut_Lakes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Connecticut Lakes",
        "uri": "http://dbpedia.org/resource/Connecticut_Lakes"
      }
    ],
    "id": "98ad740059cf4598828aa46f80707524",
    "predicate mapping": [
      {
        "label": "originates",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "How many things are aired on BBC HD?",
    "SerialNumber": "3079",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD>  . }",
    "entity mapping": [
      {
        "label": "BBC HD",
        "uri": "http://dbpedia.org/resource/BBC_HD"
      }
    ],
    "id": "602d5f8103c345b1bf3b59a8f4fbcb01",
    "predicate mapping": [
      {
        "label": "aired",
        "uri": "http://dbpedia.org/ontology/network"
      }
    ]
  },
  {
    "question": "In which countries are there banks which came after the National Commercial Bank of Mauritius?",
    "SerialNumber": "3081",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/National_Commercial_Bank_Mauritius> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/locationCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "National Commercial Bank of Mauritius",
        "uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius"
      }
    ],
    "id": "010e9f9ec10d4cf5bd9455353215d507",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/property/locationCountry"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "Which Paramount TV show was produced by Glen and Les Charles ?",
    "SerialNumber": "3088",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles> . ?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Glen and Les Charles",
        "uri": "http://dbpedia.org/resource/Glen_and_Les_Charles"
      },
      {
        "label": "paramount",
        "uri": "http://dbpedia.org/resource/Paramount_Television"
      }
    ],
    "id": "5a15996c69764d78950ee50018ff8de5",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "TV",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the mayor of the city under which is the constituency of Zora Singh Maan?",
    "SerialNumber": "3096",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Zora_Singh_Maan> <http://dbpedia.org/property/constituency> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }",
    "entity mapping": [
      {
        "label": "Zora Singh Maan",
        "uri": "http://dbpedia.org/resource/Zora_Singh_Maan"
      }
    ],
    "id": "9a5eae5ceec54a8e97a3c8d7ecdb1149",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "Who is the incumbent of Al Gore presidential campaign of 2000 ?",
    "SerialNumber": "3099",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri } ",
    "entity mapping": [
      {
        "label": "presidential campaign gore 2000",
        "uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000"
      }
    ],
    "id": "240ab1b4acb848ce816bdc5a4660b11b",
    "predicate mapping": [
      {
        "label": "incumbent",
        "uri": "http://dbpedia.org/ontology/incumbent"
      }
    ]
  },
  {
    "question": "Is Albert P Clark buried in Colorado?",
    "SerialNumber": "3105",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Albert_P._Clark> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }",
    "entity mapping": [
      {
        "label": "albert clark",
        "uri": "http://dbpedia.org/resource/Albert_P._Clark"
      },
      {
        "label": "Colorado",
        "uri": "http://dbpedia.org/resource/Colorado"
      }
    ],
    "id": "1604b4deca8f4b089da3546474871043",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial"
      }
    ]
  },
  {
    "question": "Who is  office holder of constituencies Duboce Triangle and Noe Valley ?",
    "SerialNumber": "3106",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Noe_Valley,_San_Francisco> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "triangle duboce",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco"
      },
      {
        "label": "valley",
        "uri": "http://dbpedia.org/resource/Noe_Valley,_San_Francisco"
      }
    ],
    "id": "c373b33ce50b4f15976673862387f06d",
    "predicate mapping": [
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "For how many things are americans famous for?",
    "SerialNumber": "3107",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "a473965ed74b45298f4f8082bca57f56",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Which politician was succeeded by someone who graduated from the Instituts d'tudes politiques?",
    "SerialNumber": "3108",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Instituts_d'études_politiques> . ?uri <http://dbpedia.org/property/successor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "politiques instituts",
        "uri": "http://dbpedia.org/resource/Instituts_d'études_politiques"
      }
    ],
    "id": "ac238bf4d1e14571a3b37e506efd4240",
    "predicate mapping": [
      {
        "label": "graduated from",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "politiques",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "politiques",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Who created the world series of Poker?",
    "SerialNumber": "3110",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/World_Series_of_Poker> <http://dbpedia.org/property/founded> ?uri } ",
    "entity mapping": [
      {
        "label": "world series of Poker",
        "uri": "http://dbpedia.org/resource/World_Series_of_Poker"
      }
    ],
    "id": "ebfe588dc9854e4db5a96b4bb467c612",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/founded"
      }
    ]
  },
  {
    "question": "Is the Hyundai Lavita assembled in Ulsan?",
    "SerialNumber": "3111",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Ulsan> }",
    "entity mapping": [
      {
        "label": "Hyundai Lavita",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita"
      },
      {
        "label": "Ulsan",
        "uri": "http://dbpedia.org/resource/Ulsan"
      }
    ],
    "id": "ffc8b63b6f384ab18b8f65a4d3dd31d4",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      }
    ]
  },
  {
    "question": "Which countries came together to serve a greater purpose and founded South Asia Subregional Economic Cooperation?",
    "SerialNumber": "3112",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> ?uri } ",
    "entity mapping": [
      {
        "label": "South Asia Subregional Economic Cooperation",
        "uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation"
      }
    ],
    "id": "e15981cdcc5a4f23935cf46e161ee0c0",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/membership"
      }
    ]
  },
  {
    "question": "Which owner of Drop.io made Sean Parker famous?",
    "SerialNumber": "3115",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Drop.io> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Sean_Parker> <http://dbpedia.org/ontology/knownFor> ?uri . }",
    "entity mapping": [
      {
        "label": "Drop.io",
        "uri": "http://dbpedia.org/resource/Drop.io"
      },
      {
        "label": "Sean Parker",
        "uri": "http://dbpedia.org/resource/Sean_Parker"
      }
    ],
    "id": "2a705d023eea446eb1e7b31a390a4146",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Which kmascot od seneca Academy is also the species of The Fox and the Cat ?",
    "SerialNumber": "3117",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Fox_and_the_Cat> <http://dbpedia.org/property/species> ?uri. <http://dbpedia.org/resource/Seneca_Academy_and_Circle_School> <http://dbpedia.org/property/mascot> ?uri} ",
    "entity mapping": [
      {
        "label": "The Fox and the Cat",
        "uri": "http://dbpedia.org/resource/The_Fox_and_the_Cat"
      },
      {
        "label": "academy seneca",
        "uri": "http://dbpedia.org/resource/Seneca_Academy_and_Circle_School"
      }
    ],
    "id": "813f18d7591b4b3f89070f3f5831e627",
    "predicate mapping": [
      {
        "label": "species",
        "uri": "http://dbpedia.org/property/species"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Which tv show was preceded by The spirit of Christmas and voice to the character was given by Mona Marshall ?",
    "SerialNumber": "3119",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Mona_Marshall>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "The spirit of Christmas",
        "uri": "http://dbpedia.org/resource/The_Spirit_of_Christmas_(short_film)"
      },
      {
        "label": "Mona Marshall",
        "uri": "http://dbpedia.org/resource/Mona_Marshall"
      }
    ],
    "id": "dd1b888f16a14a13b8be3e662804a5d9",
    "predicate mapping": [
      {
        "label": "character",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Jimmie Fisher and Winston Bryant were governors under which president?",
    "SerialNumber": "3126",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jimmie_Lou_Fisher> <http://dbpedia.org/property/governor> ?uri. <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri . }",
    "entity mapping": [
      {
        "label": "jimmie fisher",
        "uri": "http://dbpedia.org/resource/Jimmie_Lou_Fisher"
      },
      {
        "label": "Winston Bryant",
        "uri": "http://dbpedia.org/resource/Winston_Bryant"
      }
    ],
    "id": "7320bf155b9b4a90b729bd36263698da",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor"
      },
      {
        "label": "governor",
        "uri": "http://dbpedia.org/property/governor"
      }
    ]
  },
  {
    "question": "Which shows are similar to the ones produced by Phil Collinson?",
    "SerialNumber": "3127",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Phil_Collinson> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Phil Collinson",
        "uri": "http://dbpedia.org/resource/Phil_Collinson"
      }
    ],
    "id": "65de0b27d7cf414daa73bab1546dfaab",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the fictional character who starred in The Dognapper?",
    "SerialNumber": "3131",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/voice> <http://dbpedia.org/resource/The_Dognapper>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "The Dognapper",
        "uri": "http://dbpedia.org/resource/The_Dognapper"
      }
    ],
    "id": "65a7bbb407e44d46825ede7581db9462",
    "predicate mapping": [
      {
        "label": "starred",
        "uri": "http://dbpedia.org/ontology/voice"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Enumerate all the first teams of the GPs which were held in Watkins Glen, NY?",
    "SerialNumber": "3133",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . }",
    "entity mapping": [
      {
        "label": "watkins glen,",
        "uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York"
      }
    ],
    "id": "613c74a4ec09400a94fd8ede2e063e5c",
    "predicate mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      }
    ]
  },
  {
    "question": "Count the number of movies whose distributor is RKO Pictures and director of photography is Gregg Toland?",
    "SerialNumber": "3139",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/RKO_Pictures> . ?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> } ",
    "entity mapping": [
      {
        "label": "RKO Pictures",
        "uri": "http://dbpedia.org/resource/RKO_Pictures"
      },
      {
        "label": "Gregg Toland",
        "uri": "http://dbpedia.org/resource/Gregg_Toland"
      }
    ],
    "id": "9993c21e0dba4189a4d49112ea149a76",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography"
      }
    ]
  },
  {
    "question": "Who has allegiance is Colony of Virginia and buried in Montpelier?",
    "SerialNumber": "3141",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . }",
    "entity mapping": [
      {
        "label": "Colony of Virginia",
        "uri": "http://dbpedia.org/resource/Colony_of_Virginia"
      },
      {
        "label": "Montpelier",
        "uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)"
      }
    ],
    "id": "5bf4a1c66058437cb656e5b1c6588eac",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "Give me the list of cars which are the predecessor of Full Sized Cars?",
    "SerialNumber": "3142",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/class> <http://dbpedia.org/resource/Full-size_car> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "full",
        "uri": "http://dbpedia.org/resource/Full-size_car"
      }
    ],
    "id": "6b40bf5e283244129850be2446ce0074",
    "predicate mapping": [
      {
        "label": "Cars",
        "uri": "http://dbpedia.org/property/class"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "me",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Who served a vice president buried in United First Parish Church?",
    "SerialNumber": "3143",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/United_First_Parish_Church> . ?uri <http://dbpedia.org/ontology/vicePresident> ?x  . }",
    "entity mapping": [
      {
        "label": "United First Parish Church",
        "uri": "http://dbpedia.org/resource/United_First_Parish_Church"
      }
    ],
    "id": "22086cbb41ac4acc823ba66b6334f11d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "vice president",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      }
    ]
  },
  {
    "question": "Does Cohoes a junction on the NY State Route 470?",
    "SerialNumber": "3144",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/New_York_State_Route_470> <http://dbpedia.org/ontology/routeJunction> <http://dbpedia.org/resource/Cohoes,_New_York> }",
    "entity mapping": [
      {
        "label": "state route 470",
        "uri": "http://dbpedia.org/resource/New_York_State_Route_470"
      },
      {
        "label": "cohoes",
        "uri": "http://dbpedia.org/resource/Cohoes,_New_York"
      }
    ],
    "id": "9d6b44c745cc4b13a87b0664f5ba8a0b",
    "predicate mapping": [
      {
        "label": "junction route",
        "uri": "http://dbpedia.org/ontology/routeJunction"
      }
    ]
  },
  {
    "question": "Name the river with source as Columbia Lake and river mouth is located in Clatsop Country ?",
    "SerialNumber": "3149",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Clatsop_County,_Oregon> . ?uri <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Columbia_Lake>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "clatsop",
        "uri": "http://dbpedia.org/resource/Clatsop_County,_Oregon"
      },
      {
        "label": "Columbia Lake",
        "uri": "http://dbpedia.org/resource/Columbia_Lake"
      }
    ],
    "id": "232324046fea420f9ef510ab09298d99",
    "predicate mapping": [
      {
        "label": "river mouth",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "source",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Is my truly truly fair the band of mitch miller?",
    "SerialNumber": "3151",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/My_Truly,_Truly_Fair> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Mitch_Miller> }",
    "entity mapping": [
      {
        "label": "truly fair",
        "uri": "http://dbpedia.org/resource/My_Truly,_Truly_Fair"
      },
      {
        "label": "mitch miller",
        "uri": "http://dbpedia.org/resource/Mitch_Miller"
      }
    ],
    "id": "1dabbe38304b45038e9853ea185a6280",
    "predicate mapping": [
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "Count all the Colonels?",
    "SerialNumber": "3156",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . }",
    "entity mapping": [
      {
        "label": "Colonel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)"
      }
    ],
    "id": "44f1c8f9f2544b208b2f41cb608b27ab",
    "predicate mapping": [
      {
        "label": "Count",
        "uri": "http://dbpedia.org/property/rank"
      }
    ]
  },
  {
    "question": "Who was on the first team in the GPs that were held at Watkins Glen, NY?",
    "SerialNumber": "3158",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Watkins_Glen,_New_York> . ?x <http://dbpedia.org/property/firstTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "entity mapping": [
      {
        "label": "watkins glen,",
        "uri": "http://dbpedia.org/resource/Watkins_Glen,_New_York"
      }
    ],
    "id": "95d1d72d4de845859f814f734b971bd0",
    "predicate mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "NY",
        "uri": "http://dbpedia.org/ontology/GrandPrix"
      }
    ]
  },
  {
    "question": "Who produces the trains operated by the MTR?",
    "SerialNumber": "3162",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operator> <http://dbpedia.org/resource/MTR> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Train>}",
    "entity mapping": [
      {
        "label": "MTR",
        "uri": "http://dbpedia.org/resource/MTR"
      }
    ],
    "id": "7ee73bf122af4474ab57198183ee3f32",
    "predicate mapping": [
      {
        "label": "operated",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "operated",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "train",
        "uri": "http://dbpedia.org/ontology/Train"
      }
    ]
  },
  {
    "question": "Name the agency of Election Commission of Thailand ?",
    "SerialNumber": "3164",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Election_Commission_of_Thailand> <http://dbpedia.org/property/agencyName> ?uri } ",
    "entity mapping": [
      {
        "label": "Election Commission of Thailand",
        "uri": "http://dbpedia.org/resource/Election_Commission_of_Thailand"
      }
    ],
    "id": "8a4ee894762240cbaa743c2639734575",
    "predicate mapping": [
      {
        "label": "agency name",
        "uri": "http://dbpedia.org/property/agencyName"
      }
    ]
  },
  {
    "question": "What is the second track list of Dschinghis Khan (song) ?",
    "SerialNumber": "3165",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dschinghis_Khan_(song)> <http://dbpedia.org/ontology/subsequentWork> ?uri } ",
    "entity mapping": [
      {
        "label": "Dschinghis Khan (song)",
        "uri": "http://dbpedia.org/resource/Dschinghis_Khan_(song)"
      }
    ],
    "id": "f8fbc5bc7c8a4272bcfeae43342ee9b0",
    "predicate mapping": [
      {
        "label": "Khan",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      }
    ]
  },
  {
    "question": "Which writer of Tales of Suspense is also the writer of karakuri Dji Ultimo ?",
    "SerialNumber": "3166",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> ?uri. <http://dbpedia.org/resource/Karakuri_Dôji_Ultimo> <http://dbpedia.org/property/author> ?uri} ",
    "entity mapping": [
      {
        "label": "Tales of Suspense",
        "uri": "http://dbpedia.org/resource/Tales_of_Suspense"
      },
      {
        "label": "karakuri ultimo",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo"
      }
    ],
    "id": "afccda799b6b41138bb5203359ad1618",
    "predicate mapping": [
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/writers"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "Who was the influencer of Dave Attel who also starred in Adios Amigo?",
    "SerialNumber": "3167",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dave_Attell> <http://dbpedia.org/ontology/influencedBy> ?uri. <http://dbpedia.org/resource/Adiós_Amigo> <http://dbpedia.org/ontology/starring> ?uri . }",
    "entity mapping": [
      {
        "label": "Dave Attel",
        "uri": "http://dbpedia.org/resource/Dave_Attell"
      },
      {
        "label": "Adios Amigo",
        "uri": "http://dbpedia.org/resource/Adiós_Amigo"
      }
    ],
    "id": "a759221f4e9b4ea3a2b9d8654e1bc7cd",
    "predicate mapping": [
      {
        "label": "influencer",
        "uri": "http://dbpedia.org/ontology/influencedBy"
      },
      {
        "label": "starred",
        "uri": "http://dbpedia.org/ontology/starring"
      }
    ]
  },
  {
    "question": "Who is the producer of the album, after which A Nice pair was released ?",
    "SerialNumber": "3168",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Nice_Pair> <http://dbpedia.org/ontology/previousWork> ?x . ?x <http://dbpedia.org/property/producer> ?uri  . }",
    "entity mapping": [
      {
        "label": "A Nice pair",
        "uri": "http://dbpedia.org/resource/A_Nice_Pair"
      }
    ],
    "id": "b270a1df7e304d6bbec623691016b511",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      }
    ]
  },
  {
    "question": "Which politicians live in a city led by T.S. Thakur?",
    "SerialNumber": "3170",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/T._S._Thakur> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
    "entity mapping": [
      {
        "label": "Thakur",
        "uri": "http://dbpedia.org/resource/T._S._Thakur"
      }
    ],
    "id": "6b036672b009486aba8ca22f384a054b",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Who is the military general buried in St Mary's Church, Battersea?",
    "SerialNumber": "3171",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "St Mary's Church, Battersea",
        "uri": "http://dbpedia.org/resource/St_Mary's_Church,_Battersea"
      }
    ],
    "id": "c453adcc2e0940139832c62258fcdaa2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "Which wars were fought when the commanders involved served under PM Choi Tu Son?",
    "SerialNumber": "3172",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Choi_Tu-son> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Choi Tu Son",
        "uri": "http://dbpedia.org/resource/Choi_Tu-son"
      }
    ],
    "id": "4bd7ce92e5834b2b9f27c18942dd990c",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "PM",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Give me a list of everyone who manages the famous rock art sites?",
    "SerialNumber": "3175",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/architecture> <http://dbpedia.org/resource/Rock_art> . ?x <http://dbpedia.org/ontology/governingBody> ?uri  . }",
    "entity mapping": [
      {
        "label": "rock art",
        "uri": "http://dbpedia.org/resource/Rock_art"
      }
    ],
    "id": "6aa8a3b5ed004373b608912919fe9db9",
    "predicate mapping": [
      {
        "label": "sites",
        "uri": "http://dbpedia.org/property/architecture"
      },
      {
        "label": "sites",
        "uri": "http://dbpedia.org/ontology/governingBody"
      }
    ]
  },
  {
    "question": "Did Jerry Rice study in Oktoc Mississippi?",
    "SerialNumber": "3176",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jerry_Rice> <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/Oktoc,_Mississippi> }",
    "entity mapping": [
      {
        "label": "Jerry Rice",
        "uri": "http://dbpedia.org/resource/Jerry_Rice"
      },
      {
        "label": "mississippi oktoc",
        "uri": "http://dbpedia.org/resource/Oktoc,_Mississippi"
      }
    ],
    "id": "9c1ea109b00f4f5aba49d87f8fac3deb",
    "predicate mapping": [
      {
        "label": "Mississippi",
        "uri": "http://dbpedia.org/property/highSchool"
      }
    ]
  },
  {
    "question": "Food in which countries has shallot in it?",
    "SerialNumber": "3178",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Shallot> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "entity mapping": [
      {
        "label": "shallot",
        "uri": "http://dbpedia.org/resource/Shallot"
      }
    ],
    "id": "77e5540b4af34b73b9c43dd62c69c556",
    "predicate mapping": [
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "Food",
        "uri": "http://dbpedia.org/ontology/Food"
      }
    ]
  },
  {
    "question": "What is the country which lies on the European route E8, and where Ragnhild Jolson was born?",
    "SerialNumber": "3181",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_route_E8> <http://dbpedia.org/ontology/county> ?uri. <http://dbpedia.org/resource/Ragnhild_Jølsen> <http://dbpedia.org/property/birthplace> ?uri} ",
    "entity mapping": [
      {
        "label": "European route E8",
        "uri": "http://dbpedia.org/resource/European_route_E8"
      },
      {
        "label": "ragnhild",
        "uri": "http://dbpedia.org/resource/Ragnhild_Jølsen"
      }
    ],
    "id": "351b32db9d724cfd823b5948b2ced6dd",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/county"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace"
      }
    ]
  },
  {
    "question": "What are the television shows whose distributer is HBO?",
    "SerialNumber": "3182",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      }
    ],
    "id": "f5e9009261864d4a998a4815dabb3404",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Did Carolyn Heinrich study at the Vanderbilt?",
    "SerialNumber": "3183",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Carolyn_Heinrich> <http://dbpedia.org/ontology/institution> <http://dbpedia.org/resource/Vanderbilt_University> }",
    "entity mapping": [
      {
        "label": "Carolyn Heinrich",
        "uri": "http://dbpedia.org/resource/Carolyn_Heinrich"
      },
      {
        "label": "Vanderbilt",
        "uri": "http://dbpedia.org/resource/Vanderbilt_University"
      }
    ],
    "id": "b95b28576f18419c894ce4f86851e7c4",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/institution"
      }
    ]
  },
  {
    "question": "How many cars succeeded the cars which were similar to Cadillac Fleetwood?",
    "SerialNumber": "3186",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Cadillac_Fleetwood> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Cadillac Fleetwood",
        "uri": "http://dbpedia.org/resource/Cadillac_Fleetwood"
      }
    ],
    "id": "1dc65e5b1efd45e997dab9d523cfc041",
    "predicate mapping": [
      {
        "label": "similar",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Which person won Screen actors Guild Life Time Achievement award and has resting palce in Palo Alto, California ?",
    "SerialNumber": "3188",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California> . ?uri <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Palo Alto, California",
        "uri": "http://dbpedia.org/resource/Palo_Alto,_California"
      },
      {
        "label": "achievement screen actors",
        "uri": "http://dbpedia.org/resource/Screen_Actors_Guild_Life_Achievement_Award"
      }
    ],
    "id": "f41a1ab1a8a64e70891750e378d66e93",
    "predicate mapping": [
      {
        "label": "resting",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Give me a list of all the people driving at pole positions in the Grand Prixes where Renault was a first team?",
    "SerialNumber": "3189",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/firstTeam> <http://dbpedia.org/resource/Renault_in_Formula_One> . ?x <http://dbpedia.org/ontology/poleDriver> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GrandPrix>}",
    "entity mapping": [
      {
        "label": "renault",
        "uri": "http://dbpedia.org/resource/Renault_in_Formula_One"
      }
    ],
    "id": "900ed9da86ce4991a9cef44d4e61b24f",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "pole",
        "uri": "http://dbpedia.org/ontology/poleDriver"
      },
      {
        "label": "Grand Prix",
        "uri": "http://dbpedia.org/ontology/GrandPrix"
      }
    ]
  },
  {
    "question": "Which mainter of  Cheasty Boulevard South is also the county seat of the King County, Washingtonsu ?",
    "SerialNumber": "3190",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri. <http://dbpedia.org/resource/King_County,_Washington> <http://dbpedia.org/ontology/countySeat> ?uri} ",
    "entity mapping": [
      {
        "label": "Cheasty Boulevard South",
        "uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South"
      },
      {
        "label": "King County, Washington",
        "uri": "http://dbpedia.org/resource/King_County,_Washington"
      }
    ],
    "id": "0518e52148a646b18bab0d50998ab176",
    "predicate mapping": [
      {
        "label": "su",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat"
      }
    ]
  },
  {
    "question": "Name the sea located near Europe and has a nearby city as Rostock ?",
    "SerialNumber": "3193",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Rostock",
        "uri": "http://dbpedia.org/resource/Rostock"
      },
      {
        "label": "Europe",
        "uri": "http://dbpedia.org/resource/Europe"
      }
    ],
    "id": "fbd5f953b14447ef811cb0338ee88e8e",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "nearby",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Which team's players have played in the national hockey league?",
    "SerialNumber": "3196",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Hockey_League> . ?x <http://dbpedia.org/ontology/team> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "national hockey league",
        "uri": "http://dbpedia.org/resource/National_Hockey_League"
      }
    ],
    "id": "6310baf4b9d740f5a47f9ae2e0b34b5d",
    "predicate mapping": [
      {
        "label": "league",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Which founder of European School, karlsruhe is also the jursdiction of Eurpoean Border of Coast guard ?",
    "SerialNumber": "3197",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/European_Border_and_Coast_Guard> <http://dbpedia.org/property/jurisdiction> ?uri. <http://dbpedia.org/resource/European_School,_Karlsruhe> <http://dbpedia.org/property/founder> ?uri} ",
    "entity mapping": [
      {
        "label": "european",
        "uri": "http://dbpedia.org/resource/European_Border_and_Coast_Guard"
      },
      {
        "label": "European School, karlsruhe",
        "uri": "http://dbpedia.org/resource/European_School,_Karlsruhe"
      }
    ],
    "id": "814c2cbb08a04c3ebd6aff1b47275883",
    "predicate mapping": [
      {
        "label": "guard",
        "uri": "http://dbpedia.org/property/jurisdiction"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      }
    ]
  },
  {
    "question": "Trevor Peacock has narrated in which movie?",
    "SerialNumber": "3200",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/narrator> <http://dbpedia.org/resource/Trevor_Peacock>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Trevor Peacock",
        "uri": "http://dbpedia.org/resource/Trevor_Peacock"
      }
    ],
    "id": "6e5cd8ecf19a490b8da0b62c0e2a9a30",
    "predicate mapping": [
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrator"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What team has Sam Keller and Jim McMilin played for?",
    "SerialNumber": "3202",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Keller> <http://dbpedia.org/ontology/formerTeam> ?uri. <http://dbpedia.org/resource/Jim_McMillin> <http://dbpedia.org/ontology/team> ?uri . }",
    "entity mapping": [
      {
        "label": "Sam Keller",
        "uri": "http://dbpedia.org/resource/Sam_Keller"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Jim_McMillin"
      }
    ],
    "id": "862ee1ccae36438fa2850a2dad3471f7",
    "predicate mapping": [
      {
        "label": "team for",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "played for",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "Which work institutions of the Andrew Schally is the  alma mater of the Mara Eugenia Rojas Correa ?",
    "SerialNumber": "3205",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri. <http://dbpedia.org/resource/María_Eugenia_Rojas_Correa> <http://dbpedia.org/property/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Andrew Schally",
        "uri": "http://dbpedia.org/resource/Andrew_Schally"
      },
      {
        "label": "eugenia correa rojas",
        "uri": "http://dbpedia.org/resource/María_Eugenia_Rojas_Correa"
      }
    ],
    "id": "a24560d63e05412bb56c5fac0df13755",
    "predicate mapping": [
      {
        "label": "work institutions",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "What religions do diplomats typically follow?",
    "SerialNumber": "3206",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Diplomacy> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Diplomacy"
      }
    ],
    "id": "ee3ee4db6ae94b3d9abdf399e280c592",
    "predicate mapping": [
      {
        "label": "follow",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Who is the owner of Ford Motor Credit comapny which is also the builder of FORD SHO V8 engine ?",
    "SerialNumber": "3208",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ford_Motor_Credit_Company> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Ford_SHO_V8_engine> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "entity mapping": [
      {
        "label": "credit",
        "uri": "http://dbpedia.org/resource/Ford_Motor_Credit_Company"
      },
      {
        "label": "FORD SHO V8 engine",
        "uri": "http://dbpedia.org/resource/Ford_SHO_V8_engine"
      }
    ],
    "id": "fe9e7f00884542aebb30f18c996e0f9b",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "builder",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "who are some miss michigan usa?",
    "SerialNumber": "3211",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Miss_Michigan_USA>  . }",
    "entity mapping": [
      {
        "label": "miss michigan usa",
        "uri": "http://dbpedia.org/resource/Miss_Michigan_USA"
      }
    ],
    "id": "e72c8d6ef90a427baa7e385ccb063824",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/title"
      }
    ]
  },
  {
    "question": "What are the films whose atleast one cast member died due to Colorectal cancer?",
    "SerialNumber": "3212",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Colorectal_cancer> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Colorectal cancer",
        "uri": "http://dbpedia.org/resource/Colorectal_cancer"
      }
    ],
    "id": "14beb01d38c546a58565e06c61c1f773",
    "predicate mapping": [
      {
        "label": "due",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "due",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "films",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Which cport of Vishwajyot High School is also the genere of Battle chess ",
    "SerialNumber": "3216",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Battle_Chess> <http://dbpedia.org/property/genre> ?uri. <http://dbpedia.org/resource/Vishwajyot_High_School> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "Battle chess",
        "uri": "http://dbpedia.org/resource/Battle_Chess"
      },
      {
        "label": "Vishwajyot High School",
        "uri": "http://dbpedia.org/resource/Vishwajyot_High_School"
      }
    ],
    "id": "6e739eefd2bb47bb96e6386e4f9cb125",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Was Henry Knox a major general?",
    "SerialNumber": "3221",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_Knox> <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Major_general_(United_States)> }",
    "entity mapping": [
      {
        "label": "Henry Knox",
        "uri": "http://dbpedia.org/resource/Henry_Knox"
      },
      {
        "label": "major general",
        "uri": "http://dbpedia.org/resource/Major_general_(United_States)"
      }
    ],
    "id": "3c01ec18928a47818e34bd8753ddd084",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/militaryRank"
      }
    ]
  },
  {
    "question": "List the common relegion affiliation of khadra Haji Ismail and Yasmin khatun ?",
    "SerialNumber": "3224",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid> <http://dbpedia.org/property/religion> ?uri. <http://dbpedia.org/resource/Yasmin_Khatun> <http://dbpedia.org/ontology/religion> ?uri} ",
    "entity mapping": [
      {
        "label": "khadra ismail haji",
        "uri": "http://dbpedia.org/resource/Khadra_Haji_Ismail_Geid"
      },
      {
        "label": "Yasmin khatun",
        "uri": "http://dbpedia.org/resource/Yasmin_Khatun"
      }
    ],
    "id": "2b275605f1424ad1853d8f7367592875",
    "predicate mapping": [
      {
        "label": "Ismail",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "Ismail",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Cleopatra V of Egypt is father to which royalty?",
    "SerialNumber": "3227",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> } ",
    "entity mapping": [
      {
        "label": "Cleopatra V",
        "uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt"
      }
    ],
    "id": "7ad74ad36f964369a61126ec8c40b05c",
    "predicate mapping": [
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/property/mother"
      }
    ]
  },
  {
    "question": "How many TV show has distributor located in Burbank California ?",
    "SerialNumber": "3231",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Burbank,_California> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Burbank California",
        "uri": "http://dbpedia.org/resource/Burbank,_California"
      }
    ],
    "id": "700a76b55b6d42619332fe4a076f5180",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "NAme the emplyer for whihc Manu cornet has worked and also written in Google Web Toolkit ?",
    "SerialNumber": "3232",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Manu_Cornet> <http://dbpedia.org/property/employer> ?uri. <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri} ",
    "entity mapping": [
      {
        "label": "Manu cornet",
        "uri": "http://dbpedia.org/resource/Manu_Cornet"
      },
      {
        "label": "Google Web Toolkit",
        "uri": "http://dbpedia.org/resource/Google_Web_Toolkit"
      }
    ],
    "id": "b1ffee719580428fa70efc72d7f54ba5",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/employer"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "Where was the movie after Khiladi 786 recorded?",
    "SerialNumber": "3236",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Khiladi_786> <http://dbpedia.org/property/nextAlbum> ?x . ?x <http://dbpedia.org/property/recorded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Khiladi 786",
        "uri": "http://dbpedia.org/resource/Khiladi_786"
      }
    ],
    "id": "463580ab42f54356945d1ed8c2f9b38a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/nextAlbum"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/property/recorded"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name the university which has Lieutenaunt general as superintendent and mascot as Gyrfalcon ?",
    "SerialNumber": "3239",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/superintendent> <http://dbpedia.org/resource/Lieutenant_general_(United_States)> . ?uri <http://dbpedia.org/property/mascot> <http://dbpedia.org/resource/Gyrfalcon>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Lieutenant_general_(United_States)"
      },
      {
        "label": "Gyrfalcon",
        "uri": "http://dbpedia.org/resource/Gyrfalcon"
      }
    ],
    "id": "fa6f1a62c4da4b2cb2ed09d19e30faa9",
    "predicate mapping": [
      {
        "label": "superintendent",
        "uri": "http://dbpedia.org/ontology/superintendent"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What are the prizes awarded to the main members of DisneyToon Studios?",
    "SerialNumber": "3240",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/DisneyToon_Studios> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "DisneyToon Studios",
        "uri": "http://dbpedia.org/resource/DisneyToon_Studios"
      }
    ],
    "id": "799124b8d9d1448e8410fcc70d945f3a",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "awarded",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "Is greasy pop recording the distributor of festival records?",
    "SerialNumber": "3243",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Greasy_Pop_Records> <http://dbpedia.org/ontology/distributingLabel> <http://dbpedia.org/resource/Festival_Records> }",
    "entity mapping": [
      {
        "label": "greasy pop recordi",
        "uri": "http://dbpedia.org/resource/Greasy_Pop_Records"
      },
      {
        "label": "festival records",
        "uri": "http://dbpedia.org/resource/Festival_Records"
      }
    ],
    "id": "95af8dab7a8b41babdeee3232cb6c644",
    "predicate mapping": [
      {
        "label": "distributor",
        "uri": "http://dbpedia.org/ontology/distributingLabel"
      }
    ]
  },
  {
    "question": "Which sitcom is broadcasted by FOX and presented by Brian Dunkleman?",
    "SerialNumber": "3245",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company> . ?uri <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Brian_Dunkleman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      },
      {
        "label": "Brian Dunkleman",
        "uri": "http://dbpedia.org/resource/Brian_Dunkleman"
      }
    ],
    "id": "723c2b0c71d445fd9d6cf4d87006383a",
    "predicate mapping": [
      {
        "label": "FOX",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "FOX",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "UEM group have made bridges crossing over what?",
    "SerialNumber": "3249",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/UEM_Group> . ?x <http://dbpedia.org/property/crosses> ?uri  . }",
    "entity mapping": [
      {
        "label": "UEM group",
        "uri": "http://dbpedia.org/resource/UEM_Group"
      }
    ],
    "id": "024337cb227f4a1395be10e9cb63c5fa",
    "predicate mapping": [
      {
        "label": "crossing",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "over",
        "uri": "http://dbpedia.org/property/crosses"
      }
    ]
  },
  {
    "question": "Which distributer of Glover (video game) is also the  publisher of the Super Mario Adventures ?",
    "SerialNumber": "3250",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Glover_(video_game)> <http://dbpedia.org/ontology/distributor> ?uri. <http://dbpedia.org/resource/Super_Mario_Adventures> <http://dbpedia.org/property/publisher> ?uri} ",
    "entity mapping": [
      {
        "label": "Glover (video game)",
        "uri": "http://dbpedia.org/resource/Glover_(video_game)"
      },
      {
        "label": "Super Mario Adventures",
        "uri": "http://dbpedia.org/resource/Super_Mario_Adventures"
      }
    ],
    "id": "b25e6105c24d44dc8ef492e2edf0b163",
    "predicate mapping": [
      {
        "label": "Glover",
        "uri": "http://dbpedia.org/ontology/distributor"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/property/publisher"
      }
    ]
  },
  {
    "question": "Which shows have voices from people signed up with ABC Records?",
    "SerialNumber": "3254",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/ABC_Records> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "ABC Records",
        "uri": "http://dbpedia.org/resource/ABC_Records"
      }
    ],
    "id": "6a18707a2ce342118ea82c357c85d158",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "voices",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is the developer of the software which is produced by Claris ?",
    "SerialNumber": "3256",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Claris> <http://dbpedia.org/property/products> ?x . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "Claris",
        "uri": "http://dbpedia.org/resource/Claris"
      }
    ],
    "id": "9bf4af0a69b54d8d8e335078f111f30e",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "Give me some administrators of bridges over which cars can go?",
    "SerialNumber": "3258",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/carries> <http://dbpedia.org/resource/Motor_vehicle> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Motor_vehicle"
      }
    ],
    "id": "c58280258efb409faf6ecfb3f56cc513",
    "predicate mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/carries"
      },
      {
        "label": "administrator",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "After the death of which political figure, did the Coalition Provisional Authority came into power?",
    "SerialNumber": "3261",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Coalition_Provisional_Authority>  . }",
    "entity mapping": [
      {
        "label": "Coalition Provisional Authority",
        "uri": "http://dbpedia.org/resource/Coalition_Provisional_Authority"
      }
    ],
    "id": "933bc214a7024ecaac142fef92c9edaf",
    "predicate mapping": [
      {
        "label": "power",
        "uri": "http://dbpedia.org/property/successor"
      }
    ]
  },
  {
    "question": "Name the scientist who is known for inventing Anthrax and was a member of Royal Society?",
    "SerialNumber": "3263",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Anthrax> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Anthrax",
        "uri": "http://dbpedia.org/resource/Anthrax"
      },
      {
        "label": "Royal Society",
        "uri": "http://dbpedia.org/resource/Royal_Society"
      }
    ],
    "id": "f4b7def86f6e444b8521908b40cef72c",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "member",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Who were the opponents of the people buried in the tower of London?",
    "SerialNumber": "3264",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Tower_of_London> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "tower of London",
        "uri": "http://dbpedia.org/resource/Tower_of_London"
      }
    ],
    "id": "e08cb98a10794ab59d7f5d076fadd9ac",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many factions have fought when Egushawa was a commander?",
    "SerialNumber": "3265",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Egushawa> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "entity mapping": [
      {
        "label": "Egushawa",
        "uri": "http://dbpedia.org/resource/Egushawa"
      }
    ],
    "id": "c2d46fb94f5b46d5a4324c9cf5941feb",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant"
      }
    ]
  },
  {
    "question": "Which terrotory of Tonkin campaign also the death bed of Thophane Vnard ?",
    "SerialNumber": "3266",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tonkin_Campaign> <http://dbpedia.org/ontology/territory> ?uri. <http://dbpedia.org/resource/Théophane_Vénard> <http://dbpedia.org/ontology/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Tonkin campaign",
        "uri": "http://dbpedia.org/resource/Tonkin_Campaign"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Théophane_Vénard"
      }
    ],
    "id": "922f99ad92c9458981c4e1027b28aa47",
    "predicate mapping": [
      {
        "label": "bed",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Name the scientist whose supervisor also supervised Mary Ainsworth?",
    "SerialNumber": "3267",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Mary_Ainsworth> . ?uri <http://dbpedia.org/property/doctoralAdvisor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Mary Ainsworth",
        "uri": "http://dbpedia.org/resource/Mary_Ainsworth"
      }
    ],
    "id": "7f9100dd95784db5aa76614d9d7d3c8b",
    "predicate mapping": [
      {
        "label": "supervised",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "supervisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many titles were given to people who engaged in the Operation Dragoon?",
    "SerialNumber": "3269",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Operation_Dragoon> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Operation Dragoon",
        "uri": "http://dbpedia.org/resource/Operation_Dragoon"
      }
    ],
    "id": "cb3a9f4a1e8d44a1adacbd1db7b0bab9",
    "predicate mapping": [
      {
        "label": "engaged",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "engaged",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "How many other important things has the painter of Sarah Jane Adventures done?",
    "SerialNumber": "3271",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/The_Sarah_Jane_Adventures> <http://dbpedia.org/property/creator> ?x . ?x <http://dbpedia.org/ontology/notableWork> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sarah Jane Adventures",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures"
      }
    ],
    "id": "0aef9a11ec194002b66c6ff62f383798",
    "predicate mapping": [
      {
        "label": "painter",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "painter",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "Count all the universities who participated in the tournament won by Alabama Crimson Tides in 2015 ?",
    "SerialNumber": "3272",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team> . ?uri <http://dbpedia.org/property/athletics> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "crimson alabama",
        "uri": "http://dbpedia.org/resource/2015_Alabama_Crimson_Tide_football_team"
      }
    ],
    "id": "5c55ff44c6ac449d923b0a43437ec726",
    "predicate mapping": [
      {
        "label": "Tides",
        "uri": "http://dbpedia.org/property/champion"
      },
      {
        "label": "Tides",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What is the currency of the country of Kerguelen Islands?",
    "SerialNumber": "3274",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Kerguelen_Islands> <http://dbpedia.org/ontology/governmentType> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kerguelen Islands",
        "uri": "http://dbpedia.org/resource/Kerguelen_Islands"
      }
    ],
    "id": "951988a7d1c344dfbb421152061e3778",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/governmentType"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "For which country did Alexander Lippisch design airplanes?",
    "SerialNumber": "3276",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Alexander_Lippisch> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Aircraft>}",
    "entity mapping": [
      {
        "label": "Alexander Lippisch",
        "uri": "http://dbpedia.org/resource/Alexander_Lippisch"
      }
    ],
    "id": "d5bf2f11fdfd47958b21a0ad3a2fdb90",
    "predicate mapping": [
      {
        "label": "design",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "airplanes",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      },
      {
        "label": "airplanes",
        "uri": "http://dbpedia.org/ontology/Aircraft"
      }
    ]
  },
  {
    "question": "Where did george f hoar and willian langer spend the most important time of their political career?",
    "SerialNumber": "3277",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Frisbie_Hoar> <http://dbpedia.org/property/order> ?uri. <http://dbpedia.org/resource/William_Langer> <http://dbpedia.org/property/order> ?uri . }",
    "entity mapping": [
      {
        "label": "george hoar",
        "uri": "http://dbpedia.org/resource/George_Frisbie_Hoar"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/William_Langer"
      }
    ],
    "id": "30d267130c65402ba2c0efdc2ea5691f",
    "predicate mapping": [
      {
        "label": "career",
        "uri": "http://dbpedia.org/property/order"
      },
      {
        "label": "career",
        "uri": "http://dbpedia.org/property/order"
      }
    ]
  },
  {
    "question": "Whihc birthpalce of Svetlana Gounkina is also the largest city of Union State ?",
    "SerialNumber": "3279",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_State> <http://dbpedia.org/property/largestCity> ?uri. <http://dbpedia.org/resource/Svetlana_Gounkina> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Union State",
        "uri": "http://dbpedia.org/resource/Union_State"
      },
      {
        "label": "Svetlana Gounkina",
        "uri": "http://dbpedia.org/resource/Svetlana_Gounkina"
      }
    ],
    "id": "4afdea93d75746e79aa9c8da00070b4d",
    "predicate mapping": [
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/property/largestCity"
      },
      {
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What is the country whose speaker of the Dewan Rakyat is Pandikar Amin Mulia?",
    "SerialNumber": "3280",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Pandikar_Amin_Mulia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Pandikar Amin Mulia",
        "uri": "http://dbpedia.org/resource/Pandikar_Amin_Mulia"
      }
    ],
    "id": "d6837e9445dd4d89ba1491d92ec402cf",
    "predicate mapping": [
      {
        "label": "Rakyat",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "To which series does the book belong which came after the Blade Runner 2?",
    "SerialNumber": "3282",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/previousWork> <http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "entity mapping": [
      {
        "label": "2",
        "uri": "http://dbpedia.org/resource/Blade_Runner_2:_The_Edge_of_Human"
      }
    ],
    "id": "012275fbe2924170a2dc92fcdfb02849",
    "predicate mapping": [
      {
        "label": "Runner",
        "uri": "http://dbpedia.org/ontology/previousWork"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "Which company's cars are assembled in Colombia?",
    "SerialNumber": "3284",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Colombia> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Colombia",
        "uri": "http://dbpedia.org/resource/Colombia"
      }
    ],
    "id": "afaccc78ee0944f59fe4462b00ec4324",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "company's",
        "uri": "http://dbpedia.org/property/parentCompany"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "In which places do companies founded in Newcastle operate?",
    "SerialNumber": "3285",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Newcastle",
        "uri": "http://dbpedia.org/resource/City_of_Newcastle"
      }
    ],
    "id": "4af9ff3c965e4f76b2e60a5a204d15e2",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "operate",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Musical artists who are associated with Ren & Angela were born where ?",
    "SerialNumber": "3288",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/René_&_Angela> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "angela ren",
        "uri": "http://dbpedia.org/resource/René_&_Angela"
      }
    ],
    "id": "89020ed4a12841c4abf8744b5f6f84d3",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "Musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "What are the things whose director of photography died in United States?",
    "SerialNumber": "3290",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/deathPlace> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/cinematography> ?x  . }",
    "entity mapping": [
      {
        "label": "United States",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "f5133efadcbd4156acea7c0709acf981",
    "predicate mapping": [
      {
        "label": "died in",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "photography",
        "uri": "http://dbpedia.org/property/cinematography"
      }
    ]
  },
  {
    "question": "Paul Leonard's work can be divided into how many series?",
    "SerialNumber": "3291",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/author> <http://dbpedia.org/resource/Paul_Leonard_(writer)> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "entity mapping": [
      {
        "label": "Paul Leonard",
        "uri": "http://dbpedia.org/resource/Paul_Leonard_(writer)"
      }
    ],
    "id": "3baa786d346248839da91be72db9ca83",
    "predicate mapping": [
      {
        "label": "divided",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "Which sects people are part of local political parties which fall under the International Muslim Brotherhood?",
    "SerialNumber": "3294",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/international> <http://dbpedia.org/resource/Muslim_Brotherhood> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PoliticalParty>}",
    "entity mapping": [
      {
        "label": "Muslim Brotherhood",
        "uri": "http://dbpedia.org/resource/Muslim_Brotherhood"
      }
    ],
    "id": "c721ef1e42924f8e9f9e185cbc00b5ce",
    "predicate mapping": [
      {
        "label": "International",
        "uri": "http://dbpedia.org/property/international"
      },
      {
        "label": "fall",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "political part",
        "uri": "http://dbpedia.org/ontology/PoliticalParty"
      }
    ]
  },
  {
    "question": "Who narrated the albums in which Harry Nilsson performed?",
    "SerialNumber": "3297",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/artist> <http://dbpedia.org/resource/Harry_Nilsson> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Harry Nilsson",
        "uri": "http://dbpedia.org/resource/Harry_Nilsson"
      }
    ],
    "id": "a568918506ad48f08dc9ea2bcf4f9d47",
    "predicate mapping": [
      {
        "label": "performed",
        "uri": "http://dbpedia.org/ontology/artist"
      },
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "What do craig Van tilbury and karen Grigorian do for a living?",
    "SerialNumber": "3299",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karen_Grigorian> <http://dbpedia.org/ontology/occupation> ?uri. <http://dbpedia.org/resource/Craig_Van_Tilbury> <http://dbpedia.org/ontology/occupation> ?uri . }",
    "entity mapping": [
      {
        "label": "karen Grigorian",
        "uri": "http://dbpedia.org/resource/Karen_Grigorian"
      },
      {
        "label": "craig Van tilbury",
        "uri": "http://dbpedia.org/resource/Craig_Van_Tilbury"
      }
    ],
    "id": "86a47aa322204efb92fe728b58696cf5",
    "predicate mapping": [
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "List the universities from a country where Norwegian language is officially accepted.",
    "SerialNumber": "3305",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/officialLanguage> <http://dbpedia.org/resource/Norwegian_language> . ?uri <http://dbpedia.org/ontology/country> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Norwegian language",
        "uri": "http://dbpedia.org/resource/Norwegian_language"
      }
    ],
    "id": "1d4631ca121d427a83c91e0ec29ad410",
    "predicate mapping": [
      {
        "label": "officially",
        "uri": "http://dbpedia.org/ontology/officialLanguage"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Where is the tunnel, which is operated by BNSF railways?",
    "SerialNumber": "3307",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/operatedBy> <http://dbpedia.org/resource/BNSF_Railway> . ?x <http://dbpedia.org/property/location> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayTunnel>}",
    "entity mapping": [
      {
        "label": "BNSF railway",
        "uri": "http://dbpedia.org/resource/BNSF_Railway"
      }
    ],
    "id": "affd9d6f1cf44d159c675e5b8252c440",
    "predicate mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "operated",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "railways",
        "uri": "http://dbpedia.org/ontology/RailwayTunnel"
      }
    ]
  },
  {
    "question": "What is the mascot of the military unit in which Ronald Wilson served?",
    "SerialNumber": "3308",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ronald_Wilson> <http://dbpedia.org/property/branch> ?x . ?x <http://dbpedia.org/property/mascot> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ronald Wilson",
        "uri": "http://dbpedia.org/resource/Ronald_Wilson"
      }
    ],
    "id": "4a54d07f42fc46d0b4b5125be3c636b4",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      }
    ]
  },
  {
    "question": "Who battled under commander Egushawa in a conflict?",
    "SerialNumber": "3310",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Egushawa> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Egushawa",
        "uri": "http://dbpedia.org/resource/Egushawa"
      }
    ],
    "id": "b6d318523b79426193d35e5a97ecda5f",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "battled",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "In which country is Bocas del toro a capital of some region?",
    "SerialNumber": "3311",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro> . ?x <http://dbpedia.org/property/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "bocas",
        "uri": "http://dbpedia.org/resource/Bocas_Town,_Bocas_del_Toro"
      }
    ],
    "id": "aabec43f1b95480f9b3904dddc7e81e9",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/property/capital"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "What products are made by Tehran based companies?",
    "SerialNumber": "3313",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Tehran",
        "uri": "http://dbpedia.org/resource/Tehran"
      }
    ],
    "id": "0ad9954f309c496ab4dfbd8056a58187",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What are some causes of death of European Americans?",
    "SerialNumber": "3314",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/European_Americans> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "European Americans",
        "uri": "http://dbpedia.org/resource/European_Americans"
      }
    ],
    "id": "f78a415ef99f429ea50169b5a64d9fa0",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "Which settlement's neighboring municipalities are Cologny and Pregny-Chambsy?",
    "SerialNumber": "3317",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Cologny> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chambésy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "Cologny",
        "uri": "http://dbpedia.org/resource/Cologny"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Pregny-Chambésy"
      }
    ],
    "id": "bf7af8752a1748b9ab92c8690ddf65f9",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      },
      {
        "label": "neighboring",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "What kind of things are on the radio stations affiliated with the Baltimore Ravens?",
    "SerialNumber": "3320",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Baltimore_Ravens> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "Baltimore Ravens",
        "uri": "http://dbpedia.org/resource/Baltimore_Ravens"
      }
    ],
    "id": "2a1303ce259f4ddd8c63cb28a9edf458",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "Which current member of Insect vs Robots is also the music composer of Kenny Dies ?",
    "SerialNumber": "3322",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Insects_vs_Robots> <http://dbpedia.org/property/currentMembers> ?uri. <http://dbpedia.org/resource/Kenny_Dies> <http://dbpedia.org/ontology/musicComposer> ?uri} ",
    "entity mapping": [
      {
        "label": "robots insect",
        "uri": "http://dbpedia.org/resource/Insects_vs_Robots"
      },
      {
        "label": "Kenny Dies",
        "uri": "http://dbpedia.org/resource/Kenny_Dies"
      }
    ],
    "id": "339fba01bf374193aaa038e896284b65",
    "predicate mapping": [
      {
        "label": "current member",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      }
    ]
  },
  {
    "question": "Where did Georges Wolinski and Judson Huss die/",
    "SerialNumber": "3325",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Georges_Wolinski> <http://dbpedia.org/property/placeOfDeath> ?uri. <http://dbpedia.org/resource/Judson_Huss> <http://dbpedia.org/property/deathPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Georges Wolinski",
        "uri": "http://dbpedia.org/resource/Georges_Wolinski"
      },
      {
        "label": "Judson Huss",
        "uri": "http://dbpedia.org/resource/Judson_Huss"
      }
    ],
    "id": "5953c1ca741b4952bfa7231396751599",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "die/",
        "uri": "http://dbpedia.org/property/deathPlace"
      }
    ]
  },
  {
    "question": "Which city is known for the people working in the western penn hospital?",
    "SerialNumber": "3326",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/Western_Pennsylvania_Hospital> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "hospital western",
        "uri": "http://dbpedia.org/resource/Western_Pennsylvania_Hospital"
      }
    ],
    "id": "c1cdd524499641ec80f02549a8991821",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "hospital",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which team won the American Football League?",
    "SerialNumber": "3328",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/American_Football_League> <http://dbpedia.org/property/champion> ?uri } ",
    "entity mapping": [
      {
        "label": "American Football League",
        "uri": "http://dbpedia.org/resource/American_Football_League"
      }
    ],
    "id": "205217dd61614f7b9dff96c1b2f7202c",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/champion"
      }
    ]
  },
  {
    "question": "Does the Jordan River start in the Golan Heights?",
    "SerialNumber": "3329",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Golan_Heights> }",
    "entity mapping": [
      {
        "label": "Jordan River",
        "uri": "http://dbpedia.org/resource/Jordan_River"
      },
      {
        "label": "Golan Heights",
        "uri": "http://dbpedia.org/resource/Golan_Heights"
      }
    ],
    "id": "216518a4ffe546ce91c5e430549b0037",
    "predicate mapping": [
      {
        "label": "start",
        "uri": "http://dbpedia.org/ontology/sourceRegion"
      }
    ]
  },
  {
    "question": "Give me all office holders who finally retired in Montpelier, Orange, Virgina?",
    "SerialNumber": "3330",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Montpelier",
        "uri": "http://dbpedia.org/resource/Montpelier_(Orange,_Virginia)"
      }
    ],
    "id": "8e346529106147e896a3f2e56bf87969",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "In which company is Raymond Conner at an important position?",
    "SerialNumber": "3333",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Raymond_Conner> } ",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "uri": "http://dbpedia.org/resource/Raymond_Conner"
      }
    ],
    "id": "2f9e649669aa4782919424b5cf845cf3",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      }
    ]
  },
  {
    "question": "Name the actors of the TV show which has an episode named The Five ?",
    "SerialNumber": "3336",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)> <http://dbpedia.org/property/series> ?x . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "The Five",
        "uri": "http://dbpedia.org/resource/The_Five_(The_Vampire_Diaries)"
      }
    ],
    "id": "aa025dbe97974996bdee7ea712d6fcd2",
    "predicate mapping": [
      {
        "label": "named",
        "uri": "http://dbpedia.org/property/series"
      },
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where are the National Academy Museum and School awardwinners buried?",
    "SerialNumber": "3337",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/National_Academy_Museum_and_School> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "National Academy Museum and School",
        "uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School"
      }
    ],
    "id": "9814a502d6344b8684c3ef7c53257f8e",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "What is the common location of  tomb of the Elizabeth of Rhuddlan and Isabel of Cambridge?",
    "SerialNumber": "3340",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elizabeth_of_Rhuddlan> <http://dbpedia.org/property/placeOfBurial> ?uri. <http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex> <http://dbpedia.org/property/placeOfBurial> ?uri . }",
    "entity mapping": [
      {
        "label": "Elizabeth of Rhuddlan",
        "uri": "http://dbpedia.org/resource/Elizabeth_of_Rhuddlan"
      },
      {
        "label": "cambridge isabel",
        "uri": "http://dbpedia.org/resource/Isabel_of_Cambridge,_Countess_of_Essex"
      }
    ],
    "id": "7a39f5fc355c464eb024ab21d1b43e89",
    "predicate mapping": [
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      }
    ]
  },
  {
    "question": "Which company had built the rockets launched at the Cape Canaveral Air Force Station Space Launch Complex 17?",
    "SerialNumber": "3342",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cape Canaveral Air Force Station Space Launch Complex 17",
        "uri": "http://dbpedia.org/resource/Cape_Canaveral_Air_Force_Station_Space_Launch_Complex_17"
      }
    ],
    "id": "2c061f3427d347acaf1d538fba4ea75e",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "rockets",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "What are the former team of the american football players who played at gridiron football position ?",
    "SerialNumber": "3345",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Tackle_(gridiron_football_position)> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "position gridiron football",
        "uri": "http://dbpedia.org/resource/Tackle_(gridiron_football_position)"
      }
    ],
    "id": "04215c1446384126b9c2ac65d0431a1a",
    "predicate mapping": [
      {
        "label": "position",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "former team",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "american football player",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "What  is the meaning of the Isa (name) which is also a relegion of Sacred Heart Convent School (Bangkok) ?",
    "SerialNumber": "3347",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Isa_(name)> <http://dbpedia.org/property/meaning> ?uri. <http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)> <http://dbpedia.org/ontology/type> ?uri} ",
    "entity mapping": [
      {
        "label": "Isa (name)",
        "uri": "http://dbpedia.org/resource/Isa_(name)"
      },
      {
        "label": "Sacred Heart Convent School (Bangkok)",
        "uri": "http://dbpedia.org/resource/Sacred_Heart_Convent_School_(Bangkok)"
      }
    ],
    "id": "225d5bcff9274ce3bbf7c2527939ee7b",
    "predicate mapping": [
      {
        "label": "meaning",
        "uri": "http://dbpedia.org/property/meaning"
      },
      {
        "label": "School",
        "uri": "http://dbpedia.org/ontology/type"
      }
    ]
  },
  {
    "question": "Who are the managers of clubs participating in the 2014-2015 Football League Championship?",
    "SerialNumber": "3348",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014–15_Football_League_Championship> . ?uri <http://dbpedia.org/ontology/managerClub> ?x  . }",
    "entity mapping": [
      {
        "label": "championship football league",
        "uri": "http://dbpedia.org/resource/2014–15_Football_League_Championship"
      }
    ],
    "id": "7717547eedc44d92a881117189824621",
    "predicate mapping": [
      {
        "label": "Championship",
        "uri": "http://dbpedia.org/ontology/season"
      },
      {
        "label": "managers",
        "uri": "http://dbpedia.org/ontology/managerClub"
      }
    ]
  },
  {
    "question": "Which official residence of Nikos Pateras is also the stadium of anionios G.S.S. season 2014-15 ?",
    "SerialNumber": "3350",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri. <http://dbpedia.org/resource/Nikos_Pateras> <http://dbpedia.org/ontology/residence> ?uri} ",
    "entity mapping": [
      {
        "label": "anionios season g.s.s.",
        "uri": "http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season"
      },
      {
        "label": "Nikos Pateras",
        "uri": "http://dbpedia.org/resource/Nikos_Pateras"
      }
    ],
    "id": "f4ff42e2419941e88bca179599c2ea22",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "What is the country of the Hirth Acrostar and the Cobra missile?",
    "SerialNumber": "3354",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hirth_Acrostar> <http://dbpedia.org/ontology/origin> ?uri. <http://dbpedia.org/resource/Cobra_(missile)> <http://dbpedia.org/ontology/origin> ?uri . }",
    "entity mapping": [
      {
        "label": "Hirth Acrostar",
        "uri": "http://dbpedia.org/resource/Hirth_Acrostar"
      },
      {
        "label": "Cobra",
        "uri": "http://dbpedia.org/resource/Cobra_(missile)"
      }
    ],
    "id": "6772f2e11d834d0dabc10d05d6a4ab72",
    "predicate mapping": [
      {
        "label": "missile",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "missile",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "Collect and return a list of things in the area where Spanish language is used?",
    "SerialNumber": "3356",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/language> <http://dbpedia.org/resource/Spanish_language> . ?uri <http://dbpedia.org/ontology/location> ?x  . }",
    "entity mapping": [
      {
        "label": "Spanish language",
        "uri": "http://dbpedia.org/resource/Spanish_language"
      }
    ],
    "id": "0ebb619e771642908242969b42bbf642",
    "predicate mapping": [
      {
        "label": "language",
        "uri": "http://dbpedia.org/ontology/language"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "What made jo garcia and merritt cabal both famous?",
    "SerialNumber": "3357",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jo_Garcia> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Merritt_Cabal> <http://dbpedia.org/ontology/knownFor> ?uri . }",
    "entity mapping": [
      {
        "label": "jo garcia",
        "uri": "http://dbpedia.org/resource/Jo_Garcia"
      },
      {
        "label": "merritt cabal",
        "uri": "http://dbpedia.org/resource/Merritt_Cabal"
      }
    ],
    "id": "62e9fa82eea7498790e2d5ca5a664a60",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Is GIMP written in C?",
    "SerialNumber": "3358",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/ontology/programmingLanguage> <http://dbpedia.org/resource/C_(programming_language)> }",
    "entity mapping": [
      {
        "label": "GIMP",
        "uri": "http://dbpedia.org/resource/GIMP"
      },
      {
        "label": "C",
        "uri": "http://dbpedia.org/resource/C_(programming_language)"
      }
    ],
    "id": "6db524c4b72a43a788d1622f07782c39",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/programmingLanguage"
      }
    ]
  },
  {
    "question": "What are all the countires where food related to tuna salad is consumed ?",
    "SerialNumber": "3359",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Tuna_salad> . ?x <http://dbpedia.org/property/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "tuna salad",
        "uri": "http://dbpedia.org/resource/Tuna_salad"
      }
    ],
    "id": "9465a9187c3f42a9b64cc0da135c6784",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "consumed",
        "uri": "http://dbpedia.org/property/country"
      }
    ]
  },
  {
    "question": "How many different genres led to other genres where drums are important?",
    "SerialNumber": "3361",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Drum_kit> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Drum_kit"
      }
    ],
    "id": "312c5bacb7c14ea1b41c0e219107c417",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/instruments"
      },
      {
        "label": "important",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre"
      }
    ]
  },
  {
    "question": "How many people have played for the NBA?",
    "SerialNumber": "3362",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/league> <http://dbpedia.org/resource/National_Basketball_Association>  . }",
    "entity mapping": [
      {
        "label": "NBA",
        "uri": "http://dbpedia.org/resource/National_Basketball_Association"
      }
    ],
    "id": "9b1fb4f02cfb4023bb3596310cad80bc",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/league"
      }
    ]
  },
  {
    "question": "Where is the headquarters of the public transit system which operators Go-to-card ?",
    "SerialNumber": "3364",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Go-To_card> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Go-To_card"
      }
    ],
    "id": "4dc32ad3dae4429d963b5b4282c18767",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "public transit system",
        "uri": "http://dbpedia.org/ontology/PublicTransitSystem"
      }
    ]
  },
  {
    "question": "How many people played for Newell's Old Boys?",
    "SerialNumber": "3365",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/youthclubs> <http://dbpedia.org/resource/Newell's_Old_Boys>  . }",
    "entity mapping": [
      {
        "label": "Newell's Old Boys",
        "uri": "http://dbpedia.org/resource/Newell's_Old_Boys"
      }
    ],
    "id": "0e0a2a498e574ec6925f6cb31cd3c729",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/youthclubs"
      }
    ]
  },
  {
    "question": "To which american football teams does the Heinz Field serve as home stadium?",
    "SerialNumber": "3369",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heinz_Field> <http://dbpedia.org/property/tenants> ?uri } ",
    "entity mapping": [
      {
        "label": "Heinz Field",
        "uri": "http://dbpedia.org/resource/Heinz_Field"
      }
    ],
    "id": "ada05be944104948987543e9a09aa581",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "What is the occupation of the band members of The Shirelles?",
    "SerialNumber": "3372",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/The_Shirelles> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Shirelles",
        "uri": "http://dbpedia.org/resource/The_Shirelles"
      }
    ],
    "id": "6feb76adf49746a2a18f9d21a1d22306",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "occupation",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Which tv series have a score composed by judy hard angelo?",
    "SerialNumber": "3373",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "score",
        "uri": "http://dbpedia.org/resource/Judy_Hart_Angelo"
      }
    ],
    "id": "cd190de039534a6d91abee2ac3dd411c",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "angelo",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the TV show with artist Christopher Franke and cast member Jason Carter ?",
    "SerialNumber": "3375",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/ontology/starring> <http://dbpedia.org/resource/Jason_Carter_(actor)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "uri": "http://dbpedia.org/resource/Christopher_Franke"
      },
      {
        "label": "Jason Carter",
        "uri": "http://dbpedia.org/resource/Jason_Carter_(actor)"
      }
    ],
    "id": "48ed9662c9d34e7bb7ff13ec8d02c81f",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the office holder with successor as Adrian A Basora and child as Lori Black ?",
    "SerialNumber": "3377",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lori_Black> . ?uri <http://dbpedia.org/property/successor> <http://dbpedia.org/resource/Adrian_A._Basora>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Lori Black",
        "uri": "http://dbpedia.org/resource/Lori_Black"
      },
      {
        "label": "basora adrian",
        "uri": "http://dbpedia.org/resource/Adrian_A._Basora"
      }
    ],
    "id": "ca12347dfd3541a5a313ae988767ca9f",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What band has Joe Hahn and Chester Bennington?",
    "SerialNumber": "3379",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Joe_Hahn> . ?uri <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Chester_Bennington> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Joe Hahn",
        "uri": "http://dbpedia.org/resource/Joe_Hahn"
      },
      {
        "label": "Chester Bennington",
        "uri": "http://dbpedia.org/resource/Chester_Bennington"
      }
    ],
    "id": "fb88bbd86d0d4401951bf15cad3dc0ad",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "In which cities are there american football teams where Matt Snorton played?",
    "SerialNumber": "3380",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Matt_Snorton> <http://dbpedia.org/property/pastteams> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "entity mapping": [
      {
        "label": "Matt Snorton",
        "uri": "http://dbpedia.org/resource/Matt_Snorton"
      }
    ],
    "id": "a7f115fe1444401b808019eec0ae4008",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/pastteams"
      },
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam"
      }
    ]
  },
  {
    "question": "How many awards have the french people received?",
    "SerialNumber": "3383",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/French_people> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "french people",
        "uri": "http://dbpedia.org/resource/French_people"
      }
    ],
    "id": "b96656337c6747a381cea7ab41528178",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Where is the VP buried, which was served by Frederick Cooke?",
    "SerialNumber": "3384",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Frederick_Cooke_(socialist)> <http://dbpedia.org/ontology/vicePresident> ?x . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Frederick Cooke",
        "uri": "http://dbpedia.org/resource/Frederick_Cooke_(socialist)"
      }
    ],
    "id": "06dc963aaf6f4541912707a69c9c48e9",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/vicePresident"
      },
      {
        "label": "buried,",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "What is the sea connected to Oulu and Turku?",
    "SerialNumber": "3385",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Turku> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Oulu",
        "uri": "http://dbpedia.org/resource/Oulu"
      },
      {
        "label": "Turku",
        "uri": "http://dbpedia.org/resource/Turku"
      }
    ],
    "id": "501bbfe69c3a4fcd88d284639842d8dc",
    "predicate mapping": [
      {
        "label": "connected",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "connected",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "does the US navy have the structure of command of us department of defence?",
    "SerialNumber": "3386",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/United_States_Navy> <http://dbpedia.org/property/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> }",
    "entity mapping": [
      {
        "label": "navy",
        "uri": "http://dbpedia.org/resource/United_States_Navy"
      },
      {
        "label": "department",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense"
      }
    ],
    "id": "9d4afc6a5c164d81bbeb24a1bc568c3f",
    "predicate mapping": [
      {
        "label": "structure command",
        "uri": "http://dbpedia.org/property/commandStructure"
      }
    ]
  },
  {
    "question": "What country did the successor of William Ofori Atta swear his oath to?",
    "SerialNumber": "3387",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/William_Ofori_Atta> . ?x <http://dbpedia.org/property/allegiance> ?uri  . }",
    "entity mapping": [
      {
        "label": "William Ofori Atta",
        "uri": "http://dbpedia.org/resource/William_Ofori_Atta"
      }
    ],
    "id": "f8dc5dd3cf8c4e4daf406be6479ac498",
    "predicate mapping": [
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/allegiance"
      }
    ]
  },
  {
    "question": "Through which label has Katy B released her singles?",
    "SerialNumber": "3388",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Katy_B> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "Katy B",
        "uri": "http://dbpedia.org/resource/Katy_B"
      }
    ],
    "id": "c9d5a274b50f454986740fdfafd327cc",
    "predicate mapping": [
      {
        "label": "released",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "What are some awards given to the french people?",
    "SerialNumber": "3389",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/French_people> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "french people",
        "uri": "http://dbpedia.org/resource/French_people"
      }
    ],
    "id": "ab1274d78df1402ca6ccf7ba5642f936",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Where is Lao Plaza Hotel located?",
    "SerialNumber": "3391",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lao_Plaza_Hotel> <http://dbpedia.org/property/developer> ?uri } ",
    "entity mapping": [
      {
        "label": "Lao Plaza Hotel",
        "uri": "http://dbpedia.org/resource/Lao_Plaza_Hotel"
      }
    ],
    "id": "57e96d0a037f4c088d5a09944c314b58",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/developer"
      }
    ]
  },
  {
    "question": "In how many nations does Rhaetian Railways own train stations?",
    "SerialNumber": "3393",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Rhaetian_Railway> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Rhaetian Railways",
        "uri": "http://dbpedia.org/resource/Rhaetian_Railway"
      }
    ],
    "id": "1a67a8c314f94af3bbb0cac98461b913",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Where are the burial grounds of Willem Cornelis Janse van Rensburg and Thomas Franois Burgers?",
    "SerialNumber": "3394",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg> <http://dbpedia.org/property/restingplace> ?uri. <http://dbpedia.org/resource/Thomas_François_Burgers> <http://dbpedia.org/property/restingplace> ?uri . }",
    "entity mapping": [
      {
        "label": "Willem Cornelis Janse van Rensburg",
        "uri": "http://dbpedia.org/resource/Willem_Cornelis_Janse_van_Rensburg"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Thomas_François_Burgers"
      }
    ],
    "id": "fe825b7ea80045f19a498f490eb78420",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "Which fictional character sculpted by Josh Friedmann was portrayed in Terminator 3 ?",
    "SerialNumber": "3395",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Josh Friedman",
        "uri": "http://dbpedia.org/resource/Josh_Friedman"
      },
      {
        "label": "terminator",
        "uri": "http://dbpedia.org/resource/Terminator_3:_Rise_of_the_Machines"
      }
    ],
    "id": "7c11228a01e24c0b81378d51b50efe43",
    "predicate mapping": [
      {
        "label": "Terminator",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Who had headed the governmental agencies whose admin HQ was in Niederkirchnerstrasse?",
    "SerialNumber": "3396",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Niederkirchnerstraße> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "entity mapping": [
      {
        "label": "Niederkirchnerstrasse",
        "uri": "http://dbpedia.org/resource/Niederkirchnerstraße"
      }
    ],
    "id": "6edbb617d6a3485c8a8a32e78e14cf0c",
    "predicate mapping": [
      {
        "label": "admin HQ",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency"
      }
    ]
  },
  {
    "question": "In which city was the company founded , which owns Grasim Bhiwani Textiles?",
    "SerialNumber": "3397",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Grasim_Bhiwani_Textiles> <http://dbpedia.org/property/parent> ?x . ?x <http://dbpedia.org/property/foundation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Grasim Bhiwani Textiles",
        "uri": "http://dbpedia.org/resource/Grasim_Bhiwani_Textiles"
      }
    ],
    "id": "4ee990f7399a4511950f55ae69196980",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which country has outflow of  Lake Uniamsi and  inflows of the Cahora Bassa?",
    "SerialNumber": "3403",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lake_Uniamési> <http://dbpedia.org/property/outflow> ?uri. <http://dbpedia.org/resource/Cahora_Bassa> <http://dbpedia.org/property/inflow> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Lake_Uniamési"
      },
      {
        "label": "Cahora Bassa",
        "uri": "http://dbpedia.org/resource/Cahora_Bassa"
      }
    ],
    "id": "40d15e549b0f4899acb00cf469105b8d",
    "predicate mapping": [
      {
        "label": "outflow",
        "uri": "http://dbpedia.org/property/outflow"
      },
      {
        "label": "inflows",
        "uri": "http://dbpedia.org/property/inflow"
      }
    ]
  },
  {
    "question": "Which city's neighboring municipalities are Lancy and  Pregny-Chambsy?",
    "SerialNumber": "3405",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Lancy> . ?uri <http://dbpedia.org/ontology/neighboringMunicipality> <http://dbpedia.org/resource/Pregny-Chambésy>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "entity mapping": [
      {
        "label": "Lancy",
        "uri": "http://dbpedia.org/resource/Lancy"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Pregny-Chambésy"
      }
    ],
    "id": "9a80906c6ddb4ce1ae6405210f073325",
    "predicate mapping": [
      {
        "label": "neighboring municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      },
      {
        "label": "neighboring",
        "uri": "http://dbpedia.org/ontology/neighboringMunicipality"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location"
      }
    ]
  },
  {
    "question": "Which military battles are associated with Israel?",
    "SerialNumber": "3415",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Israel>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Israel",
        "uri": "http://dbpedia.org/resource/Israel"
      }
    ],
    "id": "6f21a2501af44a8d9c2678f2e61a2207",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/place"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Which city has it's landmark as Cheasty Boulevard South?",
    "SerialNumber": "3416",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri } ",
    "entity mapping": [
      {
        "label": "Cheasty Boulevard South",
        "uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South"
      }
    ],
    "id": "724442cd9501404cbafe30105de16e01",
    "predicate mapping": [
      {
        "label": "landmark",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      }
    ]
  },
  {
    "question": "What are some short story kind of Books?",
    "SerialNumber": "3419",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/literaryGenre> <http://dbpedia.org/resource/Short_story> } ",
    "entity mapping": [
      {
        "label": "short story",
        "uri": "http://dbpedia.org/resource/Short_story"
      }
    ],
    "id": "c593b3d2dd42455e9a67d0aa2e905027",
    "predicate mapping": [
      {
        "label": "Books",
        "uri": "http://dbpedia.org/ontology/literaryGenre"
      }
    ]
  },
  {
    "question": "Give me the sitcoms where Eliza Schneider and Isaac Hayes gave voice?",
    "SerialNumber": "3420",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Eliza_Schneider> . ?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Eliza Schneider",
        "uri": "http://dbpedia.org/resource/Eliza_Schneider"
      },
      {
        "label": "Isaac Hayes",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes"
      }
    ],
    "id": "da876b5724b64e209959a34efc201d5f",
    "predicate mapping": [
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "sitcoms",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who employed the person famous for the Boeing fa18ef Super Hornet?",
    "SerialNumber": "3423",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?x <http://dbpedia.org/property/employer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [],
    "id": "d0db4cd9f5624de8a9bf3c8d4b104695",
    "predicate mapping": [
      {
        "label": "Hornet",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "hornet super",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/property/employer"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List the resting place of the people who served in Norwalk Trainband.",
    "SerialNumber": "3425",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryUnit> <http://dbpedia.org/resource/Norwalk_Trainband> . ?x <http://dbpedia.org/property/restingplace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Norwalk Trainband",
        "uri": "http://dbpedia.org/resource/Norwalk_Trainband"
      }
    ],
    "id": "ad0c25ffff314adc8360b09d8bfeed66",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/militaryUnit"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "List all the narrator of the albums which had Alan Barzman as one of the narrator ?",
    "SerialNumber": "3427",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/narrated> <http://dbpedia.org/resource/Alan_Barzman> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Alan Barzman",
        "uri": "http://dbpedia.org/resource/Alan_Barzman"
      }
    ],
    "id": "cad124dc6dd849f8aa03d47598e6abbb",
    "predicate mapping": [
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "narrator",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "Give me all tv shows which are based in boston and massachusetts?",
    "SerialNumber": "3430",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Boston> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "boston",
        "uri": "http://dbpedia.org/resource/Boston"
      },
      {
        "label": "massachusetts",
        "uri": "http://dbpedia.org/resource/Massachusetts"
      }
    ],
    "id": "f5389602a5104bc0b3691a6dc0b6aed4",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who is married to a Miss Louisiana, USA?",
    "SerialNumber": "3431",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Miss_Louisiana_USA> . ?uri <http://dbpedia.org/property/spouse> ?x  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Miss_Louisiana_USA"
      }
    ],
    "id": "1f8f6352c2c54ce3b53aba360323d3ed",
    "predicate mapping": [
      {
        "label": "USA",
        "uri": "http://dbpedia.org/property/title"
      },
      {
        "label": "married to",
        "uri": "http://dbpedia.org/property/spouse"
      }
    ]
  },
  {
    "question": "Who has produced movies that have a James Horner score?",
    "SerialNumber": "3432",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/music> <http://dbpedia.org/resource/James_Horner> . ?x <http://dbpedia.org/property/producer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "James Horner",
        "uri": "http://dbpedia.org/resource/James_Horner"
      }
    ],
    "id": "26c1a1fbf2d44a43b2365a9bc2ac9c5c",
    "predicate mapping": [
      {
        "label": "score",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the birth place of the astronaut whose mission was the Vostok programmer?",
    "SerialNumber": "3433",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Vostok_programme> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
    "entity mapping": [
      {
        "label": "Vostok programme",
        "uri": "http://dbpedia.org/resource/Vostok_programme"
      }
    ],
    "id": "26745f9ea116424bb5a1ed1ac3faa8cf",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      },
      {
        "label": "birth place",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut"
      }
    ]
  },
  {
    "question": "What team did the players start their careers with, who right now play for Fleisher Yarn?",
    "SerialNumber": "3434",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Fleisher_Yarn> . ?x <http://dbpedia.org/property/debutteam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Fleisher Yarn",
        "uri": "http://dbpedia.org/resource/Fleisher_Yarn"
      }
    ],
    "id": "cd54a705b06443df8c1be672abe15815",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Name the company which produces both  Boeing F/A-18 E/F Hornet nad CH-46 Chinook ?",
    "SerialNumber": "3437",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "chinook boeing",
        "uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook"
      }
    ],
    "id": "2d4e39d0c0784adfb281198a892d3894",
    "predicate mapping": [
      {
        "label": "Chinook",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "hornet",
        "uri": "http://dbpedia.org/resource/Boeing_F/A-18E/F_Super_Hornet"
      },
      {
        "label": "Chinook",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Count all the awards which were presented by something located in California.",
    "SerialNumber": "3438",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/presenter> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "83ca3f4edad24d93a575b23842e8e6e2",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "presented",
        "uri": "http://dbpedia.org/ontology/presenter"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "Where did the aristocrats die whose mother was Maria Ludwika Krasiska?",
    "SerialNumber": "3440",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Maria_Ludwika_Krasińska> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Maria Ludwika Krasiska",
        "uri": "http://dbpedia.org/resource/Maria_Ludwika_Krasińska"
      }
    ],
    "id": "5af32623f2d747d88f0b3fe7df64b489",
    "predicate mapping": [
      {
        "label": "mother",
        "uri": "http://dbpedia.org/property/mother"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Find the total number of  ingredient of the recepies whose ingredient is common Mushroom ?",
    "SerialNumber": "3444",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/ingredient> <http://dbpedia.org/resource/Agaricus_bisporus> . ?x <http://dbpedia.org/ontology/ingredient> ?uri }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Agaricus_bisporus"
      }
    ],
    "id": "a8d7c64d096f49249d1bbdba54ea0dab",
    "predicate mapping": [
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      },
      {
        "label": "ingredient",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "How many teams have used the stadiums which have been rented by the Canadian Hockey team?",
    "SerialNumber": "3448",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Hockey_Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }",
    "entity mapping": [
      {
        "label": "Canadian",
        "uri": "http://dbpedia.org/resource/Hockey_Canada"
      }
    ],
    "id": "ea10d95104514ba8bca12c1165e2f397",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "How many TV shows are similar to the ones belonging to fantasy genre?",
    "SerialNumber": "3450",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/genre> <http://dbpedia.org/resource/Fantasy_television> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "fantasy",
        "uri": "http://dbpedia.org/resource/Fantasy_television"
      }
    ],
    "id": "55b536c2b837474d8aa722a73037bd49",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "fantasy",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What religions are followed by economists?",
    "SerialNumber": "3452",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Economist> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "economist",
        "uri": "http://dbpedia.org/resource/Economist"
      }
    ],
    "id": "7410520bca4c45bbab391b31101a6df3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Is Rajya Sabha a house of parliament in India?",
    "SerialNumber": "3453",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Parliament_of_India> <http://dbpedia.org/property/houses> <http://dbpedia.org/resource/Rajya_Sabha> }",
    "entity mapping": [
      {
        "label": "parliament india",
        "uri": "http://dbpedia.org/resource/Parliament_of_India"
      },
      {
        "label": "Rajya Sabha",
        "uri": "http://dbpedia.org/resource/Rajya_Sabha"
      }
    ],
    "id": "e60d4439142244d0b14d8650ba3ccbcd",
    "predicate mapping": [
      {
        "label": "house",
        "uri": "http://dbpedia.org/property/houses"
      }
    ]
  },
  {
    "question": "How many teams have rented stadiums in Canada?",
    "SerialNumber": "3458",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/property/tenants> ?uri  . }",
    "entity mapping": [
      {
        "label": "Canada",
        "uri": "http://dbpedia.org/resource/Canada"
      }
    ],
    "id": "159f695fd9f34609bd09d41a97aacb40",
    "predicate mapping": [
      {
        "label": "stadiums",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "stadiums",
        "uri": "http://dbpedia.org/property/tenants"
      }
    ]
  },
  {
    "question": "Where was Babita born ?",
    "SerialNumber": "3459",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Babita> <http://dbpedia.org/property/birthplace> ?uri } ",
    "entity mapping": [
      {
        "label": "Babita",
        "uri": "http://dbpedia.org/resource/Babita"
      }
    ],
    "id": "aca36b0993ba45edb0f0fc957c97ce23",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace"
      }
    ]
  },
  {
    "question": "Name some politicians buried in a place near Orange Virginia?",
    "SerialNumber": "3461",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/nearestCity> <http://dbpedia.org/resource/Orange,_Virginia> . ?uri <http://dbpedia.org/property/restingplace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Orange Virginia",
        "uri": "http://dbpedia.org/resource/Orange,_Virginia"
      }
    ],
    "id": "b0dd4c5ad51349f1946188f22d7fa899",
    "predicate mapping": [
      {
        "label": "near",
        "uri": "http://dbpedia.org/property/nearestCity"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What is the sea whose cities are Gdask and Oulu?",
    "SerialNumber": "3462",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gdańsk> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gdańsk"
      },
      {
        "label": "Oulu",
        "uri": "http://dbpedia.org/resource/Oulu"
      }
    ],
    "id": "514539c7a7854fb8a29b7c24dc730dbf",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "How many awards have been given to the participants of the Lawrence Realization Stakes?",
    "SerialNumber": "3465",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/race> <http://dbpedia.org/resource/Lawrence_Realization_Stakes> . ?x <http://dbpedia.org/ontology/honours> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lawrence Realization Stakes",
        "uri": "http://dbpedia.org/resource/Lawrence_Realization_Stakes"
      }
    ],
    "id": "610e75c938944f818e964d8858da9836",
    "predicate mapping": [
      {
        "label": "participants",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/honours"
      }
    ]
  },
  {
    "question": "Who commanded the invasion of Buwat and made Fatima bint Sa'd famous?",
    "SerialNumber": "3475",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Invasion_of_Buwat> <http://dbpedia.org/property/commander> ?uri. <http://dbpedia.org/resource/Fatimah_bint_Sa'd> <http://dbpedia.org/ontology/knownFor> ?uri . }",
    "entity mapping": [
      {
        "label": "invasion of Buwat",
        "uri": "http://dbpedia.org/resource/Invasion_of_Buwat"
      },
      {
        "label": "fatima sa'd bint",
        "uri": "http://dbpedia.org/resource/Fatimah_bint_Sa'd"
      }
    ],
    "id": "0134077a418246169b05e5390e035b00",
    "predicate mapping": [
      {
        "label": "commanded",
        "uri": "http://dbpedia.org/property/commander"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "What is the ethicity of Ted Falon?",
    "SerialNumber": "3476",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Failon> <http://dbpedia.org/ontology/ethnicity> ?uri } ",
    "entity mapping": [
      {
        "label": "Ted Falon",
        "uri": "http://dbpedia.org/resource/Ted_Failon"
      }
    ],
    "id": "f742b26c254f48ada294bbb8649d15c3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/ethnicity"
      }
    ]
  },
  {
    "question": "Who are the astronauts associated with NASA?",
    "SerialNumber": "3477",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
    "entity mapping": [
      {
        "label": "NASA",
        "uri": "http://dbpedia.org/resource/NASA"
      }
    ],
    "id": "c73fef8ef82040cdb4ef06b267d8b45d",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/type"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut"
      }
    ]
  },
  {
    "question": "Name the person whose mother name is Cedella Booker and has a son named Sharon Marley?",
    "SerialNumber": "3478",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Cedella_Booker> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sharon_Marley>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Cedella Booker",
        "uri": "http://dbpedia.org/resource/Cedella_Booker"
      },
      {
        "label": "Sharon Marley",
        "uri": "http://dbpedia.org/resource/Sharon_Marley"
      }
    ],
    "id": "fa685bca2d1949fd9aa9c98cb2200dfe",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "son",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which kind of buildings are found in England?",
    "SerialNumber": "3479",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/ontology/type> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "aa855f60d8464cb291efa723306a8f74",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/locationCountry"
      },
      {
        "label": "found",
        "uri": "http://dbpedia.org/ontology/type"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Cricket is played by which countries' citizens?",
    "SerialNumber": "3484",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Cricket> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }",
    "entity mapping": [
      {
        "label": "Cricket",
        "uri": "http://dbpedia.org/resource/Cricket"
      }
    ],
    "id": "1cb5a6736cd044c798948ca8e81ad7fb",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Who all have been presenters on shows by the NBC?",
    "SerialNumber": "3487",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/NBC> . ?x <http://dbpedia.org/property/presenter> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "NBC",
        "uri": "http://dbpedia.org/resource/NBC"
      }
    ],
    "id": "2ac17e74901841a48f166336033061b1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "presenter",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What tv shows were born out of a collaboration of playtone and dreamworks?",
    "SerialNumber": "3488",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/Playtone> . ?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/DreamWorks_Television> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "playtone",
        "uri": "http://dbpedia.org/resource/Playtone"
      },
      {
        "label": "dreamworks",
        "uri": "http://dbpedia.org/resource/DreamWorks_Television"
      }
    ],
    "id": "768ceadf1cfc424f98c61ac9892e985a",
    "predicate mapping": [
      {
        "label": "collaboration",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "collaboration",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who all have written songs that were then recorded in the Criteria Studios?",
    "SerialNumber": "3489",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/Criteria_Studios> . ?x <http://dbpedia.org/property/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}",
    "entity mapping": [
      {
        "label": "Criteria Studios",
        "uri": "http://dbpedia.org/resource/Criteria_Studios"
      }
    ],
    "id": "ee96d704c0094e77b6002d5894aa2765",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "songs",
        "uri": "http://dbpedia.org/ontology/MusicalWork"
      }
    ]
  },
  {
    "question": "What are all the religions that have been followed by the Sir Lankan attorneys?",
    "SerialNumber": "3490",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Attorneys_in_Sri_Lanka> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sir Lankan",
        "uri": "http://dbpedia.org/resource/Attorneys_in_Sri_Lanka"
      }
    ],
    "id": "9636268ee7834242905069b017dfdce7",
    "predicate mapping": [
      {
        "label": "attorneys",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Through how many labels has Katy B released her singles?",
    "SerialNumber": "3493",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Katy_B> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }",
    "entity mapping": [
      {
        "label": "Katy B",
        "uri": "http://dbpedia.org/resource/Katy_B"
      }
    ],
    "id": "eebefa6c5abc4c53ac2067ca0bed237d",
    "predicate mapping": [
      {
        "label": "singles",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      }
    ]
  },
  {
    "question": "Which newspaper is owned by people living in Oslo?",
    "SerialNumber": "3494",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/property/owners> ?x  . }",
    "entity mapping": [
      {
        "label": "Oslo",
        "uri": "http://dbpedia.org/resource/Oslo"
      }
    ],
    "id": "1511c21130fd42db8503ef152de463ad",
    "predicate mapping": [
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "is owned by",
        "uri": "http://dbpedia.org/property/owners"
      }
    ]
  },
  {
    "question": "How many people have written for Gangan Comics?",
    "SerialNumber": "3495",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Gangan_Comics> . ?x <http://dbpedia.org/property/author> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gangan Comics",
        "uri": "http://dbpedia.org/resource/Gangan_Comics"
      }
    ],
    "id": "18c0cfe0eeb245e5be6ccbe05f916c12",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/magazine"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "Is William H Blanchard buried in Colorado?",
    "SerialNumber": "3496",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/William_H._Blanchard> <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Colorado> }",
    "entity mapping": [
      {
        "label": "blanchard william",
        "uri": "http://dbpedia.org/resource/William_H._Blanchard"
      },
      {
        "label": "Colorado",
        "uri": "http://dbpedia.org/resource/Colorado"
      }
    ],
    "id": "c279410514bf4a78804985526c37251c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial"
      }
    ]
  },
  {
    "question": "Name the common institute of Robert hall and Erica Frank ?",
    "SerialNumber": "3498",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri. <http://dbpedia.org/resource/Erica_Frank> <http://dbpedia.org/ontology/institution> ?uri . }",
    "entity mapping": [
      {
        "label": "Robert hall",
        "uri": "http://dbpedia.org/resource/Robert_Hall_(economist)"
      },
      {
        "label": "Erica Frank",
        "uri": "http://dbpedia.org/resource/Erica_Frank"
      }
    ],
    "id": "60deb84874954198b4c9b6cc5c85e747",
    "predicate mapping": [
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/institution"
      },
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/institution"
      }
    ]
  },
  {
    "question": "What award was won by the father of Angelina Jolie?",
    "SerialNumber": "3499",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Angelina_Jolie> . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "Angelina Jolie",
        "uri": "http://dbpedia.org/resource/Angelina_Jolie"
      }
    ],
    "id": "6b9c942fcd1c48aba22c20b5693b249f",
    "predicate mapping": [
      {
        "label": "father",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "What were robert sarvis and JAck Ryan nominated for ?",
    "SerialNumber": "3500",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Sarvis> <http://dbpedia.org/ontology/nominee> ?uri. <http://dbpedia.org/resource/Jack_Ryan_(politician)> <http://dbpedia.org/ontology/nominee> ?uri . }",
    "entity mapping": [
      {
        "label": "robert sarvis",
        "uri": "http://dbpedia.org/resource/Robert_Sarvis"
      },
      {
        "label": "JAck Ryan",
        "uri": "http://dbpedia.org/resource/Jack_Ryan_(politician)"
      }
    ],
    "id": "42477bee3a644a5cbe1bbca800206582",
    "predicate mapping": [
      {
        "label": "nominated",
        "uri": "http://dbpedia.org/ontology/nominee"
      },
      {
        "label": "nominated",
        "uri": "http://dbpedia.org/ontology/nominee"
      }
    ]
  },
  {
    "question": "Is GIMP written in GTK+?",
    "SerialNumber": "3504",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/GIMP> <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/GTK+> }",
    "entity mapping": [
      {
        "label": "GIMP",
        "uri": "http://dbpedia.org/resource/GIMP"
      },
      {
        "label": "GTK+",
        "uri": "http://dbpedia.org/resource/GTK+"
      }
    ],
    "id": "b60be328eefd4fc994895d7e2c04b7e6",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      }
    ]
  },
  {
    "question": "How many shows are aired on Comedy Central?",
    "SerialNumber": "3509",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Comedy Central",
        "uri": "http://dbpedia.org/resource/Comedy_Central"
      }
    ],
    "id": "e3fa455d918040598237f76a011b287b",
    "predicate mapping": [
      {
        "label": "aired",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where does the river flow into which begins in Lebrsnik?",
    "SerialNumber": "3511",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourcePlace> <http://dbpedia.org/resource/Lebršnik> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lebrsnik",
        "uri": "http://dbpedia.org/resource/Lebršnik"
      }
    ],
    "id": "6fcdd77ecd8d48df85988971b5efa3ad",
    "predicate mapping": [
      {
        "label": "begins",
        "uri": "http://dbpedia.org/ontology/sourcePlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      }
    ]
  },
  {
    "question": "Where did the conflict take place where Liu Mingchuan fought?",
    "SerialNumber": "3512",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Liu_Mingchuan> <http://dbpedia.org/property/battles> ?x . ?x <http://dbpedia.org/ontology/territory> ?uri  . }",
    "entity mapping": [
      {
        "label": "Liu Mingchuan",
        "uri": "http://dbpedia.org/resource/Liu_Mingchuan"
      }
    ],
    "id": "51ba46fe1c4e481f899d93f44dfae6d9",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/territory"
      }
    ]
  },
  {
    "question": "Name the loocation of Lekh Castle which is also the location of SamurAbsheron channel ?",
    "SerialNumber": "3515",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lekh_Castle> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Samur–Absheron_channel> <http://dbpedia.org/ontology/sourceCountry> ?uri} ",
    "entity mapping": [
      {
        "label": "Lekh Castle",
        "uri": "http://dbpedia.org/resource/Lekh_Castle"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Samur–Absheron_channel"
      }
    ],
    "id": "4f77489b44f4444fb99edd7e387255a6",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      }
    ]
  },
  {
    "question": "Which religion is followed by the PM who was served by Chea Sim?",
    "SerialNumber": "3521",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Chea_Sim> <http://dbpedia.org/property/primeminister> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Chea Sim",
        "uri": "http://dbpedia.org/resource/Chea_Sim"
      }
    ],
    "id": "67978a98005d4f27897894daf8f8feeb",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Name the parts of the settlements which has New Braunfels as one of the parts ?",
    "SerialNumber": "3524",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/part> <http://dbpedia.org/resource/New_Braunfels,_Texas> . ?x <http://dbpedia.org/ontology/part> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "braunfels new",
        "uri": "http://dbpedia.org/resource/New_Braunfels,_Texas"
      }
    ],
    "id": "dbac6210102246678872e25416ced6dc",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "settlement",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "Who is the headcoach of 2014-15 Virginia Tech Hokies men's basketball team ?",
    "SerialNumber": "3526",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014–15_Virginia_Tech_Hokies_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri } ",
    "entity mapping": [
      {
        "label": "basketball virginia hokies",
        "uri": "http://dbpedia.org/resource/2014–15_Virginia_Tech_Hokies_men's_basketball_team"
      }
    ],
    "id": "8324de1b412b4b4a827a1a102c028585",
    "predicate mapping": [
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach"
      }
    ]
  },
  {
    "question": "name the home stadium of FC Spartak Moscow season 2011-12",
    "SerialNumber": "3527",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri } ",
    "entity mapping": [
      {
        "label": "spartak season moscow",
        "uri": "http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season"
      }
    ],
    "id": "32830f79373c474abbf24909919f630e",
    "predicate mapping": [
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      }
    ]
  },
  {
    "question": "Give me a list of everyone who married the musicians signed up with Pablo Records?",
    "SerialNumber": "3529",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Pablo_Records> . ?uri <http://dbpedia.org/ontology/spouse> ?x  . }",
    "entity mapping": [
      {
        "label": "Pablo Records",
        "uri": "http://dbpedia.org/resource/Pablo_Records"
      }
    ],
    "id": "8d0baff96ff24540ad867eca41eeb113",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "married",
        "uri": "http://dbpedia.org/ontology/spouse"
      }
    ]
  },
  {
    "question": "Which interest of Philip Novak is the relegion of Vesak ?",
    "SerialNumber": "3531",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Philip_Novak> <http://dbpedia.org/property/mainInterests> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ",
    "entity mapping": [
      {
        "label": "Philip Novak",
        "uri": "http://dbpedia.org/resource/Philip_Novak"
      },
      {
        "label": "Vesak",
        "uri": "http://dbpedia.org/resource/Vesak"
      }
    ],
    "id": "91be6e04144043e78dc8164ea13e0aac",
    "predicate mapping": [
      {
        "label": "interest",
        "uri": "http://dbpedia.org/property/mainInterests"
      },
      {
        "uri": "http://dbpedia.org/ontology/type"
      }
    ]
  },
  {
    "question": "Who made the singles on the famous album Aida?",
    "SerialNumber": "3535",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/album> <http://dbpedia.org/resource/Elton_John_and_Tim_Rice's_Aida> . ?x <http://dbpedia.org/ontology/musicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "aida",
        "uri": "http://dbpedia.org/resource/Elton_John_and_Tim_Rice's_Aida"
      }
    ],
    "id": "e96e350f71e64985b52abd2ed25349a1",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/album"
      },
      {
        "label": "Aida",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "What sport played in Polytechnic uni of San Juan has also made advocate nasiruddin famous?",
    "SerialNumber": "3537",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Advocate_Nasiruddin> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "advocate nasiruddin",
        "uri": "http://dbpedia.org/resource/Advocate_Nasiruddin"
      },
      {
        "label": "polytechnic",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_San_Juan"
      }
    ],
    "id": "54adeba4e7da49f286068bdbf39d26d8",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Where is the fictional character from, whose last appearance was in the Avengers, 1998?",
    "SerialNumber": "3538",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/last> <http://dbpedia.org/resource/The_Avengers_(1998_film)> . ?x <http://dbpedia.org/property/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "the Avengers",
        "uri": "http://dbpedia.org/resource/The_Avengers_(1998_film)"
      }
    ],
    "id": "7e43e5b0e86d44889fb270fb7665e52b",
    "predicate mapping": [
      {
        "label": "last",
        "uri": "http://dbpedia.org/property/last"
      },
      {
        "label": "appearance",
        "uri": "http://dbpedia.org/property/nationality"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What are the movies with Daniel Waters as screenwriter?",
    "SerialNumber": "3543",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Daniel_Waters_(screenwriter)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Daniel Waters",
        "uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)"
      }
    ],
    "id": "782f901d32c14d0bb32eb413e439eb02",
    "predicate mapping": [
      {
        "label": "screenwriter",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Where are the tombs of alumni of ational academy museum and school?",
    "SerialNumber": "3545",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/training> <http://dbpedia.org/resource/National_Academy_Museum_and_School> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "ational academy school museum",
        "uri": "http://dbpedia.org/resource/National_Academy_Museum_and_School"
      }
    ],
    "id": "c1d9d01c89334b408616693a39652284",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/training"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "What beverage was launched by Ferrero SpA?",
    "SerialNumber": "3546",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Ferrero_SpA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "entity mapping": [
      {
        "label": "Ferrero SpA",
        "uri": "http://dbpedia.org/resource/Ferrero_SpA"
      }
    ],
    "id": "c462b0293c354f19b0a5dee22d388534",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/Food"
      }
    ]
  },
  {
    "question": "Name the TV show with Simon Fuller as artist and Fox as the channel ?",
    "SerialNumber": "3548",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Simon Fuller",
        "uri": "http://dbpedia.org/resource/Simon_Fuller"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      }
    ],
    "id": "0f40e662368f43ac9aaa550638105eee",
    "predicate mapping": [
      {
        "label": "Fox",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/property/channel"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many athletic associations are there in all of the private universities?",
    "SerialNumber": "3550",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Private_university> . ?x <http://dbpedia.org/property/athletics> ?uri  . }",
    "entity mapping": [
      {
        "label": "private universiti",
        "uri": "http://dbpedia.org/resource/Private_university"
      }
    ],
    "id": "c4dc2cdbdbc34b52a791cf49139f4a8f",
    "predicate mapping": [
      {
        "label": "es",
        "uri": "http://dbpedia.org/property/type"
      },
      {
        "label": "athletic",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Which set of researchers won the Gold Medal of the Royal Astronomical Society award?",
    "SerialNumber": "3554",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Gold Medal of the Royal Astronomical Society",
        "uri": "http://dbpedia.org/resource/Gold_Medal_of_the_Royal_Astronomical_Society"
      }
    ],
    "id": "598a034edc2b4ba7b7f9eacf0fad1fb2",
    "predicate mapping": [
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "In how many areas do the networks broadcast, which also broadcasts in North Carolina?",
    "SerialNumber": "3555",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/North_Carolina> . ?x <http://dbpedia.org/property/area> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "North Carolina",
        "uri": "http://dbpedia.org/resource/North_Carolina"
      }
    ],
    "id": "26d0b20b5e3f4b3bb897f363daa6261f",
    "predicate mapping": [
      {
        "label": "broadcasts",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "networks",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Name the movie whose director of photography is Gregg Toland and Bernard Herrmann was the music composer?",
    "SerialNumber": "3556",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Gregg_Toland> . ?uri <http://dbpedia.org/ontology/musicComposer> <http://dbpedia.org/resource/Bernard_Herrmann>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Gregg Toland",
        "uri": "http://dbpedia.org/resource/Gregg_Toland"
      },
      {
        "label": "Bernard Herrmann",
        "uri": "http://dbpedia.org/resource/Bernard_Herrmann"
      }
    ],
    "id": "8236caff2da947d6a6cf88099c134f23",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography"
      },
      {
        "label": "music composer",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What city gave birth to Mishal Raheja and also houses New India Assurance?",
    "SerialNumber": "3557",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mishal_Raheja> <http://dbpedia.org/ontology/birthPlace> ?uri. <http://dbpedia.org/resource/New_India_Assurance> <http://dbpedia.org/property/location> ?uri . }",
    "entity mapping": [
      {
        "label": "Mishal Raheja",
        "uri": "http://dbpedia.org/resource/Mishal_Raheja"
      },
      {
        "label": "New India Assurance",
        "uri": "http://dbpedia.org/resource/New_India_Assurance"
      }
    ],
    "id": "38e4c90868ed468b94cb549c579f9b57",
    "predicate mapping": [
      {
        "label": "birth",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "houses",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "What are the awrds won by Laemmle Theatres ?",
    "SerialNumber": "3558",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri } ",
    "entity mapping": [
      {
        "label": "Laemmle Theatres",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres"
      }
    ],
    "id": "f91b91df9ef746ababdcfebcf269d810",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/service"
      }
    ]
  },
  {
    "question": "People of which religion have been the members of parliament, and are from the Kalutara Electoral district?",
    "SerialNumber": "3559",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/region> <http://dbpedia.org/resource/Kalutara_Electoral_District> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "entity mapping": [
      {
        "label": "Kalutara Electoral district",
        "uri": "http://dbpedia.org/resource/Kalutara_Electoral_District"
      }
    ],
    "id": "d857c581856d4696a3df4d5cff4b538c",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/region"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "parliament,",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament"
      }
    ]
  },
  {
    "question": "Name a company with one of the key person as Edwin Catmull and produces RenderMan?",
    "SerialNumber": "3560",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Edwin_Catmull> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/RenderMan_(software)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Edwin Catmull",
        "uri": "http://dbpedia.org/resource/Edwin_Catmull"
      },
      {
        "label": "RenderMan",
        "uri": "http://dbpedia.org/resource/RenderMan_(software)"
      }
    ],
    "id": "20b709002c9a451f81ac30e30697d54e",
    "predicate mapping": [
      {
        "label": "key person",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "produces",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Name the Fox TV show judged by Rand Jackson ?",
    "SerialNumber": "3562",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "jackson rand",
        "uri": "http://dbpedia.org/resource/Randy_Jackson"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      }
    ],
    "id": "89559a4c09794d45b60a14f288fc5403",
    "predicate mapping": [
      {
        "label": "judged",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "Jackson",
        "uri": "http://dbpedia.org/property/channel"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "From how many different cities have people gone to the Illinois Fighting Illini men's basketball?",
    "SerialNumber": "3564",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/college> <http://dbpedia.org/resource/Illinois_Fighting_Illini_men's_basketball> . ?x <http://dbpedia.org/property/placeOfBirth> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Illinois",
        "uri": "http://dbpedia.org/resource/Illinois_Fighting_Illini_men's_basketball"
      }
    ],
    "id": "dead53b77d7b4ae3abf6f4198edb05e5",
    "predicate mapping": [
      {
        "label": "basketball",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "basketball",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "How many owners owned the clubs participating in the Premier leagues of '14?",
    "SerialNumber": "3569",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/2014–15_Premier_League> . ?x <http://dbpedia.org/property/owner> ?uri  . }",
    "entity mapping": [
      {
        "label": "' 14",
        "uri": "http://dbpedia.org/resource/2014–15_Premier_League"
      }
    ],
    "id": "046dd4f4ca7741639c230165ac321a53",
    "predicate mapping": [
      {
        "label": "leagues",
        "uri": "http://dbpedia.org/ontology/season"
      },
      {
        "label": "owners",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Which writer of A literary Nightmare also extended the work of The Apple tree ?",
    "SerialNumber": "3572",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Apple_Tree> <http://dbpedia.org/ontology/basedOn> ?uri. <http://dbpedia.org/resource/A_Literary_Nightmare> <http://dbpedia.org/ontology/author> ?uri} ",
    "entity mapping": [
      {
        "label": "The Apple tree",
        "uri": "http://dbpedia.org/resource/The_Apple_Tree"
      },
      {
        "label": "A literary Nightmare",
        "uri": "http://dbpedia.org/resource/A_Literary_Nightmare"
      }
    ],
    "id": "e1bec9b2a77e46689d40931d5c9ecd63",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/basedOn"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "What are the movies whose cast members are signed up with Point Blank Records?",
    "SerialNumber": "3577",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Point_Blank_Records> . ?uri <http://dbpedia.org/property/starring> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Point Blank Records",
        "uri": "http://dbpedia.org/resource/Point_Blank_Records"
      }
    ],
    "id": "8771e72d14ca4063839d6058b825dcde",
    "predicate mapping": [
      {
        "label": "are",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "signed",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many people are in the band with Juelz Santana?",
    "SerialNumber": "3579",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Juelz_Santana> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Juelz Santana",
        "uri": "http://dbpedia.org/resource/Juelz_Santana"
      }
    ],
    "id": "cd6d4ee1269f45e89677ac5f6cb06cf3",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "To which series does Lost special belong to ?",
    "SerialNumber": "3580",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Lost_Special> <http://dbpedia.org/property/series> ?uri } ",
    "entity mapping": [
      {
        "label": "special lost",
        "uri": "http://dbpedia.org/resource/The_Lost_Special"
      }
    ],
    "id": "936e49d38fb344b8a243aafc31b75630",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/series"
      }
    ]
  },
  {
    "question": "Was Elton John a chairman of a Watford FC Season?",
    "SerialNumber": "3583",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/1999–2000_Watford_F.C._season> <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Elton_John> }",
    "entity mapping": [
      {
        "label": "watford season",
        "uri": "http://dbpedia.org/resource/1999–2000_Watford_F.C._season"
      },
      {
        "label": "Elton John",
        "uri": "http://dbpedia.org/resource/Elton_John"
      }
    ],
    "id": "bb3db88e042a45719a508ffcb4e0cae4",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/ontology/chairman"
      }
    ]
  },
  {
    "question": "From which genres of music did those genres emerge where drums are important?",
    "SerialNumber": "3589",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Drum_kit> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Drum_kit"
      }
    ],
    "id": "52e9a4a2f69e419aa527cd4b5658c783",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/instruments"
      },
      {
        "label": "important",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre"
      }
    ]
  },
  {
    "question": "What is the service of the Laemmle Theatres and is also the award of the Jos Rivera (playwright)?",
    "SerialNumber": "3590",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Laemmle_Theatres> <http://dbpedia.org/ontology/service> ?uri. <http://dbpedia.org/resource/José_Rivera_(playwright)> <http://dbpedia.org/property/awards> ?uri} ",
    "entity mapping": [
      {
        "label": "Laemmle Theatres",
        "uri": "http://dbpedia.org/resource/Laemmle_Theatres"
      },
      {
        "label": "(playwright) rivera",
        "uri": "http://dbpedia.org/resource/José_Rivera_(playwright)"
      }
    ],
    "id": "afda8a6127814c5f8b979c0859dbd3ae",
    "predicate mapping": [
      {
        "label": "service",
        "uri": "http://dbpedia.org/ontology/service"
      },
      {
        "label": "award",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "In which other places are there companies which are in Ontario, too?",
    "SerialNumber": "3593",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Ontario> . ?x <http://dbpedia.org/property/locations> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ontario",
        "uri": "http://dbpedia.org/resource/Ontario"
      }
    ],
    "id": "232e6c0e8d57443a9ef659cad042b6d9",
    "predicate mapping": [
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/locations"
      }
    ]
  },
  {
    "question": "Where did the music genre of Harry and the Potters originate?",
    "SerialNumber": "3595",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Harry_and_the_Potters_(album)> <http://dbpedia.org/ontology/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }",
    "entity mapping": [
      {
        "label": "Harry and the Potters",
        "uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)"
      }
    ],
    "id": "0a1b829f8e814abdb18dac4b1b010740",
    "predicate mapping": [
      {
        "label": "music genre",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      }
    ]
  },
  {
    "question": "Who used to skate with the pupils of Laureano Ibarra?",
    "SerialNumber": "3599",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/coach> <http://dbpedia.org/resource/Laureano_Ibarra> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FigureSkater>}",
    "entity mapping": [
      {
        "label": "Laureano Ibarra",
        "uri": "http://dbpedia.org/resource/Laureano_Ibarra"
      }
    ],
    "id": "ea4ea30b9c3940988dd74494c7903da2",
    "predicate mapping": [
      {
        "label": "pupils",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "pupils",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "skate",
        "uri": "http://dbpedia.org/ontology/FigureSkater"
      }
    ]
  },
  {
    "question": "What is the religion of the member of parliament who is a relative of Sarathchandra Rajakaruna?",
    "SerialNumber": "3600",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Sarathchandra_Rajakaruna> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "entity mapping": [
      {
        "label": "Sarathchandra Rajakaruna",
        "uri": "http://dbpedia.org/resource/Sarathchandra_Rajakaruna"
      }
    ],
    "id": "286e3b7df05248f9bcaf081f3a5bfae7",
    "predicate mapping": [
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "member of parliament",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament"
      }
    ]
  },
  {
    "question": "What television show is magistrated by Harry Connick, Jr.?",
    "SerialNumber": "3602",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Harry_Connick,_Jr.>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Harry Connick, Jr.",
        "uri": "http://dbpedia.org/resource/Harry_Connick,_Jr."
      }
    ],
    "id": "bd5737093bad479e8cc07b908e5189da",
    "predicate mapping": [
      {
        "label": "magistrated",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which Texas based company  was founded by Jim Harris ?",
    "SerialNumber": "3603",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Texas> . ?uri <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Texas",
        "uri": "http://dbpedia.org/resource/Texas"
      },
      {
        "label": "Jim Harris",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)"
      }
    ],
    "id": "5145b69c134f441b869b6d2ae0252731",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "From where does the river start, which flows into the Conowingo dam?",
    "SerialNumber": "3605",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Conowingo_Dam> . ?x <http://dbpedia.org/ontology/source> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Conowingo dam",
        "uri": "http://dbpedia.org/resource/Conowingo_Dam"
      }
    ],
    "id": "f0acd22286c047eabc35b04de1c0c47b",
    "predicate mapping": [
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "List all the parents of writers coming from the Great Missenden ?",
    "SerialNumber": "3606",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Great_Missenden> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Great Missenden",
        "uri": "http://dbpedia.org/resource/Great_Missenden"
      }
    ],
    "id": "df4a8bee85f04e6f8e60dd62c65e104b",
    "predicate mapping": [
      {
        "label": "coming",
        "uri": "http://dbpedia.org/property/homeTown"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "What state has a Brideun School for Exception Children and is the birthplace  of B J Crombeen?",
    "SerialNumber": "3607",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children> <http://dbpedia.org/property/state> ?uri. <http://dbpedia.org/resource/B._J._Crombeen> <http://dbpedia.org/ontology/birthPlace> ?uri . }",
    "entity mapping": [
      {
        "label": "exception children brideun school",
        "uri": "http://dbpedia.org/resource/Brideun_School_for_Exceptional_Children"
      },
      {
        "label": "crombeen",
        "uri": "http://dbpedia.org/resource/B._J._Crombeen"
      }
    ],
    "id": "6c62c5bf4c4d43f69f7a5d6cdef2cfae",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What is the total number of politicians whose predecessor's deputy is Jenny Macklin?",
    "SerialNumber": "3608",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Jenny_Macklin> . ?uri <http://dbpedia.org/property/predecessor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Jenny Macklin",
        "uri": "http://dbpedia.org/resource/Jenny_Macklin"
      }
    ],
    "id": "e28b8d50dec442e4afe8782558fdc00f",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What is the scientist whose PhD students are Erich Bagge and erban ieica?",
    "SerialNumber": "3612",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://dbpedia.org/property/doctoralStudents> <http://dbpedia.org/resource/Șerban_Țițeica> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Erich Bagge",
        "uri": "http://dbpedia.org/resource/Erich_Bagge"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica"
      }
    ],
    "id": "9f558fd14dc54992bc18d9ff843c24df",
    "predicate mapping": [
      {
        "label": "students",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "students",
        "uri": "http://dbpedia.org/property/doctoralStudents"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many bands have members currently playing the Fender Stratocaster?",
    "SerialNumber": "3613",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Fender_Stratocaster> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Fender Stratocaster",
        "uri": "http://dbpedia.org/resource/Fender_Stratocaster"
      }
    ],
    "id": "ea618d18100f4888910364d1044fe633",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/property/notableInstruments"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "What is the deathplace of people who have worked in Ethics?",
    "SerialNumber": "3616",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Ethics> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ethics",
        "uri": "http://dbpedia.org/resource/Ethics"
      }
    ],
    "id": "2c1770e2d3984893a620a66a628bed5b",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/property/mainInterests"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "How many religions have the relatives of waxiangs followed?",
    "SerialNumber": "3617",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Waxiang_people> <http://dbpedia.org/property/related> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Waxiang_people"
      }
    ],
    "id": "cdc182cb1086444ba6609878786447ff",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What kind of games does Blizzard games develop?",
    "SerialNumber": "3620",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/Blizzard_Entertainment> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "blizzard",
        "uri": "http://dbpedia.org/resource/Blizzard_Entertainment"
      }
    ],
    "id": "7e638a07671f4e0dbd9a400eac8f5de4",
    "predicate mapping": [
      {
        "label": "develop",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "Blizzard",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Who is the parent of FD Roosevelt JR?",
    "SerialNumber": "3621",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr.>  . }",
    "entity mapping": [
      {
        "label": "roosevelt",
        "uri": "http://dbpedia.org/resource/Franklin_Delano_Roosevelt,_Jr."
      }
    ],
    "id": "7f7c3328eb5b44fd9119c85b39285fbf",
    "predicate mapping": [
      {
        "label": "JR",
        "uri": "http://dbpedia.org/property/children"
      }
    ]
  },
  {
    "question": "Which expertise of the Menetries's warbler is the  nationality of the Jeyhun Abiyev ?",
    "SerialNumber": "3622",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Menetries's_warbler> <http://dbpedia.org/ontology/binomialAuthority> ?uri. <http://dbpedia.org/resource/Jeyhun_Abiyev> <http://dbpedia.org/ontology/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "Menetries's warbler",
        "uri": "http://dbpedia.org/resource/Menetries's_warbler"
      },
      {
        "label": "Jeyhun Abiyev",
        "uri": "http://dbpedia.org/resource/Jeyhun_Abiyev"
      }
    ],
    "id": "c46c233ae0c14807825928b38649d37e",
    "predicate mapping": [
      {
        "label": "expertise",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      }
    ]
  },
  {
    "question": "In how many places can I find wine made of Vitis vinifera grapes?",
    "SerialNumber": "3623",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Vitis vinifera",
        "uri": "http://dbpedia.org/resource/Vitis_vinifera"
      }
    ],
    "id": "7c24a58761f249839782415660523ba4",
    "predicate mapping": [
      {
        "label": "grapes",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "wine",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      }
    ]
  },
  {
    "question": "What have been made in the state whose capital is Boston?",
    "SerialNumber": "3624",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/capital> <http://dbpedia.org/resource/Boston> . ?uri <http://dbpedia.org/ontology/location> ?x  . }",
    "entity mapping": [
      {
        "label": "Boston",
        "uri": "http://dbpedia.org/resource/Boston"
      }
    ],
    "id": "e19a8a1f620d417887fabd403a34298e",
    "predicate mapping": [
      {
        "label": "capital",
        "uri": "http://dbpedia.org/property/capital"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Name the royalty whose spouse was Cleopatra V of Egypt and one of his parent was Ptolemy XII Auletes?",
    "SerialNumber": "3625",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mother> <http://dbpedia.org/resource/Cleopatra_V_of_Egypt> . ?uri <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ptolemy_XII_Auletes>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Cleopatra V of Egypt",
        "uri": "http://dbpedia.org/resource/Cleopatra_V_of_Egypt"
      },
      {
        "label": "Ptolemy XII Auletes",
        "uri": "http://dbpedia.org/resource/Ptolemy_XII_Auletes"
      }
    ],
    "id": "ae7bd0ded6804ceead902c06ec9b71e1",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/mother"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "royalty",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Name the officeholder who hasa child named Augustus and has an associate named Marcus Bibulus ?",
    "SerialNumber": "3628",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus> . ?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Augustus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "bibulus marcus",
        "uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus"
      },
      {
        "label": "Augustus",
        "uri": "http://dbpedia.org/resource/Augustus"
      }
    ],
    "id": "6aae7a52e81c4a26b80f5c17943b7857",
    "predicate mapping": [
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "child",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "officeholder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "List down the schools whose mascot is an animal from the order of Even toed Ungulates?",
    "SerialNumber": "3632",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Bjarne_Stroustrup> . ?uri <http://dbpedia.org/property/programmingLanguage> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Bjarne_Stroustrup"
      }
    ],
    "id": "0954b94157bc4c35a1bcb0ec0107cb74",
    "predicate mapping": [
      {
        "label": "toed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "toed",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Was the skeleton dance animated by Walt Disney?",
    "SerialNumber": "3634",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> <http://dbpedia.org/resource/Walt_Disney> }",
    "entity mapping": [
      {
        "label": "the skeleton dance",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance"
      },
      {
        "label": "Walt Disney",
        "uri": "http://dbpedia.org/resource/Walt_Disney"
      }
    ],
    "id": "a407d3e2f82d4a51b9e93485af1f0f4f",
    "predicate mapping": [
      {
        "label": "animated",
        "uri": "http://dbpedia.org/ontology/animator"
      }
    ]
  },
  {
    "question": "The president who was in office when Lee Hyun Jae was the PM followed which religion?",
    "SerialNumber": "3638",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Lee_Hyun-jae> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Lee Hyun Jae",
        "uri": "http://dbpedia.org/resource/Lee_Hyun-jae"
      }
    ],
    "id": "a4c071295df54e628add12c26e1551d7",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "How many developers make softwares for Unix like operating systems?",
    "SerialNumber": "3639",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Unix-like> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "entity mapping": [
      {
        "label": "unix like",
        "uri": "http://dbpedia.org/resource/Unix-like"
      }
    ],
    "id": "24bea3e02aac4576a8340dc9d4e933dd",
    "predicate mapping": [
      {
        "label": "operating system",
        "uri": "http://dbpedia.org/property/operatingSystem"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Name the scientist who become the part of Royal Society and had academic advisor as Karl Ewald Hasse?",
    "SerialNumber": "3642",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Royal_Society> . ?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Karl_Ewald_Hasse>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Royal Society",
        "uri": "http://dbpedia.org/resource/Royal_Society"
      },
      {
        "label": "Karl Ewald Hasse",
        "uri": "http://dbpedia.org/resource/Karl_Ewald_Hasse"
      }
    ],
    "id": "20ece59a1aa9487bbe525dcba5247d38",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "academic advisor",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What is the religion of the ones in the Kampuchean Union of Salvation?",
    "SerialNumber": "3644",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Kampuchean Union of Salvation",
        "uri": "http://dbpedia.org/resource/Kampuchean_United_Front_for_National_Salvation"
      }
    ],
    "id": "b71a96db56e8414aba5648ec5935ecf9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which parent organization of GetTV is also the label of next thing ?",
    "SerialNumber": "3646",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Next_Thing> <http://dbpedia.org/ontology/recordLabel> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ",
    "entity mapping": [
      {
        "label": "next thing",
        "uri": "http://dbpedia.org/resource/Next_Thing"
      },
      {
        "label": "GetTV",
        "uri": "http://dbpedia.org/resource/GetTV"
      }
    ],
    "id": "b17be3d3611b49f3aca5fa4337a2315b",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      }
    ]
  },
  {
    "question": "How many states are in the Mediterranean Basketball Association?",
    "SerialNumber": "3648",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Mediterranean_Basketball_Association> <http://dbpedia.org/ontology/country> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Mediterranean Basketball Association",
        "uri": "http://dbpedia.org/resource/Mediterranean_Basketball_Association"
      }
    ],
    "id": "90be0811add84e5aa9984db40fcee9db",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "What is the ethnicity of the people working for the Philippines house of representatives?",
    "SerialNumber": "3649",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines> . ?x <http://dbpedia.org/ontology/ethnicity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Philippines",
        "uri": "http://dbpedia.org/resource/House_of_Representatives_of_the_Philippines"
      }
    ],
    "id": "d6802f1090fc42088479f3a1897fa6f0",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "representatives",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name some people who are buried in a place governed by the US Department of the Interior?",
    "SerialNumber": "3650",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/governingBody> <http://dbpedia.org/resource/United_States_Department_of_the_Interior> . ?uri <http://dbpedia.org/property/restingplace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "US Department of the Interior",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_the_Interior"
      }
    ],
    "id": "b18bcd6d7ea84ac59cb76d3a3683c33e",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/governingBody"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "buried",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Where is the football team located in which Josh Bell did his debut?",
    "SerialNumber": "3653",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Josh_Bell_(gridiron_football)> <http://dbpedia.org/ontology/debutTeam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Josh Bell",
        "uri": "http://dbpedia.org/resource/Josh_Bell_(gridiron_football)"
      }
    ],
    "id": "aef9c51a69964e5596910348107d8ba5",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "debut",
        "uri": "http://dbpedia.org/ontology/locationCity"
      }
    ]
  },
  {
    "question": "The president served by Haqqi al-Azm died where?",
    "SerialNumber": "3656",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Haqqi_al-Azm> <http://dbpedia.org/property/president> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "entity mapping": [
      {
        "label": "Haqqi al-Azm",
        "uri": "http://dbpedia.org/resource/Haqqi_al-Azm"
      }
    ],
    "id": "13eb5beca6db42d2a2351fbc774d97f7",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "What are some awards given to people who were born in sweden?",
    "SerialNumber": "3657",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Sweden> . ?x <http://dbpedia.org/property/awards> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "sweden",
        "uri": "http://dbpedia.org/resource/Sweden"
      }
    ],
    "id": "e87064d2456145b1b5a0bfc1703d439c",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Is WP 8.1 the OS on Lumia 830?",
    "SerialNumber": "3661",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Nokia_Lumia_830> <http://dbpedia.org/property/os> <http://dbpedia.org/resource/Windows_Phone_8.1> }",
    "entity mapping": [
      {
        "label": "lumia 830",
        "uri": "http://dbpedia.org/resource/Nokia_Lumia_830"
      },
      {
        "label": "8.1",
        "uri": "http://dbpedia.org/resource/Windows_Phone_8.1"
      }
    ],
    "id": "cdc804731f0b4931b6ee149e92fc807f",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/property/os"
      }
    ]
  },
  {
    "question": "Which companies make cars with a front engine, rear wheel drive layout?",
    "SerialNumber": "3663",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout> . ?x <http://dbpedia.org/ontology/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "engine, layout wheel front drive",
        "uri": "http://dbpedia.org/resource/Front-engine,_rear-wheel-drive_layout"
      }
    ],
    "id": "4930ac422c3a46878641b26e4911c9fd",
    "predicate mapping": [
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Do the polet airlines fly to moscow?",
    "SerialNumber": "3665",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Polet_Airlines> <http://dbpedia.org/ontology/targetAirport> <http://dbpedia.org/resource/Moscow> }",
    "entity mapping": [
      {
        "label": "polet airlines",
        "uri": "http://dbpedia.org/resource/Polet_Airlines"
      },
      {
        "label": "moscow",
        "uri": "http://dbpedia.org/resource/Moscow"
      }
    ],
    "id": "3f46fda15bf14f0fab5297341e258dce",
    "predicate mapping": [
      {
        "label": "fly",
        "uri": "http://dbpedia.org/ontology/targetAirport"
      }
    ]
  },
  {
    "question": "In which state is the alma matter of Jan Paulsen located ?",
    "SerialNumber": "3667",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Jan_Paulsen> <http://dbpedia.org/ontology/almaMater> ?x . ?x <http://dbpedia.org/property/state> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jan Paulsen",
        "uri": "http://dbpedia.org/resource/Jan_Paulsen"
      }
    ],
    "id": "7043c42bf9fc41418bf7fce82a3ed8f2",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "Name some islands in a pacific archipelago?",
    "SerialNumber": "3668",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Pacific_Ocean> . ?uri <http://dbpedia.org/property/archipelago> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "entity mapping": [
      {
        "label": "pacific",
        "uri": "http://dbpedia.org/resource/Pacific_Ocean"
      }
    ],
    "id": "498b80ad7a3e404aa8127f73d757f44d",
    "predicate mapping": [
      {
        "label": "pacific",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island"
      }
    ]
  },
  {
    "question": "List the names of the soccer club seasons whose division is 2012 Campeonato Brasileiro Srie A.",
    "SerialNumber": "3676",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/league> <http://dbpedia.org/resource/2012_Campeonato_Brasileiro_Série_A> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "entity mapping": [
      {
        "label": "campeonato brasileiro",
        "uri": "http://dbpedia.org/resource/2012_Campeonato_Brasileiro_Série_A"
      }
    ],
    "id": "4ae8d48e900b4769ada16d476c81dd95",
    "predicate mapping": [
      {
        "label": "division",
        "uri": "http://dbpedia.org/property/league"
      },
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "soccer club season",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason"
      }
    ]
  },
  {
    "question": "Where did the genres originate, which were in the Harry and the Potters album?",
    "SerialNumber": "3680",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Harry_and_the_Potters_(album)> <http://dbpedia.org/ontology/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }",
    "entity mapping": [
      {
        "label": "Harry and the Potters",
        "uri": "http://dbpedia.org/resource/Harry_and_the_Potters_(album)"
      }
    ],
    "id": "3f3d04c8667041c0a30da802ecd4cd40",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      }
    ]
  },
  {
    "question": "Who was the narrator of the show who's music is composed by John Douglas?",
    "SerialNumber": "3685",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/John_Douglas_(conductor)> . ?x <http://dbpedia.org/property/narrated> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "John Douglas",
        "uri": "http://dbpedia.org/resource/John_Douglas_(conductor)"
      }
    ],
    "id": "47a9d2054379462e850aecdccb4a114c",
    "predicate mapping": [
      {
        "label": "composed by",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "show is",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where was the current champion of Egyptian Open born ?",
    "SerialNumber": "3686",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Egyptian_Open> <http://dbpedia.org/ontology/champion> ?x . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Egyptian Open",
        "uri": "http://dbpedia.org/resource/Egyptian_Open"
      }
    ],
    "id": "53d26ee8082c40af9e43661837f30042",
    "predicate mapping": [
      {
        "label": "champion",
        "uri": "http://dbpedia.org/ontology/champion"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "Was Castillo discovered by Galileo?",
    "SerialNumber": "3687",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Callisto_(moon)> <http://dbpedia.org/property/discoverer> <http://dbpedia.org/resource/Galileo_Galilei> }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Callisto_(moon)"
      },
      {
        "label": "Galileo",
        "uri": "http://dbpedia.org/resource/Galileo_Galilei"
      }
    ],
    "id": "390bec142f5a4354a4a0d47a64474646",
    "predicate mapping": [
      {
        "label": "discovered by",
        "uri": "http://dbpedia.org/property/discoverer"
      }
    ]
  },
  {
    "question": "Who are the chancellors of universities which is affiliated with Plymouth University?",
    "SerialNumber": "3689",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Plymouth_University> . ?x <http://dbpedia.org/property/chancellor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Plymouth University",
        "uri": "http://dbpedia.org/resource/Plymouth_University"
      }
    ],
    "id": "7877e775ed9e4c52a16d8b95104db714",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor"
      },
      {
        "label": "University",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "What common relegion affiliation exists for udit Raj and Wickramabahu Central College ?",
    "SerialNumber": "3690",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Udit_Raj> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri} ",
    "entity mapping": [
      {
        "label": "udit Raj",
        "uri": "http://dbpedia.org/resource/Udit_Raj"
      },
      {
        "label": "Wickramabahu Central College",
        "uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)"
      }
    ],
    "id": "99518f87aadb4ffdbc84a7b46b300383",
    "predicate mapping": [
      {
        "label": "exists",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      }
    ]
  },
  {
    "question": "Name the console whose successor is PlayStation 4 and predecessor is PlayStation 2?",
    "SerialNumber": "3691",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/PlayStation_4> . ?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "PlayStation 4",
        "uri": "http://dbpedia.org/resource/PlayStation_4"
      },
      {
        "label": "PlayStation 2",
        "uri": "http://dbpedia.org/resource/PlayStation_2"
      }
    ],
    "id": "ac50f52a09154c0483346c70133cd0e4",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "console",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "What are the common sports played by jamiatu Muslim mindanao and Polytechnic University of Philippines Taguig ?",
    "SerialNumber": "3692",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri. <http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig> <http://dbpedia.org/ontology/sport> ?uri} ",
    "entity mapping": [
      {
        "label": "jamiatu Muslim mindanao",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao"
      },
      {
        "label": "polytechnic philippines university taguig",
        "uri": "http://dbpedia.org/resource/Polytechnic_University_of_the_Philippines_Taguig"
      }
    ],
    "id": "a8c90d3cb9594f2f9b76123cc4272062",
    "predicate mapping": [
      {
        "label": "Taguig",
        "uri": "http://dbpedia.org/ontology/athletics"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Among the countries using Aureus as currency which had Nicomedia as an important place ?",
    "SerialNumber": "3693",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/capital> <http://dbpedia.org/resource/Nicomedia> . ?uri <http://dbpedia.org/ontology/currency> <http://dbpedia.org/resource/Aureus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Nicomedia",
        "uri": "http://dbpedia.org/resource/Nicomedia"
      },
      {
        "label": "Aureus",
        "uri": "http://dbpedia.org/resource/Aureus"
      }
    ],
    "id": "7521f2b548c742bc847175d5bb599556",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/capital"
      },
      {
        "label": "currency",
        "uri": "http://dbpedia.org/ontology/currency"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "British people have edited which movies?",
    "SerialNumber": "3694",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/United_Kingdom> . ?uri <http://dbpedia.org/property/editing> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "British",
        "uri": "http://dbpedia.org/resource/United_Kingdom"
      }
    ],
    "id": "d19c3af9ab8340149565596d32439a0c",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "edited",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Where did chancellor served by Rudolf Kirchschlger die?",
    "SerialNumber": "3695",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Rudolf_Kirchschläger> <http://dbpedia.org/property/chancellor> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Rudolf Kirchschlger",
        "uri": "http://dbpedia.org/resource/Rudolf_Kirchschläger"
      }
    ],
    "id": "fa1d8082a8614af189cc4ca0b03b8375",
    "predicate mapping": [
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/property/chancellor"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Which colored race horses have won the Grand National?",
    "SerialNumber": "3704",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/honours> <http://dbpedia.org/resource/Grand_National> . ?x <http://dbpedia.org/ontology/colour> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
    "entity mapping": [
      {
        "label": "Grand National",
        "uri": "http://dbpedia.org/resource/Grand_National"
      }
    ],
    "id": "ba5a1a29c5a042d39b6d9df1fd0da2b2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/honours"
      },
      {
        "uri": "http://dbpedia.org/ontology/colour"
      },
      {
        "label": "race horse",
        "uri": "http://dbpedia.org/ontology/RaceHorse"
      }
    ]
  },
  {
    "question": "Which president of William Eustus also married to Dolley Madison ?",
    "SerialNumber": "3709",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dolley_Madison> <http://dbpedia.org/ontology/spouse> ?uri. <http://dbpedia.org/resource/William_Eustis> <http://dbpedia.org/property/president> ?uri} ",
    "entity mapping": [
      {
        "label": "Dolley Madison",
        "uri": "http://dbpedia.org/resource/Dolley_Madison"
      },
      {
        "label": "william",
        "uri": "http://dbpedia.org/resource/William_Eustis"
      }
    ],
    "id": "67893530f30a49dd87e36373d1642717",
    "predicate mapping": [
      {
        "label": "married to",
        "uri": "http://dbpedia.org/ontology/spouse"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "Name a movie with actor as Momoko Kchi and music by Akira Ifukube?",
    "SerialNumber": "3712",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Momoko_Kōchi> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Akira_Ifukube>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "momoko",
        "uri": "http://dbpedia.org/resource/Momoko_Kōchi"
      },
      {
        "label": "Akira Ifukube",
        "uri": "http://dbpedia.org/resource/Akira_Ifukube"
      }
    ],
    "id": "253d1d8095684756951584ec0a0a37f1",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Who manages the operator of Norman Park Branch, CTA?",
    "SerialNumber": "3715",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Normal_Park_branch_(CTA)> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Normal_Park_branch_(CTA)"
      }
    ],
    "id": "182f0bed84d84af2a38a3d2bf40a2c8f",
    "predicate mapping": [
      {
        "label": "operator",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      }
    ]
  },
  {
    "question": "Name the HBO TV show written by Erik jendresen  ?",
    "SerialNumber": "3716",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/company> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      },
      {
        "label": "Erik jendresen",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen"
      }
    ],
    "id": "1e202ff4ce8c40f18dcb98e39e8c43ad",
    "predicate mapping": [
      {
        "label": "TV",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Whay common comic is written by Karakuri Dji Ultimo and narrated by The Incredible Hulk ?",
    "SerialNumber": "3718",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Karakuri_Dôji_Ultimo> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri} ",
    "entity mapping": [
      {
        "label": "karakuri ultimo",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo"
      },
      {
        "label": "The Incredible Hulk",
        "uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)"
      }
    ],
    "id": "b08465bc7133422a9c0a2a1e3ee38e99",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "narrated",
        "uri": "http://dbpedia.org/property/narrated"
      }
    ]
  },
  {
    "question": "What are the movies whose director of photography is Jordan Cronenweth?",
    "SerialNumber": "3719",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Jordan Cronenweth",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth"
      }
    ],
    "id": "eb7991936f3c4df097078005049ad9ba",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/property/cinematography"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Under which presidents have politicians from the Continental army served?",
    "SerialNumber": "3720",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }",
    "entity mapping": [
      {
        "label": "Continental army",
        "uri": "http://dbpedia.org/resource/Continental_Army"
      }
    ],
    "id": "6d387f343a844da58776ae70a4a4f621",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "Which city has radio stations which are Religious ?",
    "SerialNumber": "3721",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/format> <http://dbpedia.org/resource/Religion> . ?x <http://dbpedia.org/property/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "Religiou",
        "uri": "http://dbpedia.org/resource/Religion"
      }
    ],
    "id": "309643fac5534e289bcc36c1b3e52d85",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/format"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "radio station",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "Those seasons which have been played in Fort Lauderdale Florida now host their games where?",
    "SerialNumber": "3723",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/stadium> <http://dbpedia.org/resource/Fort_Lauderdale,_Florida> . ?x <http://dbpedia.org/ontology/ground> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClubSeason>}",
    "entity mapping": [
      {
        "label": "lauderdale florida fort",
        "uri": "http://dbpedia.org/resource/Fort_Lauderdale,_Florida"
      }
    ],
    "id": "8f8b8d845595448aad675853ecea23b5",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/property/stadium"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/ground"
      },
      {
        "label": "seasons",
        "uri": "http://dbpedia.org/ontology/SoccerClubSeason"
      }
    ]
  },
  {
    "question": "Was 2658 Gingerich invented in Harvard?",
    "SerialNumber": "3727",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/2658_Gingerich> <http://dbpedia.org/ontology/discoverer> <http://dbpedia.org/resource/Harvard_College> }",
    "entity mapping": [
      {
        "label": "2658 Gingerich",
        "uri": "http://dbpedia.org/resource/2658_Gingerich"
      },
      {
        "label": "harvard",
        "uri": "http://dbpedia.org/resource/Harvard_College"
      }
    ],
    "id": "2c39c59a5b3d4c15844b34930828326b",
    "predicate mapping": [
      {
        "label": "invented",
        "uri": "http://dbpedia.org/ontology/discoverer"
      }
    ]
  },
  {
    "question": "How many other people are in a band with Robert de Niro?",
    "SerialNumber": "3728",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/currentMembers> <http://dbpedia.org/resource/Robert_De_Niro> . ?x <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Robert de Niro",
        "uri": "http://dbpedia.org/resource/Robert_De_Niro"
      }
    ],
    "id": "778761d04bb14ee8b90d1cbf954322e7",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who created the stadiums who have been rented by the Boston Red Sox?",
    "SerialNumber": "3729",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Boston_Red_Sox> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Boston Red Sox",
        "uri": "http://dbpedia.org/resource/Boston_Red_Sox"
      }
    ],
    "id": "44c72a38f8a2482989ab8b73f5f9977c",
    "predicate mapping": [
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Which clubs play in the La Liga?",
    "SerialNumber": "3734",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/league> <http://dbpedia.org/resource/La_Liga> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "La Liga",
        "uri": "http://dbpedia.org/resource/La_Liga"
      }
    ],
    "id": "a28559e7c5e648058bc88bb93a29336b",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/league"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "Who are the parents of writers born and bred in Buckinghamshire?",
    "SerialNumber": "3735",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Buckinghamshire> . ?x <http://dbpedia.org/ontology/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Buckinghamshire",
        "uri": "http://dbpedia.org/resource/Buckinghamshire"
      }
    ],
    "id": "ea111f49ee134bee8e906c9bab84430f",
    "predicate mapping": [
      {
        "label": "bred",
        "uri": "http://dbpedia.org/property/homeTown"
      },
      {
        "label": "parent",
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "What is the radio show created by Timoteo Jeffries, about?",
    "SerialNumber": "3736",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Timoteo_Jeffries> . ?x <http://dbpedia.org/property/format> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioProgram>}",
    "entity mapping": [
      {
        "label": "Timoteo Jeffries",
        "uri": "http://dbpedia.org/resource/Timoteo_Jeffries"
      }
    ],
    "id": "a656fb53970e4e36b7c254c35ee31be6",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/format"
      },
      {
        "label": "radio",
        "uri": "http://dbpedia.org/ontology/RadioProgram"
      }
    ]
  },
  {
    "question": "Which shows' opening themes was used to make If We Were a Movie?",
    "SerialNumber": "3741",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/If_We_Were_a_Movie> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "If We Were a Movie",
        "uri": "http://dbpedia.org/resource/If_We_Were_a_Movie"
      }
    ],
    "id": "db7bce6fd45745b7833bc9aa702dc2f7",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "shows'",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where is the venue of the History of Penny Arcade Expo located?",
    "SerialNumber": "3742",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/History_of_Penny_Arcade_Expo> <http://dbpedia.org/property/venue> ?x . ?x <http://dbpedia.org/property/address> ?uri  . }",
    "entity mapping": [
      {
        "label": "History of Penny Arcade Expo",
        "uri": "http://dbpedia.org/resource/History_of_Penny_Arcade_Expo"
      }
    ],
    "id": "8f2e16d375b7408da4f7f573d9c76b79",
    "predicate mapping": [
      {
        "label": "venue",
        "uri": "http://dbpedia.org/property/venue"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address"
      }
    ]
  },
  {
    "question": "Which European Broadcasting Union's TV show has opening theme as Te Deum ?",
    "SerialNumber": "3743",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/European_Broadcasting_Union> . ?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Te_Deum_(Charpentier)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "European Broadcasting Union",
        "uri": "http://dbpedia.org/resource/European_Broadcasting_Union"
      },
      {
        "label": "Te Deum",
        "uri": "http://dbpedia.org/resource/Te_Deum_(Charpentier)"
      }
    ],
    "id": "fa67ea0509064e84a85b05bc03108e02",
    "predicate mapping": [
      {
        "label": "TV",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which companies makes cars assembled in Karachi, Pakistan?",
    "SerialNumber": "3744",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Karachi> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Karachi",
        "uri": "http://dbpedia.org/resource/Karachi"
      }
    ],
    "id": "4790db09b5954a87831e282bd16265df",
    "predicate mapping": [
      {
        "label": "Pakistan",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/property/parentCompany"
      },
      {
        "label": "Pakistan",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Josef Bhler belongs to which political party?",
    "SerialNumber": "3747",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Josef_Bühler> <http://dbpedia.org/ontology/occupation> ?uri } ",
    "entity mapping": [
      {
        "label": "Josef Bhler",
        "uri": "http://dbpedia.org/resource/Josef_Bühler"
      }
    ],
    "id": "e91a205c78b6436ca52191e1516ec883",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Name the famous employee of open society foundations ?",
    "SerialNumber": "3748",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Open_Society_Foundations>  . }",
    "entity mapping": [
      {
        "label": "open society foundations",
        "uri": "http://dbpedia.org/resource/Open_Society_Foundations"
      }
    ],
    "id": "dc5442f9638d4d3a877e6926914c08db",
    "predicate mapping": [
      {
        "label": "employee",
        "uri": "http://dbpedia.org/property/employer"
      }
    ]
  },
  {
    "question": "What are the death place of the models whose hair color was Red?",
    "SerialNumber": "3751",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Red_hair> . ?x <http://dbpedia.org/property/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model>}",
    "entity mapping": [
      {
        "label": "hair red",
        "uri": "http://dbpedia.org/resource/Red_hair"
      }
    ],
    "id": "ca0e18eaf79141309cd329cbfcbe0c99",
    "predicate mapping": [
      {
        "label": "hair color",
        "uri": "http://dbpedia.org/property/hairColor"
      },
      {
        "label": "death place",
        "uri": "http://dbpedia.org/property/deathPlace"
      },
      {
        "label": "model",
        "uri": "http://dbpedia.org/ontology/Model"
      }
    ]
  },
  {
    "question": "Which company owns GetTV and Hypnotize minds ?",
    "SerialNumber": "3756",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/property/parent> ?uri. <http://dbpedia.org/resource/Hypnotize_Minds> <http://dbpedia.org/property/parent> ?uri . }",
    "entity mapping": [
      {
        "label": "GetTV",
        "uri": "http://dbpedia.org/resource/GetTV"
      },
      {
        "label": "Hypnotize minds",
        "uri": "http://dbpedia.org/resource/Hypnotize_Minds"
      }
    ],
    "id": "3d239bb3a5c14dd59a0f32a7623929e8",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent"
      }
    ]
  },
  {
    "question": "How many subjects are covered in the publications of Doubleday?",
    "SerialNumber": "3757",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Doubleday_(publisher)> . ?x <http://dbpedia.org/ontology/nonFictionSubject> ?uri  . }",
    "entity mapping": [
      {
        "label": "Doubleday",
        "uri": "http://dbpedia.org/resource/Doubleday_(publisher)"
      }
    ],
    "id": "557e9d5fa7a8436e80e24ed1e0e80825",
    "predicate mapping": [
      {
        "label": "publications",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "subjects",
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      }
    ]
  },
  {
    "question": "Miguel de Cervantes wrote the musical extended from which book?",
    "SerialNumber": "3758",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Miguel_de_Cervantes> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "Miguel de Cervantes",
        "uri": "http://dbpedia.org/resource/Miguel_de_Cervantes"
      }
    ],
    "id": "39eeccfe288b4fc78a5dcd44386e7255",
    "predicate mapping": [
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "extended from",
        "uri": "http://dbpedia.org/ontology/basedOn"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "What is the company whose one of the key person is Dennis Muilenburg and produces Boeing CH-47 Chinook ?",
    "SerialNumber": "3765",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Dennis_Muilenburg> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Dennis Muilenburg",
        "uri": "http://dbpedia.org/resource/Dennis_Muilenburg"
      },
      {
        "label": "Boeing CH-47 Chinook",
        "uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook"
      }
    ],
    "id": "6ab4e15a8b7248ebb8cb2c41358e0f2a",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "produces",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the stylistic origin of the music genres where the Bass guitar is important?",
    "SerialNumber": "3767",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
    "entity mapping": [
      {
        "label": "Bass guitar",
        "uri": "http://dbpedia.org/resource/Bass_guitar"
      }
    ],
    "id": "d107d84c4eaf43c4bb51b0825ae31b0c",
    "predicate mapping": [
      {
        "label": "important",
        "uri": "http://dbpedia.org/property/instruments"
      },
      {
        "label": "stylistic origin",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      },
      {
        "label": "music genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre"
      }
    ]
  },
  {
    "question": "Where did the office holder  who is predecessor to Marco Aurelio Robles died ?",
    "SerialNumber": "3770",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/Marco_Aurelio_Robles> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Marco Aurelio Robles",
        "uri": "http://dbpedia.org/resource/Marco_Aurelio_Robles"
      }
    ],
    "id": "bfbf00221cf04ca7b6a2b27c0f0b66d7",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "What are some cartoons distributed by a subsidiary of Time Warner?",
    "SerialNumber": "3775",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Time_Warner> . ?uri <http://dbpedia.org/property/distributor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Cartoon>}",
    "entity mapping": [
      {
        "label": "Time Warner",
        "uri": "http://dbpedia.org/resource/Time_Warner"
      }
    ],
    "id": "841b87f5ad0d4f0397e61ab5f19dfd26",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "cartoon",
        "uri": "http://dbpedia.org/ontology/Cartoon"
      }
    ]
  },
  {
    "question": "Where is the tombstone of Johannes Gerhardus Strijdom?",
    "SerialNumber": "3781",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom> <http://dbpedia.org/property/restingplace> ?uri } ",
    "entity mapping": [
      {
        "label": "Johannes Gerhardus Strijdom",
        "uri": "http://dbpedia.org/resource/Johannes_Gerhardus_Strijdom"
      }
    ],
    "id": "7c5f3af257f34d6fa8ea63202db67648",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/restingplace"
      }
    ]
  },
  {
    "question": "List all important people of the non profit organization which has Hilary Clinton as a key person ?",
    "SerialNumber": "3787",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Hillary_Clinton> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Non-ProfitOrganisation>}",
    "entity mapping": [
      {
        "label": "Hilary Clinton",
        "uri": "http://dbpedia.org/resource/Hillary_Clinton"
      }
    ],
    "id": "8bcda51415224909b0c127abbc00da92",
    "predicate mapping": [
      {
        "label": "people key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "people key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "uri": "http://dbpedia.org/ontology/Non-ProfitOrganisation"
      }
    ]
  },
  {
    "question": "Where did Allama Matthews study?",
    "SerialNumber": "3788",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Allama_Matthews> <http://dbpedia.org/ontology/college> ?uri } ",
    "entity mapping": [
      {
        "label": "Allama Matthews",
        "uri": "http://dbpedia.org/resource/Allama_Matthews"
      }
    ],
    "id": "ab3b3833bcba4004a128604125a5d633",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/college"
      }
    ]
  },
  {
    "question": "Politicians born in Bangalore are now in which parties?",
    "SerialNumber": "3789",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/homeTown> <http://dbpedia.org/resource/Bangalore> . ?x <http://dbpedia.org/ontology/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bangalore",
        "uri": "http://dbpedia.org/resource/Bangalore"
      }
    ],
    "id": "54b17242bd0b451ea66624da5aee1f7e",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/homeTown"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/ontology/party"
      }
    ]
  },
  {
    "question": "What is the nationality of the chancellor who was served by Michael Mayr?",
    "SerialNumber": "3790",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Michael_Mayr> <http://dbpedia.org/ontology/deputy> ?x . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Chancellor>}",
    "entity mapping": [
      {
        "label": "Michael Mayr",
        "uri": "http://dbpedia.org/resource/Michael_Mayr"
      }
    ],
    "id": "002025caf73746c88b16cc4f2bf21525",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/deputy"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "chancellor",
        "uri": "http://dbpedia.org/ontology/Chancellor"
      }
    ]
  },
  {
    "question": "Quebec born ice hockey players have stopped playing for which teams?",
    "SerialNumber": "3792",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Quebec> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
    "entity mapping": [
      {
        "label": "Quebec",
        "uri": "http://dbpedia.org/resource/Quebec"
      }
    ],
    "id": "0cc6db94bbc44a198411909a855a2d2a",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      },
      {
        "label": "ice hockey player",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer"
      }
    ]
  },
  {
    "question": "How many genres gave birth to other genres which emphasize Bass Guitars?",
    "SerialNumber": "3793",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/instruments> <http://dbpedia.org/resource/Bass_guitar> . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
    "entity mapping": [
      {
        "label": "Bass Guitar",
        "uri": "http://dbpedia.org/resource/Bass_guitar"
      }
    ],
    "id": "17ff67b500a04c5193fed5a413a9a9ec",
    "predicate mapping": [
      {
        "label": "emphasize",
        "uri": "http://dbpedia.org/property/instruments"
      },
      {
        "label": "emphasize",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre"
      }
    ]
  },
  {
    "question": "Which info. appliance is manufactured by Asus and is the predecessor of PS 2?",
    "SerialNumber": "3794",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/PlayStation_2> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Asus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/PlayStation_2"
      },
      {
        "label": "Asus",
        "uri": "http://dbpedia.org/resource/Asus"
      }
    ],
    "id": "e5147d9405b647ccba833c959572483d",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Where do employees of Deroit Red Wings live?",
    "SerialNumber": "3795",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/Detroit_Red_Wings> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
    "entity mapping": [
      {
        "label": "Deroit Red Wings",
        "uri": "http://dbpedia.org/resource/Detroit_Red_Wings"
      }
    ],
    "id": "d1d052fa4410465f98e14f968dcd449c",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/employer"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "How many politicians are there from the city of Ganges?",
    "SerialNumber": "3798",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ganges> <http://dbpedia.org/property/city> ?x . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ganges",
        "uri": "http://dbpedia.org/resource/Ganges"
      }
    ],
    "id": "3ea9b079d22b43dcb2ff7969eb24f3cd",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "What genre's softwares are released with a GNU GPL license?",
    "SerialNumber": "3799",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/license> <http://dbpedia.org/resource/GNU_General_Public_License> . ?x <http://dbpedia.org/property/genre> ?uri  . }",
    "entity mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/resource/GNU_General_Public_License"
      }
    ],
    "id": "eb2d086a990849edbedf1e67a5489fc7",
    "predicate mapping": [
      {
        "label": "license",
        "uri": "http://dbpedia.org/property/license"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "How many shows are made by Playtone?",
    "SerialNumber": "3800",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Playtone>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Playtone",
        "uri": "http://dbpedia.org/resource/Playtone"
      }
    ],
    "id": "742fc3c32535483d84f660a50956fc0c",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the monarch of L Buwei ?",
    "SerialNumber": "3801",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Lü_Buwei> <http://dbpedia.org/ontology/monarch> ?uri } ",
    "entity mapping": [
      {
        "label": "buwei l",
        "uri": "http://dbpedia.org/resource/Lü_Buwei"
      }
    ],
    "id": "c3f02e6afc5c4437933fc26320fd4915",
    "predicate mapping": [
      {
        "label": "monarch",
        "uri": "http://dbpedia.org/ontology/monarch"
      }
    ]
  },
  {
    "question": "Which soccer clubs are in the Liga Divisi Utama?",
    "SerialNumber": "3802",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/season> <http://dbpedia.org/resource/Liga_Divisi_Utama> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "Liga Divisi Utama",
        "uri": "http://dbpedia.org/resource/Liga_Divisi_Utama"
      }
    ],
    "id": "e3178cfe799a4542bc1c07f4d8fa0891",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/season"
      },
      {
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "soccer club",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "Who is the distributer of Rev ?",
    "SerialNumber": "3806",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Rev_(drink)> <http://dbpedia.org/property/distributor> ?uri } ",
    "entity mapping": [
      {
        "label": "Rev",
        "uri": "http://dbpedia.org/resource/Rev_(drink)"
      }
    ],
    "id": "83a20f11faf04a29a327446573eef42a",
    "predicate mapping": [
      {
        "label": "distributer",
        "uri": "http://dbpedia.org/property/distributor"
      }
    ]
  },
  {
    "question": "In how many places can I find people who were the architects of the Dundas Castle?",
    "SerialNumber": "3807",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)> <http://dbpedia.org/property/architecture> ?x . ?x <http://dbpedia.org/property/region> ?uri  . }",
    "entity mapping": [
      {
        "label": "Dundas Castle",
        "uri": "http://dbpedia.org/resource/Dundas_Castle_(Roscoe,_New_York)"
      }
    ],
    "id": "7380ef507d0a4475822c823d403e5033",
    "predicate mapping": [
      {
        "label": "architects",
        "uri": "http://dbpedia.org/property/architecture"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/region"
      }
    ]
  },
  {
    "question": "Which TNT show has Christopher Franke as artist?",
    "SerialNumber": "3808",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/artist> <http://dbpedia.org/resource/Christopher_Franke> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Christopher Franke",
        "uri": "http://dbpedia.org/resource/Christopher_Franke"
      },
      {
        "label": "TNT",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)"
      }
    ],
    "id": "0a39dc60f7d4418592e0d1d5426c7c5a",
    "predicate mapping": [
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where did the genres originate which can found in The Mudbloods?",
    "SerialNumber": "3811",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Mudbloods> <http://dbpedia.org/property/genre> ?x . ?x <http://dbpedia.org/ontology/stylisticOrigin> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Mudbloods",
        "uri": "http://dbpedia.org/resource/The_Mudbloods"
      }
    ],
    "id": "7bd1752d4a3843d1b75a99a3c4131114",
    "predicate mapping": [
      {
        "label": "genre",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "found",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      }
    ]
  },
  {
    "question": "From how many works is the musical derived, whose lyrics are written by Sheldon Harnick?",
    "SerialNumber": "3815",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Sheldon_Harnick> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sheldon Harnick",
        "uri": "http://dbpedia.org/resource/Sheldon_Harnick"
      }
    ],
    "id": "0d4bdac144b6458296c5c93ebacb1789",
    "predicate mapping": [
      {
        "label": "lyrics",
        "uri": "http://dbpedia.org/property/lyrics"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/basedOn"
      }
    ]
  },
  {
    "question": "In which fields are pupils of Edouard Chavannes working?",
    "SerialNumber": "3816",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Édouard_Chavannes> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
    "entity mapping": [
      {
        "label": "Edouard Chavannes",
        "uri": "http://dbpedia.org/resource/Édouard_Chavannes"
      }
    ],
    "id": "0b977445d3f142d3a514eb59c55000fd",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "How many politicians live in India?",
    "SerialNumber": "3819",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/India>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "India",
        "uri": "http://dbpedia.org/resource/India"
      }
    ],
    "id": "be045d0165ce481b9924bae470be2f0f",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "In how many places can I find people whose alma mater was in bachelor of arts?",
    "SerialNumber": "3821",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Bachelor_of_Arts> . ?x <http://dbpedia.org/ontology/residence> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "bachelor of arts",
        "uri": "http://dbpedia.org/resource/Bachelor_of_Arts"
      }
    ],
    "id": "24ee24bf221e4289bf99c0ed742a27fe",
    "predicate mapping": [
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "Which maintainer of Cheasty Boulevard South is also the city of Soccer Bowl' 76 ?",
    "SerialNumber": "3822",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Soccer_Bowl_'76> <http://dbpedia.org/ontology/city> ?uri. <http://dbpedia.org/resource/Cheasty_Boulevard_South> <http://dbpedia.org/ontology/maintainedBy> ?uri} ",
    "entity mapping": [
      {
        "label": "soccer",
        "uri": "http://dbpedia.org/resource/Soccer_Bowl_'76"
      },
      {
        "label": "Cheasty Boulevard South",
        "uri": "http://dbpedia.org/resource/Cheasty_Boulevard_South"
      }
    ],
    "id": "6ef5a08456594a85bc7216c671ad1076",
    "predicate mapping": [
      {
        "label": "city",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "maintainer",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      }
    ]
  },
  {
    "question": "What was the stadium of Panionios G.S.S. in 2014-15 season ?",
    "SerialNumber": "3825",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season> <http://dbpedia.org/property/stadium> ?uri } ",
    "entity mapping": [
      {
        "label": "panionios season g.s.s.",
        "uri": "http://dbpedia.org/resource/2014–15_Panionios_G.S.S._season"
      }
    ],
    "id": "e36eb17b3221405197c89bc804df06cb",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/stadium"
      }
    ]
  },
  {
    "question": "Where is the debut team of Shaquil Barrett located?",
    "SerialNumber": "3826",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Shaquil_Barrett> <http://dbpedia.org/property/debutteam> ?x . ?x <http://dbpedia.org/ontology/locationCity> ?uri  . }",
    "entity mapping": [
      {
        "label": "Shaquil Barrett",
        "uri": "http://dbpedia.org/resource/Shaquil_Barrett"
      }
    ],
    "id": "12126746eda842aa8fcca0253a6905bb",
    "predicate mapping": [
      {
        "label": "debut team",
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      }
    ]
  },
  {
    "question": "What are the musicals based on, whose lyricist was Shelon Harnick?",
    "SerialNumber": "3827",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/lyrics> <http://dbpedia.org/resource/Sheldon_Harnick> . ?x <http://dbpedia.org/ontology/basedOn> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Musical>}",
    "entity mapping": [
      {
        "label": "Shelon Harnick",
        "uri": "http://dbpedia.org/resource/Sheldon_Harnick"
      }
    ],
    "id": "55e5eb722be04ed0818176f887603e97",
    "predicate mapping": [
      {
        "label": "lyricist",
        "uri": "http://dbpedia.org/property/lyrics"
      },
      {
        "label": "based on",
        "uri": "http://dbpedia.org/ontology/basedOn"
      },
      {
        "label": "musical",
        "uri": "http://dbpedia.org/ontology/Musical"
      }
    ]
  },
  {
    "question": "Who wrote a rose for emily?",
    "SerialNumber": "3828",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/A_Rose_for_Emily>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "a rose for emily",
        "uri": "http://dbpedia.org/resource/A_Rose_for_Emily"
      }
    ],
    "id": "6aa2c0fad7224aab875e00964e242d8b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Which animator of Tommy Ticker's Tooth is also the director of The Haunted house ?",
    "SerialNumber": "3830",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri. <http://dbpedia.org/resource/The_Haunted_House_(1929_film)> <http://dbpedia.org/ontology/director> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth"
      },
      {
        "label": "The Haunted house",
        "uri": "http://dbpedia.org/resource/The_Haunted_House_(1929_film)"
      }
    ],
    "id": "a7fe79af1995496f9ee76331f0d5ebb5",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator"
      },
      {
        "label": "director",
        "uri": "http://dbpedia.org/ontology/director"
      }
    ]
  },
  {
    "question": "How many games are played at universities affiliated with the Association of Southeast Asian Institutions of Higher Learning?",
    "SerialNumber": "3832",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "Association of Southeast Asian Institutions of Higher Learning",
        "uri": "http://dbpedia.org/resource/Association_of_Southeast_Asian_Institutions_of_Higher_Learning"
      }
    ],
    "id": "de9f7d4ab7234f029fe2a69b1fb26c8e",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "From which country did the Mauritius bank and the national commerce bank emerge?",
    "SerialNumber": "3833",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/National_Commercial_Bank_Mauritius> <http://dbpedia.org/property/locationCountry> ?uri. <http://dbpedia.org/resource/Mauritius_Bank> <http://dbpedia.org/property/locationCountry> ?uri . }",
    "entity mapping": [
      {
        "label": "mauritius national",
        "uri": "http://dbpedia.org/resource/National_Commercial_Bank_Mauritius"
      },
      {
        "label": "Mauritius bank",
        "uri": "http://dbpedia.org/resource/Mauritius_Bank"
      }
    ],
    "id": "1386583d5c3243a7a2eef959681226b1",
    "predicate mapping": [
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/locationCountry"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/locationCountry"
      }
    ]
  },
  {
    "question": "Count the tenants of the stadiums designed by Populous?",
    "SerialNumber": "3836",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Populous_(company)> . ?x <http://dbpedia.org/ontology/tenant> ?uri  . }",
    "entity mapping": [
      {
        "label": "Populous",
        "uri": "http://dbpedia.org/resource/Populous_(company)"
      }
    ],
    "id": "95cbbbabb49c4cf6a010c6ea3c230633",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "Where does the network cofounded by Seewoosagur Ramgoolam air its shows?",
    "SerialNumber": "3837",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Seewoosagur_Ramgoolam> . ?x <http://dbpedia.org/property/broadcastArea> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "entity mapping": [
      {
        "label": "Seewoosagur Ramgoolam",
        "uri": "http://dbpedia.org/resource/Seewoosagur_Ramgoolam"
      }
    ],
    "id": "5e96bbf76e3e40b2a62b009a2c1e48ea",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/property/broadcastArea"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork"
      }
    ]
  },
  {
    "question": "Count the different number of academic areas covered by publications of SAGE?",
    "SerialNumber": "3839",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/publisher> <http://dbpedia.org/resource/SAGE_Publications> . ?x <http://dbpedia.org/ontology/academicDiscipline> ?uri  . }",
    "entity mapping": [
      {
        "label": "publications sage",
        "uri": "http://dbpedia.org/resource/SAGE_Publications"
      }
    ],
    "id": "9ddba4eb7a16400f906e88d1c0390a79",
    "predicate mapping": [
      {
        "label": "SAGE",
        "uri": "http://dbpedia.org/property/publisher"
      },
      {
        "label": "academic area",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      }
    ]
  },
  {
    "question": "Which memeber of South Asia SubRegional Economic cooperation is also the nationality of Aishath saffa ?",
    "SerialNumber": "3840",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation> <http://dbpedia.org/property/membership> ?uri. <http://dbpedia.org/resource/Aishath_Saffa> <http://dbpedia.org/property/nationality> ?uri} ",
    "entity mapping": [
      {
        "label": "South Asia SubRegional Economic cooperation",
        "uri": "http://dbpedia.org/resource/South_Asia_Subregional_Economic_Cooperation"
      },
      {
        "label": "Aishath saffa",
        "uri": "http://dbpedia.org/resource/Aishath_Saffa"
      }
    ],
    "id": "abcce0946b3a4c748fd0c8a9f5cf1030",
    "predicate mapping": [
      {
        "label": "memeber",
        "uri": "http://dbpedia.org/property/membership"
      },
      {
        "label": "nationality",
        "uri": "http://dbpedia.org/property/nationality"
      }
    ]
  },
  {
    "question": "Where did the scientist study whose doctoral thesis was supervised by Leonard Lerman?",
    "SerialNumber": "3844",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Leonard_Lerman> . ?x <http://dbpedia.org/property/almaMater> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Leonard Lerman",
        "uri": "http://dbpedia.org/resource/Leonard_Lerman"
      }
    ],
    "id": "85bb3f36d96d48e4aa43e98a78de40a0",
    "predicate mapping": [
      {
        "label": "doctoral",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "supervised",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What is the country of origin of the president of Skai group?",
    "SerialNumber": "3853",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Skai_Group> <http://dbpedia.org/ontology/keyPerson> ?x . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . }",
    "entity mapping": [
      {
        "label": "Skai group",
        "uri": "http://dbpedia.org/resource/Skai_Group"
      }
    ],
    "id": "d36b821cc4c947d19cf3ec17ad87e9c2",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Name the movies distributed by Cinema International Corporation and edited by Hulian Doyle ?",
    "SerialNumber": "3856",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> . ?uri <http://dbpedia.org/property/editing> <http://dbpedia.org/resource/Julian_Doyle_(filmmaker)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Cinema International Corporation",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation"
      },
      {
        "label": "doyle",
        "uri": "http://dbpedia.org/resource/Julian_Doyle_(filmmaker)"
      }
    ],
    "id": "9a8d8cab24774d4eb9fe49d063f80906",
    "predicate mapping": [
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "edited by",
        "uri": "http://dbpedia.org/property/editing"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What is the common relegion of Miao people  and the country where Guru Purnima is celebrated ?",
    "SerialNumber": "3860",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Miao_people> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Guru_Purnima> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Miao people",
        "uri": "http://dbpedia.org/resource/Miao_people"
      },
      {
        "label": "Guru Purnima",
        "uri": "http://dbpedia.org/resource/Guru_Purnima"
      }
    ],
    "id": "629e52550fd146e191ec02ae20114735",
    "predicate mapping": [
      {
        "label": "celebrated",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Where did the relatives of Gustavo Rojas Pinilla study?",
    "SerialNumber": "3861",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Gustavo_Rojas_Pinilla> . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Gustavo Rojas Pinilla",
        "uri": "http://dbpedia.org/resource/Gustavo_Rojas_Pinilla"
      }
    ],
    "id": "bd4cb94b69084d79b0d1feb1fc8b014d",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "Is the song Killing is Out, School is in belong in the The Next Step?",
    "SerialNumber": "3863",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)> }",
    "entity mapping": [
      {
        "label": "Killing is Out, School is in",
        "uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In"
      },
      {
        "label": "The Next Step",
        "uri": "http://dbpedia.org/resource/The_Next_Step_(James_Brown_album)"
      }
    ],
    "id": "c19fedddfc0041919699b9a01eb5cbd1",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/property/album"
      }
    ]
  },
  {
    "question": "What are some dishes from the family of dishes which primarily use flour?",
    "SerialNumber": "3864",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/mainIngredient> <http://dbpedia.org/resource/Flour> . ?uri <http://dbpedia.org/ontology/type> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Food>}",
    "entity mapping": [
      {
        "label": "flour",
        "uri": "http://dbpedia.org/resource/Flour"
      }
    ],
    "id": "5916bbcd6e894955885d10526c5bd306",
    "predicate mapping": [
      {
        "label": "primarily",
        "uri": "http://dbpedia.org/property/mainIngredient"
      },
      {
        "label": "primarily",
        "uri": "http://dbpedia.org/ontology/type"
      },
      {
        "label": "primarily",
        "uri": "http://dbpedia.org/ontology/Food"
      }
    ]
  },
  {
    "question": "Who is the author of Heroman is also the author of Karakuri Dji Ultimo ?",
    "SerialNumber": "3865",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Heroman> <http://dbpedia.org/property/author> ?uri. <http://dbpedia.org/resource/Karakuri_Dôji_Ultimo> <http://dbpedia.org/ontology/author> ?uri} ",
    "entity mapping": [
      {
        "label": "Heroman",
        "uri": "http://dbpedia.org/resource/Heroman"
      },
      {
        "label": "karakuri ultimo",
        "uri": "http://dbpedia.org/resource/Karakuri_Dôji_Ultimo"
      }
    ],
    "id": "7788c912b6fb4457b27be58ee6f63052",
    "predicate mapping": [
      {
        "label": "author",
        "uri": "http://dbpedia.org/property/author"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "Was Blade Runner cinematographed by JordanCronenweth?",
    "SerialNumber": "3868",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Blade_Runner> <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/Jordan_Cronenweth> }",
    "entity mapping": [
      {
        "label": "Blade Runner",
        "uri": "http://dbpedia.org/resource/Blade_Runner"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Jordan_Cronenweth"
      }
    ],
    "id": "4b3b5256bbe842d685027d2c18454d38",
    "predicate mapping": [
      {
        "label": "cinematographed",
        "uri": "http://dbpedia.org/ontology/cinematography"
      }
    ]
  },
  {
    "question": "Count the number of software which runs on Microsoft Windows and mac OS ?",
    "SerialNumber": "3870",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS>} ",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      },
      {
        "label": "mac OS",
        "uri": "http://dbpedia.org/resource/Mac_OS"
      }
    ],
    "id": "ff4d3c67a6884976a4f27a81882a97cd",
    "predicate mapping": [
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "runs",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      }
    ]
  },
  {
    "question": "What has Carl Sagan written his books about?",
    "SerialNumber": "3871",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Carl_Sagan> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Carl Sagan",
        "uri": "http://dbpedia.org/resource/Carl_Sagan"
      }
    ],
    "id": "68843601f12e4f76a157d8e77cdd18b0",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/subject"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "How many characters are there in The Office?",
    "SerialNumber": "3872",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/The_Office_(U.S._TV_series)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "The Office",
        "uri": "http://dbpedia.org/resource/The_Office_(U.S._TV_series)"
      }
    ],
    "id": "af581de0b01f4908a95d361a6416a13c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "characters",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What are some TV shows similar to the one produced by Susie Liggat?",
    "SerialNumber": "3876",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Susie_Liggat> . ?uri <http://dbpedia.org/ontology/related> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Susie Liggat",
        "uri": "http://dbpedia.org/resource/Susie_Liggat"
      }
    ],
    "id": "8b2570a474e64d91bdf32a893692ac55",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How did the child of Stevens T. Mason die?",
    "SerialNumber": "3877",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)> <http://dbpedia.org/ontology/child> ?x . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "Stevens T. Mason",
        "uri": "http://dbpedia.org/resource/Stevens_Thomson_Mason_(Virginia)"
      }
    ],
    "id": "f18825b526744c29b18f7b0a6dc10b80",
    "predicate mapping": [
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "Which soccer players are currently playing for NYC FC?",
    "SerialNumber": "3879",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/New_York_City_FC>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerPlayer>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/New_York_City_FC"
      }
    ],
    "id": "3624137271954fb984aa700614ac0115",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub"
      },
      {
        "label": "soccer player",
        "uri": "http://dbpedia.org/ontology/SoccerPlayer"
      }
    ]
  },
  {
    "question": "How many things are located in Ridgewood, New Jersey?",
    "SerialNumber": "3881",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/birthPlace> <http://dbpedia.org/resource/Ridgewood,_New_Jersey>  . }",
    "entity mapping": [
      {
        "label": "Ridgewood, New Jersey",
        "uri": "http://dbpedia.org/resource/Ridgewood,_New_Jersey"
      }
    ],
    "id": "ff0272acb02c43028e695cdae056b647",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Which television show's company is Paramount Television and is located in Boston?",
    "SerialNumber": "3886",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Boston>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "uri": "http://dbpedia.org/resource/Paramount_Television"
      },
      {
        "label": "Boston",
        "uri": "http://dbpedia.org/resource/Boston"
      }
    ],
    "id": "a9bd73968852449abc9875ea0e72a3f9",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where was the trainer of Java Gold born?",
    "SerialNumber": "3890",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Java_Gold> <http://dbpedia.org/property/trainer> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Java Gold",
        "uri": "http://dbpedia.org/resource/Java_Gold"
      }
    ],
    "id": "f67831f30b7c4fcdb7f825ca4a09c5cf",
    "predicate mapping": [
      {
        "label": "trainer",
        "uri": "http://dbpedia.org/property/trainer"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Is the Vadodara railway junction onwed by Indian Railway Ministry?",
    "SerialNumber": "3891",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Vadodara_Junction_railway_station> <http://dbpedia.org/ontology/owningOrganisation> <http://dbpedia.org/resource/Ministry_of_Railways_(India)> }",
    "entity mapping": [
      {
        "label": "vadodara junction railway",
        "uri": "http://dbpedia.org/resource/Vadodara_Junction_railway_station"
      },
      {
        "label": "ministry railway",
        "uri": "http://dbpedia.org/resource/Ministry_of_Railways_(India)"
      }
    ],
    "id": "5545373a672f44b68c675c0fa2a9b8ac",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      }
    ]
  },
  {
    "question": "Race horses whose grandsire is Wild  Risk have taken part in which races?",
    "SerialNumber": "3895",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/grandsire> <http://dbpedia.org/resource/Wild_Risk> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RaceHorse>}",
    "entity mapping": [
      {
        "label": "wild risk",
        "uri": "http://dbpedia.org/resource/Wild_Risk"
      }
    ],
    "id": "06363edf0f81486685ac0173e6b02850",
    "predicate mapping": [
      {
        "label": "grandsire",
        "uri": "http://dbpedia.org/ontology/grandsire"
      },
      {
        "label": "Race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "Race horse",
        "uri": "http://dbpedia.org/ontology/RaceHorse"
      }
    ]
  },
  {
    "question": "Where is the T.I. Ahmadiyya Girls Senior High School?",
    "SerialNumber": "3897",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore> <http://dbpedia.org/ontology/denomination> ?uri } ",
    "entity mapping": [
      {
        "label": "T.I. Ahmadiyya Girls Senior High School",
        "uri": "http://dbpedia.org/resource/T.I._Ahmadiyya_Girls_Senior_High_School,_Asokore"
      }
    ],
    "id": "4b468d8b196546ddaa7555d1afa4c1c3",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/denomination"
      }
    ]
  },
  {
    "question": "How many information appliance are manufactured by companies located in Taiwan?",
    "SerialNumber": "3898",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/locationCity> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/InformationAppliance>}",
    "entity mapping": [
      {
        "label": "Taiwan",
        "uri": "http://dbpedia.org/resource/Taiwan"
      }
    ],
    "id": "1fe3b3d58f8e432d9b1f3b09d5f74c6f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/locationCity"
      },
      {
        "label": "manufactured by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "information appliance",
        "uri": "http://dbpedia.org/ontology/InformationAppliance"
      }
    ]
  },
  {
    "question": "Into what military organizations is the United States Department of Defense divided?",
    "SerialNumber": "3903",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/commandStructure> <http://dbpedia.org/resource/United_States_Department_of_Defense> } ",
    "entity mapping": [
      {
        "label": "United States Department of Defense",
        "uri": "http://dbpedia.org/resource/United_States_Department_of_Defense"
      }
    ],
    "id": "7bf4c6d437c849c79fbda07a1c39272a",
    "predicate mapping": [
      {
        "label": "divided",
        "uri": "http://dbpedia.org/ontology/commandStructure"
      }
    ]
  },
  {
    "question": "Name all sitcoms whose theme music is made by Miley Cyrus?",
    "SerialNumber": "3906",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Miley_Cyrus> . ?uri <http://dbpedia.org/ontology/openingTheme> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Miley Cyrus",
        "uri": "http://dbpedia.org/resource/Miley_Cyrus"
      }
    ],
    "id": "6f6810ed49a548939905cf6abbe9bccf",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      },
      {
        "label": "theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Does the Toyota Verossa have the front engine design platform?",
    "SerialNumber": "3907",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Toyota_Verossa> <http://dbpedia.org/ontology/automobilePlatform> <http://dbpedia.org/resource/Front-engine_design>  . }",
    "entity mapping": [
      {
        "label": "Toyota Verossa",
        "uri": "http://dbpedia.org/resource/Toyota_Verossa"
      },
      {
        "label": "engine design front",
        "uri": "http://dbpedia.org/resource/Front-engine_design"
      }
    ],
    "id": "af1ad3ef33784711bf9ecd13301e524d",
    "predicate mapping": [
      {
        "label": "platform",
        "uri": "http://dbpedia.org/ontology/automobilePlatform"
      }
    ]
  },
  {
    "question": "Was Neil Armstrong on the Gemini 8 mission?",
    "SerialNumber": "3911",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neil_Armstrong> <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> }",
    "entity mapping": [
      {
        "label": "Neil Armstrong",
        "uri": "http://dbpedia.org/resource/Neil_Armstrong"
      },
      {
        "label": "Gemini 8",
        "uri": "http://dbpedia.org/resource/Gemini_8"
      }
    ],
    "id": "6ac8c31d60b54b13b8e5241fd7e4b741",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      }
    ]
  },
  {
    "question": "Name the sitcom with theme music composer as Julian Gingell and channel as Fox Broadcasting Company?",
    "SerialNumber": "3913",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/ontology/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Julian Gingell",
        "uri": "http://dbpedia.org/resource/Julian_Gingell"
      },
      {
        "label": "Fox Broadcasting Company",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      }
    ],
    "id": "710a55e3696846ab95695ee383a1fa25",
    "predicate mapping": [
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "channel",
        "uri": "http://dbpedia.org/ontology/channel"
      },
      {
        "label": "sitcom",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which nationalist group was responsible for foundation of Young Lords?",
    "SerialNumber": "3914",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Lords> <http://dbpedia.org/property/international> ?uri } ",
    "entity mapping": [
      {
        "label": "Young Lords",
        "uri": "http://dbpedia.org/resource/Young_Lords"
      }
    ],
    "id": "2c6bf82629164b92ae31c438f24e169e",
    "predicate mapping": [
      {
        "label": "foundation",
        "uri": "http://dbpedia.org/property/international"
      }
    ]
  },
  {
    "question": "Give me all the alma mater of the relatives of Samuek Moreno Rojas ?",
    "SerialNumber": "3918",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Samuel_Moreno_Rojas> <http://dbpedia.org/ontology/relation> ?x . ?x <http://dbpedia.org/property/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "Samuek Moreno Rojas",
        "uri": "http://dbpedia.org/resource/Samuel_Moreno_Rojas"
      }
    ],
    "id": "261be9eb5d11448d9fc941edd2cf2524",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "Where does Truman McGill Hobbs, United States District Judge live?",
    "SerialNumber": "3920",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Truman_McGill_Hobbs> <http://dbpedia.org/property/residence> ?uri } ",
    "entity mapping": [
      {
        "label": "Truman McGill Hobbs",
        "uri": "http://dbpedia.org/resource/Truman_McGill_Hobbs"
      }
    ],
    "id": "e7c2c4d667f343a58a587ef74bcc6bff",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/property/residence"
      }
    ]
  },
  {
    "question": "Name the television program voiced by Isaac Hayes and aired on Comedy Central?",
    "SerialNumber": "3922",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/voices> <http://dbpedia.org/resource/Isaac_Hayes> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Isaac Hayes",
        "uri": "http://dbpedia.org/resource/Isaac_Hayes"
      },
      {
        "label": "Comedy Central",
        "uri": "http://dbpedia.org/resource/Comedy_Central"
      }
    ],
    "id": "6c1c0ca2a98141f3a9687634493adc68",
    "predicate mapping": [
      {
        "label": "voiced",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "aired",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which company manufactures cars like the Opel Karl ?",
    "SerialNumber": "3923",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/related> <http://dbpedia.org/resource/Opel_Karl> . ?x <http://dbpedia.org/property/parentCompany> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Opel Karl",
        "uri": "http://dbpedia.org/resource/Opel_Karl"
      }
    ],
    "id": "9147a259a1bf43e0bdad21cf341abc26",
    "predicate mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/property/parentCompany"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "How many people have fought wars where Arthur St. Clair was a commander?",
    "SerialNumber": "3924",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Arthur_St._Clair> . ?x <http://dbpedia.org/property/combatant> ?uri  . }",
    "entity mapping": [
      {
        "label": "Arthur St. Clair",
        "uri": "http://dbpedia.org/resource/Arthur_St._Clair"
      }
    ],
    "id": "2aaac4193bd2408399d5d3c8640c90ec",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "wars",
        "uri": "http://dbpedia.org/property/combatant"
      }
    ]
  },
  {
    "question": "Name the mammals which are primate and belongs to family of ape ?",
    "SerialNumber": "3925",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Primate> . ?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "primate",
        "uri": "http://dbpedia.org/resource/Primate"
      },
      {
        "label": "ape",
        "uri": "http://dbpedia.org/resource/Ape"
      }
    ],
    "id": "8a5c47c1f5544bed9201bf2e6d45ba64",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "What are some parties which have people from Mangalore as a member?",
    "SerialNumber": "3926",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Mangalore> . ?x <http://dbpedia.org/property/party> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mangalore",
        "uri": "http://dbpedia.org/resource/Mangalore"
      }
    ],
    "id": "adabfc9d8bab4686b6e3fc7b97893c7b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "parties",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "In which areas can I find wine made of Vitis vinifera grapes?",
    "SerialNumber": "3930",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/species> <http://dbpedia.org/resource/Vitis_vinifera> . ?x <http://dbpedia.org/ontology/wineRegion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Grape>}",
    "entity mapping": [
      {
        "label": "Vitis vinifera",
        "uri": "http://dbpedia.org/resource/Vitis_vinifera"
      }
    ],
    "id": "3230a08d90af4614ae2510d4feb9382f",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/species"
      },
      {
        "label": "wine",
        "uri": "http://dbpedia.org/ontology/wineRegion"
      },
      {
        "label": "grape",
        "uri": "http://dbpedia.org/ontology/Grape"
      }
    ]
  },
  {
    "question": "In how many different teams have all those who have played as a defenceman been?",
    "SerialNumber": "3931",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "defenceman",
        "uri": "http://dbpedia.org/resource/Defenceman"
      }
    ],
    "id": "0d511229c1004f4b8405d2c90496fd03",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Who was buried at St. Mary's Church and fought the battle of  Benedict Arnold's expedition to Quebec ?",
    "SerialNumber": "3936",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Benedict_Arnold's_expedition_to_Quebec> . ?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/St_Mary's_Church,_Battersea>  . }",
    "entity mapping": [
      {
        "label": "Benedict Arnold's expedition to Quebec",
        "uri": "http://dbpedia.org/resource/Benedict_Arnold's_expedition_to_Quebec"
      },
      {
        "label": "mary's church",
        "uri": "http://dbpedia.org/resource/St_Mary's_Church,_Battersea"
      }
    ],
    "id": "84e3b4c63caa4cc6a76221a3f87025f4",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "uri": "http://dbpedia.org/property/placeofburial"
      }
    ]
  },
  {
    "question": "How many companies have developed cross platformed softwares?",
    "SerialNumber": "3937",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operatingSystem> <http://dbpedia.org/resource/Cross-platform> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Cross-platform"
      }
    ],
    "id": "3115a0dfde724a49a564f755192dd1ab",
    "predicate mapping": [
      {
        "label": "softwares",
        "uri": "http://dbpedia.org/property/operatingSystem"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "How many cars are the predecessor of cars similar to the Pontiac G8?",
    "SerialNumber": "3938",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Pontiac_G8> <http://dbpedia.org/ontology/relatedMeanOfTransportation> ?x . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Pontiac G8",
        "uri": "http://dbpedia.org/resource/Pontiac_G8"
      }
    ],
    "id": "36c9a6650fdd4fadb4be1d77eabc6198",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation"
      },
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "What are some famous artists who rocked a Les Paul?",
    "SerialNumber": "3940",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Les Paul",
        "uri": "http://dbpedia.org/resource/Gibson_Les_Paul"
      }
    ],
    "id": "ede3db931b55452880393aec59f27131",
    "predicate mapping": [
      {
        "label": "rocked",
        "uri": "http://dbpedia.org/property/notableInstruments"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Whichi office of Walter Evnas Edge is also the part of Atlantic seaboard fall lines ?",
    "SerialNumber": "3941",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Atlantic_Seaboard_fall_line> <http://dbpedia.org/ontology/part> ?uri. <http://dbpedia.org/resource/Walter_Evans_Edge> <http://dbpedia.org/property/office> ?uri} ",
    "entity mapping": [
      {
        "label": "Atlantic seaboard fall line",
        "uri": "http://dbpedia.org/resource/Atlantic_Seaboard_fall_line"
      },
      {
        "label": "walter edge",
        "uri": "http://dbpedia.org/resource/Walter_Evans_Edge"
      }
    ],
    "id": "2f376df9dd00440698f42178c7677b57",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/part"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/office"
      }
    ]
  },
  {
    "question": "Which new Mexico based company produces Surface ?",
    "SerialNumber": "3942",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_Mexico> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "new Mexico",
        "uri": "http://dbpedia.org/resource/New_Mexico"
      },
      {
        "label": "surface",
        "uri": "http://dbpedia.org/resource/Microsoft_Surface"
      }
    ],
    "id": "77345fdf42cd4d2f8474d7eccb309bd9",
    "predicate mapping": [
      {
        "label": "Surface",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "Surface",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the casting of the movie directed by Justin Zackham ?",
    "SerialNumber": "3943",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Justin_Zackham> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Justin Zackham",
        "uri": "http://dbpedia.org/resource/Justin_Zackham"
      }
    ],
    "id": "af5b6ee8ccc1462dabeac10e39245823",
    "predicate mapping": [
      {
        "label": "directed by",
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "casting",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "How many different organizations own the railway lines which are a part of Norfolk Southern Railway?",
    "SerialNumber": "3946",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Norfolk_Southern_Railway> . ?x <http://dbpedia.org/property/owner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Norfolk Southern Railway",
        "uri": "http://dbpedia.org/resource/Norfolk_Southern_Railway"
      }
    ],
    "id": "09ea36c583254aaab5a74fa304945343",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/property/system"
      },
      {
        "label": "own",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "What are the party of the politicians whose deputy was Chaudhary Devi Lal?",
    "SerialNumber": "3948",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/deputy> <http://dbpedia.org/resource/Chaudhary_Devi_Lal> . ?x <http://dbpedia.org/ontology/otherParty> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Chaudhary Devi Lal",
        "uri": "http://dbpedia.org/resource/Chaudhary_Devi_Lal"
      }
    ],
    "id": "564815b5f32d4020a3d65768cc5404c5",
    "predicate mapping": [
      {
        "label": "deputy",
        "uri": "http://dbpedia.org/property/deputy"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/otherParty"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Who composed the episode after which came Butter's Very own Episode?",
    "SerialNumber": "3953",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Butters'_Very_Own_Episode> . ?x <http://dbpedia.org/ontology/musicComposer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionEpisode>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Butters'_Very_Own_Episode"
      }
    ],
    "id": "d9e490fde9154a129b189fd66c1a8223",
    "predicate mapping": [
      {
        "label": "Episode",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "episode",
        "uri": "http://dbpedia.org/ontology/TelevisionEpisode"
      }
    ]
  },
  {
    "question": "What are some wars fought when Chung Il Kwon as the country's prime minister?",
    "SerialNumber": "3954",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/primeminister> <http://dbpedia.org/resource/Chung_Il-kwon> . ?uri <http://dbpedia.org/ontology/commander> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Chung Il Kwon",
        "uri": "http://dbpedia.org/resource/Chung_Il-kwon"
      }
    ],
    "id": "ee5255e0079449ae9103f3cf1c059fbd",
    "predicate mapping": [
      {
        "label": "minister prime",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "minister",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "minister",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "List down all the baseball teams whose team manager was a Catcher?",
    "SerialNumber": "3955",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Catcher> . ?uri <http://dbpedia.org/ontology/manager> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "entity mapping": [
      {
        "label": "Catcher",
        "uri": "http://dbpedia.org/resource/Catcher"
      }
    ],
    "id": "0be0815b6d7946da97888b0cc3bf85c0",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/position"
      },
      {
        "label": "team manager",
        "uri": "http://dbpedia.org/ontology/manager"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam"
      }
    ]
  },
  {
    "question": "Which founding cities of Young Americans Bank is also the location of Denver Broncos ?",
    "SerialNumber": "3960",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Young_Americans_Bank> <http://dbpedia.org/property/foundation> ?uri. <http://dbpedia.org/resource/Denver_Broncos> <http://dbpedia.org/ontology/locationCity> ?uri} ",
    "entity mapping": [
      {
        "label": "Young Americans Bank",
        "uri": "http://dbpedia.org/resource/Young_Americans_Bank"
      },
      {
        "label": "Denver Broncos",
        "uri": "http://dbpedia.org/resource/Denver_Broncos"
      }
    ],
    "id": "ea51be89c95a4b4d91b32d48835ded65",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/locationCity"
      }
    ]
  },
  {
    "question": "What is the college of Malik Ausean which is also the college of Kyle Fuller ?",
    "SerialNumber": "3961",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malik_Ausean_Evans> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Kyle_Fuller_(basketball)> <http://dbpedia.org/property/college> ?uri} ",
    "entity mapping": [
      {
        "label": "ausean malik",
        "uri": "http://dbpedia.org/resource/Malik_Ausean_Evans"
      },
      {
        "label": "Kyle Fuller",
        "uri": "http://dbpedia.org/resource/Kyle_Fuller_(basketball)"
      }
    ],
    "id": "edd475c6742c46fab9cff4f03715fdc2",
    "predicate mapping": [
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/property/college"
      }
    ]
  },
  {
    "question": "How many people have worked for teams chaired by Patricia Amorim?",
    "SerialNumber": "3963",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/chairman> <http://dbpedia.org/resource/Patrícia_Amorim> . ?x <http://dbpedia.org/property/name> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Patricia Amorim",
        "uri": "http://dbpedia.org/resource/Patrícia_Amorim"
      }
    ],
    "id": "2ca97f86a97a48c6884ef73475245fd2",
    "predicate mapping": [
      {
        "label": "chaired",
        "uri": "http://dbpedia.org/ontology/chairman"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who designed the stadiums which have been rented by Oakland athletics?",
    "SerialNumber": "3965",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?x <http://dbpedia.org/property/architect> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "Oakland athletics",
        "uri": "http://dbpedia.org/resource/Oakland_Athletics"
      }
    ],
    "id": "4fdfe129a9b94ef396a19e5882da3915",
    "predicate mapping": [
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "rented",
        "uri": "http://dbpedia.org/property/architect"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Which team did Michael and Ryan Powell play for?",
    "SerialNumber": "3966",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Ryan_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri . }",
    "entity mapping": [
      {
        "label": "michael powell",
        "uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)"
      },
      {
        "label": "Ryan Powell",
        "uri": "http://dbpedia.org/resource/Ryan_Powell_(lacrosse)"
      }
    ],
    "id": "92f13c33f9394efe8c790385a7e907f6",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "How many different people have been in any political seat in places which are under the Indian Standard timezone?",
    "SerialNumber": "3967",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/timeZone> <http://dbpedia.org/resource/Indian_Standard_Time> . ?x <http://dbpedia.org/ontology/leaderName> ?uri  . }",
    "entity mapping": [
      {
        "label": "Indian Standard time",
        "uri": "http://dbpedia.org/resource/Indian_Standard_Time"
      }
    ],
    "id": "b890d5585137439888d5cb80a9160f6c",
    "predicate mapping": [
      {
        "label": "timezone",
        "uri": "http://dbpedia.org/ontology/timeZone"
      },
      {
        "label": "zone",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "Which broadcast area of CFRX is also the palce of birth of Anthony Raymond ?",
    "SerialNumber": "3970",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/Anthony_Raymond_Ceresko> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "CFRX",
        "uri": "http://dbpedia.org/resource/CFRX"
      },
      {
        "label": "raymond anthony",
        "uri": "http://dbpedia.org/resource/Anthony_Raymond_Ceresko"
      }
    ],
    "id": "7b6793a8d8a24f5da233b3f76475f5f9",
    "predicate mapping": [
      {
        "label": "broadcast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      },
      {
        "label": "birth",
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "Bridges over which rivers are made of Wrought Iron?",
    "SerialNumber": "3971",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Wrought_iron> . ?x <http://dbpedia.org/ontology/river> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Wrought Iron",
        "uri": "http://dbpedia.org/resource/Wrought_iron"
      }
    ],
    "id": "a3c5a2eed28d4fce829b32d43b36eedc",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/material"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/river"
      },
      {
        "label": "Bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Count the different genres of music made by Argentinian bands?",
    "SerialNumber": "3974",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Argentina> . ?x <http://dbpedia.org/ontology/genre> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicGenre>}",
    "entity mapping": [
      {
        "label": "Argentini",
        "uri": "http://dbpedia.org/resource/Argentina"
      }
    ],
    "id": "b60070566739496cbb32be93d3aa6d21",
    "predicate mapping": [
      {
        "label": "bands",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/genre"
      },
      {
        "label": "genre",
        "uri": "http://dbpedia.org/ontology/MusicGenre"
      }
    ]
  },
  {
    "question": "For how many PMs did the politician work, whose successor was Kingsley Wood?",
    "SerialNumber": "3975",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Kingsley_Wood> <http://dbpedia.org/ontology/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Kingsley Wood",
        "uri": "http://dbpedia.org/resource/Kingsley_Wood"
      }
    ],
    "id": "295ec11bef8e4bf380b41c35e2142bfa",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/property/primeminister"
      },
      {
        "label": "politician",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "How many head of agencies were there in Nazi Germany?",
    "SerialNumber": "3977",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/jurisdiction> <http://dbpedia.org/resource/Nazi_Germany> . ?x <http://dbpedia.org/ontology/leader> ?uri  . }",
    "entity mapping": [
      {
        "label": "Nazi Germany",
        "uri": "http://dbpedia.org/resource/Nazi_Germany"
      }
    ],
    "id": "76611f72d25b4984b1511e6309e78e68",
    "predicate mapping": [
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/jurisdiction"
      },
      {
        "label": "agencies",
        "uri": "http://dbpedia.org/ontology/leader"
      }
    ]
  },
  {
    "question": "Which nickname of Lyons Township JHigh school is also the mascot of Galatasaray Handball Team ?",
    "SerialNumber": "3978",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galatasaray_Handball_Team> <http://dbpedia.org/property/mascot> ?uri. <http://dbpedia.org/resource/Lyons_Township_High_School> <http://dbpedia.org/property/nickname> ?uri} ",
    "entity mapping": [
      {
        "label": "Galatasaray Handball Team",
        "uri": "http://dbpedia.org/resource/Galatasaray_Handball_Team"
      },
      {
        "label": "township school",
        "uri": "http://dbpedia.org/resource/Lyons_Township_High_School"
      }
    ],
    "id": "4a5f5dcc47134e9d84939b7e3118a114",
    "predicate mapping": [
      {
        "label": "mascot",
        "uri": "http://dbpedia.org/property/mascot"
      },
      {
        "label": "nickname",
        "uri": "http://dbpedia.org/property/nickname"
      }
    ]
  },
  {
    "question": "Was Love Hurts in Short Cut Draw Blood?",
    "SerialNumber": "3982",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Love_Hurts> <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Short_Cut_Draw_Blood> }",
    "entity mapping": [
      {
        "label": "Love Hurts",
        "uri": "http://dbpedia.org/resource/Love_Hurts"
      },
      {
        "label": "Short Cut Draw Blood",
        "uri": "http://dbpedia.org/resource/Short_Cut_Draw_Blood"
      }
    ],
    "id": "4d4161d0fcd14e16adcc00f8793191bc",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/album"
      }
    ]
  },
  {
    "question": "What islands are there on the Greater Antilles archipelago?",
    "SerialNumber": "3983",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/Greater_Antilles> . ?x <http://dbpedia.org/property/name> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Island>}",
    "entity mapping": [
      {
        "label": "Greater Antilles",
        "uri": "http://dbpedia.org/resource/Greater_Antilles"
      }
    ],
    "id": "b2c4a68e8a9948a0b430733a99af03b7",
    "predicate mapping": [
      {
        "label": "archipelago",
        "uri": "http://dbpedia.org/property/archipelago"
      },
      {
        "uri": "http://dbpedia.org/property/name"
      },
      {
        "label": "island",
        "uri": "http://dbpedia.org/ontology/Island"
      }
    ]
  },
  {
    "question": "Which Tv series led to Frasier?",
    "SerialNumber": "3986",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Frasier",
        "uri": "http://dbpedia.org/resource/Frasier"
      }
    ],
    "id": "24323c55c5084725bbdb07997dfec006",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Count the number of people became famous for when Andrew Jackson was a commander ?",
    "SerialNumber": "3987",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Andrew_Jackson> . ?uri <http://dbpedia.org/ontology/knownFor> ?x  . }",
    "entity mapping": [
      {
        "label": "Andrew Jackson",
        "uri": "http://dbpedia.org/resource/Andrew_Jackson"
      }
    ],
    "id": "3d6bf4caec37493199f249d4af63860c",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Count the writers whose work has been played in NY?",
    "SerialNumber": "3988",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/New_York> . ?x <http://dbpedia.org/property/writer> ?uri  . }",
    "entity mapping": [
      {
        "label": "NY",
        "uri": "http://dbpedia.org/resource/New_York"
      }
    ],
    "id": "2e7ea1d1a22640afb763ba50120b3917",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "Which rivers flow into the lower manhatten?",
    "SerialNumber": "3990",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Lower_Manhattan> } ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Lower_Manhattan"
      }
    ],
    "id": "6da0886adf5c4684b48c56ce0fd54b69",
    "predicate mapping": [
      {
        "label": "lower",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      }
    ]
  },
  {
    "question": "Does Walson Augustin play as a midfielder?",
    "SerialNumber": "3993",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walson_Augustin> <http://dbpedia.org/ontology/position> <http://dbpedia.org/resource/Midfielder> }",
    "entity mapping": [
      {
        "label": "Walson Augustin",
        "uri": "http://dbpedia.org/resource/Walson_Augustin"
      },
      {
        "label": "midfielder",
        "uri": "http://dbpedia.org/resource/Midfielder"
      }
    ],
    "id": "3c09aa3e2b3849638009db8e6cb205ea",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/position"
      }
    ]
  },
  {
    "question": "What are the airline hubs of Cascade Airways?",
    "SerialNumber": "3994",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Union_of_Cambodian_Democrats> <http://dbpedia.org/ontology/ideology> ?uri } ",
    "entity mapping": [
      {
        "label": "Cascade Airways",
        "uri": "http://dbpedia.org/resource/Union_of_Cambodian_Democrats"
      }
    ],
    "id": "e6fda0418bd341adb1e7444c4d8d5d19",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/ontology/ideology"
      }
    ]
  },
  {
    "question": "How many movies have their music signed up with Sony Music Entertainment.",
    "SerialNumber": "3999",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/ontology/musicComposer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Sony Music Entertainment",
        "uri": "http://dbpedia.org/resource/Sony_Music_Entertainment"
      }
    ],
    "id": "80de2acb61b74b10b7a95a24dc32f5dc",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/musicComposer"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What are some devices whose manufacturers are in taiwan?",
    "SerialNumber": "4007",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/locationCountry> <http://dbpedia.org/resource/Taiwan> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Device>}",
    "entity mapping": [
      {
        "label": "taiwan",
        "uri": "http://dbpedia.org/resource/Taiwan"
      }
    ],
    "id": "5f43897b70a74a828e834f53ae65fb95",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/locationCountry"
      },
      {
        "label": "manufacturer",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "device",
        "uri": "http://dbpedia.org/ontology/Device"
      }
    ]
  },
  {
    "question": "People in the royal Thai army follow which religion?",
    "SerialNumber": "4008",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "royal Thai army",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army"
      }
    ],
    "id": "018ff49cdfa0414f8e55961b5a7022b1",
    "predicate mapping": [
      {
        "label": "follow",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "follow",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "was james watt a mechanical engineer?",
    "SerialNumber": "4009",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/James_Watt> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Mechanical_engineering> }",
    "entity mapping": [
      {
        "label": "james watt",
        "uri": "http://dbpedia.org/resource/James_Watt"
      },
      {
        "label": "mechanical engineer",
        "uri": "http://dbpedia.org/resource/Mechanical_engineering"
      }
    ],
    "id": "d94cdcd8ddea4f6ca38ef78a76aeb4f2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "which person created the women in the garden?",
    "SerialNumber": "4013",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Women_in_the_Garden> <http://dbpedia.org/property/artist> ?uri } ",
    "entity mapping": [
      {
        "label": "women in the garden",
        "uri": "http://dbpedia.org/resource/Women_in_the_Garden"
      }
    ],
    "id": "eb7076ae122e4f3bbb01b33be971ffc2",
    "predicate mapping": [
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/artist"
      }
    ]
  },
  {
    "question": "Who is the artist of Time Radio hour ?",
    "SerialNumber": "4017",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Theme_Time_Radio_Hour> <http://dbpedia.org/property/creator> ?uri } ",
    "entity mapping": [
      {
        "label": "radio time hour the",
        "uri": "http://dbpedia.org/resource/Theme_Time_Radio_Hour"
      }
    ],
    "id": "626266625dc54af58709a5c0381b7aa6",
    "predicate mapping": [
      {
        "label": "hour",
        "uri": "http://dbpedia.org/property/creator"
      }
    ]
  },
  {
    "question": "How many prime ministers did the predecessor of Duncan Sandys  serve?",
    "SerialNumber": "4018",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Duncan_Sandys> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/property/primeminister> ?uri  . }",
    "entity mapping": [
      {
        "label": "Duncan Sandys",
        "uri": "http://dbpedia.org/resource/Duncan_Sandys"
      }
    ],
    "id": "d0c72dbed0ac4f5ea394427d5a60df4a",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "ministers",
        "uri": "http://dbpedia.org/property/primeminister"
      }
    ]
  },
  {
    "question": "Which party won the elections when Y.S. Rajasekhara Reddy was in power?",
    "SerialNumber": "4019",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Election>}",
    "entity mapping": [
      {
        "label": "Y.S. Rajasekhara Reddy",
        "uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy"
      }
    ],
    "id": "caedfc75bd384fe7bcb3aa45a68f9dc5",
    "predicate mapping": [
      {
        "label": "power",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "power",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "election",
        "uri": "http://dbpedia.org/ontology/Election"
      }
    ]
  },
  {
    "question": "Is Henry David Thoreau interested in Politics?",
    "SerialNumber": "4022",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Henry_David_Thoreau> <http://dbpedia.org/property/mainInterests> <http://dbpedia.org/resource/Politics> }",
    "entity mapping": [
      {
        "label": "Henry David Thoreau",
        "uri": "http://dbpedia.org/resource/Henry_David_Thoreau"
      },
      {
        "label": "Politics",
        "uri": "http://dbpedia.org/resource/Politics"
      }
    ],
    "id": "2c9741b69a754c32a0977065261b1b01",
    "predicate mapping": [
      {
        "label": "interested",
        "uri": "http://dbpedia.org/property/mainInterests"
      }
    ]
  },
  {
    "question": "Which settelment area is the home town of the Danny Felice and Cline Buckens?",
    "SerialNumber": "4024",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Danny_Felice> <http://dbpedia.org/ontology/hometown> ?uri. <http://dbpedia.org/resource/Céline_Buckens> <http://dbpedia.org/ontology/hometown> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Settlement>}",
    "entity mapping": [
      {
        "label": "Danny Felice",
        "uri": "http://dbpedia.org/resource/Danny_Felice"
      },
      {
        "label": "buckens",
        "uri": "http://dbpedia.org/resource/Céline_Buckens"
      }
    ],
    "id": "6563a461daf1415ab915fc5dfc0eb0be",
    "predicate mapping": [
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "home town",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "Cline",
        "uri": "http://dbpedia.org/ontology/Settlement"
      }
    ]
  },
  {
    "question": "How many people are buried in Arlington National Cemetery?",
    "SerialNumber": "4033",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Arlington_National_Cemetery>  . }",
    "entity mapping": [
      {
        "label": "Arlington National Cemetery",
        "uri": "http://dbpedia.org/resource/Arlington_National_Cemetery"
      }
    ],
    "id": "87c465fa859b45d78b3a51868b1d1375",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial"
      }
    ]
  },
  {
    "question": "Does Fa'a' International Airport serve tahiti too?",
    "SerialNumber": "4034",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Fa'a'ā_International_Airport> <http://dbpedia.org/property/cityServed> <http://dbpedia.org/resource/Tahiti> }",
    "entity mapping": [
      {
        "label": "international airport fa'a'",
        "uri": "http://dbpedia.org/resource/Fa'a'ā_International_Airport"
      },
      {
        "label": "tahiti",
        "uri": "http://dbpedia.org/resource/Tahiti"
      }
    ],
    "id": "17b2beca1aea4de591ccbcb84821c1a2",
    "predicate mapping": [
      {
        "label": "serve",
        "uri": "http://dbpedia.org/property/cityServed"
      }
    ]
  },
  {
    "question": "Is the Caterpullar 797F assembled in North America?",
    "SerialNumber": "4040",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Caterpillar_797F> <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/North_America> }",
    "entity mapping": [
      {
        "label": "797F",
        "uri": "http://dbpedia.org/resource/Caterpillar_797F"
      },
      {
        "label": "North America",
        "uri": "http://dbpedia.org/resource/North_America"
      }
    ],
    "id": "d8f88e1d32024fa5bfff232c9286e30a",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      }
    ]
  },
  {
    "question": "Does Dan River flow into the Jordan Valley?",
    "SerialNumber": "4043",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Jordan_River> <http://dbpedia.org/ontology/leftTributary> <http://dbpedia.org/resource/Dan_River_(Middle_East)> }",
    "entity mapping": [
      {
        "label": "jordan river",
        "uri": "http://dbpedia.org/resource/Jordan_River"
      },
      {
        "label": "Dan River",
        "uri": "http://dbpedia.org/resource/Dan_River_(Middle_East)"
      }
    ],
    "id": "1233074e435847cb89d45254f080d56f",
    "predicate mapping": [
      {
        "label": "Valley",
        "uri": "http://dbpedia.org/ontology/leftTributary"
      }
    ]
  },
  {
    "question": "Does Beth Tweddle play for the City of Liverpool gymnast club?",
    "SerialNumber": "4044",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Beth_Tweddle> <http://dbpedia.org/property/club> <http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club> }",
    "entity mapping": [
      {
        "label": "Beth Tweddle",
        "uri": "http://dbpedia.org/resource/Beth_Tweddle"
      },
      {
        "label": "liverpool gymnast club city",
        "uri": "http://dbpedia.org/resource/City_of_Liverpool_Gymnastics_Club"
      }
    ],
    "id": "bc66c5524237472895f7631eb4e962e0",
    "predicate mapping": [
      {
        "label": "club",
        "uri": "http://dbpedia.org/property/club"
      }
    ]
  },
  {
    "question": "Was Krzystof Wielicki the first person that ascended the mt everest?",
    "SerialNumber": "4048",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Everest> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/Krzysztof_Wielicki> }",
    "entity mapping": [
      {
        "label": "mt everest",
        "uri": "http://dbpedia.org/resource/Mount_Everest"
      },
      {
        "label": "wielicki",
        "uri": "http://dbpedia.org/resource/Krzysztof_Wielicki"
      }
    ],
    "id": "7e064438df204412a9e513d66ee3cc5e",
    "predicate mapping": [
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "List the sports played in private universities.",
    "SerialNumber": "4049",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/type> <http://dbpedia.org/resource/Private_university> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "private universiti",
        "uri": "http://dbpedia.org/resource/Private_university"
      }
    ],
    "id": "220dbedddb3a4970b6b74f1fa2282d6b",
    "predicate mapping": [
      {
        "label": "played",
        "uri": "http://dbpedia.org/ontology/type"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Name the president whose had relatives in Clinton family and lieutenant named Joe Purcell?",
    "SerialNumber": "4053",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/relation> <http://dbpedia.org/resource/Clinton_family> . ?uri <http://dbpedia.org/ontology/lieutenant> <http://dbpedia.org/resource/Joe_Purcell>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/President>}",
    "entity mapping": [
      {
        "label": "Clinton family",
        "uri": "http://dbpedia.org/resource/Clinton_family"
      },
      {
        "label": "Joe Purcell",
        "uri": "http://dbpedia.org/resource/Joe_Purcell"
      }
    ],
    "id": "287e9d5624e64fa3a256084cbc7a853c",
    "predicate mapping": [
      {
        "label": "named",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "lieutenant",
        "uri": "http://dbpedia.org/ontology/lieutenant"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/President"
      }
    ]
  },
  {
    "question": "Who oarent organization of Get TV is also the label provider of I Pray on CHristmas ?",
    "SerialNumber": "4056",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/I_Pray_on_Christmas> <http://dbpedia.org/property/label> ?uri. <http://dbpedia.org/resource/GetTV> <http://dbpedia.org/ontology/parentOrganisation> ?uri} ",
    "entity mapping": [
      {
        "label": "I Pray on CHristmas",
        "uri": "http://dbpedia.org/resource/I_Pray_on_Christmas"
      },
      {
        "label": "get tv",
        "uri": "http://dbpedia.org/resource/GetTV"
      }
    ],
    "id": "6dd6deaa7cd2434fb62beb47d4ae9ff9",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "uri": "http://dbpedia.org/ontology/parentOrganisation"
      }
    ]
  },
  {
    "question": "In how many states can one find Burr Tuss kind of bridges?",
    "SerialNumber": "4062",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Burr_Truss> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Region>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Burr_Truss"
      }
    ],
    "id": "63cb9ee6aac848bfab4e1474f02fa6cc",
    "predicate mapping": [
      {
        "label": "bridges",
        "uri": "http://dbpedia.org/property/style"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "bridges",
        "uri": "http://dbpedia.org/ontology/Region"
      }
    ]
  },
  {
    "question": "Name the television show whose theme music is composed by Julian Gingell and broadcasted on FOX ?",
    "SerialNumber": "4063",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/channel> <http://dbpedia.org/resource/Fox_Broadcasting_Company>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Julian Gingell",
        "uri": "http://dbpedia.org/resource/Julian_Gingell"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Fox_Broadcasting_Company"
      }
    ],
    "id": "c547ee5efa2249c4a8e652d7c3822fed",
    "predicate mapping": [
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "FOX",
        "uri": "http://dbpedia.org/property/channel"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Through which important cities the does the river originating from the Duwamish, flow?",
    "SerialNumber": "4066",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Green_River_(Duwamish_River)> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Duwamish",
        "uri": "http://dbpedia.org/resource/Green_River_(Duwamish_River)"
      }
    ],
    "id": "03c8435f984a413f9bdbfe9927c33086",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which politicians son is buried in Metairie Cementery?",
    "SerialNumber": "4069",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/placeofburial> <http://dbpedia.org/resource/Metairie_Cemetery> . ?uri <http://dbpedia.org/ontology/child> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "metairie",
        "uri": "http://dbpedia.org/resource/Metairie_Cemetery"
      }
    ],
    "id": "4dc617be22b34ffdb330e545e12a8ad9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeofburial"
      },
      {
        "label": "son",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "Metairie",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "To which students did Ernest Rutherford advised to?",
    "SerialNumber": "4073",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Ernest_Rutherford>  . }",
    "entity mapping": [
      {
        "label": "Ernest Rutherford",
        "uri": "http://dbpedia.org/resource/Ernest_Rutherford"
      }
    ],
    "id": "d039c214abca4acb95ebefed1ec4aee3",
    "predicate mapping": [
      {
        "label": "advised",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      }
    ]
  },
  {
    "question": "What is the Home Stadium of the Kenya national under-20 football team where Matin Suji was also born ?",
    "SerialNumber": "4075",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kenya_national_under-20_football_team> <http://dbpedia.org/property/homeStadium> ?uri. <http://dbpedia.org/resource/Martin_Suji> <http://dbpedia.org/ontology/birthPlace> ?uri} ",
    "entity mapping": [
      {
        "label": "Kenya national under-20 football team",
        "uri": "http://dbpedia.org/resource/Kenya_national_under-20_football_team"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Martin_Suji"
      }
    ],
    "id": "f2f9462195254f19ac762ee377426f3f",
    "predicate mapping": [
      {
        "label": "Home Stadium",
        "uri": "http://dbpedia.org/property/homeStadium"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What foundation palce of Temenos Group is the death palce of jerzy Jzef Poocki ?",
    "SerialNumber": "4076",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Temenos_Group> <http://dbpedia.org/property/foundation> ?uri. <http://dbpedia.org/resource/Jerzy_Józef_Potocki> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "Temenos Group",
        "uri": "http://dbpedia.org/resource/Temenos_Group"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Jerzy_Józef_Potocki"
      }
    ],
    "id": "f3e69f0433d44011900bd5304b4d5c31",
    "predicate mapping": [
      {
        "label": "foundation",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "death",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Which company owns the airlines whose hub is in Dubai?",
    "SerialNumber": "4077",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Detroit> . ?x <http://dbpedia.org/property/parent> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "Dubai",
        "uri": "http://dbpedia.org/resource/Detroit"
      }
    ],
    "id": "09419b9d207043bc80903f773b894b62",
    "predicate mapping": [
      {
        "label": "hub",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "How many people have parterned with the person choroegraphed by Catarina Lindgren in the past?",
    "SerialNumber": "4078",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/formerChoreographer> <http://dbpedia.org/resource/Catarina_Lindgren> . ?x <http://dbpedia.org/ontology/formerPartner> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Catarina Lindgren",
        "uri": "http://dbpedia.org/resource/Catarina_Lindgren"
      }
    ],
    "id": "f6f3a47cf61449bdac6126a01ad39c30",
    "predicate mapping": [
      {
        "label": "past",
        "uri": "http://dbpedia.org/ontology/formerChoreographer"
      },
      {
        "label": "past",
        "uri": "http://dbpedia.org/ontology/formerPartner"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "In which city was the film star of Singhasan Battisi born ?",
    "SerialNumber": "4080",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)> <http://dbpedia.org/ontology/starring> ?x . ?x <http://dbpedia.org/property/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Singhasan Battisi",
        "uri": "http://dbpedia.org/resource/Singhasan_Battisi_(TV_series)"
      }
    ],
    "id": "9a26ec1acb5a49ebb1c6f3430eaf3aec",
    "predicate mapping": [
      {
        "label": "star",
        "uri": "http://dbpedia.org/ontology/starring"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      }
    ]
  },
  {
    "question": "Who all are starring in the  movies where director of photography is John Derek ?",
    "SerialNumber": "4081",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/cinematography> <http://dbpedia.org/resource/John_Derek> . ?x <http://dbpedia.org/property/starring> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "John Derek",
        "uri": "http://dbpedia.org/resource/John_Derek"
      }
    ],
    "id": "e9e11aac69384f7ea4b8193f5237bb97",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/ontology/cinematography"
      },
      {
        "label": "starring",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Name some software as a service?",
    "SerialNumber": "4090",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/license> <http://dbpedia.org/resource/Software_as_a_service>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Software>}",
    "entity mapping": [
      {
        "label": "software as a service",
        "uri": "http://dbpedia.org/resource/Software_as_a_service"
      }
    ],
    "id": "644aaef215cc484f9b712c5bc532d4b8",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/license"
      },
      {
        "label": "software",
        "uri": "http://dbpedia.org/ontology/Software"
      }
    ]
  },
  {
    "question": "What are some other things developed by the company who made the remote desktop protocol?",
    "SerialNumber": "4091",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Remote_Desktop_Protocol> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "remote desktop protocol",
        "uri": "http://dbpedia.org/resource/Remote_Desktop_Protocol"
      }
    ],
    "id": "179d3cc2b7f440ed93b9efb89aa4ff9a",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which office holder's predecessor is  Lucius Cornelius and his associate is Marcus Calpurnius Bibulus?",
    "SerialNumber": "4093",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus> . ?uri <http://dbpedia.org/ontology/associate> <http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "cornelius lucius",
        "uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus"
      },
      {
        "label": "Marcus Calpurnius Bibulus",
        "uri": "http://dbpedia.org/resource/Marcus_Calpurnius_Bibulus"
      }
    ],
    "id": "a21a8d3f8da84d2aa14502672faa0091",
    "predicate mapping": [
      {
        "label": "predecessor",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "associate",
        "uri": "http://dbpedia.org/ontology/associate"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "List the people educated at Harvard-Westlake School and has resting place as Palo Alto, California?",
    "SerialNumber": "4097",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/almaMater> <http://dbpedia.org/resource/Harvard-Westlake_School> . ?uri <http://dbpedia.org/property/restingPlace> <http://dbpedia.org/resource/Palo_Alto,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Harvard-Westlake School",
        "uri": "http://dbpedia.org/resource/Harvard-Westlake_School"
      },
      {
        "label": "Palo Alto, California",
        "uri": "http://dbpedia.org/resource/Palo_Alto,_California"
      }
    ],
    "id": "7f370a0e523a45c1a3b23489c96c5c88",
    "predicate mapping": [
      {
        "label": "edu",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingPlace"
      },
      {
        "label": "cated",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What did other artists associated with the Shirelles make?",
    "SerialNumber": "4100",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/The_Shirelles> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "the Shirelles",
        "uri": "http://dbpedia.org/resource/The_Shirelles"
      }
    ],
    "id": "ebe0a1b44e2c4bb081fc827147037d26",
    "predicate mapping": [
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Which parent company of the Cornell University Press is also the alma mater of the Mario Garca Menocal?",
    "SerialNumber": "4101",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri. <http://dbpedia.org/resource/Mario_García_Menocal> <http://dbpedia.org/ontology/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Cornell University Press",
        "uri": "http://dbpedia.org/resource/Cornell_University_Press"
      },
      {
        "label": "menocal mario",
        "uri": "http://dbpedia.org/resource/Mario_García_Menocal"
      }
    ],
    "id": "0a735fe654c440d3aa2c9dcdb4aaf390",
    "predicate mapping": [
      {
        "label": "parent company",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Count the band members of Skull Gang?",
    "SerialNumber": "4102",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Skull_Gang> <http://dbpedia.org/ontology/bandMember> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Skull Gang",
        "uri": "http://dbpedia.org/resource/Skull_Gang"
      }
    ],
    "id": "faf06a2c20664530a15b7b7d5b272fdc",
    "predicate mapping": [
      {
        "label": "band member",
        "uri": "http://dbpedia.org/ontology/bandMember"
      },
      {
        "label": "Count",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "What is the political party to which Purnima Banerjee is a member of?",
    "SerialNumber": "4104",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Nutting> <http://dbpedia.org/ontology/knownFor> ?uri } ",
    "entity mapping": [
      {
        "label": "Purnima Banerjee",
        "uri": "http://dbpedia.org/resource/Robert_Nutting"
      }
    ],
    "id": "f01315d63b924a25a46e91aae29457bc",
    "predicate mapping": [
      {
        "label": "member",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Who was the president during the time the opponent of John Hospers was in the office?",
    "SerialNumber": "4105",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/opponent> <http://dbpedia.org/resource/John_Hospers> . ?x <http://dbpedia.org/ontology/incumbent> ?uri  . }",
    "entity mapping": [
      {
        "label": "John Hospers",
        "uri": "http://dbpedia.org/resource/John_Hospers"
      }
    ],
    "id": "7c3c9d3e96c54807847b7a2b14049933",
    "predicate mapping": [
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      },
      {
        "label": "office",
        "uri": "http://dbpedia.org/ontology/incumbent"
      }
    ]
  },
  {
    "question": "Whcih land of Citi Trends is also the constituency of Malik Al-Hassan Yakubu ?",
    "SerialNumber": "4106",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu> <http://dbpedia.org/property/constituency> ?uri. <http://dbpedia.org/resource/CitiTrends_(radio_show)> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Malik Al-Hassan Yakubu",
        "uri": "http://dbpedia.org/resource/Malik_Al-Hassan_Yakubu"
      },
      {
        "label": "trends",
        "uri": "http://dbpedia.org/resource/CitiTrends_(radio_show)"
      }
    ],
    "id": "7adccf6358744d82b563e59f30b482fa",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "land",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "In which country does the publishing house exist which was cofounded by Panos Loannides?",
    "SerialNumber": "4107",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/founder> <http://dbpedia.org/resource/Panos_Ioannides> . ?x <http://dbpedia.org/property/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}",
    "entity mapping": [
      {
        "label": "Panos Loannides",
        "uri": "http://dbpedia.org/resource/Panos_Ioannides"
      }
    ],
    "id": "4bd70a53db094071a29c3e999f05bee9",
    "predicate mapping": [
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "exist",
        "uri": "http://dbpedia.org/ontology/Publisher"
      }
    ]
  },
  {
    "question": "To which settlement does Elliot Bay belong to?",
    "SerialNumber": "4110",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Elliott_Bay> <http://dbpedia.org/property/cities> ?uri } ",
    "entity mapping": [
      {
        "label": "Elliot Bay",
        "uri": "http://dbpedia.org/resource/Elliott_Bay"
      }
    ],
    "id": "48faaecba3194be8a5d4216c2e5bbe29",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/property/cities"
      }
    ]
  },
  {
    "question": "Which band produced the album Aida?",
    "SerialNumber": "4115",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/album> <http://dbpedia.org/resource/Aida_(musical)> . ?x <http://dbpedia.org/ontology/musicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}",
    "entity mapping": [
      {
        "label": "Aida",
        "uri": "http://dbpedia.org/resource/Aida_(musical)"
      }
    ],
    "id": "ccc04aa37c9b42178de44ab219cf6834",
    "predicate mapping": [
      {
        "label": "album",
        "uri": "http://dbpedia.org/property/album"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/musicalArtist"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/MusicalWork"
      }
    ]
  },
  {
    "question": "What do the banks owned by Norwegian ministry of finance produce?",
    "SerialNumber": "4117",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parentCompany> <http://dbpedia.org/resource/Ministry_of_Finance_(Norway)> . ?x <http://dbpedia.org/property/products> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "ministry of finance",
        "uri": "http://dbpedia.org/resource/Ministry_of_Finance_(Norway)"
      }
    ],
    "id": "5a074df3521141adb1aefaec144c1510",
    "predicate mapping": [
      {
        "label": "produce",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      },
      {
        "label": "produce",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "What organisation regulates and controls the New Sanno Hotel?",
    "SerialNumber": "4122",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/New_Sanno_Hotel> <http://dbpedia.org/ontology/tenant> ?uri } ",
    "entity mapping": [
      {
        "label": "New Sanno Hotel",
        "uri": "http://dbpedia.org/resource/New_Sanno_Hotel"
      }
    ],
    "id": "97da8d0de1584a23a8560ea19c285153",
    "predicate mapping": [
      {
        "label": "controls",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "Where do networks affiliated with ETC broadcast?",
    "SerialNumber": "4131",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/ETC_(TV_channel)> . ?x <http://dbpedia.org/property/area> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BroadcastNetwork>}",
    "entity mapping": [
      {
        "label": "ETC",
        "uri": "http://dbpedia.org/resource/ETC_(TV_channel)"
      }
    ],
    "id": "ff08a87358c14e6a98db33b34547c5b5",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/area"
      },
      {
        "label": "broadcast",
        "uri": "http://dbpedia.org/ontology/BroadcastNetwork"
      }
    ]
  },
  {
    "question": "Which borough is common for Duddeston and Bordesley railway station ?",
    "SerialNumber": "4132",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Duddeston_railway_station> <http://dbpedia.org/property/borough> ?uri. <http://dbpedia.org/resource/Bordesley_railway_station> <http://dbpedia.org/property/borough> ?uri . }",
    "entity mapping": [
      {
        "label": "duddeston station railway",
        "uri": "http://dbpedia.org/resource/Duddeston_railway_station"
      },
      {
        "label": "Bordesley railway station",
        "uri": "http://dbpedia.org/resource/Bordesley_railway_station"
      }
    ],
    "id": "62e1ac6a48374811b387c936277abf3f",
    "predicate mapping": [
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough"
      },
      {
        "label": "borough",
        "uri": "http://dbpedia.org/property/borough"
      }
    ]
  },
  {
    "question": "Name the office holder whose final resting place is North Bend and was part of Siege of fort recovery conflict ?",
    "SerialNumber": "4133",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Siege_of_Fort_Recovery> . ?uri <http://dbpedia.org/property/restingplace> <http://dbpedia.org/resource/North_Bend,_Ohio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Siege of fort recovery",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Recovery"
      },
      {
        "label": "north bend",
        "uri": "http://dbpedia.org/resource/North_Bend,_Ohio"
      }
    ],
    "id": "ae35cc3329ac40a08ebe49385e806d35",
    "predicate mapping": [
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "resting place",
        "uri": "http://dbpedia.org/property/restingplace"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "In which state is Goose Lake Valle, which is also part of Lava River Cave ?",
    "SerialNumber": "4134",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Goose_Lake_Valley> <http://dbpedia.org/ontology/state> ?uri. <http://dbpedia.org/resource/Lava_River_Cave> <http://dbpedia.org/ontology/location> ?uri} ",
    "entity mapping": [
      {
        "label": "Goose Lake Valle,",
        "uri": "http://dbpedia.org/resource/Goose_Lake_Valley"
      },
      {
        "label": "Lava River Cave",
        "uri": "http://dbpedia.org/resource/Lava_River_Cave"
      }
    ],
    "id": "19aa6a8901924e0998a44283eaa9aef4",
    "predicate mapping": [
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "In which fields have people born in Lausanne worked?",
    "SerialNumber": "4135",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Lausanne> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
    "entity mapping": [
      {
        "label": "Lausanne",
        "uri": "http://dbpedia.org/resource/Lausanne"
      }
    ],
    "id": "75b80b3f8a524509a21451d9a7acc46e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "For whom did Michael Springer palyed for which is also had a former student named Donald Brooks ?",
    "SerialNumber": "4137",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Springer> <http://dbpedia.org/property/team> ?uri. <http://dbpedia.org/resource/Donald_Brooks> <http://dbpedia.org/property/education> ?uri} ",
    "entity mapping": [
      {
        "label": "Michael Springer",
        "uri": "http://dbpedia.org/resource/Michael_Springer"
      },
      {
        "label": "Donald Brooks",
        "uri": "http://dbpedia.org/resource/Donald_Brooks"
      }
    ],
    "id": "86888920922147cfbbe21f09a0e2c077",
    "predicate mapping": [
      {
        "label": "named",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "named",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "How many artists have collaborated with famous guitar players?",
    "SerialNumber": "4139",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Guitar> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "guitar",
        "uri": "http://dbpedia.org/resource/Guitar"
      }
    ],
    "id": "8fb26b1d97b449afb64a79c4c66ada90",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/property/notableInstruments"
      },
      {
        "label": "artists",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "List the profession of senate whose one of the profession is United States Coast Guard ?",
    "SerialNumber": "4141",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/United_States_Coast_Guard> . ?x <http://dbpedia.org/ontology/profession> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician>}",
    "entity mapping": [
      {
        "label": "United States Coast Guard",
        "uri": "http://dbpedia.org/resource/United_States_Coast_Guard"
      }
    ],
    "id": "30605f74aa054fabbb707ab5e85247fe",
    "predicate mapping": [
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "senate",
        "uri": "http://dbpedia.org/ontology/Politician"
      }
    ]
  },
  {
    "question": "What have some US citizens died of?",
    "SerialNumber": "4143",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/citizenship> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "3d8f7450e4e84935b8f482bf336f0843",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/property/citizenship"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "What are some famous veterinary physicians known for?",
    "SerialNumber": "4144",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Veterinary_physician> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "veterinary physicians",
        "uri": "http://dbpedia.org/resource/Veterinary_physician"
      }
    ],
    "id": "60f9b1b1c6234d06881d6c6c2211192a",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/field"
      },
      {
        "label": "known for",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "Does the platte river originate in Colorado?",
    "SerialNumber": "4145",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Platte_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Colorado> }",
    "entity mapping": [
      {
        "label": "platte river",
        "uri": "http://dbpedia.org/resource/Platte_River"
      },
      {
        "label": "Colorado",
        "uri": "http://dbpedia.org/resource/Colorado"
      }
    ],
    "id": "da022345367d441484d1fdcb8582c86b",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/sourceRegion"
      }
    ]
  },
  {
    "question": "Is the Hyundai Lavita assembled in Kulim?",
    "SerialNumber": "4147",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Hyundai_Lavita> <http://dbpedia.org/ontology/assembly> <http://dbpedia.org/resource/Kulim> }",
    "entity mapping": [
      {
        "label": "Hyundai Lavita",
        "uri": "http://dbpedia.org/resource/Hyundai_Lavita"
      },
      {
        "label": "Kulim",
        "uri": "http://dbpedia.org/resource/Kulim"
      }
    ],
    "id": "1045a9b2aa9742818b6c4fc9ba72c399",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/assembly"
      }
    ]
  },
  {
    "question": "Is the national endowment of arts under the jurisdiction of federal government of US?",
    "SerialNumber": "4156",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/National_Endowment_for_the_Arts> <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/Federal_government_of_the_United_States> }",
    "entity mapping": [
      {
        "label": "endowment national",
        "uri": "http://dbpedia.org/resource/National_Endowment_for_the_Arts"
      },
      {
        "label": "federal",
        "uri": "http://dbpedia.org/resource/Federal_government_of_the_United_States"
      }
    ],
    "id": "ae5b96d1769c443288f79abd58151136",
    "predicate mapping": [
      {
        "label": "jurisdiction",
        "uri": "http://dbpedia.org/property/jurisdiction"
      }
    ]
  },
  {
    "question": "Was Kevin Rudd the PM of Julia Gillard?",
    "SerialNumber": "4157",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Julia_Gillard> <http://dbpedia.org/ontology/primeMinister> <http://dbpedia.org/resource/Kevin_Rudd> }",
    "entity mapping": [
      {
        "label": "Julia Gillard",
        "uri": "http://dbpedia.org/resource/Julia_Gillard"
      },
      {
        "label": "Kevin Rudd",
        "uri": "http://dbpedia.org/resource/Kevin_Rudd"
      }
    ],
    "id": "e01fcd131f144d599b2e638f003d7552",
    "predicate mapping": [
      {
        "label": "PM",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "Which country were the people from who became famous for the Ramon Mangsaysay Award?",
    "SerialNumber": "4158",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Ramon_Magsaysay_Award> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Ramon_Magsaysay_Award"
      }
    ],
    "id": "8b01cd75cf8c483682925fdc176c2317",
    "predicate mapping": [
      {
        "label": "Award",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "Award",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which employer of Michael M. Sears is also the producer of Delta III ?",
    "SerialNumber": "4159",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_M._Sears> <http://dbpedia.org/ontology/employer> ?uri. <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri} ",
    "entity mapping": [
      {
        "label": "Michael M. Sears",
        "uri": "http://dbpedia.org/resource/Michael_M._Sears"
      },
      {
        "label": "Delta III",
        "uri": "http://dbpedia.org/resource/Delta_III"
      }
    ],
    "id": "976416dab3a74a80855d6d582a488ff4",
    "predicate mapping": [
      {
        "label": "employer",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "Guggenheim family is the cofounder of a company that invested stocks in which baseball teams?",
    "SerialNumber": "4161",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/founder> <http://dbpedia.org/resource/Guggenheim_family> . ?uri <http://dbpedia.org/property/owner> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BaseballTeam>}",
    "entity mapping": [
      {
        "label": "Guggenheim family",
        "uri": "http://dbpedia.org/resource/Guggenheim_family"
      }
    ],
    "id": "83152a2adbe949ab904fda1101384ee7",
    "predicate mapping": [
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founder"
      },
      {
        "label": "stocks",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "baseball team",
        "uri": "http://dbpedia.org/ontology/BaseballTeam"
      }
    ]
  },
  {
    "question": "Who won the ohio house of representatives, 2010?",
    "SerialNumber": "4162",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010> <http://dbpedia.org/property/incumbent> ?uri } ",
    "entity mapping": [
      {
        "label": "2010",
        "uri": "http://dbpedia.org/resource/United_States_House_of_Representatives_elections_in_Ohio,_2010"
      }
    ],
    "id": "2779011abe114ab58fb5e700589ea345",
    "predicate mapping": [
      {
        "label": "house",
        "uri": "http://dbpedia.org/property/incumbent"
      }
    ]
  },
  {
    "question": "Where is the headquarters of the public transit system which owns the American Boulevard (Metro Transit station) located ?",
    "SerialNumber": "4163",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)> <http://dbpedia.org/ontology/owningOrganisation> ?x . ?x <http://dbpedia.org/property/headquarters> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/PublicTransitSystem>}",
    "entity mapping": [
      {
        "label": "American Boulevard (Metro Transit station)",
        "uri": "http://dbpedia.org/resource/American_Boulevard_(Metro_Transit_station)"
      }
    ],
    "id": "8a38e3ab78b24fbbb14d1cc919014e96",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/owningOrganisation"
      },
      {
        "label": "headquarters",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "public transit system",
        "uri": "http://dbpedia.org/ontology/PublicTransitSystem"
      }
    ]
  },
  {
    "question": "List all the members of the organization whose one of the members is Bangladesh ?",
    "SerialNumber": "4166",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/membership> <http://dbpedia.org/resource/Bangladesh> . ?x <http://dbpedia.org/property/membership> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Bangladesh",
        "uri": "http://dbpedia.org/resource/Bangladesh"
      }
    ],
    "id": "ffe42b8531f540398540cdb1b6cb13ca",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "List all the school of the rugby player whose one of the school is Michael House ?",
    "SerialNumber": "4170",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Michaelhouse> . ?x <http://dbpedia.org/property/school> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RugbyPlayer>}",
    "entity mapping": [
      {
        "label": "michael house",
        "uri": "http://dbpedia.org/resource/Michaelhouse"
      }
    ],
    "id": "d85c374fb7e047cda434efae8462b69b",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/school"
      },
      {
        "label": "rugby player",
        "uri": "http://dbpedia.org/ontology/RugbyPlayer"
      }
    ]
  },
  {
    "question": "What is the total number of professions in which someone who has suicided worked?",
    "SerialNumber": "4172",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/deathCause> <http://dbpedia.org/resource/Suicide> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "entity mapping": [
      {
        "label": "suicide",
        "uri": "http://dbpedia.org/resource/Suicide"
      }
    ],
    "id": "fda94b922adc4c96852e7800f60f797a",
    "predicate mapping": [
      {
        "label": "worked",
        "uri": "http://dbpedia.org/property/deathCause"
      },
      {
        "label": "profession",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "To which country do the players of Waitakere United belong?",
    "SerialNumber": "4173",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Waitakere_United> . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Waitakere United",
        "uri": "http://dbpedia.org/resource/Waitakere_United"
      }
    ],
    "id": "59100a9ec0e24b988611ea5a66675140",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "How many relatives are there of veterans of operation Barbarossa?",
    "SerialNumber": "4174",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/battle> <http://dbpedia.org/resource/Operation_Barbarossa> . ?x <http://dbpedia.org/ontology/relation> ?uri  . }",
    "entity mapping": [
      {
        "label": "operation Barbarossa",
        "uri": "http://dbpedia.org/resource/Operation_Barbarossa"
      }
    ],
    "id": "75a241fa2e024a7a95e0108a8b6b66ff",
    "predicate mapping": [
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/battle"
      },
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "How many leagues have used the O.co Coliseum?",
    "SerialNumber": "4175",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/O.co_Coliseum> <http://dbpedia.org/ontology/tenant> ?uri  . }",
    "entity mapping": [
      {
        "label": "O.co Coliseum",
        "uri": "http://dbpedia.org/resource/O.co_Coliseum"
      }
    ],
    "id": "5f69f094954f4553a0bd03d14da852d6",
    "predicate mapping": [
      {
        "label": "leagues",
        "uri": "http://dbpedia.org/ontology/tenant"
      }
    ]
  },
  {
    "question": "What kind of games are made by Interplay Entertainment?",
    "SerialNumber": "4176",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Interplay_Entertainment> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Interplay Entertainment",
        "uri": "http://dbpedia.org/resource/Interplay_Entertainment"
      }
    ],
    "id": "23a0e9e271d44ba286716b46fd3eb912",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Where did the spouse of pmare ii die?",
    "SerialNumber": "4178",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/spouse> <http://dbpedia.org/resource/Pōmare_II> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Pōmare_II"
      }
    ],
    "id": "46880d365fbe4d54b1b965e5b5e1bb77",
    "predicate mapping": [
      {
        "label": "spouse",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Where do cherry chevapravatdumrong and daisi pollard both live?",
    "SerialNumber": "4180",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cherry_Chevapravatdumrong> <http://dbpedia.org/ontology/residence> ?uri. <http://dbpedia.org/resource/Daisi_Pollard> <http://dbpedia.org/ontology/residence> ?uri . }",
    "entity mapping": [
      {
        "label": "cherry chevapravatdumrong",
        "uri": "http://dbpedia.org/resource/Cherry_Chevapravatdumrong"
      },
      {
        "label": "daisi pollard",
        "uri": "http://dbpedia.org/resource/Daisi_Pollard"
      }
    ],
    "id": "eb285e418d9641bcb6ba0c86c444d355",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "How many bands are based in London?",
    "SerialNumber": "4185",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/London>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "London",
        "uri": "http://dbpedia.org/resource/London"
      }
    ],
    "id": "431e3662c6994776a8f35a3d3eb26027",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "To which educational institute does Cornell University Press belong to?",
    "SerialNumber": "4187",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cornell_University_Press> <http://dbpedia.org/ontology/parentCompany> ?uri } ",
    "entity mapping": [
      {
        "label": "Cornell University Press",
        "uri": "http://dbpedia.org/resource/Cornell_University_Press"
      }
    ],
    "id": "910a28df8fc54d3cbd74bc9e7923cc70",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/parentCompany"
      }
    ]
  },
  {
    "question": "Is Robert Boyle a chemist?",
    "SerialNumber": "4188",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robert_Boyle> <http://dbpedia.org/ontology/field> <http://dbpedia.org/resource/Chemistry> }",
    "entity mapping": [
      {
        "label": "Robert Boyle",
        "uri": "http://dbpedia.org/resource/Robert_Boyle"
      },
      {
        "label": "chemist",
        "uri": "http://dbpedia.org/resource/Chemistry"
      }
    ],
    "id": "f1bd78d345634e9d9d237a044ba8599b",
    "predicate mapping": [
      {
        "label": "chemist",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "What city was recorded in Live in detroit which is also the official residence of ken Holland ?",
    "SerialNumber": "4189",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Live_in_Detroit,_MI> <http://dbpedia.org/ontology/recordedIn> ?uri. <http://dbpedia.org/resource/Ken_Holland> <http://dbpedia.org/ontology/residence> ?uri} ",
    "entity mapping": [
      {
        "label": "detroit live",
        "uri": "http://dbpedia.org/resource/Live_in_Detroit,_MI"
      },
      {
        "label": "ken Holland",
        "uri": "http://dbpedia.org/resource/Ken_Holland"
      }
    ],
    "id": "f6df767b04b1431ab3fbfb73d45d7c56",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "residence",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Which famous physicist was academically advised by Benjamin Pulleyn?",
    "SerialNumber": "4190",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Benjamin_Pulleyn>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Benjamin Pulleyn",
        "uri": "http://dbpedia.org/resource/Benjamin_Pulleyn"
      }
    ],
    "id": "9f90dd10b77a48d1a9a361b34af9145d",
    "predicate mapping": [
      {
        "label": "advised",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "advised",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "What is the county seat of the district through which the Beckler River flows?",
    "SerialNumber": "4191",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Beckler_River> <http://dbpedia.org/ontology/district> ?x . ?x <http://dbpedia.org/ontology/countySeat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AdministrativeRegion>}",
    "entity mapping": [
      {
        "label": "Beckler River",
        "uri": "http://dbpedia.org/resource/Beckler_River"
      }
    ],
    "id": "3e34613e0d93409d81b5a5ed8d0736e8",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/ontology/district"
      },
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat"
      },
      {
        "label": "flows",
        "uri": "http://dbpedia.org/ontology/AdministrativeRegion"
      }
    ]
  },
  {
    "question": "Name some local authorities of schools which have a mixed gender education system?",
    "SerialNumber": "4193",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/gender> <http://dbpedia.org/resource/Mixed-sex_education> . ?x <http://dbpedia.org/ontology/localAuthority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/School>}",
    "entity mapping": [
      {
        "label": "education mixed",
        "uri": "http://dbpedia.org/resource/Mixed-sex_education"
      }
    ],
    "id": "a64b3098de204f9fa741346a1da0d672",
    "predicate mapping": [
      {
        "label": "gender",
        "uri": "http://dbpedia.org/ontology/gender"
      },
      {
        "label": "authorities",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/School"
      }
    ]
  },
  {
    "question": "Name the TV shows related to Babylon 5: The Lost Tales and is aired on Prime TIme Entertainment Networks ?",
    "SerialNumber": "4195",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales> . ?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Babylon 5: The Lost Tales",
        "uri": "http://dbpedia.org/resource/Babylon_5:_The_Lost_Tales"
      },
      {
        "label": "Prime TIme Entertainment Network",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network"
      }
    ],
    "id": "eee8cd2ce7864cc18d521259b6385d55",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "Network",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "aired",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What have some famous Christians died of?",
    "SerialNumber": "4201",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/religion> <http://dbpedia.org/resource/Christianity> . ?x <http://dbpedia.org/ontology/deathCause> ?uri  . }",
    "entity mapping": [
      {
        "label": "Christians",
        "uri": "http://dbpedia.org/resource/Christianity"
      }
    ],
    "id": "97750e1c2bda4a70a98f6a3d3fde3cc5",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "Does KOMC play Gospel Music?",
    "SerialNumber": "4202",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/KOMC_(AM)> <http://dbpedia.org/ontology/programmeFormat> <http://dbpedia.org/resource/Gospel_music> }",
    "entity mapping": [
      {
        "label": "KOMC",
        "uri": "http://dbpedia.org/resource/KOMC_(AM)"
      },
      {
        "label": "Gospel Music",
        "uri": "http://dbpedia.org/resource/Gospel_music"
      }
    ],
    "id": "efac36cec91343a9b9f1ede98613d8b2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat"
      }
    ]
  },
  {
    "question": "What are some developers which use Emacs Lisp in their projects?",
    "SerialNumber": "4204",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/Emacs_Lisp> . ?x <http://dbpedia.org/ontology/developer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Emacs Lisp",
        "uri": "http://dbpedia.org/resource/Emacs_Lisp"
      }
    ],
    "id": "9d830815b20d441b91c44bc90f8e9dc0",
    "predicate mapping": [
      {
        "label": "projects",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      },
      {
        "label": "developer",
        "uri": "http://dbpedia.org/ontology/developer"
      }
    ]
  },
  {
    "question": "Which creation of Josh Friedman was portrayed in Terminator 2 ?",
    "SerialNumber": "4208",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Josh_Friedman>  . }",
    "entity mapping": [
      {
        "label": "terminator",
        "uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day"
      },
      {
        "label": "Josh Friedman",
        "uri": "http://dbpedia.org/resource/Josh_Friedman"
      }
    ],
    "id": "fe5a0610c6e741c2a1b2f059c072dfbf",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer"
      },
      {
        "label": "Terminator",
        "uri": "http://dbpedia.org/property/creator"
      }
    ]
  },
  {
    "question": "Whose shrines are in a place governed by Justin Trudeau?",
    "SerialNumber": "4209",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Justin_Trudeau> . ?uri <http://dbpedia.org/ontology/majorShrine> ?x  . }",
    "entity mapping": [
      {
        "label": "Justin Trudeau",
        "uri": "http://dbpedia.org/resource/Justin_Trudeau"
      }
    ],
    "id": "f897b6b86feb462eab03a36bc0502824",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "shrines",
        "uri": "http://dbpedia.org/ontology/majorShrine"
      }
    ]
  },
  {
    "question": "List the uni. having affiliation with Graham Holding Company and have a campus in Iowa ?",
    "SerialNumber": "4213",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/affiliations> <http://dbpedia.org/resource/Graham_Holdings_Company> . ?uri <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Iowa>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "holding company graham",
        "uri": "http://dbpedia.org/resource/Graham_Holdings_Company"
      },
      {
        "label": "Iowa",
        "uri": "http://dbpedia.org/resource/Iowa"
      }
    ],
    "id": "efb6271731a0486c9038f72e14ad2143",
    "predicate mapping": [
      {
        "label": "affiliation",
        "uri": "http://dbpedia.org/property/affiliations"
      },
      {
        "label": "campus",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "Company",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Where did the employees of American College of Surgeons study?",
    "SerialNumber": "4216",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/workInstitutions> <http://dbpedia.org/resource/American_College_of_Surgeons> . ?x <http://dbpedia.org/ontology/education> ?uri  . }",
    "entity mapping": [
      {
        "label": "American College of Surgeons",
        "uri": "http://dbpedia.org/resource/American_College_of_Surgeons"
      }
    ],
    "id": "4ef28f32c3dc4c17a10aaed5ef42c084",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/education"
      }
    ]
  },
  {
    "question": "In how many different places do Starwood hotels and resorts worldwide operate?",
    "SerialNumber": "4217",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/operator> <http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide> . ?x <http://dbpedia.org/property/address> ?uri  . }",
    "entity mapping": [
      {
        "label": "Starwood hotels and resorts worldwide",
        "uri": "http://dbpedia.org/resource/Starwood_Hotels_and_Resorts_Worldwide"
      }
    ],
    "id": "e96091eb6e334719adfadbe72dea01c8",
    "predicate mapping": [
      {
        "label": "operate",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "operate",
        "uri": "http://dbpedia.org/property/address"
      }
    ]
  },
  {
    "question": "Who was the head coach of Middlesbrough F.C. season 2006-7 also the coach of England national under 21 footbal team ?",
    "SerialNumber": "4220",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006–07_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri. <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri} ",
    "entity mapping": [
      {
        "label": "middlesbrough season",
        "uri": "http://dbpedia.org/resource/2006–07_Middlesbrough_F.C._season"
      },
      {
        "label": "national footbal england under team",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team"
      }
    ],
    "id": "cedb96883e1c403a8e3e85521917b919",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      }
    ]
  },
  {
    "question": "How many players are in the San Francisco Giants?",
    "SerialNumber": "4222",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/San_Francisco_Giants>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "San Francisco Giants",
        "uri": "http://dbpedia.org/resource/San_Francisco_Giants"
      }
    ],
    "id": "6c08066f4c4a468eabda070b76f407e2",
    "predicate mapping": [
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "players",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "Where did Aghasalim Childagh die?",
    "SerialNumber": "4226",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Aghasalim_Childagh> <http://dbpedia.org/property/deathDate> ?uri } ",
    "entity mapping": [
      {
        "label": "Aghasalim Childagh",
        "uri": "http://dbpedia.org/resource/Aghasalim_Childagh"
      }
    ],
    "id": "51d0d9be06c244229efab43ae8e9d45d",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/deathDate"
      }
    ]
  },
  {
    "question": "Name the office holder whose constituency are Duboce Triangle and Haight-Ashbury ?",
    "SerialNumber": "4228",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "triangle duboce",
        "uri": "http://dbpedia.org/resource/Duboce_Triangle,_San_Francisco"
      },
      {
        "label": "Haight-Ashbury",
        "uri": "http://dbpedia.org/resource/Haight-Ashbury"
      }
    ],
    "id": "8b82edef302d47feaa60aaf940fbf225",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which Tim Birton's movie has a screenplay by Daniel Waters ?",
    "SerialNumber": "4232",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/screenplay> <http://dbpedia.org/resource/Daniel_Waters_(screenwriter)> . ?uri <http://dbpedia.org/property/director> <http://dbpedia.org/resource/Tim_Burton>  . }",
    "entity mapping": [
      {
        "label": "Daniel Waters",
        "uri": "http://dbpedia.org/resource/Daniel_Waters_(screenwriter)"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Tim_Burton"
      }
    ],
    "id": "16be3ab972a8420cb9d1ab24a7d7ee5b",
    "predicate mapping": [
      {
        "label": "screenplay",
        "uri": "http://dbpedia.org/property/screenplay"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/property/director"
      }
    ]
  },
  {
    "question": "Who is the stock holder of the bank where  Peter Grauer works  ?",
    "SerialNumber": "4233",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Peter_Grauer> <http://dbpedia.org/property/occupation> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bank>}",
    "entity mapping": [
      {
        "label": "Peter Grauer",
        "uri": "http://dbpedia.org/resource/Peter_Grauer"
      }
    ],
    "id": "25d2a7baa3b14844812b55facf7b52e1",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/occupation"
      },
      {
        "label": "holder",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "bank",
        "uri": "http://dbpedia.org/ontology/Bank"
      }
    ]
  },
  {
    "question": "In which areas did the pupils of Sylvain Levi work?",
    "SerialNumber": "4234",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/academicAdvisor> <http://dbpedia.org/resource/Sylvain_Lévi> . ?x <http://dbpedia.org/property/fields> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sylvain Levi",
        "uri": "http://dbpedia.org/resource/Sylvain_Lévi"
      }
    ],
    "id": "d353e53adbc14a819a6b8cb914e9288f",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/ontology/academicAdvisor"
      },
      {
        "label": "area",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "Which awards have Puerto Ricons won?",
    "SerialNumber": "4235",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/ethnicity> <http://dbpedia.org/resource/Puerto_Rico> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "Puerto Rico",
        "uri": "http://dbpedia.org/resource/Puerto_Rico"
      }
    ],
    "id": "c3d6509c0674423e8ae5a2a25f581062",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "Name all the hubs of the airlines whose one of the hubs is Selangir ?",
    "SerialNumber": "4236",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/hubs> <http://dbpedia.org/resource/Selangor> . ?x <http://dbpedia.org/property/hubs> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Airline>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Selangor"
      }
    ],
    "id": "60dc7ef22ac346bc876c2956344ebbbc",
    "predicate mapping": [
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "hubs",
        "uri": "http://dbpedia.org/property/hubs"
      },
      {
        "label": "airline",
        "uri": "http://dbpedia.org/ontology/Airline"
      }
    ]
  },
  {
    "question": "How many parties have come in power in elections where Y. S. Rajasekhara Reddy won?",
    "SerialNumber": "4238",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leader> <http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy> . ?x <http://dbpedia.org/ontology/affiliation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Rajasekhara Reddy",
        "uri": "http://dbpedia.org/resource/Y._S._Rajasekhara_Reddy"
      }
    ],
    "id": "e6f50ea5f26b41a2bbee70ecae25690d",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/affiliation"
      }
    ]
  },
  {
    "question": "What do typically NGOs work for?",
    "SerialNumber": "4242",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Non-governmental_organization> . ?x <http://dbpedia.org/property/purpose> ?uri  . }",
    "entity mapping": [
      {
        "label": "NGOs",
        "uri": "http://dbpedia.org/resource/Non-governmental_organization"
      }
    ],
    "id": "285b636ff13c48e1bcd7306d6a9b680a",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/type"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/purpose"
      }
    ]
  },
  {
    "question": "How many awards have been given to the ones who died of lung cancer?",
    "SerialNumber": "4245",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/deathCause> <http://dbpedia.org/resource/Lung_cancer> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Award>}",
    "entity mapping": [
      {
        "label": "lung cancer",
        "uri": "http://dbpedia.org/resource/Lung_cancer"
      }
    ],
    "id": "7fbcbc8dbf064a76a60ec0159eeb54f0",
    "predicate mapping": [
      {
        "label": "died",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/Award"
      }
    ]
  },
  {
    "question": "Which show's network is Prime time Entertainment and has Douglas Netter as executive producer ?",
    "SerialNumber": "4246",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Prime_Time_Entertainment_Network> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Douglas_Netter>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "entertainment network prime time",
        "uri": "http://dbpedia.org/resource/Prime_Time_Entertainment_Network"
      },
      {
        "label": "Douglas Netter",
        "uri": "http://dbpedia.org/resource/Douglas_Netter"
      }
    ],
    "id": "d12e9dcf5e3944eb88c56c3e6cdab8ad",
    "predicate mapping": [
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "show's",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many countries surround the sea into which the Upper Neratva flow?",
    "SerialNumber": "4247",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Upper_Neretva> <http://dbpedia.org/ontology/riverMouth> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Upper Neratva",
        "uri": "http://dbpedia.org/resource/Upper_Neretva"
      }
    ],
    "id": "7b3af4a72c904d328c38aa676e5e556d",
    "predicate mapping": [
      {
        "label": "flow",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/country"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Who collaborated with Johnny Cash and Kris Kristofferson ?",
    "SerialNumber": "4248",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Johnny_Cash> . ?uri <http://dbpedia.org/property/associatedActs> <http://dbpedia.org/resource/Kris_Kristofferson> . }",
    "entity mapping": [
      {
        "label": "Johnny Cash",
        "uri": "http://dbpedia.org/resource/Johnny_Cash"
      },
      {
        "label": "Kris Kristofferson",
        "uri": "http://dbpedia.org/resource/Kris_Kristofferson"
      }
    ],
    "id": "0ba454c0de9a4184b651f6e7a8d17307",
    "predicate mapping": [
      {
        "label": "collaborated",
        "uri": "http://dbpedia.org/property/associatedActs"
      },
      {
        "label": "collaborated",
        "uri": "http://dbpedia.org/property/associatedActs"
      }
    ]
  },
  {
    "question": "Is the Journal of Cerebral Blood Flow and Metabolism about Brains?",
    "SerialNumber": "4249",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism> <http://dbpedia.org/ontology/academicDiscipline> <http://dbpedia.org/resource/Brain> }",
    "entity mapping": [
      {
        "label": "metabolism cerebral journal blood",
        "uri": "http://dbpedia.org/resource/Journal_of_Cerebral_Blood_Flow_&_Metabolism"
      },
      {
        "label": "Brain",
        "uri": "http://dbpedia.org/resource/Brain"
      }
    ],
    "id": "d8c7892603d64401909742551945fd10",
    "predicate mapping": [
      {
        "label": "Metabolism",
        "uri": "http://dbpedia.org/ontology/academicDiscipline"
      }
    ]
  },
  {
    "question": "list some shawnee people?",
    "SerialNumber": "4252",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nationality> <http://dbpedia.org/resource/Shawnee> } ",
    "entity mapping": [
      {
        "label": "shawnee people",
        "uri": "http://dbpedia.org/resource/Shawnee"
      }
    ],
    "id": "8c154ef0c2574f25bdfcee184bd120a9",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/nationality"
      }
    ]
  },
  {
    "question": "Count the birthplaces of recepients of the National Museum of Racing and Hall of Fame.",
    "SerialNumber": "4253",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/honours> <http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "National Museum of Racing and Hall of Fame",
        "uri": "http://dbpedia.org/resource/National_Museum_of_Racing_and_Hall_of_Fame"
      }
    ],
    "id": "705316a27c694cf5ac53ee6bfd9bbed7",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/honours"
      },
      {
        "label": "birthplace",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "List down all the bands to which the writers of 03 Bonnie & Clyde are associated?",
    "SerialNumber": "4259",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/'03_Bonnie_&_Clyde> <http://dbpedia.org/ontology/writer> ?x . ?x <http://dbpedia.org/ontology/associatedBand> ?uri  . }",
    "entity mapping": [
      {
        "label": "bonnie clyde",
        "uri": "http://dbpedia.org/resource/'03_Bonnie_&_Clyde"
      }
    ],
    "id": "ec5f6894f5484d34a2f951ca88436084",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      }
    ]
  },
  {
    "question": "Which mainter of Pandaruan Bridge is also the land of Malaysia junior Hockey league ?",
    "SerialNumber": "4261",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pandaruan_Bridge> <http://dbpedia.org/ontology/maintainedBy> ?uri. <http://dbpedia.org/resource/Malaysia_Junior_Hockey_League> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "Pandaruan Bridge",
        "uri": "http://dbpedia.org/resource/Pandaruan_Bridge"
      },
      {
        "label": "Malaysia junior Hockey league",
        "uri": "http://dbpedia.org/resource/Malaysia_Junior_Hockey_League"
      }
    ],
    "id": "b03b5f24df79423eaa4cf91798ceaa81",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      },
      {
        "label": "land",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Organization holding stocks of  Galician and German wikipedias?",
    "SerialNumber": "4262",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Galician_Wikipedia> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/German_Wikipedia> <http://dbpedia.org/ontology/owner> ?uri . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Galician_Wikipedia"
      },
      {
        "label": "German wikipedia",
        "uri": "http://dbpedia.org/resource/German_Wikipedia"
      }
    ],
    "id": "5b4bb78a68b94d218437f69956f6fba9",
    "predicate mapping": [
      {
        "label": "Galician",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "Galician",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "In which companies boards do the writers of Wikitionary belong?",
    "SerialNumber": "4264",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Wiktionary> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/board> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Wiktionary"
      }
    ],
    "id": "dc3368caf7294bbea8b07fd01859706d",
    "predicate mapping": [
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      }
    ]
  },
  {
    "question": "Which Monty Python's movie is distributed by Cinema International Corporation ?",
    "SerialNumber": "4268",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/writer> <http://dbpedia.org/resource/Monty_Python> . ?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Monty Python",
        "uri": "http://dbpedia.org/resource/Monty_Python"
      },
      {
        "label": "Cinema International Corporation",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation"
      }
    ],
    "id": "f1363bc48be643bd99b68fa31d8b0d19",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "distributed by",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "Count the number of cities around the American Mediterranean Sea?",
    "SerialNumber": "4272",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/American_Mediterranean_Sea> <http://dbpedia.org/property/cities> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "American Mediterranean Sea",
        "uri": "http://dbpedia.org/resource/American_Mediterranean_Sea"
      }
    ],
    "id": "82ce66b7bf8f4a0dae15269c66cc2753",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "number",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "What are some employees of Uni of California, santa cruz?",
    "SerialNumber": "4273",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/employer> <http://dbpedia.org/resource/University_of_California,_Santa_Cruz>  . }",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/University_of_California,_Santa_Cruz"
      }
    ],
    "id": "3412c129527f4e78a14421f84b364adf",
    "predicate mapping": [
      {
        "label": "cruz",
        "uri": "http://dbpedia.org/property/employer"
      }
    ]
  },
  {
    "question": "What is the parent company of PrivateCore?",
    "SerialNumber": "4274",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/PrivateCore> } ",
    "entity mapping": [
      {
        "label": "PrivateCore",
        "uri": "http://dbpedia.org/resource/PrivateCore"
      }
    ],
    "id": "68d3363523454c20b8b113b8ca87eaed",
    "predicate mapping": [
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      }
    ]
  },
  {
    "question": "Over how many cities did the Bellaton MMA, Season 11 take place?",
    "SerialNumber": "4275",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven> <http://dbpedia.org/property/city> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Bellator_MMA:_Season_Eleven"
      }
    ],
    "id": "3e719418e0ae4a06bc1819295c66394e",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/property/city"
      }
    ]
  },
  {
    "question": "Name the hockey team which has head coach as Mike babcock and is based in Toronto ?",
    "SerialNumber": "4279",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/Toronto> . ?uri <http://dbpedia.org/property/headCoach> <http://dbpedia.org/resource/Mike_Babcock>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/HockeyTeam>}",
    "entity mapping": [
      {
        "label": "Toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      },
      {
        "label": "Mike babcock",
        "uri": "http://dbpedia.org/resource/Mike_Babcock"
      }
    ],
    "id": "7657e13a3b7e4ab58937e184cef0f93d",
    "predicate mapping": [
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "head coach",
        "uri": "http://dbpedia.org/property/headCoach"
      },
      {
        "label": "hockey team",
        "uri": "http://dbpedia.org/ontology/HockeyTeam"
      }
    ]
  },
  {
    "question": "Which incumbent of Al Gore presidential campaign wass also the president of Mike McCurry ?",
    "SerialNumber": "4280",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mike_McCurry_(press_secretary)> <http://dbpedia.org/ontology/president> ?uri. <http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000> <http://dbpedia.org/ontology/incumbent> ?uri} ",
    "entity mapping": [
      {
        "label": "Mike McCurry",
        "uri": "http://dbpedia.org/resource/Mike_McCurry_(press_secretary)"
      },
      {
        "label": "presidential campaign gore",
        "uri": "http://dbpedia.org/resource/Al_Gore_presidential_campaign,_2000"
      }
    ],
    "id": "b630eb72fd3f4ca194622759e3fdeb79",
    "predicate mapping": [
      {
        "label": "president",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "incumbent",
        "uri": "http://dbpedia.org/ontology/incumbent"
      }
    ]
  },
  {
    "question": "Where in the us military did pierre r graham and edwin f hunter work?",
    "SerialNumber": "4283",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Pierre_R._Graham> <http://dbpedia.org/property/branch> ?uri. <http://dbpedia.org/resource/Edwin_F._Hunter> <http://dbpedia.org/property/branch> ?uri . }",
    "entity mapping": [
      {
        "label": "pierre graham",
        "uri": "http://dbpedia.org/resource/Pierre_R._Graham"
      },
      {
        "label": "hunter edwin",
        "uri": "http://dbpedia.org/resource/Edwin_F._Hunter"
      }
    ],
    "id": "e5477236f4194919a7df41836fd59a7b",
    "predicate mapping": [
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "work",
        "uri": "http://dbpedia.org/property/branch"
      }
    ]
  },
  {
    "question": "In how many different highschools have people schooled in Penn State Nittany Lions football studied?",
    "SerialNumber": "4285",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/school> <http://dbpedia.org/resource/Penn_State_Nittany_Lions_football> . ?x <http://dbpedia.org/property/highschool> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/EducationalInstitution>}",
    "entity mapping": [
      {
        "label": "Penn State Nittany Lions football",
        "uri": "http://dbpedia.org/resource/Penn_State_Nittany_Lions_football"
      }
    ],
    "id": "f012a543e72c4aea922b35c177311d35",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/school"
      },
      {
        "label": "highschool",
        "uri": "http://dbpedia.org/property/highschool"
      },
      {
        "label": "studied",
        "uri": "http://dbpedia.org/ontology/EducationalInstitution"
      }
    ]
  },
  {
    "question": "What are some products of the the company whose subsidiary is Sony Corp shareholders and subsidies?",
    "SerialNumber": "4286",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries> . ?uri <http://dbpedia.org/ontology/manufacturer> ?x  . }",
    "entity mapping": [
      {
        "label": "Sony Corp",
        "uri": "http://dbpedia.org/resource/Sony_Corporation_shareholders_and_subsidiaries"
      }
    ],
    "id": "28d65bdcbc9a48288e72664ab13c4ddc",
    "predicate mapping": [
      {
        "label": "subsidiary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      },
      {
        "label": "subsidies",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "In which races did the horses of Mon Capitaine take part?",
    "SerialNumber": "4292",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sire> <http://dbpedia.org/resource/Mon_Capitaine> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Mon Capitaine",
        "uri": "http://dbpedia.org/resource/Mon_Capitaine"
      }
    ],
    "id": "12e72b1d62c843d09c2b6f02cab2cd04",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/sire"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "Which fictional character portrayed in Terminator 2: Judgment Day is painted by Josh Friedman?",
    "SerialNumber": "4298",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day> . ?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Terminator 2: Judgment Day",
        "uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day"
      },
      {
        "label": "Josh Friedman",
        "uri": "http://dbpedia.org/resource/Josh_Friedman"
      }
    ],
    "id": "380331c1f63e4822be0531e79d89d530",
    "predicate mapping": [
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer"
      },
      {
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What is the base currency of the country which operates the Marion Dufresne?",
    "SerialNumber": "4301",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Marion_Dufresne_(1995)> <http://dbpedia.org/ontology/operator> ?x . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
    "entity mapping": [
      {
        "label": "Marion Dufresne",
        "uri": "http://dbpedia.org/resource/Marion_Dufresne_(1995)"
      }
    ],
    "id": "e887507cbcda4bd8956a82825a4a84ac",
    "predicate mapping": [
      {
        "label": "operates",
        "uri": "http://dbpedia.org/ontology/operator"
      },
      {
        "label": "base currency",
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "Journals of how many fields can be found in US?",
    "SerialNumber": "4302",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/country> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/property/discipline> ?uri  . }",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "6f8cdbe8fb024dcbb7da14e008bca23c",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/country"
      },
      {
        "label": "fields",
        "uri": "http://dbpedia.org/property/discipline"
      }
    ]
  },
  {
    "question": "People born in Saint-Amand-en-Puisaye are famous for what things ?",
    "SerialNumber": "4307",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/birthPlace> <http://dbpedia.org/resource/Saint-Amand-en-Puisaye> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Saint-Amand-en-Puisaye",
        "uri": "http://dbpedia.org/resource/Saint-Amand-en-Puisaye"
      }
    ],
    "id": "88fe848accd14ee5a63e3264234651e8",
    "predicate mapping": [
      {
        "label": "born in",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      },
      {
        "label": "things",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "Radios on what topics can be tuned in to in Washington DC?",
    "SerialNumber": "4308",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/broadcastArea> <http://dbpedia.org/resource/Washington,_D.C.> . ?x <http://dbpedia.org/ontology/programmeFormat> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RadioStation>}",
    "entity mapping": [
      {
        "label": "Washington",
        "uri": "http://dbpedia.org/resource/Washington,_D.C."
      }
    ],
    "id": "4dbb409284b34e848777db3a91349022",
    "predicate mapping": [
      {
        "label": "DC",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      },
      {
        "uri": "http://dbpedia.org/ontology/programmeFormat"
      },
      {
        "label": "radios",
        "uri": "http://dbpedia.org/ontology/RadioStation"
      }
    ]
  },
  {
    "question": "List the goverener of Winston Bryant?",
    "SerialNumber": "4309",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Winston_Bryant> <http://dbpedia.org/property/governor> ?uri } ",
    "entity mapping": [
      {
        "label": "Winston Bryant",
        "uri": "http://dbpedia.org/resource/Winston_Bryant"
      }
    ],
    "id": "5088b38a69ba4f1f9f7c17c493dbb67e",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/governor"
      }
    ]
  },
  {
    "question": "Name the musician who was given label by Celluloid Records and has been associated with Africa'70 ?",
    "SerialNumber": "4311",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Celluloid_Records> . ?uri <http://dbpedia.org/ontology/associatedMusicalArtist> <http://dbpedia.org/resource/Africa_'70_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "Celluloid Records",
        "uri": "http://dbpedia.org/resource/Celluloid_Records"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Africa_'70_(band)"
      }
    ],
    "id": "aa54fbc2c1df4f47af6e7a074f77535f",
    "predicate mapping": [
      {
        "label": "label",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "associated",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "musician",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "What is the country where Sergei Ovchinnikov the volleyball player die, and Gumus was first aired ?",
    "SerialNumber": "4312",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Gümüş_(TV_series)> <http://dbpedia.org/property/firstAired> ?uri. <http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gümüş_(TV_series)"
      },
      {
        "label": "Sergei Ovchinnikov",
        "uri": "http://dbpedia.org/resource/Sergei_Ovchinnikov_(volleyball)"
      }
    ],
    "id": "a74c7e7aafe049f6b82e092e907da465",
    "predicate mapping": [
      {
        "label": "first aired",
        "uri": "http://dbpedia.org/property/firstAired"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Does Walson Augustin play for the Brothers Union?",
    "SerialNumber": "4315",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Walson_Augustin> <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/Brothers_Union> }",
    "entity mapping": [
      {
        "label": "Walson Augustin",
        "uri": "http://dbpedia.org/resource/Walson_Augustin"
      },
      {
        "label": "Brothers Union",
        "uri": "http://dbpedia.org/resource/Brothers_Union"
      }
    ],
    "id": "f08511a93db54c32a2dcbc4a4f4d74d4",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub"
      }
    ]
  },
  {
    "question": "What are the prizes won by the animator of The Skeleton Dance ?",
    "SerialNumber": "4316",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/The_Skeleton_Dance> <http://dbpedia.org/ontology/animator> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . }",
    "entity mapping": [
      {
        "label": "The Skeleton Dance",
        "uri": "http://dbpedia.org/resource/The_Skeleton_Dance"
      }
    ],
    "id": "216cc8eb3adc4058b3dae6dc542bc2cc",
    "predicate mapping": [
      {
        "label": "animator",
        "uri": "http://dbpedia.org/ontology/animator"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/award"
      }
    ]
  },
  {
    "question": "List the Swedish newspaper headquarted in Stockholm ? ",
    "SerialNumber": "4317",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/language> <http://dbpedia.org/resource/Swedish_language> . ?uri <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Stockholm>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "swedish",
        "uri": "http://dbpedia.org/resource/Swedish_language"
      },
      {
        "label": "Stockholm",
        "uri": "http://dbpedia.org/resource/Stockholm"
      }
    ],
    "id": "12811fd9d1ea480ca482f1b7a6f61ea8",
    "predicate mapping": [
      {
        "label": "Swedish",
        "uri": "http://dbpedia.org/property/language"
      },
      {
        "label": "headquarted",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "How many different writers have written for Jump Square?",
    "SerialNumber": "4323",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/magazine> <http://dbpedia.org/resource/Jump_Square> . ?x <http://dbpedia.org/property/author> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jump Square",
        "uri": "http://dbpedia.org/resource/Jump_Square"
      }
    ],
    "id": "5d24a8016b944ebd949de53d198f4823",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/magazine"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/property/author"
      }
    ]
  },
  {
    "question": "How many politicians reside in Cape Town?",
    "SerialNumber": "4326",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/Cape_Town>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Cape Town",
        "uri": "http://dbpedia.org/resource/Cape_Town"
      }
    ],
    "id": "2067b624202249069e8e6fa28ea3b460",
    "predicate mapping": [
      {
        "label": "reside",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Who wrote the mangas produced by Masahike Minami?",
    "SerialNumber": "4327",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/producer> <http://dbpedia.org/resource/Masahiko_Minami> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Manga>}",
    "entity mapping": [
      {
        "label": "Masahike Minami",
        "uri": "http://dbpedia.org/resource/Masahiko_Minami"
      }
    ],
    "id": "08222072602a432fb36950cb1d93428a",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/property/producer"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "manga",
        "uri": "http://dbpedia.org/ontology/Manga"
      }
    ]
  },
  {
    "question": "How many architects are there who have made something used by Oakland athletics?",
    "SerialNumber": "4329",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Oakland_Athletics> . ?x <http://dbpedia.org/property/architect> ?uri  . }",
    "entity mapping": [
      {
        "label": "Oakland athletics",
        "uri": "http://dbpedia.org/resource/Oakland_Athletics"
      }
    ],
    "id": "acbfdfd774604545abda627572f18dca",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "architect",
        "uri": "http://dbpedia.org/property/architect"
      }
    ]
  },
  {
    "question": "Who has canonized someone who's a doctor of the church?",
    "SerialNumber": "4330",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/titles> <http://dbpedia.org/resource/Doctor_of_the_Church> . ?x <http://dbpedia.org/ontology/canonizedBy> ?uri  . }",
    "entity mapping": [
      {
        "label": "doctor of the church",
        "uri": "http://dbpedia.org/resource/Doctor_of_the_Church"
      }
    ],
    "id": "9cf295983ac2497eaa90acc50a0e9839",
    "predicate mapping": [
      {
        "label": "who's",
        "uri": "http://dbpedia.org/property/titles"
      },
      {
        "label": "canonized",
        "uri": "http://dbpedia.org/ontology/canonizedBy"
      }
    ]
  },
  {
    "question": "What municipalities are adjacent to Chne-Bougeries?",
    "SerialNumber": "4335",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/neighboringMunicipalities> <http://dbpedia.org/resource/Chêne-Bougeries>  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Chêne-Bougeries"
      }
    ],
    "id": "3bf63415902341c8804e4053a565b1cc",
    "predicate mapping": [
      {
        "label": "municipalities",
        "uri": "http://dbpedia.org/property/neighboringMunicipalities"
      }
    ]
  },
  {
    "question": "Which river's source mountain is Baikal Mountains and is located in Laptev Sea ?",
    "SerialNumber": "4338",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/sourceMountain> <http://dbpedia.org/resource/Baikal_Mountains> . ?uri <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Laptev_Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Baikal Mountains",
        "uri": "http://dbpedia.org/resource/Baikal_Mountains"
      },
      {
        "label": "Laptev Sea",
        "uri": "http://dbpedia.org/resource/Laptev_Sea"
      }
    ],
    "id": "6597dba043f3446ab99c8ec65686e304",
    "predicate mapping": [
      {
        "label": "source mountain",
        "uri": "http://dbpedia.org/ontology/sourceMountain"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What are some musical artists associated with the ones signed up with EMI?",
    "SerialNumber": "4339",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordLabel> <http://dbpedia.org/resource/EMI> . ?x <http://dbpedia.org/ontology/associatedMusicalArtist> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalArtist>}",
    "entity mapping": [
      {
        "label": "EMI",
        "uri": "http://dbpedia.org/resource/EMI"
      }
    ],
    "id": "c1be660170c343e1a9cfe8079b722267",
    "predicate mapping": [
      {
        "label": "signed",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      },
      {
        "label": "associated musical",
        "uri": "http://dbpedia.org/ontology/associatedMusicalArtist"
      },
      {
        "label": "musical artist",
        "uri": "http://dbpedia.org/ontology/MusicalArtist"
      }
    ]
  },
  {
    "question": "Give me the list of people who scaled mountains in Sierra Nevada?",
    "SerialNumber": "4343",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mountainRange> <http://dbpedia.org/resource/Sierra_Nevada_(U.S.)> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . }",
    "entity mapping": [
      {
        "label": "Sierra Nevada",
        "uri": "http://dbpedia.org/resource/Sierra_Nevada_(U.S.)"
      }
    ],
    "id": "b9af1aab1cdb4df3b8aad53370c82fd7",
    "predicate mapping": [
      {
        "label": "mountains",
        "uri": "http://dbpedia.org/ontology/mountainRange"
      },
      {
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "Who studied in universities located in suburbs?",
    "SerialNumber": "4344",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/campus> <http://dbpedia.org/resource/Suburb> . ?uri <http://dbpedia.org/property/education> ?x  . }",
    "entity mapping": [
      {
        "label": "suburb",
        "uri": "http://dbpedia.org/resource/Suburb"
      }
    ],
    "id": "de004bcd703247ab981d0d8784c0b7e0",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/campus"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "Name the river with Readin, Brekshire in its path and mouth place is Sothend-on-sea ?",
    "SerialNumber": "4345",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/city> <http://dbpedia.org/resource/Reading,_Berkshire> . ?uri <http://dbpedia.org/ontology/mouthPlace> <http://dbpedia.org/resource/Southend-on-Sea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Reading,_Berkshire"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Southend-on-Sea"
      }
    ],
    "id": "ce0a65de462c4482be2bcc4c57c67e39",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/property/city"
      },
      {
        "label": "mouth place",
        "uri": "http://dbpedia.org/ontology/mouthPlace"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Who  won the Lovelace Medal and the Norbert Wiener Award for Social and Professional Responsibility?",
    "SerialNumber": "4355",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Lovelace_Medal> . ?uri <http://dbpedia.org/property/prizes> <http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility> . }",
    "entity mapping": [
      {
        "label": "Lovelace Medal",
        "uri": "http://dbpedia.org/resource/Lovelace_Medal"
      },
      {
        "label": "Norbert Wiener Award for Social and Professional Responsibility",
        "uri": "http://dbpedia.org/resource/Norbert_Wiener_Award_for_Social_and_Professional_Responsibility"
      }
    ],
    "id": "7d3aa7abddce4885924e51a17c2b5e0d",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/prizes"
      }
    ]
  },
  {
    "question": "Which TV show's setting is in Massachusetts and is the subsequent work of Fraiser ?",
    "SerialNumber": "4357",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsequentWork> <http://dbpedia.org/resource/Frasier> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Frasier"
      },
      {
        "label": "Massachusetts",
        "uri": "http://dbpedia.org/resource/Massachusetts"
      }
    ],
    "id": "179e610843e145489491954c3a91b179",
    "predicate mapping": [
      {
        "label": "subsequent work",
        "uri": "http://dbpedia.org/ontology/subsequentWork"
      },
      {
        "label": "Fraiser",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "show's",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Name the company whose key person is Raymond Conner and produces Boeing CH-47 Chinook?",
    "SerialNumber": "4361",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/keyPeople> <http://dbpedia.org/resource/Raymond_Conner> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Boeing_CH-47_Chinook>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Raymond Conner",
        "uri": "http://dbpedia.org/resource/Raymond_Conner"
      },
      {
        "label": "Boeing CH-47 Chinook",
        "uri": "http://dbpedia.org/resource/Boeing_CH-47_Chinook"
      }
    ],
    "id": "59b915743bb142afb10240174db2a7d0",
    "predicate mapping": [
      {
        "label": "key",
        "uri": "http://dbpedia.org/property/keyPeople"
      },
      {
        "label": "produces",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "How many famous people are from the Filipinos?",
    "SerialNumber": "4362",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/Filipinos>  . }",
    "entity mapping": [
      {
        "label": "Filipinos",
        "uri": "http://dbpedia.org/resource/Filipinos"
      }
    ],
    "id": "1f6af3eda6964bc7a5230797aaa04e0f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Who is considered to be the deciding person when it comes to crustaceans from the Balanidae family?",
    "SerialNumber": "4365",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Balanidae> . ?x <http://dbpedia.org/ontology/binomialAuthority> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Crustacean>}",
    "entity mapping": [
      {
        "label": "Balanidae",
        "uri": "http://dbpedia.org/resource/Balanidae"
      }
    ],
    "id": "4803820b51af42549d4d664118ac2d00",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/family"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      },
      {
        "label": "crustacean",
        "uri": "http://dbpedia.org/ontology/Crustacean"
      }
    ]
  },
  {
    "question": "Name the subsidary of Tandem Computers which was founded by Jim Harris ?",
    "SerialNumber": "4369",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Tandem_Computers> . ?uri <http://dbpedia.org/ontology/foundedBy> <http://dbpedia.org/resource/Jim_Harris_(entrepreneur)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Tandem Computers",
        "uri": "http://dbpedia.org/resource/Tandem_Computers"
      },
      {
        "label": "Jim Harris",
        "uri": "http://dbpedia.org/resource/Jim_Harris_(entrepreneur)"
      }
    ],
    "id": "0e868d8761e84ba0981c4780e8fd572f",
    "predicate mapping": [
      {
        "label": "subsidary",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      },
      {
        "label": "was founded by",
        "uri": "http://dbpedia.org/ontology/foundedBy"
      },
      {
        "label": "subsidary",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Who is  related to Kelly Osbourne & Ozzy Osbourne?",
    "SerialNumber": "4371",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Kelly_Osbourne> . ?uri <http://dbpedia.org/property/relatives> <http://dbpedia.org/resource/Ozzy_Osbourne> . }",
    "entity mapping": [
      {
        "label": "Kelly Osbourne",
        "uri": "http://dbpedia.org/resource/Kelly_Osbourne"
      },
      {
        "label": "Ozzy Osbourne",
        "uri": "http://dbpedia.org/resource/Ozzy_Osbourne"
      }
    ],
    "id": "53694c0e5c2548419756478331137c13",
    "predicate mapping": [
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/relatives"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/relatives"
      }
    ]
  },
  {
    "question": "What are some things people born in Louisiana are famous for?",
    "SerialNumber": "4376",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/placeOfBirth> <http://dbpedia.org/resource/Louisiana> . ?x <http://dbpedia.org/property/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Louisiana",
        "uri": "http://dbpedia.org/resource/Louisiana"
      }
    ],
    "id": "7b6a1325fab14f1c91fb9c24f98be16c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/knownFor"
      }
    ]
  },
  {
    "question": "Is Neungin High school a buddhist school?",
    "SerialNumber": "4377",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> <http://dbpedia.org/resource/Buddhism> }",
    "entity mapping": [
      {
        "label": "Neungin High school",
        "uri": "http://dbpedia.org/resource/Neungin_High_School"
      },
      {
        "label": "buddhist",
        "uri": "http://dbpedia.org/resource/Buddhism"
      }
    ],
    "id": "c51d1f39ce0e4040be9f32af0eefad06",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      }
    ]
  },
  {
    "question": "How many people have played for the ones who own the stadium of Bankers Life Fieldhouse?",
    "SerialNumber": "4379",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/arena> <http://dbpedia.org/resource/Bankers_Life_Fieldhouse> . ?uri <http://dbpedia.org/property/team> ?x  . }",
    "entity mapping": [
      {
        "label": "Bankers Life Fieldhouse",
        "uri": "http://dbpedia.org/resource/Bankers_Life_Fieldhouse"
      }
    ],
    "id": "c0ee1e99d29e4deb86fc700898d5bed5",
    "predicate mapping": [
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/arena"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/property/team"
      }
    ]
  },
  {
    "question": "Count the battles fought by Raoul Magrin-Vernerey?",
    "SerialNumber": "4381",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Raoul_Magrin-Vernerey> <http://dbpedia.org/property/battles> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Raoul Magrin-Vernerey",
        "uri": "http://dbpedia.org/resource/Raoul_Magrin-Vernerey"
      }
    ],
    "id": "074f740dbbf64210b7a84f51d6f9e6bd",
    "predicate mapping": [
      {
        "label": "battles",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Who are the people whose phD advisor was Harry Harlow?",
    "SerialNumber": "4383",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/Harry_Harlow>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Harry Harlow",
        "uri": "http://dbpedia.org/resource/Harry_Harlow"
      }
    ],
    "id": "a0360818041d40528ccba0161760b180",
    "predicate mapping": [
      {
        "label": "phD advisor",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which sitcoms are made by a company headquartered in NYC?",
    "SerialNumber": "4386",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/New_York_City> . ?uri <http://dbpedia.org/ontology/company> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/New_York_City"
      }
    ],
    "id": "21af0cba33be4e3a978696b579445972",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/company"
      },
      {
        "label": "NYC",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which river starts from the county seat of Heathsville, Virginia?",
    "SerialNumber": "4389",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/countySeat> <http://dbpedia.org/resource/Heathsville,_Virginia> . ?uri <http://dbpedia.org/property/mouthLocation> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Heathsville, Virginia",
        "uri": "http://dbpedia.org/resource/Heathsville,_Virginia"
      }
    ],
    "id": "1c466c5bdf984fa28bf9ba070374e8a8",
    "predicate mapping": [
      {
        "label": "county seat",
        "uri": "http://dbpedia.org/ontology/countySeat"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Where were sverre krogh sundbo and havard vad petersson born?",
    "SerialNumber": "4390",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sverre_Krogh_Sundbø> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Håvard_Vad_Petersson> <http://dbpedia.org/property/placeOfBirth> ?uri} ",
    "entity mapping": [
      {
        "label": "sverre krogh sundbo",
        "uri": "http://dbpedia.org/resource/Sverre_Krogh_Sundbø"
      },
      {
        "label": "petersson",
        "uri": "http://dbpedia.org/resource/Håvard_Vad_Petersson"
      }
    ],
    "id": "be80acb7f7b34c65b0e6ea8452711a51",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfBirth"
      }
    ]
  },
  {
    "question": "where is the thorington train station located?",
    "SerialNumber": "4391",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Thorington_railway_station> <http://dbpedia.org/ontology/district> ?uri } ",
    "entity mapping": [
      {
        "label": "thorington station",
        "uri": "http://dbpedia.org/resource/Thorington_railway_station"
      }
    ],
    "id": "a0f82706207747b0b7e49ff34a2321ab",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/district"
      }
    ]
  },
  {
    "question": "Name the company founded in US and created Visual Studio ?",
    "SerialNumber": "4394",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/United_States"
      },
      {
        "label": "Visual Studio",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio"
      }
    ],
    "id": "534aa17cdbb94593be95eb3051ede21e",
    "predicate mapping": [
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What are the albums whose artists have performed with the Tangerine Dream?",
    "SerialNumber": "4397",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/associatedBand> <http://dbpedia.org/resource/Tangerine_Dream> . ?uri <http://dbpedia.org/property/artist> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Album>}",
    "entity mapping": [
      {
        "label": "Tangerine Dream",
        "uri": "http://dbpedia.org/resource/Tangerine_Dream"
      }
    ],
    "id": "5e45892fa3ce4473ba70cdeecaff4d39",
    "predicate mapping": [
      {
        "label": "performed",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/property/artist"
      },
      {
        "label": "album",
        "uri": "http://dbpedia.org/ontology/Album"
      }
    ]
  },
  {
    "question": "Which house has published books about Jazz?",
    "SerialNumber": "4398",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/nonFictionSubject> <http://dbpedia.org/resource/Jazz> . ?x <http://dbpedia.org/ontology/publisher> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Jazz",
        "uri": "http://dbpedia.org/resource/Jazz"
      }
    ],
    "id": "aa8ca34e4003474990f876a54b184d6b",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/nonFictionSubject"
      },
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Which sucessor of George Madison is the sucessor of levi Lincoln, Sr. ?",
    "SerialNumber": "4406",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/Levi_Lincoln,_Sr.> <http://dbpedia.org/property/successor> ?uri} ",
    "entity mapping": [
      {
        "label": "George Madison",
        "uri": "http://dbpedia.org/resource/George_Madison"
      },
      {
        "label": "levi Lincoln, Sr.",
        "uri": "http://dbpedia.org/resource/Levi_Lincoln,_Sr."
      }
    ],
    "id": "2fb718468f46401ea78bc4721495af49",
    "predicate mapping": [
      {
        "label": "sucessor",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "sucessor",
        "uri": "http://dbpedia.org/property/successor"
      }
    ]
  },
  {
    "question": "What team is famous for Robert Nederlander and also the debuting team of Gary Sanchez?",
    "SerialNumber": "4408",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Nederlander> <http://dbpedia.org/ontology/knownFor> ?uri. <http://dbpedia.org/resource/Gary_Sánchez> <http://dbpedia.org/ontology/debutTeam> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsTeam>}",
    "entity mapping": [
      {
        "label": "Robert Nederlander",
        "uri": "http://dbpedia.org/resource/Robert_Nederlander"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gary_Sánchez"
      }
    ],
    "id": "a0ea895157fe4bc6ac0e2ac8f852f6b0",
    "predicate mapping": [
      {
        "label": "Sanchez",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/debutTeam"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/SportsTeam"
      }
    ]
  },
  {
    "question": "Which politicians died in cities built by the Roman emperor Charles 5?",
    "SerialNumber": "4411",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/builder> <http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor> . ?uri <http://dbpedia.org/ontology/deathPlace> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "emperor charles roman",
        "uri": "http://dbpedia.org/resource/Charles_V,_Holy_Roman_Emperor"
      }
    ],
    "id": "0863ef35f0474efda395d6bdafbcde40",
    "predicate mapping": [
      {
        "label": "built by",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "died in",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "Charles",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which broad cast area od CFRX is the country of North America Poker Tour ?",
    "SerialNumber": "4413",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/CFRX> <http://dbpedia.org/ontology/broadcastArea> ?uri. <http://dbpedia.org/resource/North_American_Poker_Tour> <http://dbpedia.org/ontology/country> ?uri} ",
    "entity mapping": [
      {
        "label": "CFRX",
        "uri": "http://dbpedia.org/resource/CFRX"
      },
      {
        "label": "america poker north tour",
        "uri": "http://dbpedia.org/resource/North_American_Poker_Tour"
      }
    ],
    "id": "da861f99dfe244209207a2f1ddbd8a39",
    "predicate mapping": [
      {
        "label": "broad cast area",
        "uri": "http://dbpedia.org/ontology/broadcastArea"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Which scientist was advised by John Robert Woodyard?",
    "SerialNumber": "4414",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/doctoralAdvisor> <http://dbpedia.org/resource/John_Robert_Woodyard>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "John Robert Woodyard",
        "uri": "http://dbpedia.org/resource/John_Robert_Woodyard"
      }
    ],
    "id": "eadddca2aa7a4d2daa245624e12ba871",
    "predicate mapping": [
      {
        "label": "advised",
        "uri": "http://dbpedia.org/property/doctoralAdvisor"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "How many bacterias have taxonomy as Bacillales and domain as Bacteria? ",
    "SerialNumber": "4416",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Bacillales> . ?uri <http://dbpedia.org/property/domain> <http://dbpedia.org/resource/Bacteria> } ",
    "entity mapping": [
      {
        "label": "Bacillales",
        "uri": "http://dbpedia.org/resource/Bacillales"
      },
      {
        "label": "Bacteria",
        "uri": "http://dbpedia.org/resource/Bacteria"
      }
    ],
    "id": "deee0126b45443878ab649c3acfb2756",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "domain",
        "uri": "http://dbpedia.org/property/domain"
      }
    ]
  },
  {
    "question": "In how many places are Marjas found?",
    "SerialNumber": "4418",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Marja'> . ?x <http://dbpedia.org/ontology/location> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>}",
    "entity mapping": [
      {
        "label": "Marjas",
        "uri": "http://dbpedia.org/resource/Marja'"
      }
    ],
    "id": "dd10bc648d304c6e87f26f46a808f82d",
    "predicate mapping": [
      {
        "label": "found",
        "uri": "http://dbpedia.org/property/title"
      },
      {
        "label": "found",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/Location"
      }
    ]
  },
  {
    "question": "What products do US companies make?",
    "SerialNumber": "4419",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/product> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "dcf94c6a97794f5eaa21c501a7046906",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the common religious affiliation of the Wickramabahu Central College (National School) and that of  Vesak?",
    "SerialNumber": "4421",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Vesak> <http://dbpedia.org/ontology/type> ?uri} ",
    "entity mapping": [
      {
        "label": "Wickramabahu Central College (National School)",
        "uri": "http://dbpedia.org/resource/Wickramabahu_Central_College_(National_School)"
      },
      {
        "label": "Vesak",
        "uri": "http://dbpedia.org/resource/Vesak"
      }
    ],
    "id": "df803beedd644f2685bc04e7975727c4",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      },
      {
        "label": "College",
        "uri": "http://dbpedia.org/ontology/type"
      }
    ]
  },
  {
    "question": "What are some shows whose voice actors play the piano?",
    "SerialNumber": "4428",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Piano> . ?uri <http://dbpedia.org/property/voices> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "piano",
        "uri": "http://dbpedia.org/resource/Piano"
      }
    ],
    "id": "829939d409714b7b9fb93dfd57ceccc9",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "voice",
        "uri": "http://dbpedia.org/property/voices"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where is the building located whose architect was Francis Palmer Smith?",
    "SerialNumber": "4429",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Francis_Palmer_Smith> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "Francis Palmer Smith",
        "uri": "http://dbpedia.org/resource/Francis_Palmer_Smith"
      }
    ],
    "id": "77bba5ef70ba44d79cf600cc5ea05d22",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/address"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Naval station mobile and naval support activity, naples are under which branch of Us military?",
    "SerialNumber": "4431",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Station_Mobile> <http://dbpedia.org/ontology/type> ?uri. <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryUnit>}",
    "entity mapping": [
      {
        "label": "Naval station mobile",
        "uri": "http://dbpedia.org/resource/Naval_Station_Mobile"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples"
      }
    ],
    "id": "80e469b7945f4f16a8801256c157cab0",
    "predicate mapping": [
      {
        "label": "branch",
        "uri": "http://dbpedia.org/ontology/type"
      },
      {
        "label": "branch",
        "uri": "http://dbpedia.org/ontology/type"
      },
      {
        "label": "military",
        "uri": "http://dbpedia.org/ontology/MilitaryUnit"
      }
    ]
  },
  {
    "question": "Name the team manger of Middlebrough F.C season 2006-07 ?",
    "SerialNumber": "4433",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2006–07_Middlesbrough_F.C._season> <http://dbpedia.org/ontology/manager> ?uri } ",
    "entity mapping": [
      {
        "label": "2006-07",
        "uri": "http://dbpedia.org/resource/2006–07_Middlesbrough_F.C._season"
      }
    ],
    "id": "e3851817df724055bf9d59adc6155746",
    "predicate mapping": [
      {
        "label": "season",
        "uri": "http://dbpedia.org/ontology/manager"
      }
    ]
  },
  {
    "question": "Who was in missions of Gemini 8 and Apollo 11?",
    "SerialNumber": "4436",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . }",
    "entity mapping": [
      {
        "label": "Gemini 8",
        "uri": "http://dbpedia.org/resource/Gemini_8"
      },
      {
        "label": "Apollo 11",
        "uri": "http://dbpedia.org/resource/Apollo_11"
      }
    ],
    "id": "a02542cdbf71477b8b35e4db7fa67cfa",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      },
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      }
    ]
  },
  {
    "question": "Who founded the league which was won by Joe McKeehen?",
    "SerialNumber": "4437",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/champion> <http://dbpedia.org/resource/Joe_McKeehen> . ?x <http://dbpedia.org/property/founded> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SportsLeague>}",
    "entity mapping": [
      {
        "label": "Joe McKeehen",
        "uri": "http://dbpedia.org/resource/Joe_McKeehen"
      }
    ],
    "id": "a222bccc883b4487896ae0312ec2c17c",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/champion"
      },
      {
        "label": "founded",
        "uri": "http://dbpedia.org/property/founded"
      },
      {
        "label": "league",
        "uri": "http://dbpedia.org/ontology/SportsLeague"
      }
    ]
  },
  {
    "question": "Give me some nominees of politicians in the US?",
    "SerialNumber": "4438",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/residence> <http://dbpedia.org/resource/United_States> . ?x <http://dbpedia.org/ontology/nominee> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "US",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "e905a1686f744be6b8e33f6c79a49c7b",
    "predicate mapping": [
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/residence"
      },
      {
        "label": "nominee",
        "uri": "http://dbpedia.org/ontology/nominee"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "To what did the parliament member swore her oath to, whose has sons is Lohan Ratwatte?",
    "SerialNumber": "4439",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Lohan_Ratwatte> . ?x <http://dbpedia.org/property/allegiance> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MemberOfParliament>}",
    "entity mapping": [
      {
        "label": "Lohan Ratwatte",
        "uri": "http://dbpedia.org/resource/Lohan_Ratwatte"
      }
    ],
    "id": "c34b719cd3be44ab82c70eb8f169d6c6",
    "predicate mapping": [
      {
        "label": "has sons",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "oath",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "label": "parliament member",
        "uri": "http://dbpedia.org/ontology/MemberOfParliament"
      }
    ]
  },
  {
    "question": "In which races have Tillingdale's horses participated?",
    "SerialNumber": "4440",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Tillingdale> . ?x <http://dbpedia.org/property/race> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Horse>}",
    "entity mapping": [
      {
        "label": "Tillingdale",
        "uri": "http://dbpedia.org/resource/Tillingdale"
      }
    ],
    "id": "0bd745b22ebe404a8b28d4cf5954c9e7",
    "predicate mapping": [
      {
        "label": "participated",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "race",
        "uri": "http://dbpedia.org/property/race"
      },
      {
        "label": "horse",
        "uri": "http://dbpedia.org/ontology/Horse"
      }
    ]
  },
  {
    "question": "Name the tv series produced by Stephen Ambrose and Erik Bork?",
    "SerialNumber": "4443",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Stephen_E._Ambrose> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "stephen ambrose",
        "uri": "http://dbpedia.org/resource/Stephen_E._Ambrose"
      },
      {
        "label": "Erik Bork",
        "uri": "http://dbpedia.org/resource/Erik_Bork"
      }
    ],
    "id": "605675f72f0449d6a0b72908f4546a13",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "Ambrose",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where do the railroads owned by the Chicago and Northwestern Transportation company begin?",
    "SerialNumber": "4445",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/system> <http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company> . ?x <http://dbpedia.org/ontology/routeStart> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "entity mapping": [
      {
        "label": "transportation",
        "uri": "http://dbpedia.org/resource/Chicago_and_North_Western_Transportation_Company"
      }
    ],
    "id": "e90f562181834b19b5ca9d4787d19f19",
    "predicate mapping": [
      {
        "label": "begin",
        "uri": "http://dbpedia.org/property/system"
      },
      {
        "label": "begin",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "begin",
        "uri": "http://dbpedia.org/ontology/RailwayLine"
      }
    ]
  },
  {
    "question": "Give me a list of all the buildings which are located in districts governed by John Tory.",
    "SerialNumber": "4447",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/John_Tory> . ?uri <http://dbpedia.org/ontology/location> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "John Tory",
        "uri": "http://dbpedia.org/resource/John_Tory"
      }
    ],
    "id": "2c2a4120329e4f2a96503a5534340a63",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Where can one find the Dzogchen Ponolop Rinpoche?",
    "SerialNumber": "4449",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche> <http://dbpedia.org/property/location> ?uri } ",
    "entity mapping": [
      {
        "label": "rinpoche dzogchen",
        "uri": "http://dbpedia.org/resource/Dzogchen_Ponlop_Rinpoche"
      }
    ],
    "id": "c43401a585454b6f9d0987e6511a91f9",
    "predicate mapping": [
      {
        "label": "Rinpoche",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "Did Bob Suci play for the New England Patriots?",
    "SerialNumber": "4451",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Bob_Suci> <http://dbpedia.org/property/pastteams> <http://dbpedia.org/resource/New_England_Patriots> }",
    "entity mapping": [
      {
        "label": "Bob Suci",
        "uri": "http://dbpedia.org/resource/Bob_Suci"
      },
      {
        "label": "New England Patriots",
        "uri": "http://dbpedia.org/resource/New_England_Patriots"
      }
    ],
    "id": "cb2281af4c674df6a881117802e8115c",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/pastteams"
      }
    ]
  },
  {
    "question": "What would be the most important creation which involved both Neil Cross and Russel Davies ?",
    "SerialNumber": "4452",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neil_Cross> <http://dbpedia.org/ontology/notableWork> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri . }",
    "entity mapping": [
      {
        "label": "Neil Cross",
        "uri": "http://dbpedia.org/resource/Neil_Cross"
      },
      {
        "label": "russel davies",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      }
    ],
    "id": "2435496704084a5992c396fcba62cd33",
    "predicate mapping": [
      {
        "label": "Davies",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "Davies",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "Which TV show produced by Paramount Television and is located in Massachusetts ?",
    "SerialNumber": "4454",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/company> <http://dbpedia.org/resource/Paramount_Television> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Paramount Television",
        "uri": "http://dbpedia.org/resource/Paramount_Television"
      },
      {
        "label": "Massachusetts",
        "uri": "http://dbpedia.org/resource/Massachusetts"
      }
    ],
    "id": "fa41d6a62ed040f5a195ea1fa799f2d4",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/company"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "How many labels sign up progressive rock artists?",
    "SerialNumber": "4457",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Progressive_rock> . ?x <http://dbpedia.org/ontology/recordLabel> ?uri  . }",
    "entity mapping": [
      {
        "label": "progressive rock",
        "uri": "http://dbpedia.org/resource/Progressive_rock"
      }
    ],
    "id": "17ce149639704a6da50a88f32bc5eff6",
    "predicate mapping": [
      {
        "label": "artists",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "label",
        "uri": "http://dbpedia.org/ontology/recordLabel"
      }
    ]
  },
  {
    "question": "Which indian party has won the arunachal pradesh elections of 2014, and has been in the 4th legislative assembly?",
    "SerialNumber": "4463",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014> <http://dbpedia.org/property/party> ?uri. <http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi> <http://dbpedia.org/property/party> ?uri . }",
    "entity mapping": [
      {
        "label": "legislative arunachal assembly",
        "uri": "http://dbpedia.org/resource/Arunachal_Pradesh_Legislative_Assembly_election,_2014"
      },
      {
        "label": "legislative assembly",
        "uri": "http://dbpedia.org/resource/Fourth_Legislative_Assembly_of_Delhi"
      }
    ],
    "id": "ee09ab7feb1344e7b513cd18e2f891e7",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "What is the party of the politicians whose children is Sanjay Gandhi ?",
    "SerialNumber": "4465",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Sanjay_Gandhi> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Sanjay Gandhi",
        "uri": "http://dbpedia.org/resource/Sanjay_Gandhi"
      }
    ],
    "id": "0cd8980e09074dc185a0889b18d53657",
    "predicate mapping": [
      {
        "label": "children",
        "uri": "http://dbpedia.org/property/children"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "politicians",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Who is the owner of the FC which owns the Cobham Training Centre?",
    "SerialNumber": "4466",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Cobham_Training_Centre> <http://dbpedia.org/property/owner> ?x . ?x <http://dbpedia.org/property/owner> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/SoccerClub>}",
    "entity mapping": [
      {
        "label": "Cobham Training Centre",
        "uri": "http://dbpedia.org/resource/Cobham_Training_Centre"
      }
    ],
    "id": "d348e34b15b34282bcca4892641b5f9d",
    "predicate mapping": [
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "owner",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/SoccerClub"
      }
    ]
  },
  {
    "question": "Name the river whose source is located in Ikelenge  District and mouth in Mozambique?",
    "SerialNumber": "4469",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District> . ?uri <http://dbpedia.org/property/mouthCountry> <http://dbpedia.org/resource/Mozambique>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "ikelenge district",
        "uri": "http://dbpedia.org/resource/Ikelenge_District"
      },
      {
        "label": "Mozambique",
        "uri": "http://dbpedia.org/resource/Mozambique"
      }
    ],
    "id": "b4321c4410c14121844377a286ff893f",
    "predicate mapping": [
      {
        "label": "source",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "mouth",
        "uri": "http://dbpedia.org/property/mouthCountry"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Who is the founder of the trade union with whom Amalgamated Clothing Workers of America is affiliated?",
    "SerialNumber": "4471",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America> <http://dbpedia.org/ontology/affiliation> ?x . ?x <http://dbpedia.org/property/founded> ?uri  . }",
    "entity mapping": [
      {
        "label": "Amalgamated Clothing Workers of America",
        "uri": "http://dbpedia.org/resource/Amalgamated_Clothing_Workers_of_America"
      }
    ],
    "id": "3691b72c47ef41ecb0642a31737f3b86",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "founder of",
        "uri": "http://dbpedia.org/property/founded"
      }
    ]
  },
  {
    "question": "What are some people working for the New York Post?",
    "SerialNumber": "4472",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/New_York_Post>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "New York Post",
        "uri": "http://dbpedia.org/resource/New_York_Post"
      }
    ],
    "id": "4af5c60efca84897ae3b0cf6c727f603",
    "predicate mapping": [
      {
        "label": "working for",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which gaming console's central processing unit is microprocessor and built by Sony?",
    "SerialNumber": "4473",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/cpu> <http://dbpedia.org/resource/Cell_(microprocessor)> . ?uri <http://dbpedia.org/ontology/manufacturer> <http://dbpedia.org/resource/Sony>  . }",
    "entity mapping": [
      {
        "label": "microprocessor",
        "uri": "http://dbpedia.org/resource/Cell_(microprocessor)"
      },
      {
        "label": "Sony",
        "uri": "http://dbpedia.org/resource/Sony"
      }
    ],
    "id": "001da0a604d74bae8d29e5bfc521e92e",
    "predicate mapping": [
      {
        "label": "central processing unit",
        "uri": "http://dbpedia.org/ontology/cpu"
      },
      {
        "label": "built by",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": "How many things have made different people living in Canada famous?",
    "SerialNumber": "4477",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/nationality> <http://dbpedia.org/resource/Canadians> . ?x <http://dbpedia.org/ontology/knownFor> ?uri  . }",
    "entity mapping": [
      {
        "label": "Canada",
        "uri": "http://dbpedia.org/resource/Canadians"
      }
    ],
    "id": "cb1b7e3030df44b592c6bca8cf93d76f",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/knownFor"
      }
    ]
  },
  {
    "question": "Which famous political figures are relatives to George Madison?",
    "SerialNumber": "4478",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/George_Madison> <http://dbpedia.org/ontology/relation> ?uri } ",
    "entity mapping": [
      {
        "label": "George Madison",
        "uri": "http://dbpedia.org/resource/George_Madison"
      }
    ],
    "id": "b9053f165ad74242808b096ce9040971",
    "predicate mapping": [
      {
        "label": "relatives",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "Which TV show's composer is Judy  Hart  Angelo and executive producer as Glen and Les Charles?",
    "SerialNumber": "4479",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Judy_Hart_Angelo> . ?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Glen_and_Les_Charles>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "angelo judy hart",
        "uri": "http://dbpedia.org/resource/Judy_Hart_Angelo"
      },
      {
        "label": "Glen and Les Charles",
        "uri": "http://dbpedia.org/resource/Glen_and_Les_Charles"
      }
    ],
    "id": "170a69d8ac1c40e0930df1a674d5c1cf",
    "predicate mapping": [
      {
        "label": "composer",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "label": "show's",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Is Maria Sharapova the silver medalist of Tennis at the 2012 Summer Olympics  Women's singles?",
    "SerialNumber": "4487",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_–_Women's_singles> <http://dbpedia.org/ontology/silverMedalist> <http://dbpedia.org/resource/Maria_Sharapova> }",
    "entity mapping": [
      {
        "label": "olympics women's singles tennis summer",
        "uri": "http://dbpedia.org/resource/Tennis_at_the_2012_Summer_Olympics_–_Women's_singles"
      },
      {
        "label": "Maria Sharapova",
        "uri": "http://dbpedia.org/resource/Maria_Sharapova"
      }
    ],
    "id": "3efd4b46f83649b8b2b937bbe752427f",
    "predicate mapping": [
      {
        "label": "medalist silver",
        "uri": "http://dbpedia.org/ontology/silverMedalist"
      }
    ]
  },
  {
    "question": "What is the layout of the cars similar to that of the Subaru Outback?",
    "SerialNumber": "4488",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/relatedMeanOfTransportation> <http://dbpedia.org/resource/Subaru_Outback> . ?x <http://dbpedia.org/ontology/layout> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Subaru Outback",
        "uri": "http://dbpedia.org/resource/Subaru_Outback"
      }
    ],
    "id": "f2f115531d7445d49155fe03258dffe1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/relatedMeanOfTransportation"
      },
      {
        "label": "layout",
        "uri": "http://dbpedia.org/ontology/layout"
      },
      {
        "label": "similar",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Where do the rivers starting from Zambia end?",
    "SerialNumber": "4489",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/sourceCountry> <http://dbpedia.org/resource/Zambia> . ?x <http://dbpedia.org/ontology/riverMouth> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Zambia",
        "uri": "http://dbpedia.org/resource/Zambia"
      }
    ],
    "id": "09a1b808c0fa4f2f8839a1ce8279556d",
    "predicate mapping": [
      {
        "label": "end",
        "uri": "http://dbpedia.org/ontology/sourceCountry"
      },
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is Naval Support Activity Naples a part of?",
    "SerialNumber": "4492",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Naval_Support_Activity_Naples> <http://dbpedia.org/ontology/type> ?uri } ",
    "entity mapping": [
      {
        "label": "Naval Support Activity Naples",
        "uri": "http://dbpedia.org/resource/Naval_Support_Activity_Naples"
      }
    ],
    "id": "81a79bece2344b4aaa91302154014fbc",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/type"
      }
    ]
  },
  {
    "question": "Which series was written by Eric Jendresen and John Orloff?",
    "SerialNumber": "4499",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/Erik_Jendresen> . ?uri <http://dbpedia.org/property/writer> <http://dbpedia.org/resource/John_Orloff> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "jendresen",
        "uri": "http://dbpedia.org/resource/Erik_Jendresen"
      },
      {
        "label": "John Orloff",
        "uri": "http://dbpedia.org/resource/John_Orloff"
      }
    ],
    "id": "a9844619aaa14527a44829ee64b0658b",
    "predicate mapping": [
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/property/writer"
      },
      {
        "label": "Jendresen",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Count the number of musical work which were sold by Sony Music?",
    "SerialNumber": "4500",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/label> <http://dbpedia.org/resource/Sony_Music_Entertainment> . ?uri <http://dbpedia.org/property/music> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MusicalWork>}",
    "entity mapping": [
      {
        "label": "Sony Music",
        "uri": "http://dbpedia.org/resource/Sony_Music_Entertainment"
      }
    ],
    "id": "a3f36caa2ac0432a9aca31a86472fe19",
    "predicate mapping": [
      {
        "label": "sold",
        "uri": "http://dbpedia.org/property/label"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "musical work",
        "uri": "http://dbpedia.org/ontology/MusicalWork"
      }
    ]
  },
  {
    "question": "Who was succeeded by Arthur Gegei as the office ho0lder ?",
    "SerialNumber": "4502",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/successor> <http://dbpedia.org/resource/Artúr_Görgei>  . }",
    "entity mapping": [
      {
        "label": "Arthur Gegei",
        "uri": "http://dbpedia.org/resource/Artúr_Görgei"
      }
    ],
    "id": "f59c8bc3349a4d1e8edfa572284dd9be",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/ontology/successor"
      }
    ]
  },
  {
    "question": "Does the mississippi orignate in the clearwater county, minnesota?",
    "SerialNumber": "4505",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mississippi_River> <http://dbpedia.org/ontology/sourceRegion> <http://dbpedia.org/resource/Clearwater_County,_Minnesota> }",
    "entity mapping": [
      {
        "label": "mississippi",
        "uri": "http://dbpedia.org/resource/Mississippi_River"
      },
      {
        "label": "clearwater county",
        "uri": "http://dbpedia.org/resource/Clearwater_County,_Minnesota"
      }
    ],
    "id": "6b16d12e156b4bb294b527c83c07f76a",
    "predicate mapping": [
      {
        "label": "minnesota",
        "uri": "http://dbpedia.org/ontology/sourceRegion"
      }
    ]
  },
  {
    "question": "Name the company with product lines like Visual studio and Surface ?",
    "SerialNumber": "4508",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Microsoft_Visual_Studio> . ?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Surface>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "Visual studio",
        "uri": "http://dbpedia.org/resource/Microsoft_Visual_Studio"
      },
      {
        "label": "surface",
        "uri": "http://dbpedia.org/resource/Microsoft_Surface"
      }
    ],
    "id": "a3c5942a30ca4e078b7cac835d4eb065",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which city is Black Grape Global located ?",
    "SerialNumber": "4513",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Black_Grape_Global> <http://dbpedia.org/ontology/locationCity> ?uri } ",
    "entity mapping": [
      {
        "label": "Black Grape Global",
        "uri": "http://dbpedia.org/resource/Black_Grape_Global"
      }
    ],
    "id": "1a57597da91944a4ac167a67fcca0174",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/locationCity"
      }
    ]
  },
  {
    "question": "Who preceded Lucius Crus as an office holder?",
    "SerialNumber": "4516",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/predecessor> <http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Lucius Crus",
        "uri": "http://dbpedia.org/resource/Lucius_Cornelius_Lentulus_Crus"
      }
    ],
    "id": "a234b1c5bf4d4ae29790e87b267333fc",
    "predicate mapping": [
      {
        "label": "preceded",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Which company has developed games whose music is done by Gerard Marino?",
    "SerialNumber": "4522",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/composer> <http://dbpedia.org/resource/Gerard_Marino> . ?x <http://dbpedia.org/ontology/developer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "Gerard Marino",
        "uri": "http://dbpedia.org/resource/Gerard_Marino"
      }
    ],
    "id": "d094fc39be5943518c758621e7598c9f",
    "predicate mapping": [
      {
        "label": "music",
        "uri": "http://dbpedia.org/ontology/composer"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "What would be a common border of Siberia and the shimsa plateau?",
    "SerialNumber": "4524",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Shimōsa_Plateau> <http://dbpedia.org/ontology/border> ?uri. <http://dbpedia.org/resource/Siberia> <http://dbpedia.org/ontology/border> ?uri . }",
    "entity mapping": [
      {
        "label": "plateau",
        "uri": "http://dbpedia.org/resource/Shimōsa_Plateau"
      },
      {
        "label": "Siberia",
        "uri": "http://dbpedia.org/resource/Siberia"
      }
    ],
    "id": "27ec0051c6fa4b6c8224afcec91fc1ac",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      }
    ]
  },
  {
    "question": "List the institute of Robert hall ?",
    "SerialNumber": "4525",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Robert_Hall_(economist)> <http://dbpedia.org/ontology/institution> ?uri } ",
    "entity mapping": [
      {
        "label": "Robert hall",
        "uri": "http://dbpedia.org/resource/Robert_Hall_(economist)"
      }
    ],
    "id": "c6c9dbbe628c4282bac952abf1b6d056",
    "predicate mapping": [
      {
        "label": "institute",
        "uri": "http://dbpedia.org/ontology/institution"
      }
    ]
  },
  {
    "question": "What are some shows by Comedy Central?",
    "SerialNumber": "4527",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/Comedy_Central>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Comedy Central",
        "uri": "http://dbpedia.org/resource/Comedy_Central"
      }
    ],
    "id": "e7fab35dd5cf469895cae4ef222fbcd7",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What are some magazines whose publishers are themselves Rock and Roll Hall of Fame members?",
    "SerialNumber": "4529",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/award> <http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Rock and Roll Hall of Fame",
        "uri": "http://dbpedia.org/resource/Rock_and_Roll_Hall_of_Fame"
      }
    ],
    "id": "b9b68b1ab73f47e48473bbb74c50ba1a",
    "predicate mapping": [
      {
        "label": "members",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "In which states can I find Truss bridges?",
    "SerialNumber": "4530",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/style> <http://dbpedia.org/resource/Truss_bridge> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Bridge>}",
    "entity mapping": [
      {
        "label": "Truss bridge",
        "uri": "http://dbpedia.org/resource/Truss_bridge"
      }
    ],
    "id": "25322000923943a3b7694bfcabc42a66",
    "predicate mapping": [
      {
        "label": "find",
        "uri": "http://dbpedia.org/property/style"
      },
      {
        "label": "state",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "bridge",
        "uri": "http://dbpedia.org/ontology/Bridge"
      }
    ]
  },
  {
    "question": "Does Richard Marx play guitar?",
    "SerialNumber": "4531",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Richard_Marx> <http://dbpedia.org/property/instrument> <http://dbpedia.org/resource/Guitar> }",
    "entity mapping": [
      {
        "label": "Richard Marx",
        "uri": "http://dbpedia.org/resource/Richard_Marx"
      },
      {
        "label": "guitar",
        "uri": "http://dbpedia.org/resource/Guitar"
      }
    ],
    "id": "e3dd3f0c6fa442b6ad746b3be43c9d41",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/instrument"
      }
    ]
  },
  {
    "question": "Which sea is surrounded by Rostock and Kaliningrad?",
    "SerialNumber": "4532",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Rostock> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Rostock",
        "uri": "http://dbpedia.org/resource/Rostock"
      },
      {
        "label": "Kaliningrad",
        "uri": "http://dbpedia.org/resource/Kaliningrad"
      }
    ],
    "id": "79a4891fa50c4add9ea19a97a185d544",
    "predicate mapping": [
      {
        "label": "surrounded",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "surrounded",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "Which university is led by Jay Gogue?",
    "SerialNumber": "4533",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/president> <http://dbpedia.org/resource/Jay_Gogue>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Jay Gogue",
        "uri": "http://dbpedia.org/resource/Jay_Gogue"
      }
    ],
    "id": "4d42ac9615894cb8b1670248b35ff581",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/ontology/president"
      },
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Whose commanders are John Mc Ewen and Park Chunghee?",
    "SerialNumber": "4537",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/John_McEwen> . ?uri <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Park_Chung-hee> . }",
    "entity mapping": [
      {
        "label": "john ewen mc",
        "uri": "http://dbpedia.org/resource/John_McEwen"
      },
      {
        "label": "Park Chunghee",
        "uri": "http://dbpedia.org/resource/Park_Chung-hee"
      }
    ],
    "id": "598d49c1f1db4938ab50cc5492fbf488",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      }
    ]
  },
  {
    "question": "Which high school of jerry Tagge is also the nearest city of Tennie laura ?",
    "SerialNumber": "4541",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Jerry_Tagge> <http://dbpedia.org/property/highSchool> ?uri. <http://dbpedia.org/resource/Tennie_and_Laura_(schooner)> <http://dbpedia.org/property/nearestCity> ?uri} ",
    "entity mapping": [
      {
        "label": "jerry Tagge",
        "uri": "http://dbpedia.org/resource/Jerry_Tagge"
      },
      {
        "label": "tennie laura",
        "uri": "http://dbpedia.org/resource/Tennie_and_Laura_(schooner)"
      }
    ],
    "id": "88f545749cc4451988e2442225fa9bca",
    "predicate mapping": [
      {
        "label": "high school",
        "uri": "http://dbpedia.org/property/highSchool"
      },
      {
        "label": "nearest city",
        "uri": "http://dbpedia.org/property/nearestCity"
      }
    ]
  },
  {
    "question": "In which cities were the chess grand masters born?",
    "SerialNumber": "4543",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Grandmaster_(chess)> . ?x <http://dbpedia.org/ontology/birthPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Grandmaster_(chess)"
      }
    ],
    "id": "ad0d34bb16504702b756a8c82100920b",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/title"
      },
      {
        "label": "born",
        "uri": "http://dbpedia.org/ontology/birthPlace"
      }
    ]
  },
  {
    "question": "What nation is the motherland of Ricardo Alfonso Cerna  where Apostolic Vicariate of El Petn is located?",
    "SerialNumber": "4546",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ricardo_Alfonso_Cerna> <http://dbpedia.org/property/birthPlace> ?uri. <http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Petén> <http://dbpedia.org/ontology/country> ?uri . }",
    "entity mapping": [
      {
        "label": "Ricardo Alfonso Cerna",
        "uri": "http://dbpedia.org/resource/Ricardo_Alfonso_Cerna"
      },
      {
        "label": "vicariate apostolic",
        "uri": "http://dbpedia.org/resource/Apostolic_Vicariate_of_El_Petén"
      }
    ],
    "id": "433a238279f1423380425f507a28d1b7",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "nation",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "What does the river end on whose border we find in Bjelasnica?",
    "SerialNumber": "4550",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/border> <http://dbpedia.org/resource/Bjelašnica> . ?x <http://dbpedia.org/ontology/mouthCountry> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bjelasnica",
        "uri": "http://dbpedia.org/resource/Bjelašnica"
      }
    ],
    "id": "9202537eff6a4bbba5a512ca97ef35ff",
    "predicate mapping": [
      {
        "label": "border",
        "uri": "http://dbpedia.org/ontology/border"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/ontology/mouthCountry"
      }
    ]
  },
  {
    "question": "Which newspapers are owned by Oslo citizens?",
    "SerialNumber": "4553",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Oslo> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "Oslo",
        "uri": "http://dbpedia.org/resource/Oslo"
      }
    ],
    "id": "1aa73156801547f1babc504ef1f539a5",
    "predicate mapping": [
      {
        "label": "citizens",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "Which hockey teams have had people playing as Defenceman?",
    "SerialNumber": "4554",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/property/playedFor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/IceHockeyPlayer>}",
    "entity mapping": [
      {
        "label": "Defenceman",
        "uri": "http://dbpedia.org/resource/Defenceman"
      }
    ],
    "id": "7794edb4bced489bad560bde6d7f1b1d",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "team",
        "uri": "http://dbpedia.org/property/playedFor"
      },
      {
        "label": "hockey",
        "uri": "http://dbpedia.org/ontology/IceHockeyPlayer"
      }
    ]
  },
  {
    "question": "What monument was unveiled in 1984 of fine arts of the Soviet Union ?",
    "SerialNumber": "4558",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union> <http://dbpedia.org/property/title> ?uri } ",
    "entity mapping": [
      {
        "label": "soviet union fine arts 1984",
        "uri": "http://dbpedia.org/resource/1984_in_fine_arts_of_the_Soviet_Union"
      }
    ],
    "id": "748e2f950c61435586ef72d009b2f7c1",
    "predicate mapping": [
      {
        "label": "Union",
        "uri": "http://dbpedia.org/property/title"
      }
    ]
  },
  {
    "question": "Which universities are also known as the Tulane Green wave?",
    "SerialNumber": "4559",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/nickname> <http://dbpedia.org/resource/Tulane_Green_Wave>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/University>}",
    "entity mapping": [
      {
        "label": "Tulane Green wave",
        "uri": "http://dbpedia.org/resource/Tulane_Green_Wave"
      }
    ],
    "id": "f9d4553365b340d89df7041600ddb304",
    "predicate mapping": [
      {
        "label": "known",
        "uri": "http://dbpedia.org/property/nickname"
      },
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/University"
      }
    ]
  },
  {
    "question": "Count the religions followed by people living in British Columbia.",
    "SerialNumber": "4562",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/property/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "British Columbia",
        "uri": "http://dbpedia.org/resource/British_Columbia"
      }
    ],
    "id": "3783ed5014f64bc59ce995cf1be1dc9c",
    "predicate mapping": [
      {
        "label": "living",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      }
    ]
  },
  {
    "question": "Where did the conflict take place where Louis Briere de I'Isle was a commander?",
    "SerialNumber": "4566",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Louis_Brière_de_l'Isle> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Louis Briere",
        "uri": "http://dbpedia.org/resource/Louis_Brière_de_l'Isle"
      }
    ],
    "id": "bd8a29101ec64bdaa50f4f3c3c3de808",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "de",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "conflict",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "How many publisher have been founded by american citizens?",
    "SerialNumber": "4567",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/stateOfOrigin> <http://dbpedia.org/resource/United_States> . ?uri <http://dbpedia.org/ontology/founder> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Publisher>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "1f1e8a30a2d348d09ee11446805e1382",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "founded by",
        "uri": "http://dbpedia.org/ontology/founder"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/Publisher"
      }
    ]
  },
  {
    "question": "In which city can I find both the office of Elasticsearch and the Yellow Claw DJ?",
    "SerialNumber": "4572",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Yellow_Claw_(DJs)> <http://dbpedia.org/property/location> ?uri. <http://dbpedia.org/resource/Elasticsearch> <http://dbpedia.org/property/location> ?uri . }",
    "entity mapping": [
      {
        "label": "Yellow Claw",
        "uri": "http://dbpedia.org/resource/Yellow_Claw_(DJs)"
      },
      {
        "label": "Elasticsearch",
        "uri": "http://dbpedia.org/resource/Elasticsearch"
      }
    ],
    "id": "00792920d6934b74b1aac3738f061200",
    "predicate mapping": [
      {
        "label": "DJ",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "DJ",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "Give me all magazines whose editors live in Chicago?",
    "SerialNumber": "4573",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/hometown> <http://dbpedia.org/resource/Chicago> . ?uri <http://dbpedia.org/property/editor> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Magazine>}",
    "entity mapping": [
      {
        "label": "Chicago",
        "uri": "http://dbpedia.org/resource/Chicago"
      }
    ],
    "id": "cc62ecdc3a6b49c0abb8041c806f783b",
    "predicate mapping": [
      {
        "label": "live",
        "uri": "http://dbpedia.org/ontology/hometown"
      },
      {
        "label": "editor",
        "uri": "http://dbpedia.org/property/editor"
      },
      {
        "label": "magazine",
        "uri": "http://dbpedia.org/ontology/Magazine"
      }
    ]
  },
  {
    "question": "Which religions are followed by people in England?",
    "SerialNumber": "4574",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/England> . ?x <http://dbpedia.org/property/religion> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "England",
        "uri": "http://dbpedia.org/resource/England"
      }
    ],
    "id": "e14c2eb6c1784c0b8a72befd991b28b9",
    "predicate mapping": [
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/property/religion"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which televison shows have location as Massachusetts ?",
    "SerialNumber": "4575",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Massachusetts",
        "uri": "http://dbpedia.org/resource/Massachusetts"
      }
    ],
    "id": "4545adc58a0241e7a7f875171495d9db",
    "predicate mapping": [
      {
        "label": "location",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "shows",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Which governor of Charles Willing had a child named John Scott ?",
    "SerialNumber": "4576",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/governor> <http://dbpedia.org/resource/Charles_Willing_Byrd> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/John_Scott_Harrison>  . }",
    "entity mapping": [
      {
        "label": "willing charles",
        "uri": "http://dbpedia.org/resource/Charles_Willing_Byrd"
      },
      {
        "label": "scott",
        "uri": "http://dbpedia.org/resource/John_Scott_Harrison"
      }
    ],
    "id": "f42b1c36286b47c8958cf2d6a74f511a",
    "predicate mapping": [
      {
        "label": "governor",
        "uri": "http://dbpedia.org/ontology/governor"
      },
      {
        "label": "child",
        "uri": "http://dbpedia.org/ontology/child"
      }
    ]
  },
  {
    "question": "is blue lagoon island a part of the bahamas achipelago?",
    "SerialNumber": "4580",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Blue_Lagoon_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }",
    "entity mapping": [
      {
        "label": "blue lagoon island",
        "uri": "http://dbpedia.org/resource/Blue_Lagoon_Island"
      },
      {
        "label": "bahamas",
        "uri": "http://dbpedia.org/resource/The_Bahamas"
      }
    ],
    "id": "7909a81b56b34a5fb3669d704b262965",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/archipelago"
      }
    ]
  },
  {
    "question": "What is the war in which both K Fordice and P Fitzwallace fight?",
    "SerialNumber": "4582",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kirk_Fordice> <http://dbpedia.org/property/battles> ?uri. <http://dbpedia.org/resource/Percy_Fitzwallace> <http://dbpedia.org/property/battles> ?uri . }",
    "entity mapping": [
      {
        "label": "fordice",
        "uri": "http://dbpedia.org/resource/Kirk_Fordice"
      },
      {
        "label": "fitzwallace",
        "uri": "http://dbpedia.org/resource/Percy_Fitzwallace"
      }
    ],
    "id": "113e33dbe9dc46c58978e463ef3ce85f",
    "predicate mapping": [
      {
        "label": "fight",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "fight",
        "uri": "http://dbpedia.org/property/battles"
      }
    ]
  },
  {
    "question": "Who are currently playing for Barcelona FC?",
    "SerialNumber": "4584",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/currentclub> <http://dbpedia.org/resource/FC_Barcelona> } ",
    "entity mapping": [
      {
        "label": "Barcelona FC",
        "uri": "http://dbpedia.org/resource/FC_Barcelona"
      }
    ],
    "id": "0a8fde7c5b8543ea9cbcbe3cd2931cd0",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/currentclub"
      }
    ]
  },
  {
    "question": "Was Just Another day made by Queen Latifah?",
    "SerialNumber": "4586",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Just_Another_Day...> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/Queen_Latifah> }",
    "entity mapping": [
      {
        "label": "another just day",
        "uri": "http://dbpedia.org/resource/Just_Another_Day..."
      },
      {
        "label": "Queen Latifah",
        "uri": "http://dbpedia.org/resource/Queen_Latifah"
      }
    ],
    "id": "b4dfd5c3a0424173bb8d70e4152cdbf7",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "Who are the players whose current clubs have Ferran Soriano as chairman?",
    "SerialNumber": "4587",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/chairman> <http://dbpedia.org/resource/Ferran_Soriano> . ?uri <http://dbpedia.org/property/currentclub> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Ferran Soriano",
        "uri": "http://dbpedia.org/resource/Ferran_Soriano"
      }
    ],
    "id": "8cb03d7f98d14093b047782ba028ffa2",
    "predicate mapping": [
      {
        "label": "chairman",
        "uri": "http://dbpedia.org/property/chairman"
      },
      {
        "label": "current",
        "uri": "http://dbpedia.org/property/currentclub"
      },
      {
        "label": "clubs",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Of the places where Kurt Vonnegut Memorial Library exists, where did Louis LeCocq die?",
    "SerialNumber": "4589",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Louis_LeCocq> <http://dbpedia.org/property/placeOfDeath> ?uri} ",
    "entity mapping": [
      {
        "label": "Kurt Vonnegut Memorial Library",
        "uri": "http://dbpedia.org/resource/Kurt_Vonnegut_Memorial_Library"
      },
      {
        "label": "Louis LeCocq",
        "uri": "http://dbpedia.org/resource/Louis_LeCocq"
      }
    ],
    "id": "15e2bcfdb55148b2a535b757cdfae2bd",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "The people who did their high school in Palm City, Florida did their college where?",
    "SerialNumber": "4591",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/highschool> <http://dbpedia.org/resource/Palm_City,_Florida> . ?x <http://dbpedia.org/ontology/college> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Palm City, Florida",
        "uri": "http://dbpedia.org/resource/Palm_City,_Florida"
      }
    ],
    "id": "ca66cfc326e54da8afe7236d75e259f7",
    "predicate mapping": [
      {
        "label": "school high",
        "uri": "http://dbpedia.org/property/highschool"
      },
      {
        "label": "college",
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "school",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which company developed Google Web Toolkit and Google custom search?",
    "SerialNumber": "4594",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/Google_Custom_Search> <http://dbpedia.org/ontology/author> ?uri . }",
    "entity mapping": [
      {
        "label": "Google Web Toolkit",
        "uri": "http://dbpedia.org/resource/Google_Web_Toolkit"
      },
      {
        "label": "Google custom search",
        "uri": "http://dbpedia.org/resource/Google_Custom_Search"
      }
    ],
    "id": "3fe61b9c19eb497db424c23986cb1dce",
    "predicate mapping": [
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "developed",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "From where did Ben Wilson (American football) do his highscool?",
    "SerialNumber": "4597",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ben_Wilson_(American_football)> <http://dbpedia.org/ontology/highschool> ?uri } ",
    "entity mapping": [
      {
        "label": "Ben Wilson (American football)",
        "uri": "http://dbpedia.org/resource/Ben_Wilson_(American_football)"
      }
    ],
    "id": "3b97fa49140f452d85633a8d1f63764f",
    "predicate mapping": [
      {
        "label": "Wilson",
        "uri": "http://dbpedia.org/ontology/highschool"
      }
    ]
  },
  {
    "question": "Which sports are played in the school which runs the Fr. Agnel Stadium?",
    "SerialNumber": "4598",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Fr._Agnel_Stadium> <http://dbpedia.org/property/operator> ?x . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "Fr. Agnel Stadium",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Stadium"
      }
    ],
    "id": "dd871c9e9b134d939271640e81c6095d",
    "predicate mapping": [
      {
        "label": "runs",
        "uri": "http://dbpedia.org/property/operator"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "Name the route end of the North-South Transport Corridor and Mumbai Vadodara Expressway?",
    "SerialNumber": "4599",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/North–South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri. <http://dbpedia.org/resource/Mumbai_Vadodara_Expressway> <http://dbpedia.org/ontology/routeEnd> ?uri . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/North–South_Transport_Corridor"
      },
      {
        "label": "Mumbai Vadodara Expressway",
        "uri": "http://dbpedia.org/resource/Mumbai_Vadodara_Expressway"
      }
    ],
    "id": "ea3bd4ab943c4ebf82618c545d171971",
    "predicate mapping": [
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      },
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "Katharevousa writers have been given which awards?",
    "SerialNumber": "4602",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/movement> <http://dbpedia.org/resource/Katharevousa> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Katharevousa",
        "uri": "http://dbpedia.org/resource/Katharevousa"
      }
    ],
    "id": "0312574f280d45a89cd5147313fad0b1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/movement"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "List the subjects of the books whose one of the topics is Pau Broca ?",
    "SerialNumber": "4608",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/subject> <http://dbpedia.org/resource/Paul_Broca> . ?x <http://dbpedia.org/property/subject> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "broca pau",
        "uri": "http://dbpedia.org/resource/Paul_Broca"
      }
    ],
    "id": "7d287a0404374984833426b01ed42751",
    "predicate mapping": [
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      },
      {
        "label": "subject",
        "uri": "http://dbpedia.org/property/subject"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "Which company owns instagram?",
    "SerialNumber": "4612",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/subsidiary> <http://dbpedia.org/resource/Instagram> } ",
    "entity mapping": [
      {
        "label": "instagram",
        "uri": "http://dbpedia.org/resource/Instagram"
      }
    ],
    "id": "233b7a9099164868a3abc029100949c1",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/subsidiary"
      }
    ]
  },
  {
    "question": "Where were the sportsmen born, who started their careers with Homestead Grays?",
    "SerialNumber": "4614",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/debutteam> <http://dbpedia.org/resource/Homestead_Grays> . ?x <http://dbpedia.org/property/birthDate> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Athlete>}",
    "entity mapping": [
      {
        "label": "Homestead Grays",
        "uri": "http://dbpedia.org/resource/Homestead_Grays"
      }
    ],
    "id": "7c1138e9bbe54bf79f56584f88d64515",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/debutteam"
      },
      {
        "label": "careers",
        "uri": "http://dbpedia.org/property/birthDate"
      },
      {
        "label": "careers",
        "uri": "http://dbpedia.org/ontology/Athlete"
      }
    ]
  },
  {
    "question": "In which countries can i find some feminist writers?",
    "SerialNumber": "4616",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/movement> <http://dbpedia.org/resource/Feminism> . ?x <http://dbpedia.org/ontology/nationality> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "feminist",
        "uri": "http://dbpedia.org/resource/Feminism"
      }
    ],
    "id": "67b58e4d4ed94311a8d0d1ab84d2154d",
    "predicate mapping": [
      {
        "label": "find",
        "uri": "http://dbpedia.org/ontology/movement"
      },
      {
        "label": "find",
        "uri": "http://dbpedia.org/ontology/nationality"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Which famous philosopher died on island Euboea?",
    "SerialNumber": "4617",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/deathDate> <http://dbpedia.org/resource/Euboea>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Philosopher>}",
    "entity mapping": [
      {
        "label": "Euboea",
        "uri": "http://dbpedia.org/resource/Euboea"
      }
    ],
    "id": "794526bf2c154e83bd9954aed2e8d6ea",
    "predicate mapping": [
      {
        "label": "island",
        "uri": "http://dbpedia.org/property/deathDate"
      },
      {
        "label": "philosopher",
        "uri": "http://dbpedia.org/ontology/Philosopher"
      }
    ]
  },
  {
    "question": "Who was the president under which a tennis player held office before John W. Weeks?",
    "SerialNumber": "4620",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/predecessor> <http://dbpedia.org/resource/John_W._Weeks> . ?x <http://dbpedia.org/property/president> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TennisPlayer>}",
    "entity mapping": [
      {
        "label": "John W. Weeks",
        "uri": "http://dbpedia.org/resource/John_W._Weeks"
      }
    ],
    "id": "fece7229f9bf482dbebf1709a0fb8112",
    "predicate mapping": [
      {
        "label": "office",
        "uri": "http://dbpedia.org/property/predecessor"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      },
      {
        "label": "tennis player",
        "uri": "http://dbpedia.org/ontology/TennisPlayer"
      }
    ]
  },
  {
    "question": "Who are the tenants of the stadium where the UFC 140 is located?",
    "SerialNumber": "4626",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/UFC_140> <http://dbpedia.org/ontology/location> ?x . ?x <http://dbpedia.org/ontology/tenant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "UFC 140",
        "uri": "http://dbpedia.org/resource/UFC_140"
      }
    ],
    "id": "0fa03d2ba63f4f22b7c78644d60f399d",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "tenant",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Which religion followers are in the Royal Thai Army?",
    "SerialNumber": "4628",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryBranch> <http://dbpedia.org/resource/Royal_Thai_Army> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Royal Thai Army",
        "uri": "http://dbpedia.org/resource/Royal_Thai_Army"
      }
    ],
    "id": "cbc87af1e755447fa98c05a0e64a2eb2",
    "predicate mapping": [
      {
        "label": "followers",
        "uri": "http://dbpedia.org/ontology/militaryBranch"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "In which teams did anyone who played as a defencemen, play previously?",
    "SerialNumber": "4629",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/position> <http://dbpedia.org/resource/Defenceman> . ?x <http://dbpedia.org/ontology/formerTeam> ?uri  . }",
    "entity mapping": [
      {
        "label": "previously",
        "uri": "http://dbpedia.org/resource/Defenceman"
      }
    ],
    "id": "572bc2bfc3424538bdc77b22722dfe47",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/position"
      },
      {
        "label": "teams",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "Did James brown make the song Killing is Out, School Is In?",
    "SerialNumber": "4630",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In> <http://dbpedia.org/ontology/musicalBand> <http://dbpedia.org/resource/James_Brown> }",
    "entity mapping": [
      {
        "label": "Killing is Out, School Is In",
        "uri": "http://dbpedia.org/resource/Killing_Is_Out,_School_Is_In"
      },
      {
        "label": "James brown",
        "uri": "http://dbpedia.org/resource/James_Brown"
      }
    ],
    "id": "dab9358e5ab14f72b0af6926cb98b371",
    "predicate mapping": [
      {
        "label": "song",
        "uri": "http://dbpedia.org/ontology/musicalBand"
      }
    ]
  },
  {
    "question": "What party are Siddharta Shankar Ray and Kamla Beniwal from?",
    "SerialNumber": "4632",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siddhartha_Shankar_Ray> <http://dbpedia.org/ontology/party> ?uri. <http://dbpedia.org/resource/Kamla_Beniwal> <http://dbpedia.org/property/party> ?uri . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Siddhartha_Shankar_Ray"
      },
      {
        "label": "Kamla Beniwal",
        "uri": "http://dbpedia.org/resource/Kamla_Beniwal"
      }
    ],
    "id": "16a642c2d9054f76866946a7e2aa742a",
    "predicate mapping": [
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/property/party"
      }
    ]
  },
  {
    "question": "How many apes are there?",
    "SerialNumber": "4635",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/family> <http://dbpedia.org/resource/Ape>  . }",
    "entity mapping": [
      {
        "label": "ape",
        "uri": "http://dbpedia.org/resource/Ape"
      }
    ],
    "id": "09f4a767c4ef49b09ad81beafe0dcf61",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/family"
      }
    ]
  },
  {
    "question": "Where did the war take place where one of the commander was Zuo Zongtang?",
    "SerialNumber": "4640",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/commander> <http://dbpedia.org/resource/Zuo_Zongtang> . ?x <http://dbpedia.org/ontology/territory> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Zuo Zongtang",
        "uri": "http://dbpedia.org/resource/Zuo_Zongtang"
      }
    ],
    "id": "e41dd0cd6d1140b8b8f3f4cf25ac51e1",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/territory"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Which route start of Moscow-Kazan high-speed railway is the home stadium of 2011-12 FC Spartak Moscow ?",
    "SerialNumber": "4642",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway> <http://dbpedia.org/ontology/routeStart> ?uri. <http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season> <http://dbpedia.org/ontology/homeStadium> ?uri} ",
    "entity mapping": [
      {
        "label": "Moscow-Kazan high-speed railway",
        "uri": "http://dbpedia.org/resource/Moscow-Kazan_high-speed_railway"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/2011–12_FC_Spartak_Moscow_season"
      }
    ],
    "id": "6d665a3fde3242e690e58cf5a30b7331",
    "predicate mapping": [
      {
        "label": "route start",
        "uri": "http://dbpedia.org/ontology/routeStart"
      },
      {
        "label": "home stadium",
        "uri": "http://dbpedia.org/ontology/homeStadium"
      }
    ]
  },
  {
    "question": "Who was the PM under which William Deane served?",
    "SerialNumber": "4644",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/William_Deane> <http://dbpedia.org/ontology/primeMinister> ?uri  . }",
    "entity mapping": [
      {
        "label": "William Deane",
        "uri": "http://dbpedia.org/resource/William_Deane"
      }
    ],
    "id": "a5f5c0c2445b4506b6b33166953033e2",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/ontology/primeMinister"
      }
    ]
  },
  {
    "question": "What killed John Thompson Mason and Martino Martini?",
    "SerialNumber": "4646",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_Thomson_Mason_(1787–1850)> <http://dbpedia.org/ontology/deathCause> ?uri. <http://dbpedia.org/resource/Martino_Martini> <http://dbpedia.org/ontology/deathCause> ?uri . }",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/John_Thomson_Mason_(1787–1850)"
      },
      {
        "label": "Martino Martini",
        "uri": "http://dbpedia.org/resource/Martino_Martini"
      }
    ],
    "id": "a66454f689bf4ec393eef188c8ea0fb6",
    "predicate mapping": [
      {
        "label": "Mason",
        "uri": "http://dbpedia.org/ontology/deathCause"
      },
      {
        "label": "Mason",
        "uri": "http://dbpedia.org/ontology/deathCause"
      }
    ]
  },
  {
    "question": "How many different currencies are used in the places governed by the president of France?",
    "SerialNumber": "4647",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderTitle> <http://dbpedia.org/resource/President_of_France> . ?x <http://dbpedia.org/ontology/currency> ?uri  . }",
    "entity mapping": [
      {
        "label": "president of France",
        "uri": "http://dbpedia.org/resource/President_of_France"
      }
    ],
    "id": "36e913ffdfe04f3c836be75b16def3a4",
    "predicate mapping": [
      {
        "label": "governed",
        "uri": "http://dbpedia.org/property/leaderTitle"
      },
      {
        "label": "currencies",
        "uri": "http://dbpedia.org/ontology/currency"
      }
    ]
  },
  {
    "question": "How many people play for the Dallas Cowboys?",
    "SerialNumber": "4649",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/team> <http://dbpedia.org/resource/Dallas_Cowboys>  . }",
    "entity mapping": [
      {
        "label": "Dallas Cowboys",
        "uri": "http://dbpedia.org/resource/Dallas_Cowboys"
      }
    ],
    "id": "a850c2eb0a1a4e92b601ea447d0228f2",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/team"
      }
    ]
  },
  {
    "question": "Where did the people die who were known for Young Life?",
    "SerialNumber": "4651",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/knownFor> <http://dbpedia.org/resource/Young_Life> . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Young Life",
        "uri": "http://dbpedia.org/resource/Young_Life"
      }
    ],
    "id": "2d3593472ac64342ae437da2e0f9880f",
    "predicate mapping": [
      {
        "label": "known for",
        "uri": "http://dbpedia.org/ontology/knownFor"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who are the  judges of the television show whose anchor is Josh Groban?",
    "SerialNumber": "4655",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/presenter> <http://dbpedia.org/resource/Josh_Groban> . ?x <http://dbpedia.org/property/judges> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Josh Groban",
        "uri": "http://dbpedia.org/resource/Josh_Groban"
      }
    ],
    "id": "0652b6c013d14959a266fdbb14f106ab",
    "predicate mapping": [
      {
        "label": "anchor",
        "uri": "http://dbpedia.org/property/presenter"
      },
      {
        "label": "judges",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Give me the total number of television shows whose theme music composer is Julian Gingell and created by  Simon Fuller?",
    "SerialNumber": "4656",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Julian_Gingell> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller> } ",
    "entity mapping": [
      {
        "label": "Julian Gingell",
        "uri": "http://dbpedia.org/resource/Julian_Gingell"
      },
      {
        "label": "Simon Fuller",
        "uri": "http://dbpedia.org/resource/Simon_Fuller"
      }
    ],
    "id": "dba124f2991542c596c0081858c11b79",
    "predicate mapping": [
      {
        "label": "theme music composer",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "created",
        "uri": "http://dbpedia.org/property/creator"
      }
    ]
  },
  {
    "question": "What ethnicity do people in British Columbia belong to?",
    "SerialNumber": "4658",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/residence> <http://dbpedia.org/resource/British_Columbia> . ?x <http://dbpedia.org/ontology/ethnicity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "British Columbia",
        "uri": "http://dbpedia.org/resource/British_Columbia"
      }
    ],
    "id": "0d93df312f8448acb89d604531f0dcc3",
    "predicate mapping": [
      {
        "label": "belong",
        "uri": "http://dbpedia.org/property/residence"
      },
      {
        "label": "ethnicity",
        "uri": "http://dbpedia.org/ontology/ethnicity"
      },
      {
        "label": "belong",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which awards did the creator of A Barrel of Laughs, a Vale of Tears won ?",
    "SerialNumber": "4661",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears> <http://dbpedia.org/ontology/author> ?x . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/ComicsCreator>}",
    "entity mapping": [
      {
        "label": "A Barrel of Laughs, a Vale of Tears",
        "uri": "http://dbpedia.org/resource/A_Barrel_of_Laughs,_a_Vale_of_Tears"
      }
    ],
    "id": "214ff25fe3d84f69a29dc354d42a6207",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "creator",
        "uri": "http://dbpedia.org/ontology/ComicsCreator"
      }
    ]
  },
  {
    "question": "What is father's name who also served in military of Carlene Carter?",
    "SerialNumber": "4662",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/children> <http://dbpedia.org/resource/Carlene_Carter>  . }",
    "entity mapping": [
      {
        "label": "Carlene Carter",
        "uri": "http://dbpedia.org/resource/Carlene_Carter"
      }
    ],
    "id": "8c3a21bdc66d4755b75c98c498773f1e",
    "predicate mapping": [
      {
        "label": "military",
        "uri": "http://dbpedia.org/property/children"
      }
    ]
  },
  {
    "question": "In which university did Harlan Mathews study, where Richard Meriil Atkinson went too?",
    "SerialNumber": "4663",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Harlan_Mathews> <http://dbpedia.org/ontology/almaMater> ?uri. <http://dbpedia.org/resource/Richard_Merrill_Atkinson> <http://dbpedia.org/ontology/almaMater> ?uri . }",
    "entity mapping": [
      {
        "label": "Harlan Mathews",
        "uri": "http://dbpedia.org/resource/Harlan_Mathews"
      },
      {
        "label": "atkinson richard",
        "uri": "http://dbpedia.org/resource/Richard_Merrill_Atkinson"
      }
    ],
    "id": "930ba27955d9475587dbbb75ffcae399",
    "predicate mapping": [
      {
        "label": "Atkinson",
        "uri": "http://dbpedia.org/ontology/almaMater"
      },
      {
        "label": "Atkinson",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "How many people have trained the wrestlers who were billed in Wisconsin?",
    "SerialNumber": "4664",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/billed> <http://dbpedia.org/resource/Wisconsin> . ?x <http://dbpedia.org/ontology/trainer> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Wisconsin",
        "uri": "http://dbpedia.org/resource/Wisconsin"
      }
    ],
    "id": "e36c53ecf3f04cf7a35675ce5ff859ea",
    "predicate mapping": [
      {
        "label": "billed",
        "uri": "http://dbpedia.org/ontology/billed"
      },
      {
        "label": "trained",
        "uri": "http://dbpedia.org/ontology/trainer"
      },
      {
        "label": "wrestlers",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Did Chant Mas originate in West Africa?",
    "SerialNumber": "4667",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Chanté_mas> <http://dbpedia.org/ontology/stylisticOrigin> <http://dbpedia.org/resource/West_Africa> }",
    "entity mapping": [
      {
        "label": "chant mas",
        "uri": "http://dbpedia.org/resource/Chanté_mas"
      },
      {
        "label": "West Africa",
        "uri": "http://dbpedia.org/resource/West_Africa"
      }
    ],
    "id": "df518a80342e4fb984830368c9884d96",
    "predicate mapping": [
      {
        "label": "originate",
        "uri": "http://dbpedia.org/ontology/stylisticOrigin"
      }
    ]
  },
  {
    "question": "Which current player of Chicago Bulls was drafted by Los Angeles Clippers ?",
    "SerialNumber": "4671",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/team> <http://dbpedia.org/resource/Chicago_Bulls> . ?uri <http://dbpedia.org/property/draftTeam> <http://dbpedia.org/resource/Los_Angeles_Clippers>  . }",
    "entity mapping": [
      {
        "label": "Chicago Bulls",
        "uri": "http://dbpedia.org/resource/Chicago_Bulls"
      },
      {
        "label": "Los Angeles Clippers",
        "uri": "http://dbpedia.org/resource/Los_Angeles_Clippers"
      }
    ],
    "id": "105528dc63e94de280ca2dd24c29a603",
    "predicate mapping": [
      {
        "label": "player",
        "uri": "http://dbpedia.org/property/team"
      },
      {
        "label": "drafted",
        "uri": "http://dbpedia.org/property/draftTeam"
      }
    ]
  },
  {
    "question": "tell me the school to which Cyril Hume went?",
    "SerialNumber": "4675",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cyril_Hume> <http://dbpedia.org/property/education> ?uri } ",
    "entity mapping": [
      {
        "label": "Cyril Hume",
        "uri": "http://dbpedia.org/resource/Cyril_Hume"
      }
    ],
    "id": "cd0e2088c4334a499439865a4b8605d1",
    "predicate mapping": [
      {
        "label": "school",
        "uri": "http://dbpedia.org/property/education"
      }
    ]
  },
  {
    "question": "Who has built the stadiums which were rented by the Central american games of 2013?",
    "SerialNumber": "4676",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/2013_Central_American_Games> . ?x <http://dbpedia.org/ontology/builder> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium>}",
    "entity mapping": [
      {
        "label": "american central games 2013",
        "uri": "http://dbpedia.org/resource/2013_Central_American_Games"
      }
    ],
    "id": "2518d2b2d1ac4e4fbd3d905d8ea634bd",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/builder"
      },
      {
        "label": "stadium",
        "uri": "http://dbpedia.org/ontology/Stadium"
      }
    ]
  },
  {
    "question": "Estimate the number of sports divisions at the universities under international association of universities.",
    "SerialNumber": "4677",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/affiliation> <http://dbpedia.org/resource/International_Association_of_Universities> . ?x <http://dbpedia.org/ontology/sport> ?uri  . }",
    "entity mapping": [
      {
        "label": "international association of universities",
        "uri": "http://dbpedia.org/resource/International_Association_of_Universities"
      }
    ],
    "id": "3f549a2b9eb34b59bd94ab9d9d2a60d2",
    "predicate mapping": [
      {
        "label": "universities",
        "uri": "http://dbpedia.org/ontology/affiliation"
      },
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      }
    ]
  },
  {
    "question": "What is sovereignity of the successor of Mr. George Robert Andrews ?",
    "SerialNumber": "4679",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/George_Roberts_Andrews> <http://dbpedia.org/property/successor> ?x . ?x <http://dbpedia.org/ontology/country> ?uri  . }",
    "entity mapping": [
      {
        "label": "George Robert Andrews",
        "uri": "http://dbpedia.org/resource/George_Roberts_Andrews"
      }
    ],
    "id": "600bf1ca0e93442ba5fa63154cf524a9",
    "predicate mapping": [
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      },
      {
        "label": "Mr.",
        "uri": "http://dbpedia.org/ontology/country"
      }
    ]
  },
  {
    "question": "Which show developed by Brain Graden has theme music composed by Primus ?",
    "SerialNumber": "4681",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/developer> <http://dbpedia.org/resource/Brian_Graden> . ?uri <http://dbpedia.org/property/themeMusicComposer> <http://dbpedia.org/resource/Primus_(band)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "graden",
        "uri": "http://dbpedia.org/resource/Brian_Graden"
      },
      {
        "label": "Primus",
        "uri": "http://dbpedia.org/resource/Primus_(band)"
      }
    ],
    "id": "aed72becd6f144b194afb38e15d9b5c2",
    "predicate mapping": [
      {
        "label": "developed by",
        "uri": "http://dbpedia.org/property/developer"
      },
      {
        "label": "composed",
        "uri": "http://dbpedia.org/property/themeMusicComposer"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What mammals are classified into Diprotodontia ?",
    "SerialNumber": "4682",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "Diprotodontia",
        "uri": "http://dbpedia.org/resource/Diprotodontia"
      }
    ],
    "id": "55b30011d61b4084beb7e4971374cac2",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "Who all have succeeded the kings buried in Rome?",
    "SerialNumber": "4683",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/placeOfBurial> <http://dbpedia.org/resource/Rome> . ?x <http://dbpedia.org/ontology/successor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Royalty>}",
    "entity mapping": [
      {
        "label": "Rome",
        "uri": "http://dbpedia.org/resource/Rome"
      }
    ],
    "id": "acf96951be6c4bdda4d3fe9e77b9da55",
    "predicate mapping": [
      {
        "label": "buried in",
        "uri": "http://dbpedia.org/property/placeOfBurial"
      },
      {
        "label": "kings",
        "uri": "http://dbpedia.org/ontology/successor"
      },
      {
        "label": "kings",
        "uri": "http://dbpedia.org/ontology/Royalty"
      }
    ]
  },
  {
    "question": "Where did the  designer of Monument to Salavat Yulaev die?",
    "SerialNumber": "4685",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Monument_to_Salavat_Yulaev> <http://dbpedia.org/ontology/designer> ?x . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . }",
    "entity mapping": [
      {
        "label": "Monument to Salavat Yulaev",
        "uri": "http://dbpedia.org/resource/Monument_to_Salavat_Yulaev"
      }
    ],
    "id": "e0c15d9cbe7d442b90853f84915861a9",
    "predicate mapping": [
      {
        "label": "designer",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "uri": "http://dbpedia.org/property/placeOfDeath"
      }
    ]
  },
  {
    "question": "Where is the constituency of John Smith Griffin ?",
    "SerialNumber": "4687",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/John_Smith_Griffin> <http://dbpedia.org/property/constituency> ?x . ?x <http://dbpedia.org/ontology/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "John Smith Griffin",
        "uri": "http://dbpedia.org/resource/John_Smith_Griffin"
      }
    ],
    "id": "bea54664fe0f4bb38b817c38546b103d",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "Which companies have launched from the Vandenberg Air Force Air base?",
    "SerialNumber": "4689",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/launchSite> <http://dbpedia.org/resource/Vandenberg_Air_Force_Base> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Vandenberg Air Force Air",
        "uri": "http://dbpedia.org/resource/Vandenberg_Air_Force_Base"
      }
    ],
    "id": "55f6d1bfea1c4facbb55ebbb90805560",
    "predicate mapping": [
      {
        "label": "launched",
        "uri": "http://dbpedia.org/ontology/launchSite"
      },
      {
        "label": "base",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      }
    ]
  },
  {
    "question": " How many scientist have won an award by the society led by Venkatraman Ramakrishnan?",
    "SerialNumber": "4693",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/Venkatraman_Ramakrishnan> . ?uri <http://dbpedia.org/property/prizes> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Scientist>}",
    "entity mapping": [
      {
        "label": "Venkatraman Ramakrishnan",
        "uri": "http://dbpedia.org/resource/Venkatraman_Ramakrishnan"
      }
    ],
    "id": "84f2de8922174f768151cc95ffc13a23",
    "predicate mapping": [
      {
        "label": "led",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "society",
        "uri": "http://dbpedia.org/property/prizes"
      },
      {
        "label": "scientist",
        "uri": "http://dbpedia.org/ontology/Scientist"
      }
    ]
  },
  {
    "question": "Which television show is based in Massachusetts and has opening theme as \"Where Everybody Knows Your Name\" ?",
    "SerialNumber": "4695",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/openingTheme> <http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name> . ?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Massachusetts>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Where Everybody Knows Your Name",
        "uri": "http://dbpedia.org/resource/Where_Everybody_Knows_Your_Name"
      },
      {
        "label": "Massachusetts",
        "uri": "http://dbpedia.org/resource/Massachusetts"
      }
    ],
    "id": "a94b8573bbf7434592b2463cc3700be8",
    "predicate mapping": [
      {
        "label": "opening theme",
        "uri": "http://dbpedia.org/ontology/openingTheme"
      },
      {
        "label": "based",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "television show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "For which team do Guido Guerrini and Massimo Liverani currently play for?",
    "SerialNumber": "4701",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Guido_Guerrini> <http://dbpedia.org/property/currentTeam> ?uri. <http://dbpedia.org/resource/Massimo_Liverani> <http://dbpedia.org/property/currentTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "Guido Guerrini",
        "uri": "http://dbpedia.org/resource/Guido_Guerrini"
      },
      {
        "label": "Massimo Liverani",
        "uri": "http://dbpedia.org/resource/Massimo_Liverani"
      }
    ],
    "id": "03a102b6e3c94e6d819336676a2e112d",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/currentTeam"
      },
      {
        "label": "play",
        "uri": "http://dbpedia.org/property/currentTeam"
      }
    ]
  },
  {
    "question": "Which games publishers are located in California?",
    "SerialNumber": "4702",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/California> . ?uri <http://dbpedia.org/ontology/publisher> ?x  . }",
    "entity mapping": [
      {
        "label": "California",
        "uri": "http://dbpedia.org/resource/California"
      }
    ],
    "id": "10f14cccfbd949feb78ff964c2f44eb9",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "publisher",
        "uri": "http://dbpedia.org/ontology/publisher"
      }
    ]
  },
  {
    "question": "Name the company with product named Microsft Azure and provides OneDrive as a service ?",
    "SerialNumber": "4714",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/product> <http://dbpedia.org/resource/Microsoft_Azure> . ?uri <http://dbpedia.org/property/services> <http://dbpedia.org/resource/OneDrive>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Microsoft_Azure"
      },
      {
        "label": "OneDrive",
        "uri": "http://dbpedia.org/resource/OneDrive"
      }
    ],
    "id": "05243a944c564231bfbdcc7577bf0492",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "service",
        "uri": "http://dbpedia.org/property/services"
      },
      {
        "label": "company",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "Which famous commander led the Siege of forn meigs and was involved in the battle of fort stephenson?",
    "SerialNumber": "4716",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Siege_of_Fort_Meigs> <http://dbpedia.org/ontology/commander> ?uri. <http://dbpedia.org/resource/Battle_of_Fort_Stephenson> <http://dbpedia.org/ontology/commander> ?uri . }",
    "entity mapping": [
      {
        "label": "siege meigs fort",
        "uri": "http://dbpedia.org/resource/Siege_of_Fort_Meigs"
      },
      {
        "label": "battle of fort stephenson",
        "uri": "http://dbpedia.org/resource/Battle_of_Fort_Stephenson"
      }
    ],
    "id": "11258ba9f4464dabb69a719605f61b78",
    "predicate mapping": [
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      }
    ]
  },
  {
    "question": "Where did the partner of Teriitaria II die?",
    "SerialNumber": "4721",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Teriitaria_II> <http://dbpedia.org/property/spouse> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Teriitaria II",
        "uri": "http://dbpedia.org/resource/Teriitaria_II"
      }
    ],
    "id": "d03cf8ab9ba54ead94c0ab2b0355b918",
    "predicate mapping": [
      {
        "label": "partner",
        "uri": "http://dbpedia.org/property/spouse"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Which work institue of andrew Schally belongs to WTUL ?",
    "SerialNumber": "4722",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Andrew_Schally> <http://dbpedia.org/property/workInstitutions> ?uri. <http://dbpedia.org/resource/WTUL> <http://dbpedia.org/property/owner> ?uri} ",
    "entity mapping": [
      {
        "label": "andrew Schally",
        "uri": "http://dbpedia.org/resource/Andrew_Schally"
      },
      {
        "label": "WTUL",
        "uri": "http://dbpedia.org/resource/WTUL"
      }
    ],
    "id": "e5fd26f8366941a1a8300ce006874f4c",
    "predicate mapping": [
      {
        "label": "institue",
        "uri": "http://dbpedia.org/property/workInstitutions"
      },
      {
        "label": "belongs to",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "Under which common jurisdiction do Trinity School, Brentwood and Buckhurst Hill County High School fall?",
    "SerialNumber": "4726",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Trinity_School,_Brentwood> <http://dbpedia.org/ontology/localAuthority> ?uri. <http://dbpedia.org/resource/Buckhurst_Hill_County_High_School> <http://dbpedia.org/ontology/localAuthority> ?uri . }",
    "entity mapping": [
      {
        "label": "Trinity School, Brentwood",
        "uri": "http://dbpedia.org/resource/Trinity_School,_Brentwood"
      },
      {
        "label": "Buckhurst Hill County High School",
        "uri": "http://dbpedia.org/resource/Buckhurst_Hill_County_High_School"
      }
    ],
    "id": "28ad5ec354e644e4adfd4890503082b9",
    "predicate mapping": [
      {
        "label": "fall",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      },
      {
        "label": "fall",
        "uri": "http://dbpedia.org/ontology/localAuthority"
      }
    ]
  },
  {
    "question": "How many things are written in C++?",
    "SerialNumber": "4729",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/programmingLanguage> <http://dbpedia.org/resource/C++>  . }",
    "entity mapping": [
      {
        "label": "C++",
        "uri": "http://dbpedia.org/resource/C++"
      }
    ],
    "id": "79277088dda94649b2348c07d0dd17e5",
    "predicate mapping": [
      {
        "label": "written",
        "uri": "http://dbpedia.org/property/programmingLanguage"
      }
    ]
  },
  {
    "question": "How many artists play as Rickenbacker?",
    "SerialNumber": "4730",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/instrument> <http://dbpedia.org/resource/Rickenbacker>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Artist>}",
    "entity mapping": [
      {
        "label": "Rickenbacker",
        "uri": "http://dbpedia.org/resource/Rickenbacker"
      }
    ],
    "id": "4d5845bcd6044165bbcdfa12d79bd84d",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/instrument"
      },
      {
        "label": "artist",
        "uri": "http://dbpedia.org/ontology/Artist"
      }
    ]
  },
  {
    "question": "Who were the opponents of employees of Henry Howard, the Northampton Earl?",
    "SerialNumber": "4731",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/employer> <http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton> . ?x <http://dbpedia.org/ontology/opponent> ?uri  . }",
    "entity mapping": [
      {
        "label": "northampton howard, henry earl",
        "uri": "http://dbpedia.org/resource/Henry_Howard,_1st_Earl_of_Northampton"
      }
    ],
    "id": "5617f56ff171400ebf9650a950609f0c",
    "predicate mapping": [
      {
        "label": "Earl",
        "uri": "http://dbpedia.org/ontology/employer"
      },
      {
        "label": "opponent",
        "uri": "http://dbpedia.org/ontology/opponent"
      }
    ]
  },
  {
    "question": "List the mammals whose taxonomy is Diprotodontia and phylum is Chordate?",
    "SerialNumber": "4732",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/order> <http://dbpedia.org/resource/Diprotodontia> . ?uri <http://dbpedia.org/ontology/phylum> <http://dbpedia.org/resource/Chordate>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mammal>}",
    "entity mapping": [
      {
        "label": "Diprotodontia",
        "uri": "http://dbpedia.org/resource/Diprotodontia"
      },
      {
        "label": "Chordate",
        "uri": "http://dbpedia.org/resource/Chordate"
      }
    ],
    "id": "14fbed5378264537bb4a579854d59789",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/order"
      },
      {
        "label": "phylum",
        "uri": "http://dbpedia.org/ontology/phylum"
      },
      {
        "label": "mammal",
        "uri": "http://dbpedia.org/ontology/Mammal"
      }
    ]
  },
  {
    "question": "Name the river whose source region is North-Western Province, Zambia and source location is Ikelenge  District?",
    "SerialNumber": "4734",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/sourceRegion> <http://dbpedia.org/resource/North-Western_Province,_Zambia> . ?uri <http://dbpedia.org/property/sourceLocation> <http://dbpedia.org/resource/Ikelenge_District>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "North-Western Province, Zambia",
        "uri": "http://dbpedia.org/resource/North-Western_Province,_Zambia"
      },
      {
        "label": "ikelenge district",
        "uri": "http://dbpedia.org/resource/Ikelenge_District"
      }
    ],
    "id": "bb053b427bf8492cabece4ccf6a9a256",
    "predicate mapping": [
      {
        "label": "source region",
        "uri": "http://dbpedia.org/property/sourceRegion"
      },
      {
        "label": "source location",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "Which collaborator of Nice and Smooth wrote Same Song ?",
    "SerialNumber": "4736",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Nice_&_Smooth> <http://dbpedia.org/ontology/associatedBand> ?uri. <http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)> <http://dbpedia.org/property/writer> ?uri . }",
    "entity mapping": [
      {
        "label": "smooth nice",
        "uri": "http://dbpedia.org/resource/Nice_&_Smooth"
      },
      {
        "label": "Same Song",
        "uri": "http://dbpedia.org/resource/Same_Song_(Digital_Underground_song)"
      }
    ],
    "id": "b4b6cd2e49ad4a12b209a01e1eab720b",
    "predicate mapping": [
      {
        "label": "and",
        "uri": "http://dbpedia.org/ontology/associatedBand"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/property/writer"
      }
    ]
  },
  {
    "question": "How many awards have been given to screenwriters?",
    "SerialNumber": "4741",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/occupation> <http://dbpedia.org/resource/Screenwriter> . ?x <http://dbpedia.org/property/awards> ?uri  . }",
    "entity mapping": [
      {
        "label": "screenwriter",
        "uri": "http://dbpedia.org/resource/Screenwriter"
      }
    ],
    "id": "a0c73428e66a4f2bb89939cc2149d2bf",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/occupation"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/property/awards"
      }
    ]
  },
  {
    "question": "To which county of New York city does the Tremount Avenue street belong?",
    "SerialNumber": "4744",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Tremont_Avenue> <http://dbpedia.org/property/counties> ?uri } ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Tremont_Avenue"
      }
    ],
    "id": "db2a89ff91b04227888c9c20728914c9",
    "predicate mapping": [
      {
        "label": "county",
        "uri": "http://dbpedia.org/property/counties"
      }
    ]
  },
  {
    "question": "Where is the tomb of son of Bruce Lee?",
    "SerialNumber": "4747",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Bruce_Lee> . ?x <http://dbpedia.org/ontology/restingPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Bruce Lee",
        "uri": "http://dbpedia.org/resource/Bruce_Lee"
      }
    ],
    "id": "e3f73674fbdd41a38021d60204f7196f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "tomb",
        "uri": "http://dbpedia.org/ontology/restingPlace"
      }
    ]
  },
  {
    "question": "Which university has a sports team member called Micheal Powell and also owns Syracuse University Press ?",
    "SerialNumber": "4752",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Michael_Powell_(lacrosse)> <http://dbpedia.org/ontology/team> ?uri. <http://dbpedia.org/resource/Syracuse_University_Press> <http://dbpedia.org/property/parent> ?uri} ",
    "entity mapping": [
      {
        "label": "powell",
        "uri": "http://dbpedia.org/resource/Michael_Powell_(lacrosse)"
      },
      {
        "label": "Syracuse University Press",
        "uri": "http://dbpedia.org/resource/Syracuse_University_Press"
      }
    ],
    "id": "1c527306fea14763ad07d75de14f267f",
    "predicate mapping": [
      {
        "label": "sports team",
        "uri": "http://dbpedia.org/ontology/team"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/parent"
      }
    ]
  },
  {
    "question": "Whihc successor of McDonnell Douglas was built bu Delta 3 ?",
    "SerialNumber": "4754",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Delta_III> <http://dbpedia.org/ontology/manufacturer> ?uri. <http://dbpedia.org/resource/McDonnell_Douglas> <http://dbpedia.org/property/successor> ?uri} ",
    "entity mapping": [
      {
        "label": "delta",
        "uri": "http://dbpedia.org/resource/Delta_III"
      },
      {
        "label": "McDonnell Douglas",
        "uri": "http://dbpedia.org/resource/McDonnell_Douglas"
      }
    ],
    "id": "8d5634ca304b423292db69a546b53974",
    "predicate mapping": [
      {
        "label": "Delta",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "successor",
        "uri": "http://dbpedia.org/property/successor"
      }
    ]
  },
  {
    "question": "What is the religious affiliation of the Neungin High School which is also the academic interest of Sylvain Lvi ?",
    "SerialNumber": "4757",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Neungin_High_School> <http://dbpedia.org/property/religiousAffiliation> ?uri. <http://dbpedia.org/resource/Sylvain_Lévi> <http://dbpedia.org/property/fields> ?uri} ",
    "entity mapping": [
      {
        "label": "Neungin High School",
        "uri": "http://dbpedia.org/resource/Neungin_High_School"
      },
      {
        "label": "sylvain",
        "uri": "http://dbpedia.org/resource/Sylvain_Lévi"
      }
    ],
    "id": "23a3176ce04642ab9202377c16bb86d2",
    "predicate mapping": [
      {
        "label": "religious affiliation",
        "uri": "http://dbpedia.org/property/religiousAffiliation"
      },
      {
        "label": "Sylvain",
        "uri": "http://dbpedia.org/property/fields"
      }
    ]
  },
  {
    "question": "Which European sea has Oulu as one of the shore city ?",
    "SerialNumber": "4758",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Europe> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Oulu>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Europe",
        "uri": "http://dbpedia.org/resource/Europe"
      },
      {
        "label": "Oulu",
        "uri": "http://dbpedia.org/resource/Oulu"
      }
    ],
    "id": "d615e5224cae43fabb824a9522e63556",
    "predicate mapping": [
      {
        "label": "shore",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "city",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "In which province was Dick Redding born?",
    "SerialNumber": "4763",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Dick_Redding> <http://dbpedia.org/property/birthDate> ?uri } ",
    "entity mapping": [
      {
        "label": "Dick Redding",
        "uri": "http://dbpedia.org/resource/Dick_Redding"
      }
    ],
    "id": "d90413f58c7e4ec4926d84d822483e59",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthDate"
      }
    ]
  },
  {
    "question": "What are some cars related to the ones with a V8?",
    "SerialNumber": "4766",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/engine> <http://dbpedia.org/resource/V8_engine> . ?x <http://dbpedia.org/property/related> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "V8",
        "uri": "http://dbpedia.org/resource/V8_engine"
      }
    ],
    "id": "8bacd9f637114aacb4f912ee3339497c",
    "predicate mapping": [
      {
        "label": "cars",
        "uri": "http://dbpedia.org/property/engine"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/property/related"
      },
      {
        "label": "cars",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Where is the person from whose military rank is Airman first class?",
    "SerialNumber": "4767",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Airman_first_class> . ?x <http://dbpedia.org/property/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Airman first class",
        "uri": "http://dbpedia.org/resource/Airman_first_class"
      }
    ],
    "id": "211240c6dae54cc2a76f849270ff99e9",
    "predicate mapping": [
      {
        "label": "military rank",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      },
      {
        "uri": "http://dbpedia.org/property/state"
      },
      {
        "label": "person",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who currently operates the railway lines one of whose stockholder is Chicago, St Paul, Minneapolis and Omaha railway?",
    "SerialNumber": "4770",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/owner> <http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway> . ?x <http://dbpedia.org/ontology/operatedBy> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/RailwayLine>}",
    "entity mapping": [
      {
        "label": "minneapolis chicago, railway",
        "uri": "http://dbpedia.org/resource/Chicago,_St._Paul,_Minneapolis_and_Omaha_Railway"
      }
    ],
    "id": "7e5cf8ddee13481fb0d168850d0ba814",
    "predicate mapping": [
      {
        "label": "stockholder",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/ontology/operatedBy"
      },
      {
        "label": "railway line",
        "uri": "http://dbpedia.org/ontology/RailwayLine"
      }
    ]
  },
  {
    "question": "In how many different people are alumini of the University of Oxford working?",
    "SerialNumber": "4771",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/almaMater> <http://dbpedia.org/resource/Worcester_College,_Oxford> . ?x <http://dbpedia.org/ontology/field> ?uri  . }",
    "entity mapping": [
      {
        "label": "University of Oxford",
        "uri": "http://dbpedia.org/resource/Worcester_College,_Oxford"
      }
    ],
    "id": "bbf6d77abc1d4097b5073835a08375a0",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/almaMater"
      },
      {
        "label": "working",
        "uri": "http://dbpedia.org/ontology/field"
      }
    ]
  },
  {
    "question": "Which district of Fort Heath radar station is also the state of Joesph Story ?",
    "SerialNumber": "4772",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fort_Heath_radar_station> <http://dbpedia.org/property/district> ?uri. <http://dbpedia.org/resource/Joseph_Story> <http://dbpedia.org/property/state> ?uri} ",
    "entity mapping": [
      {
        "label": "Fort Heath radar station",
        "uri": "http://dbpedia.org/resource/Fort_Heath_radar_station"
      },
      {
        "label": "story",
        "uri": "http://dbpedia.org/resource/Joseph_Story"
      }
    ],
    "id": "22bc7e7fb2b44679a76b1872370adf4c",
    "predicate mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/district"
      },
      {
        "label": "district",
        "uri": "http://dbpedia.org/property/state"
      }
    ]
  },
  {
    "question": "Who were the head of government agencies working in the German occupied Europe?",
    "SerialNumber": "4773",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/jurisdiction> <http://dbpedia.org/resource/German-occupied_Europe> . ?x <http://dbpedia.org/ontology/leader> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "entity mapping": [
      {
        "label": "German occupied Europe",
        "uri": "http://dbpedia.org/resource/German-occupied_Europe"
      }
    ],
    "id": "325df11498174809bd9488b134a0bf82",
    "predicate mapping": [
      {
        "label": "working",
        "uri": "http://dbpedia.org/property/jurisdiction"
      },
      {
        "label": "working",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "government",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency"
      }
    ]
  },
  {
    "question": "How many ingedients are required to make the Ragout Fin?",
    "SerialNumber": "4774",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { <http://dbpedia.org/resource/Ragout_fin> <http://dbpedia.org/ontology/ingredient> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ragout Fin",
        "uri": "http://dbpedia.org/resource/Ragout_fin"
      }
    ],
    "id": "edd0fb4fe2274a5fb2e3de95d13d2066",
    "predicate mapping": [
      {
        "label": "make",
        "uri": "http://dbpedia.org/ontology/ingredient"
      }
    ]
  },
  {
    "question": "Is Serbian Titieca a doctoral student of Werner Heisenberghttp://dbpedia.org/resource/Werner_Heisenberg",
    "SerialNumber": "4775",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Werner_Heisenberg> <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Șerban_Țițeica> }",
    "entity mapping": [
      {
        "label": "Werner Heisenberg",
        "uri": "http://dbpedia.org/resource/Werner_Heisenberg"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica"
      }
    ],
    "id": "cd7f39c8d3324c20a0beff615cfa9063",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      }
    ]
  },
  {
    "question": "What show has  judge as Randy Jackson sculptors as Simon Fuller?",
    "SerialNumber": "4776",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/judges> <http://dbpedia.org/resource/Randy_Jackson> . ?uri <http://dbpedia.org/property/creator> <http://dbpedia.org/resource/Simon_Fuller>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Randy Jackson",
        "uri": "http://dbpedia.org/resource/Randy_Jackson"
      },
      {
        "label": "Simon Fuller",
        "uri": "http://dbpedia.org/resource/Simon_Fuller"
      }
    ],
    "id": "54ca819c32f845f1830c057254adb0e4",
    "predicate mapping": [
      {
        "label": "judge",
        "uri": "http://dbpedia.org/property/judges"
      },
      {
        "label": "sculptors",
        "uri": "http://dbpedia.org/property/creator"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Where are the cooper mountain vineyards and Mt. bachelor ski area located?",
    "SerialNumber": "4778",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Cooper_Mountain_Vineyards> <http://dbpedia.org/ontology/location> ?uri. <http://dbpedia.org/resource/Mount_Bachelor_ski_area> <http://dbpedia.org/ontology/location> ?uri . }",
    "entity mapping": [
      {
        "label": "cooper mountain vineyards",
        "uri": "http://dbpedia.org/resource/Cooper_Mountain_Vineyards"
      },
      {
        "label": "bachelor",
        "uri": "http://dbpedia.org/resource/Mount_Bachelor_ski_area"
      }
    ],
    "id": "35de725b9a904932a4c7cad2d4f6d3dd",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/location"
      }
    ]
  },
  {
    "question": "From which countries are the people from who are an academic authority of the Western pygmy blue species?",
    "SerialNumber": "4780",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Western_pygmy_blue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/ontology/citizenship> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Western pygmy blue",
        "uri": "http://dbpedia.org/resource/Western_pygmy_blue"
      }
    ],
    "id": "be8e6c435f1e4b00978abbd40786446f",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/citizenship"
      },
      {
        "label": "species",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the fictional character painted by Josh Friedman and portrayed in Terminator Genisys ?",
    "SerialNumber": "4782",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/creator> <http://dbpedia.org/resource/Josh_Friedman> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_Genisys>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Josh Friedman",
        "uri": "http://dbpedia.org/resource/Josh_Friedman"
      },
      {
        "label": "Terminator Genisys",
        "uri": "http://dbpedia.org/resource/Terminator_Genisys"
      }
    ],
    "id": "37ea4965d2b64433a69300a0f28f5c84",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/creator"
      },
      {
        "label": "portrayed",
        "uri": "http://dbpedia.org/ontology/portrayer"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "What is the total number of religions that politicians have followed?",
    "SerialNumber": "4783",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/profession> <http://dbpedia.org/resource/Politician> . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "politician",
        "uri": "http://dbpedia.org/resource/Politician"
      }
    ],
    "id": "0954f05704294cdc948715c7348303d7",
    "predicate mapping": [
      {
        "label": "number",
        "uri": "http://dbpedia.org/ontology/profession"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "For how many different presidents have people in the Continental Army served?",
    "SerialNumber": "4787",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/branch> <http://dbpedia.org/resource/Continental_Army> . ?x <http://dbpedia.org/property/president> ?uri  . }",
    "entity mapping": [
      {
        "label": "Continental Army",
        "uri": "http://dbpedia.org/resource/Continental_Army"
      }
    ],
    "id": "4bb6b234a89a4be49aac5792626314a1",
    "predicate mapping": [
      {
        "label": "served",
        "uri": "http://dbpedia.org/property/branch"
      },
      {
        "label": "president",
        "uri": "http://dbpedia.org/property/president"
      }
    ]
  },
  {
    "question": "What is the religion of the president who won the Mongolian legislative election, 2004 ?",
    "SerialNumber": "4788",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Mongolian_legislative_election,_2004> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Mongolian legislative election, 2004",
        "uri": "http://dbpedia.org/resource/Mongolian_legislative_election,_2004"
      }
    ],
    "id": "da38af790e6e4c63a38c8f834d67ca62",
    "predicate mapping": [
      {
        "label": "won",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Which leader of Trump Entertainment Resorts is a relative of Maryanne Barry?",
    "SerialNumber": "4792",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Maryanne_Trump_Barry> <http://dbpedia.org/ontology/relation> ?uri. <http://dbpedia.org/resource/Trump_Entertainment_Resorts> <http://dbpedia.org/ontology/keyPerson> ?uri . }",
    "entity mapping": [
      {
        "label": "maryanne trump barry",
        "uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry"
      },
      {
        "label": "Trump Entertainment Resorts",
        "uri": "http://dbpedia.org/resource/Trump_Entertainment_Resorts"
      }
    ],
    "id": "ba66549d7ede4f90ad8fa7a436face6c",
    "predicate mapping": [
      {
        "label": "Barry",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "Barry",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      }
    ]
  },
  {
    "question": "From which party is the politician who was selected  in Barasat constituency?",
    "SerialNumber": "4793",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)> . ?x <http://dbpedia.org/ontology/party> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Barasat",
        "uri": "http://dbpedia.org/resource/Barasat_(Lok_Sabha_constituency)"
      }
    ],
    "id": "af0335e9c71440b287a6a62d2211645c",
    "predicate mapping": [
      {
        "label": "constituency",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "party",
        "uri": "http://dbpedia.org/ontology/party"
      },
      {
        "label": "selected",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "Was John muir one of the first to ascend a mountain on Mt hoffmann?",
    "SerialNumber": "4796",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Mount_Hoffmann> <http://dbpedia.org/ontology/firstAscentPerson> <http://dbpedia.org/resource/John_Muir> }",
    "entity mapping": [
      {
        "label": "hoffmann",
        "uri": "http://dbpedia.org/resource/Mount_Hoffmann"
      },
      {
        "label": "John muir",
        "uri": "http://dbpedia.org/resource/John_Muir"
      }
    ],
    "id": "168ccd9fd66449a2a3587324aa89e190",
    "predicate mapping": [
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      }
    ]
  },
  {
    "question": "Which coach of England national under 21 footbal team is also the coach of Aston Villa F.C season ?",
    "SerialNumber": "4797",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/England_national_under-21_football_team> <http://dbpedia.org/property/coach> ?uri. <http://dbpedia.org/resource/2000–01_Aston_Villa_F.C._season> <http://dbpedia.org/property/name> ?uri} ",
    "entity mapping": [
      {
        "label": "national footbal england under team",
        "uri": "http://dbpedia.org/resource/England_national_under-21_football_team"
      },
      {
        "label": "season villa aston",
        "uri": "http://dbpedia.org/resource/2000–01_Aston_Villa_F.C._season"
      }
    ],
    "id": "fab10ec7feeb4e3790ee4563b268c058",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/property/coach"
      },
      {
        "label": "season",
        "uri": "http://dbpedia.org/property/name"
      }
    ]
  },
  {
    "question": "In how many countries are people born who play cricket?",
    "SerialNumber": "4802",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Cricket> . ?x <http://dbpedia.org/ontology/stateOfOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "cricket",
        "uri": "http://dbpedia.org/resource/Cricket"
      }
    ],
    "id": "048f33e69989456e87cecd1566322fe2",
    "predicate mapping": [
      {
        "label": "play",
        "uri": "http://dbpedia.org/ontology/occupation"
      },
      {
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Who has authored books published by the Perkins school for the Blind?",
    "SerialNumber": "4804",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/publisher> <http://dbpedia.org/resource/Perkins_School_for_the_Blind> . ?x <http://dbpedia.org/ontology/author> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/WrittenWork>}",
    "entity mapping": [
      {
        "label": "Perkins school for the Blind",
        "uri": "http://dbpedia.org/resource/Perkins_School_for_the_Blind"
      }
    ],
    "id": "d4566c91a3a1479e8ed3152f7892af27",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/publisher"
      },
      {
        "label": "author",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "books",
        "uri": "http://dbpedia.org/ontology/WrittenWork"
      }
    ]
  },
  {
    "question": "Give me the name of the organization hqed at  Chaeng Watthana Govt Complex?",
    "SerialNumber": "4806",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex> . ?x <http://dbpedia.org/property/agencyName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "watthana complex chaeng",
        "uri": "http://dbpedia.org/resource/Chaeng_Watthana_Government_Complex"
      }
    ],
    "id": "3aba37a171704d5ebb0b4ae966a6d176",
    "predicate mapping": [
      {
        "label": "hq",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/agencyName"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Which footballers did their high school in west Sacramento california? ",
    "SerialNumber": "4807",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/highSchool> <http://dbpedia.org/resource/West_Sacramento,_California>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballPlayer>}",
    "entity mapping": [
      {
        "label": "Sacramento california",
        "uri": "http://dbpedia.org/resource/West_Sacramento,_California"
      }
    ],
    "id": "91ccac916105446b8d75a09eee63c100",
    "predicate mapping": [
      {
        "label": "high school",
        "uri": "http://dbpedia.org/property/highSchool"
      },
      {
        "label": "west",
        "uri": "http://dbpedia.org/ontology/AmericanFootballPlayer"
      }
    ]
  },
  {
    "question": "Which company created BASIC and Language Integrated Query ?",
    "SerialNumber": "4809",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Microsoft_BASIC> <http://dbpedia.org/ontology/designer> ?uri. <http://dbpedia.org/resource/Language_Integrated_Query> <http://dbpedia.org/ontology/designer> ?uri . }",
    "entity mapping": [
      {
        "label": "basic",
        "uri": "http://dbpedia.org/resource/Microsoft_BASIC"
      },
      {
        "label": "Language Integrated Query",
        "uri": "http://dbpedia.org/resource/Language_Integrated_Query"
      }
    ],
    "id": "b1b8eee4fef548d282895877658d0862",
    "predicate mapping": [
      {
        "label": "BASIC",
        "uri": "http://dbpedia.org/ontology/designer"
      },
      {
        "label": "BASIC",
        "uri": "http://dbpedia.org/ontology/designer"
      }
    ]
  },
  {
    "question": "Who has recorded their singles in London?",
    "SerialNumber": "4810",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/recordedIn> <http://dbpedia.org/resource/London> . ?x <http://dbpedia.org/ontology/writer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Single>}",
    "entity mapping": [
      {
        "label": "London",
        "uri": "http://dbpedia.org/resource/London"
      }
    ],
    "id": "2808134095db47bfaa55a5b9ae17a35e",
    "predicate mapping": [
      {
        "label": "recorded in",
        "uri": "http://dbpedia.org/ontology/recordedIn"
      },
      {
        "label": "recorded",
        "uri": "http://dbpedia.org/ontology/writer"
      },
      {
        "label": "single",
        "uri": "http://dbpedia.org/ontology/Single"
      }
    ]
  },
  {
    "question": "What awards have been given to the writers of Wallace and Gromit?",
    "SerialNumber": "4812",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Wallace_and_Gromit> . ?x <http://dbpedia.org/ontology/award> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Gromit",
        "uri": "http://dbpedia.org/resource/Wallace_and_Gromit"
      }
    ],
    "id": "249281ef2b90405aba4523fe74c3f855",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "label": "awards",
        "uri": "http://dbpedia.org/ontology/award"
      },
      {
        "label": "writers",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "How many companies have built concrete bridges?",
    "SerialNumber": "4813",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/material> <http://dbpedia.org/resource/Concrete> . ?x <http://dbpedia.org/ontology/builder> ?uri  . }",
    "entity mapping": [
      {
        "label": "concrete",
        "uri": "http://dbpedia.org/resource/Concrete"
      }
    ],
    "id": "5fa75359b2f34008a02d32e4d86ae9f4",
    "predicate mapping": [
      {
        "label": "bridges",
        "uri": "http://dbpedia.org/property/material"
      },
      {
        "label": "built",
        "uri": "http://dbpedia.org/ontology/builder"
      }
    ]
  },
  {
    "question": "What is the alma mater of Alvin Bell and Charles Plosser?",
    "SerialNumber": "4814",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Alvin_Bell> <http://dbpedia.org/ontology/college> ?uri. <http://dbpedia.org/resource/Charles_Plosser> <http://dbpedia.org/property/almaMater> ?uri} ",
    "entity mapping": [
      {
        "label": "Alvin Bell",
        "uri": "http://dbpedia.org/resource/Alvin_Bell"
      },
      {
        "label": "Charles Plosser",
        "uri": "http://dbpedia.org/resource/Charles_Plosser"
      }
    ],
    "id": "a51285af64f54bbc8cc0e2548ad0b92f",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/college"
      },
      {
        "label": "alma mater",
        "uri": "http://dbpedia.org/property/almaMater"
      }
    ]
  },
  {
    "question": "How many producers have casted Michael Jackson?",
    "SerialNumber": "4815",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/starring> <http://dbpedia.org/resource/Michael_Jackson> . ?x <http://dbpedia.org/property/producer> ?uri  . }",
    "entity mapping": [
      {
        "label": "Michael Jackson",
        "uri": "http://dbpedia.org/resource/Michael_Jackson"
      }
    ],
    "id": "8679debda0a14d0a87042b3eb712b95b",
    "predicate mapping": [
      {
        "label": "casted",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "producer",
        "uri": "http://dbpedia.org/property/producer"
      }
    ]
  },
  {
    "question": "Who all have created new kinds of cookies?",
    "SerialNumber": "4816",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/type> <http://dbpedia.org/resource/Cookie> . ?x <http://dbpedia.org/property/creator> ?uri  . }",
    "entity mapping": [
      {
        "label": "cookie",
        "uri": "http://dbpedia.org/resource/Cookie"
      }
    ],
    "id": "34cf6c9abf5c40c8a73553a1ea992f28",
    "predicate mapping": [
      {
        "label": "kinds",
        "uri": "http://dbpedia.org/property/type"
      },
      {
        "label": "kinds",
        "uri": "http://dbpedia.org/property/creator"
      }
    ]
  },
  {
    "question": "Name the fictional character who was in Terminator and portrayer is Terminator 2: Judgment Day?",
    "SerialNumber": "4818",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/series> <http://dbpedia.org/resource/Terminator_(franchise)> . ?uri <http://dbpedia.org/ontology/portrayer> <http://dbpedia.org/resource/Terminator_2:_Judgment_Day>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/FictionalCharacter>}",
    "entity mapping": [
      {
        "label": "Terminator",
        "uri": "http://dbpedia.org/resource/Terminator_(franchise)"
      },
      {
        "label": "Terminator 2: Judgment Day",
        "uri": "http://dbpedia.org/resource/Terminator_2:_Judgment_Day"
      }
    ],
    "id": "c00fa42c4aa643d4aad94464399b60ea",
    "predicate mapping": [
      {
        "label": "Day",
        "uri": "http://dbpedia.org/ontology/series"
      },
      {
        "label": "portrayer",
        "uri": "http://dbpedia.org/ontology/portrayer"
      },
      {
        "label": "fictional character",
        "uri": "http://dbpedia.org/ontology/FictionalCharacter"
      }
    ]
  },
  {
    "question": "Whose mayors are affiliated with Christen-Democratisch en Vlaams?",
    "SerialNumber": "4819",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/affiliation> <http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams> . ?uri <http://dbpedia.org/ontology/leaderName> ?x  . }",
    "entity mapping": [
      {
        "label": "Christen-Democratisch en Vlaams",
        "uri": "http://dbpedia.org/resource/Christen-Democratisch_en_Vlaams"
      }
    ],
    "id": "8a1d6eb70486401e9b03768061fb6933",
    "predicate mapping": [
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/property/affiliation"
      },
      {
        "label": "affiliated",
        "uri": "http://dbpedia.org/ontology/leaderName"
      }
    ]
  },
  {
    "question": "What company is the one which wrote the google web toolkit and PlayN?",
    "SerialNumber": "4821",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Google_Web_Toolkit> <http://dbpedia.org/ontology/author> ?uri. <http://dbpedia.org/resource/PlayN> <http://dbpedia.org/ontology/author> ?uri . }",
    "entity mapping": [
      {
        "label": "google web toolkit",
        "uri": "http://dbpedia.org/resource/Google_Web_Toolkit"
      },
      {
        "label": "PlayN",
        "uri": "http://dbpedia.org/resource/PlayN"
      }
    ],
    "id": "f4f5ee1369484c24bff925aa0c0f67c5",
    "predicate mapping": [
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "wrote",
        "uri": "http://dbpedia.org/ontology/author"
      }
    ]
  },
  {
    "question": "Who fought in the battle at Tupelo Mississippi?",
    "SerialNumber": "4824",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/place> <http://dbpedia.org/resource/Tupelo,_Mississippi> . ?x <http://dbpedia.org/property/combatant> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Tupelo Mississippi",
        "uri": "http://dbpedia.org/resource/Tupelo,_Mississippi"
      }
    ],
    "id": "e479ae7b3a9c4819b494827f01d6bc9a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/place"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "What is the purpose of some Maharashtran organizations?",
    "SerialNumber": "4828",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/headquarter> <http://dbpedia.org/resource/Maharashtra> . ?x <http://dbpedia.org/property/purpose> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Maharashtra",
        "uri": "http://dbpedia.org/resource/Maharashtra"
      }
    ],
    "id": "dc71852033ea4aa78c0988a5a8353b08",
    "predicate mapping": [
      {
        "label": "organizations",
        "uri": "http://dbpedia.org/ontology/headquarter"
      },
      {
        "label": "purpose",
        "uri": "http://dbpedia.org/property/purpose"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "which movies have been published by Cinema International Corporation?",
    "SerialNumber": "4829",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/distributor> <http://dbpedia.org/resource/Cinema_International_Corporation> } ",
    "entity mapping": [
      {
        "label": "Cinema International Corporation",
        "uri": "http://dbpedia.org/resource/Cinema_International_Corporation"
      }
    ],
    "id": "e7b65b4aecc7437f80afe8be2d2a53eb",
    "predicate mapping": [
      {
        "label": "published",
        "uri": "http://dbpedia.org/ontology/distributor"
      }
    ]
  },
  {
    "question": "Where the children of Ashot Grashi employed at?",
    "SerialNumber": "4830",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/parent> <http://dbpedia.org/resource/Ashot_Grashi> . ?x <http://dbpedia.org/ontology/occupation> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ashot Grashi",
        "uri": "http://dbpedia.org/resource/Ashot_Grashi"
      }
    ],
    "id": "5737744543d348468c3951fddb9f25e1",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/parent"
      },
      {
        "label": "employed",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "Who is renowned for Ae Fond Kiss and poem of Halloween ?",
    "SerialNumber": "4831",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Ae_Fond_Kiss> . ?uri <http://dbpedia.org/property/notableworks> <http://dbpedia.org/resource/Halloween_(poem)> . }",
    "entity mapping": [
      {
        "label": "Ae Fond Kiss",
        "uri": "http://dbpedia.org/resource/Ae_Fond_Kiss"
      },
      {
        "label": "Halloween",
        "uri": "http://dbpedia.org/resource/Halloween_(poem)"
      }
    ],
    "id": "91316e105d274bdbae3927a547e2020a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/notableworks"
      },
      {
        "uri": "http://dbpedia.org/property/notableworks"
      }
    ]
  },
  {
    "question": "Which  science fiction show has Steven Moffat as executive producer ?",
    "SerialNumber": "4833",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/executiveProducer> <http://dbpedia.org/resource/Steven_Moffat> . ?uri <http://dbpedia.org/property/genre> <http://dbpedia.org/resource/Science_fiction>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "Steven Moffat",
        "uri": "http://dbpedia.org/resource/Steven_Moffat"
      },
      {
        "label": "science fiction",
        "uri": "http://dbpedia.org/resource/Science_fiction"
      }
    ],
    "id": "0fc6655da5464bec8b5a6df22edcaa86",
    "predicate mapping": [
      {
        "label": "executive producer",
        "uri": "http://dbpedia.org/ontology/executiveProducer"
      },
      {
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "What cars were built upon the cars which were assembled in Canada?",
    "SerialNumber": "4836",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Canada",
        "uri": "http://dbpedia.org/resource/Canada"
      }
    ],
    "id": "1d60b0de9bd444dabe4c059c4f7fde5f",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "Is San Salvador Island a part of the Bahamas?",
    "SerialNumber": "4838",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/San_Salvador_Island> <http://dbpedia.org/ontology/archipelago> <http://dbpedia.org/resource/The_Bahamas> }",
    "entity mapping": [
      {
        "label": "San Salvador Island",
        "uri": "http://dbpedia.org/resource/San_Salvador_Island"
      },
      {
        "label": "Bahamas",
        "uri": "http://dbpedia.org/resource/The_Bahamas"
      }
    ],
    "id": "c9bf804617e04cd194d2f8fcdad0d49c",
    "predicate mapping": [
      {
        "label": "part",
        "uri": "http://dbpedia.org/ontology/archipelago"
      }
    ]
  },
  {
    "question": "Which  NASA astronaut was on mission Gemini 8?",
    "SerialNumber": "4840",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
    "entity mapping": [
      {
        "label": "NASA",
        "uri": "http://dbpedia.org/resource/NASA"
      },
      {
        "label": "Gemini 8",
        "uri": "http://dbpedia.org/resource/Gemini_8"
      }
    ],
    "id": "89d93ab9db184098bea7201d4e1f85c0",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/type"
      },
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut"
      }
    ]
  },
  {
    "question": "Did Stanlee write the Tales of Suspense?",
    "SerialNumber": "4844",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Tales_of_Suspense> <http://dbpedia.org/property/writers> <http://dbpedia.org/resource/Stan_Lee> }",
    "entity mapping": [
      {
        "label": "Tales of Suspense",
        "uri": "http://dbpedia.org/resource/Tales_of_Suspense"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Stan_Lee"
      }
    ],
    "id": "6ad08f71a43048129e0b566148bb3665",
    "predicate mapping": [
      {
        "label": "write",
        "uri": "http://dbpedia.org/property/writers"
      }
    ]
  },
  {
    "question": "Who is the head coach of the teams in Middlesbrough FC?",
    "SerialNumber": "4845",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/club> <http://dbpedia.org/resource/Middlesbrough_F.C.> . ?x <http://dbpedia.org/ontology/manager> ?uri  . }",
    "entity mapping": [
      {
        "label": "Middlesbrough FC",
        "uri": "http://dbpedia.org/resource/Middlesbrough_F.C."
      }
    ],
    "id": "37ebf5a678ed42c3b38fc81a00ff30ff",
    "predicate mapping": [
      {
        "label": "teams",
        "uri": "http://dbpedia.org/property/club"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/manager"
      }
    ]
  },
  {
    "question": "What is the religion of the leader of South Korean legislative election of 1992 ?",
    "SerialNumber": "4852",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/South_Korean_legislative_election,_1992> <http://dbpedia.org/property/leader> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "legislative election",
        "uri": "http://dbpedia.org/resource/South_Korean_legislative_election,_1992"
      }
    ],
    "id": "6f97fe98633b44dcb7ba31cf7719b380",
    "predicate mapping": [
      {
        "label": "leader",
        "uri": "http://dbpedia.org/property/leader"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "to which university did both, the Stanford Cardinal and Gerald Reaven go?",
    "SerialNumber": "4853",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Stanford_Cardinal> <http://dbpedia.org/ontology/university> ?uri. <http://dbpedia.org/resource/Gerald_Reaven> <http://dbpedia.org/ontology/institution> ?uri} ",
    "entity mapping": [
      {
        "label": "Stanford Cardinal",
        "uri": "http://dbpedia.org/resource/Stanford_Cardinal"
      },
      {
        "label": "Gerald Reaven",
        "uri": "http://dbpedia.org/resource/Gerald_Reaven"
      }
    ],
    "id": "9f8aa6229d504392a15d7e77b795aadd",
    "predicate mapping": [
      {
        "label": "university",
        "uri": "http://dbpedia.org/ontology/university"
      },
      {
        "uri": "http://dbpedia.org/ontology/institution"
      }
    ]
  },
  {
    "question": "Which american football team is owned by Mark davis and is located in O.co Colliseum ?",
    "SerialNumber": "4854",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/owner> <http://dbpedia.org/resource/Mark_Davis_(American_football)> . ?uri <http://dbpedia.org/ontology/locationCity> <http://dbpedia.org/resource/O.co_Coliseum>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/AmericanFootballTeam>}",
    "entity mapping": [
      {
        "label": "Mark davis",
        "uri": "http://dbpedia.org/resource/Mark_Davis_(American_football)"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/O.co_Coliseum"
      }
    ],
    "id": "c357921ea8ff43fda72ad08c8e216ab8",
    "predicate mapping": [
      {
        "label": "is owned by",
        "uri": "http://dbpedia.org/ontology/owner"
      },
      {
        "label": "Colliseum",
        "uri": "http://dbpedia.org/ontology/locationCity"
      },
      {
        "label": "american football team",
        "uri": "http://dbpedia.org/ontology/AmericanFootballTeam"
      }
    ]
  },
  {
    "question": "Which BBC's TV show is related with the Sarah Jane Adventures?",
    "SerialNumber": "4855",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/network> <http://dbpedia.org/resource/BBC_HD> . ?uri <http://dbpedia.org/ontology/related> <http://dbpedia.org/resource/The_Sarah_Jane_Adventures>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/BBC_HD"
      },
      {
        "label": "the Sarah Jane Adventures",
        "uri": "http://dbpedia.org/resource/The_Sarah_Jane_Adventures"
      }
    ],
    "id": "17ca429ec4984bb7bc285f94d3de62b9",
    "predicate mapping": [
      {
        "label": "TV",
        "uri": "http://dbpedia.org/ontology/network"
      },
      {
        "label": "related",
        "uri": "http://dbpedia.org/ontology/related"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Who were the first drivers in the grand prix which took place at Autodromo Enzo e Dino Ferrari?",
    "SerialNumber": "4856",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/location> <http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari> . ?x <http://dbpedia.org/ontology/firstDriver> ?uri  . }",
    "entity mapping": [
      {
        "label": "Autodromo Enzo e Dino Ferrari",
        "uri": "http://dbpedia.org/resource/Autodromo_Enzo_e_Dino_Ferrari"
      }
    ],
    "id": "2c3931e9e39447a6a5313df14a8934b6",
    "predicate mapping": [
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/location"
      },
      {
        "label": "first driver",
        "uri": "http://dbpedia.org/ontology/firstDriver"
      }
    ]
  },
  {
    "question": "How many cars succeed the cars assembled in Canada?",
    "SerialNumber": "4857",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/assembly> <http://dbpedia.org/resource/Canada> . ?x <http://dbpedia.org/ontology/predecessor> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "Canada",
        "uri": "http://dbpedia.org/resource/Canada"
      }
    ],
    "id": "947e3ddd016d41a9b97ecc9eed2e370a",
    "predicate mapping": [
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/property/assembly"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/predecessor"
      },
      {
        "label": "assembled",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "How many books are written by the author who is famous for Novelas Ejemplares?",
    "SerialNumber": "4858",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/notableWork> <http://dbpedia.org/resource/Novelas_ejemplares> . ?uri <http://dbpedia.org/ontology/author> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Book>}",
    "entity mapping": [
      {
        "label": "Novelas Ejemplares",
        "uri": "http://dbpedia.org/resource/Novelas_ejemplares"
      }
    ],
    "id": "d813efbf28c848ec9859bbc3ad45e3ea",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/ontology/notableWork"
      },
      {
        "label": "written by",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "book",
        "uri": "http://dbpedia.org/ontology/Book"
      }
    ]
  },
  {
    "question": "What is the largest city of the country where P. Sathyanarayanan was born?",
    "SerialNumber": "4859",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/P._Sathyanarayanan> <http://dbpedia.org/property/birthplace> ?x . ?x <http://dbpedia.org/ontology/largestCity> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "P. Sathyanarayanan",
        "uri": "http://dbpedia.org/resource/P._Sathyanarayanan"
      }
    ],
    "id": "2f9db429754045d79c15661e9175997e",
    "predicate mapping": [
      {
        "label": "born",
        "uri": "http://dbpedia.org/property/birthplace"
      },
      {
        "label": "largest city",
        "uri": "http://dbpedia.org/ontology/largestCity"
      },
      {
        "label": "country",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "List the people whose are in the board of an organization kickstarted in New York.",
    "SerialNumber": "4862",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/foundation> <http://dbpedia.org/resource/New_York> . ?uri <http://dbpedia.org/ontology/board> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "New York",
        "uri": "http://dbpedia.org/resource/New_York"
      }
    ],
    "id": "f039556b67ef4cb1baad3d5fa816ba36",
    "predicate mapping": [
      {
        "label": "kickstarted",
        "uri": "http://dbpedia.org/property/foundation"
      },
      {
        "label": "board",
        "uri": "http://dbpedia.org/ontology/board"
      },
      {
        "label": "kickstarted",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Which HBO's television series was produced by Erik Bork?",
    "SerialNumber": "4863",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/distributor> <http://dbpedia.org/resource/HBO> . ?uri <http://dbpedia.org/ontology/producer> <http://dbpedia.org/resource/Erik_Bork>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "HBO",
        "uri": "http://dbpedia.org/resource/HBO"
      },
      {
        "label": "Erik Bork",
        "uri": "http://dbpedia.org/resource/Erik_Bork"
      }
    ],
    "id": "43e17ab32b48408188702fc59b80e3d6",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/distributor"
      },
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "television",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "List the common sports between Fr. Agnel Multipurpose School  and Jamiatu Muslim Mindanao",
    "SerialNumber": "4864",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College> <http://dbpedia.org/ontology/sport> ?uri. <http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao> <http://dbpedia.org/ontology/athletics> ?uri} ",
    "entity mapping": [
      {
        "label": "multipurpose school",
        "uri": "http://dbpedia.org/resource/Fr._Agnel_Multipurpose_School_and_Junior_College"
      },
      {
        "label": "Jamiatu Muslim Mindanao",
        "uri": "http://dbpedia.org/resource/Jamiatu_Muslim_Mindanao"
      }
    ],
    "id": "1e5190197e764ad2852ced4917575e45",
    "predicate mapping": [
      {
        "label": "sport",
        "uri": "http://dbpedia.org/ontology/sport"
      },
      {
        "label": "School",
        "uri": "http://dbpedia.org/ontology/athletics"
      }
    ]
  },
  {
    "question": "Which newspapers are owned by companies which are under Rolv Erik Ryssdal?",
    "SerialNumber": "4867",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Rolv_Erik_Ryssdal> . ?uri <http://dbpedia.org/property/owners> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Newspaper>}",
    "entity mapping": [
      {
        "label": "Rolv Erik Ryssdal",
        "uri": "http://dbpedia.org/resource/Rolv_Erik_Ryssdal"
      }
    ],
    "id": "8784014ab7f14b28871e97a0df2a4200",
    "predicate mapping": [
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "owned",
        "uri": "http://dbpedia.org/property/owners"
      },
      {
        "label": "newspaper",
        "uri": "http://dbpedia.org/ontology/Newspaper"
      }
    ]
  },
  {
    "question": "Who coached the Marquette golden eagles men team in 09 to 10 and then again in 13 to 14 ?",
    "SerialNumber": "4869",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2009–10_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri. <http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri . }",
    "entity mapping": [
      {
        "label": "marquette golden eagles team men",
        "uri": "http://dbpedia.org/resource/2009–10_Marquette_Golden_Eagles_men's_basketball_team"
      },
      {
        "label": "marquette golden eagles team men",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men's_basketball_team"
      }
    ],
    "id": "69fc05f2eb85472d8f28a6dec16cf0a8",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      },
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      }
    ]
  },
  {
    "question": "Count the number of sports played by university which also plays Taekwondo ?",
    "SerialNumber": "4872",
    "sparql_query": " SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/athletics> <http://dbpedia.org/resource/Taekwondo> . ?x <http://dbpedia.org/property/athletics> ?uri }",
    "entity mapping": [
      {
        "label": "Taekwondo",
        "uri": "http://dbpedia.org/resource/Taekwondo"
      }
    ],
    "id": "2ad75f9b93f64498968879d9c695fb02",
    "predicate mapping": [
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics"
      },
      {
        "label": "plays",
        "uri": "http://dbpedia.org/property/athletics"
      }
    ]
  },
  {
    "question": "Where did the narrators of the Championship snooker die?",
    "SerialNumber": "4873",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Championship_Snooker> <http://dbpedia.org/property/narrated> ?x . ?x <http://dbpedia.org/ontology/deathPlace> ?uri  . }",
    "entity mapping": [
      {
        "label": "Championship snooker",
        "uri": "http://dbpedia.org/resource/Championship_Snooker"
      }
    ],
    "id": "b98192ce06ab477dbe39eb6081bfb58c",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/property/narrated"
      },
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/deathPlace"
      }
    ]
  },
  {
    "question": "Where is the lake located into which the Winnipeg River flows?",
    "SerialNumber": "4874",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/outflow> <http://dbpedia.org/resource/Winnipeg_River> . ?x <http://dbpedia.org/property/location> ?uri  . }",
    "entity mapping": [
      {
        "label": "Winnipeg River",
        "uri": "http://dbpedia.org/resource/Winnipeg_River"
      }
    ],
    "id": "259c7da5ba2e4d11814879c79da16742",
    "predicate mapping": [
      {
        "label": "flows",
        "uri": "http://dbpedia.org/property/outflow"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      }
    ]
  },
  {
    "question": "Which government agency is run by Supachai Somcharoen?",
    "SerialNumber": "4875",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/leader> <http://dbpedia.org/resource/Supachai_Somcharoen> . ?x <http://dbpedia.org/property/agencyName> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/GovernmentAgency>}",
    "entity mapping": [
      {
        "label": "Supachai Somcharoen",
        "uri": "http://dbpedia.org/resource/Supachai_Somcharoen"
      }
    ],
    "id": "875e9a8ee0ce4454a79b9daa496dcbb6",
    "predicate mapping": [
      {
        "label": "run",
        "uri": "http://dbpedia.org/ontology/leader"
      },
      {
        "label": "agency",
        "uri": "http://dbpedia.org/property/agencyName"
      },
      {
        "label": "government agency",
        "uri": "http://dbpedia.org/ontology/GovernmentAgency"
      }
    ]
  },
  {
    "question": "Is Grand Bahama lie in the achipelago of the bahamas?",
    "SerialNumber": "4877",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Grand_Bahama> <http://dbpedia.org/property/archipelago> <http://dbpedia.org/resource/The_Bahamas> }",
    "entity mapping": [
      {
        "label": "Grand Bahama",
        "uri": "http://dbpedia.org/resource/Grand_Bahama"
      },
      {
        "label": "bahamas",
        "uri": "http://dbpedia.org/resource/The_Bahamas"
      }
    ],
    "id": "3b485c94a86c4c4e8a6f8929cc0dde2b",
    "predicate mapping": [
      {
        "label": "lie",
        "uri": "http://dbpedia.org/property/archipelago"
      }
    ]
  },
  {
    "question": "Which colonel has allegiance to Colony of Virginia ?",
    "SerialNumber": "4879",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/allegiance> <http://dbpedia.org/resource/Colony_of_Virginia> . ?uri <http://dbpedia.org/property/rank> <http://dbpedia.org/resource/Colonel_(United_States)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "Colony of Virginia",
        "uri": "http://dbpedia.org/resource/Colony_of_Virginia"
      },
      {
        "label": "colonel",
        "uri": "http://dbpedia.org/resource/Colonel_(United_States)"
      }
    ],
    "id": "08e93b8d4249442b88762e1a51910088",
    "predicate mapping": [
      {
        "label": "allegiance",
        "uri": "http://dbpedia.org/property/allegiance"
      },
      {
        "uri": "http://dbpedia.org/property/rank"
      },
      {
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "How many companies were started in the states?",
    "SerialNumber": "4880",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/United_States>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Company>}",
    "entity mapping": [
      {
        "label": "states",
        "uri": "http://dbpedia.org/resource/United_States"
      }
    ],
    "id": "f01fe449ce054eacad63ba079a2cdd2e",
    "predicate mapping": [
      {
        "label": "states",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "companies",
        "uri": "http://dbpedia.org/ontology/Company"
      }
    ]
  },
  {
    "question": "What is the sea connected to Kaliningrad and Gdask?",
    "SerialNumber": "4885",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Kaliningrad> . ?uri <http://dbpedia.org/property/cities> <http://dbpedia.org/resource/Gdańsk> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Sea>}",
    "entity mapping": [
      {
        "label": "Kaliningrad",
        "uri": "http://dbpedia.org/resource/Kaliningrad"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Gdańsk"
      }
    ],
    "id": "8595807efc4449d68eed8d38166a812a",
    "predicate mapping": [
      {
        "label": "connected",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "connected",
        "uri": "http://dbpedia.org/property/cities"
      },
      {
        "label": "sea",
        "uri": "http://dbpedia.org/ontology/Sea"
      }
    ]
  },
  {
    "question": "From how many countries did the aeroplanes designed by Alexander Lippisch originate?",
    "SerialNumber": "4886",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Alexander_Lippisch> . ?x <http://dbpedia.org/property/nationalOrigin> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country>}",
    "entity mapping": [
      {
        "label": "Alexander Lippisch",
        "uri": "http://dbpedia.org/resource/Alexander_Lippisch"
      }
    ],
    "id": "9d9692a4132c4495ae0f5931957e586b",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "originate",
        "uri": "http://dbpedia.org/property/nationalOrigin"
      },
      {
        "label": "countries",
        "uri": "http://dbpedia.org/ontology/Country"
      }
    ]
  },
  {
    "question": "Who has manufactured vehicles designed originally by NASA?",
    "SerialNumber": "4888",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/designCompany> <http://dbpedia.org/resource/NASA> . ?x <http://dbpedia.org/ontology/manufacturer> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Automobile>}",
    "entity mapping": [
      {
        "label": "NASA",
        "uri": "http://dbpedia.org/resource/NASA"
      }
    ],
    "id": "b4e0d76805604866bf173ea2e1b23a30",
    "predicate mapping": [
      {
        "label": "designed",
        "uri": "http://dbpedia.org/ontology/designCompany"
      },
      {
        "label": "manufactured",
        "uri": "http://dbpedia.org/ontology/manufacturer"
      },
      {
        "label": "originally",
        "uri": "http://dbpedia.org/ontology/Automobile"
      }
    ]
  },
  {
    "question": "How many people are famous for the Gibson Les Paul?",
    "SerialNumber": "4889",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Gibson_Les_Paul>  . }",
    "entity mapping": [
      {
        "label": "Gibson Les Paul",
        "uri": "http://dbpedia.org/resource/Gibson_Les_Paul"
      }
    ],
    "id": "fd5f1f21c5d84d139a078d7c277185cd",
    "predicate mapping": [
      {
        "label": "famous",
        "uri": "http://dbpedia.org/property/notableInstruments"
      }
    ]
  },
  {
    "question": "Who is the office holder for constituencies  Castro District and Haight-Ashbury?",
    "SerialNumber": "4890",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Castro_District,_San_Francisco> . ?uri <http://dbpedia.org/property/constituency> <http://dbpedia.org/resource/Haight-Ashbury> . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/OfficeHolder>}",
    "entity mapping": [
      {
        "label": "district",
        "uri": "http://dbpedia.org/resource/Castro_District,_San_Francisco"
      },
      {
        "label": "Haight-Ashbury",
        "uri": "http://dbpedia.org/resource/Haight-Ashbury"
      }
    ],
    "id": "a6ed413a6d5445999356286aac0836d9",
    "predicate mapping": [
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "constituencies",
        "uri": "http://dbpedia.org/property/constituency"
      },
      {
        "label": "office holder",
        "uri": "http://dbpedia.org/ontology/OfficeHolder"
      }
    ]
  },
  {
    "question": "In how many places did the Schutzstaffels die?",
    "SerialNumber": "4893",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Schutzstaffel> . ?x <http://dbpedia.org/property/placeOfDeath> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Schutzstaffel",
        "uri": "http://dbpedia.org/resource/Schutzstaffel"
      }
    ],
    "id": "112be4e032d2473e8a45c73e9689419f",
    "predicate mapping": [
      {
        "label": "die",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      },
      {
        "label": "places",
        "uri": "http://dbpedia.org/property/placeOfDeath"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "What faith do hang chuon naron and Kron Ngoy follow?",
    "SerialNumber": "4894",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Hang_Chuon_Naron> <http://dbpedia.org/ontology/religion> ?uri. <http://dbpedia.org/resource/Krom_Ngoy> <http://dbpedia.org/ontology/religion> ?uri . }",
    "entity mapping": [
      {
        "label": "hang chuon naron",
        "uri": "http://dbpedia.org/resource/Hang_Chuon_Naron"
      },
      {
        "label": "ngoy",
        "uri": "http://dbpedia.org/resource/Krom_Ngoy"
      }
    ],
    "id": "93b33f2e4d4f4d07a6dbd2be5baba794",
    "predicate mapping": [
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Name the people living in a place governed by William W Brien?",
    "SerialNumber": "4895",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/leaderName> <http://dbpedia.org/resource/William_W._Brien> . ?uri <http://dbpedia.org/ontology/residence> ?x  . }",
    "entity mapping": [
      {
        "label": "William W Brien",
        "uri": "http://dbpedia.org/resource/William_W._Brien"
      }
    ],
    "id": "6904a39015e041cdb5b9e4c8100f6f6a",
    "predicate mapping": [
      {
        "label": "name",
        "uri": "http://dbpedia.org/property/leaderName"
      },
      {
        "label": "governed",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "How many game series exist for iOS?",
    "SerialNumber": "4896",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/IOS> . ?x <http://dbpedia.org/ontology/series> ?uri  . }",
    "entity mapping": [
      {
        "label": "iOS",
        "uri": "http://dbpedia.org/resource/IOS"
      }
    ],
    "id": "4e15567ee9b34922b7ffeb5e3b835c65",
    "predicate mapping": [
      {
        "label": "exist",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "Who is the narrator of The Incredible Hulk , 1982 TV series ?",
    "SerialNumber": "4897",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)> <http://dbpedia.org/property/narrated> ?uri } ",
    "entity mapping": [
      {
        "label": "The Incredible Hulk",
        "uri": "http://dbpedia.org/resource/The_Incredible_Hulk_(1982_TV_series)"
      }
    ],
    "id": "c43336ea3f5f4a078eae1b1cdbb23ae0",
    "predicate mapping": [
      {
        "label": "series",
        "uri": "http://dbpedia.org/property/narrated"
      }
    ]
  },
  {
    "question": "What is the location of the pope whose major shrine is St. Peter's Basilica ?",
    "SerialNumber": "4900",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/majorShrine> <http://dbpedia.org/resource/St._Peter's_Basilica> . ?x <http://dbpedia.org/property/birthPlace> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Pope>}",
    "entity mapping": [
      {
        "label": "St. Peter's Basilica",
        "uri": "http://dbpedia.org/resource/St._Peter's_Basilica"
      }
    ],
    "id": "5e448ee7e7a347909af9a05fd941d609",
    "predicate mapping": [
      {
        "label": "major shrine",
        "uri": "http://dbpedia.org/property/majorShrine"
      },
      {
        "label": "location",
        "uri": "http://dbpedia.org/property/birthPlace"
      },
      {
        "label": "pope",
        "uri": "http://dbpedia.org/ontology/Pope"
      }
    ]
  },
  {
    "question": "Where does the rivers ending in lake washington begin?",
    "SerialNumber": "4902",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/riverMouth> <http://dbpedia.org/resource/Lake_Washington> . ?x <http://dbpedia.org/property/sourceLocation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "lake washington",
        "uri": "http://dbpedia.org/resource/Lake_Washington"
      }
    ],
    "id": "c4b41b17bd6e461f9bab1fd5d18fb1cb",
    "predicate mapping": [
      {
        "label": "rivers",
        "uri": "http://dbpedia.org/ontology/riverMouth"
      },
      {
        "label": "begin",
        "uri": "http://dbpedia.org/property/sourceLocation"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is operated by FedExField ?",
    "SerialNumber": "4903",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/FedExField> <http://dbpedia.org/ontology/operator> ?uri } ",
    "entity mapping": [
      {
        "label": "FedExField",
        "uri": "http://dbpedia.org/resource/FedExField"
      }
    ],
    "id": "26c83a9e8dd7414ba4b9740120278949",
    "predicate mapping": [
      {
        "label": "operated",
        "uri": "http://dbpedia.org/ontology/operator"
      }
    ]
  },
  {
    "question": "Who owns the company that made the Edsel Villager?",
    "SerialNumber": "4904",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/products> <http://dbpedia.org/resource/Edsel_Villager> . ?x <http://dbpedia.org/property/parent> ?uri  . }",
    "entity mapping": [
      {
        "label": "Edsel Villager",
        "uri": "http://dbpedia.org/resource/Edsel_Villager"
      }
    ],
    "id": "c3101002a14d4415b13183cee4ce5c19",
    "predicate mapping": [
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/products"
      },
      {
        "label": "made",
        "uri": "http://dbpedia.org/property/parent"
      }
    ]
  },
  {
    "question": "Where does the river flow into, which starts at the Sierra Madre de Chiapas?",
    "SerialNumber": "4905",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/source> <http://dbpedia.org/resource/Sierra_Madre_de_Chiapas> . ?x <http://dbpedia.org/property/mouthCountry> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Sierra Madre de Chiapas",
        "uri": "http://dbpedia.org/resource/Sierra_Madre_de_Chiapas"
      }
    ],
    "id": "22fd27d058e34064ab9f3f5f1a1a85b9",
    "predicate mapping": [
      {
        "label": "starts",
        "uri": "http://dbpedia.org/ontology/source"
      },
      {
        "label": "starts",
        "uri": "http://dbpedia.org/property/mouthCountry"
      },
      {
        "label": "river",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What series is Mazes of Time from, and is produced by BBC multimedia?",
    "SerialNumber": "4908",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time> <http://dbpedia.org/ontology/series> ?uri} ",
    "entity mapping": [
      {
        "label": "BBC multimedia",
        "uri": "http://dbpedia.org/resource/BBC_Multimedia"
      },
      {
        "label": "mazes",
        "uri": "http://dbpedia.org/resource/Doctor_Who:_The_Mazes_of_Time"
      }
    ],
    "id": "a600e69fac2b46a58ff1d1fe22877e45",
    "predicate mapping": [
      {
        "label": "produced",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "series",
        "uri": "http://dbpedia.org/ontology/series"
      }
    ]
  },
  {
    "question": "WHo gave the lyrcis of Doonesbury ?",
    "SerialNumber": "4909",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Doonesbury_(musical)> <http://dbpedia.org/ontology/lyrics> ?uri } ",
    "entity mapping": [
      {
        "label": "Doonesbury",
        "uri": "http://dbpedia.org/resource/Doonesbury_(musical)"
      }
    ],
    "id": "e1a45956b7a142a8bf2eef25850435d5",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/lyrics"
      }
    ]
  },
  {
    "question": "Who are the parents of  Charles Phelps Taft II and Robert A. Taft?",
    "SerialNumber": "4911",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Charles_Phelps_Taft_II> . ?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Robert_A._Taft> . }",
    "entity mapping": [
      {
        "label": "Charles Phelps Taft II",
        "uri": "http://dbpedia.org/resource/Charles_Phelps_Taft_II"
      },
      {
        "label": "Robert A. Taft",
        "uri": "http://dbpedia.org/resource/Robert_A._Taft"
      }
    ],
    "id": "db1c3fdf8d784274b4e27db7dd62b263",
    "predicate mapping": [
      {
        "label": "parents",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "parents",
        "uri": "http://dbpedia.org/ontology/child"
      }
    ]
  },
  {
    "question": "Which assembly of the Plymouth Savoy is the route end of the NorthSouth Transport Corridor?",
    "SerialNumber": "4914",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Plymouth_Savoy> <http://dbpedia.org/ontology/assembly> ?uri. <http://dbpedia.org/resource/North–South_Transport_Corridor> <http://dbpedia.org/ontology/routeEnd> ?uri} ",
    "entity mapping": [
      {
        "label": "Plymouth Savoy",
        "uri": "http://dbpedia.org/resource/Plymouth_Savoy"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/North–South_Transport_Corridor"
      }
    ],
    "id": "5bf74194f313453a92938a6069178a82",
    "predicate mapping": [
      {
        "label": "assembly",
        "uri": "http://dbpedia.org/ontology/assembly"
      },
      {
        "label": "route end",
        "uri": "http://dbpedia.org/ontology/routeEnd"
      }
    ]
  },
  {
    "question": "Name the band atleast one of whose members is famous for playing the Fender Stratocaster?",
    "SerialNumber": "4915",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?x <http://dbpedia.org/property/notableInstruments> <http://dbpedia.org/resource/Fender_Stratocaster> . ?uri <http://dbpedia.org/property/currentMembers> ?x  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Band>}",
    "entity mapping": [
      {
        "label": "Fender Stratocaster",
        "uri": "http://dbpedia.org/resource/Fender_Stratocaster"
      }
    ],
    "id": "433e3e8781da456b9fc1184bb9815b88",
    "predicate mapping": [
      {
        "label": "playing",
        "uri": "http://dbpedia.org/property/notableInstruments"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/currentMembers"
      },
      {
        "label": "band",
        "uri": "http://dbpedia.org/ontology/Band"
      }
    ]
  },
  {
    "question": "Who owns Chelsea F.C.?",
    "SerialNumber": "4918",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/occupation> <http://dbpedia.org/resource/Chelsea_F.C.>  . }",
    "entity mapping": [
      {
        "label": "Chelsea F.C.",
        "uri": "http://dbpedia.org/resource/Chelsea_F.C."
      }
    ],
    "id": "5901e1cf900d4564b0ad6a25eb733684",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/occupation"
      }
    ]
  },
  {
    "question": "During the reigns of which monarchs was the name to the  Israelite kingdom as United Monarch?",
    "SerialNumber": "4919",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/title> <http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)> } ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Kingdom_of_Israel_(united_monarchy)"
      }
    ],
    "id": "d3ccc70090cb4f15a0c1e6340f773d93",
    "predicate mapping": [
      {
        "label": "Monarch",
        "uri": "http://dbpedia.org/property/title"
      }
    ]
  },
  {
    "question": "Tell me the total number of organizations who maintain the bridges made by the malaysian PWD?",
    "SerialNumber": "4920",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/designer> <http://dbpedia.org/resource/Malaysian_Public_Works_Department> . ?x <http://dbpedia.org/ontology/maintainedBy> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "malaysian",
        "uri": "http://dbpedia.org/resource/Malaysian_Public_Works_Department"
      }
    ],
    "id": "396cc549a7c941308fc6490554d328b0",
    "predicate mapping": [
      {
        "label": "PWD",
        "uri": "http://dbpedia.org/property/designer"
      },
      {
        "label": "maintain",
        "uri": "http://dbpedia.org/ontology/maintainedBy"
      },
      {
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "list the  software which works on both the OS  - Microsoft Windows and Mac OS ?",
    "SerialNumber": "4923",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Microsoft_Windows> . ?uri <http://dbpedia.org/ontology/operatingSystem> <http://dbpedia.org/resource/Mac_OS> . }",
    "entity mapping": [
      {
        "label": "Microsoft Windows",
        "uri": "http://dbpedia.org/resource/Microsoft_Windows"
      },
      {
        "label": "Mac OS",
        "uri": "http://dbpedia.org/resource/Mac_OS"
      }
    ],
    "id": "090fdd1b6e04464eb2afffb08d7868dd",
    "predicate mapping": [
      {
        "label": "OS",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      },
      {
        "label": "OS",
        "uri": "http://dbpedia.org/ontology/operatingSystem"
      }
    ]
  },
  {
    "question": "Which idelogy of the Palang Dharma Party is also the  faith of Miao people ?",
    "SerialNumber": "4926",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Palang_Dharma_Party> <http://dbpedia.org/ontology/ideology> ?uri. <http://dbpedia.org/resource/Miao_people> <http://dbpedia.org/ontology/religion> ?uri} ",
    "entity mapping": [
      {
        "label": "Palang Dharma Party",
        "uri": "http://dbpedia.org/resource/Palang_Dharma_Party"
      },
      {
        "label": "Miao people",
        "uri": "http://dbpedia.org/resource/Miao_people"
      }
    ],
    "id": "276666cb2dd442d29983656956c65930",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/ideology"
      },
      {
        "label": "faith",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "Where did the members of judge advocate general corps study?",
    "SerialNumber": "4928",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/militaryRank> <http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army> . ?x <http://dbpedia.org/ontology/almaMater> ?uri  . }",
    "entity mapping": [
      {
        "label": "advocate general judge corps",
        "uri": "http://dbpedia.org/resource/Judge_Advocate_General's_Corps,_United_States_Army"
      }
    ],
    "id": "ca35959e3aa54d29a210ae778908d977",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/militaryRank"
      },
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "In how many different places are Brown haired models living?",
    "SerialNumber": "4930",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/hairColor> <http://dbpedia.org/resource/Brown_hair> . ?x <http://dbpedia.org/ontology/residence> ?uri  . }",
    "entity mapping": [
      {
        "label": "Brown hair",
        "uri": "http://dbpedia.org/resource/Brown_hair"
      }
    ],
    "id": "7544359cc60644078fbfd6ee91abdf55",
    "predicate mapping": [
      {
        "label": "haired",
        "uri": "http://dbpedia.org/property/hairColor"
      },
      {
        "label": "living",
        "uri": "http://dbpedia.org/ontology/residence"
      }
    ]
  },
  {
    "question": "Solon Spencer Beman has architected in how many cities?",
    "SerialNumber": "4931",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/architect> <http://dbpedia.org/resource/Solon_Spencer_Beman> . ?x <http://dbpedia.org/property/locationTown> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/City>}",
    "entity mapping": [
      {
        "label": "Solon Spencer Beman",
        "uri": "http://dbpedia.org/resource/Solon_Spencer_Beman"
      }
    ],
    "id": "901504aad5414f9b8ea3323d9f9f9e3a",
    "predicate mapping": [
      {
        "label": "architect",
        "uri": "http://dbpedia.org/ontology/architect"
      },
      {
        "label": "cities",
        "uri": "http://dbpedia.org/property/locationTown"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/City"
      }
    ]
  },
  {
    "question": "What was a common first team at the 1967 Mexican Grand Prix and 1971 US one?",
    "SerialNumber": "4932",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/1967_Mexican_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri. <http://dbpedia.org/resource/1971_United_States_Grand_Prix> <http://dbpedia.org/property/firstTeam> ?uri . }",
    "entity mapping": [
      {
        "label": "1967 Mexican Grand Prix",
        "uri": "http://dbpedia.org/resource/1967_Mexican_Grand_Prix"
      },
      {
        "label": "grand prix 1971",
        "uri": "http://dbpedia.org/resource/1971_United_States_Grand_Prix"
      }
    ],
    "id": "6bfad60b196445aea7c5be7ba2412166",
    "predicate mapping": [
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      },
      {
        "label": "first team",
        "uri": "http://dbpedia.org/property/firstTeam"
      }
    ]
  },
  {
    "question": "What is the location of Sam Sen Railway Station ?",
    "SerialNumber": "4933",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Sam_Sen_Railway_Station> <http://dbpedia.org/property/other> ?uri } ",
    "entity mapping": [
      {
        "label": "Sam Sen",
        "uri": "http://dbpedia.org/resource/Sam_Sen_Railway_Station"
      }
    ],
    "id": "3eedc8d9fc1842a88f9158d88e77eb21",
    "predicate mapping": [
      {
        "label": "Station",
        "uri": "http://dbpedia.org/property/other"
      }
    ]
  },
  {
    "question": "In how many places have the companies started in Newcastle worked?",
    "SerialNumber": "4934",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/foundationPlace> <http://dbpedia.org/resource/City_of_Newcastle> . ?x <http://dbpedia.org/ontology/regionServed> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Place>}",
    "entity mapping": [
      {
        "label": "Newcastle",
        "uri": "http://dbpedia.org/resource/City_of_Newcastle"
      }
    ],
    "id": "d3003f279fce43c2bd590feb5ea35a89",
    "predicate mapping": [
      {
        "label": "places",
        "uri": "http://dbpedia.org/ontology/foundationPlace"
      },
      {
        "label": "worked",
        "uri": "http://dbpedia.org/ontology/regionServed"
      },
      {
        "label": "place",
        "uri": "http://dbpedia.org/ontology/Place"
      }
    ]
  },
  {
    "question": "How many things are produced by companies located in Tehran?",
    "SerialNumber": "4935",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Tehran> . ?x <http://dbpedia.org/ontology/product> ?uri  . }",
    "entity mapping": [
      {
        "label": "Tehran",
        "uri": "http://dbpedia.org/resource/Tehran"
      }
    ],
    "id": "2c4dcb51677a45c2b824fb2b6faee585",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "located",
        "uri": "http://dbpedia.org/ontology/product"
      }
    ]
  },
  {
    "question": "Who was the director of photography of Mickey's Mellerdrammer and the animator of Tommy Tucker's Tooth?",
    "SerialNumber": "4937",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Mickey's_Mellerdrammer> <http://dbpedia.org/property/cinematography> ?uri. <http://dbpedia.org/resource/Tommy_Tucker's_Tooth> <http://dbpedia.org/property/animator> ?uri} ",
    "entity mapping": [
      {
        "label": "Mickey's Mellerdrammer",
        "uri": "http://dbpedia.org/resource/Mickey's_Mellerdrammer"
      },
      {
        "label": "Tommy Tucker's Tooth",
        "uri": "http://dbpedia.org/resource/Tommy_Tucker's_Tooth"
      }
    ],
    "id": "c750e7c0608b41ceb0f89a608bc35174",
    "predicate mapping": [
      {
        "label": "photography",
        "uri": "http://dbpedia.org/property/cinematography"
      },
      {
        "label": "animator",
        "uri": "http://dbpedia.org/property/animator"
      }
    ]
  },
  {
    "question": "Name the origins of the river with Quich Department as one of the origin ?",
    "SerialNumber": "4938",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/origin> <http://dbpedia.org/resource/Quiché_Department> . ?x <http://dbpedia.org/ontology/origin> ?uri  . }",
    "entity mapping": [
      {
        "label": "department quich",
        "uri": "http://dbpedia.org/resource/Quiché_Department"
      }
    ],
    "id": "da6a53f6df164501ac3e5ca040d30802",
    "predicate mapping": [
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      },
      {
        "label": "origin",
        "uri": "http://dbpedia.org/ontology/origin"
      }
    ]
  },
  {
    "question": "Who was in the missions of Apollo 11 and Gemini 8?",
    "SerialNumber": "4939",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Gemini_8> . }",
    "entity mapping": [
      {
        "label": "Apollo 11",
        "uri": "http://dbpedia.org/resource/Apollo_11"
      },
      {
        "label": "Gemini 8",
        "uri": "http://dbpedia.org/resource/Gemini_8"
      }
    ],
    "id": "4f474c1d102d429188592e6442f0dc85",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      },
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      }
    ]
  },
  {
    "question": "Which producer of Wizards and the aliens is also the notable work of russell T Davies ?",
    "SerialNumber": "4944",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Wizards_vs_Aliens> <http://dbpedia.org/ontology/producer> ?uri. <http://dbpedia.org/resource/Russell_T_Davies> <http://dbpedia.org/ontology/notableWork> ?uri} ",
    "entity mapping": [
      {
        "label": "wizards aliens",
        "uri": "http://dbpedia.org/resource/Wizards_vs_Aliens"
      },
      {
        "label": "russell T Davies",
        "uri": "http://dbpedia.org/resource/Russell_T_Davies"
      }
    ],
    "id": "3b829598cada4093999a79cba952861b",
    "predicate mapping": [
      {
        "label": "producer",
        "uri": "http://dbpedia.org/ontology/producer"
      },
      {
        "label": "notable work",
        "uri": "http://dbpedia.org/ontology/notableWork"
      }
    ]
  },
  {
    "question": "Rivers which end in Arkansas go through which cities?",
    "SerialNumber": "4945",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/mouthMountain> <http://dbpedia.org/resource/Arkansas> . ?x <http://dbpedia.org/ontology/city> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/River>}",
    "entity mapping": [
      {
        "label": "Arkansas",
        "uri": "http://dbpedia.org/resource/Arkansas"
      }
    ],
    "id": "1f3d2c8c9b824f60ab080077dcff3dc9",
    "predicate mapping": [
      {
        "label": "cities",
        "uri": "http://dbpedia.org/ontology/mouthMountain"
      },
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/city"
      },
      {
        "label": "River",
        "uri": "http://dbpedia.org/ontology/River"
      }
    ]
  },
  {
    "question": "What is the religion of the academic authority on Ceratosoma tenue?",
    "SerialNumber": "4946",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Ceratosoma_tenue> <http://dbpedia.org/ontology/binomialAuthority> ?x . ?x <http://dbpedia.org/property/veneratedIn> ?uri  . }",
    "entity mapping": [
      {
        "label": "Ceratosoma tenue",
        "uri": "http://dbpedia.org/resource/Ceratosoma_tenue"
      }
    ],
    "id": "aaded2628d52480a81d952c6157fbd13",
    "predicate mapping": [
      {
        "label": "authority",
        "uri": "http://dbpedia.org/ontology/binomialAuthority"
      },
      {
        "label": "academic",
        "uri": "http://dbpedia.org/property/veneratedIn"
      }
    ]
  },
  {
    "question": "Which ethinicity of  Riley Reid is the state of origin of Holmes Colbert?",
    "SerialNumber": "4947",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Riley_Reid> <http://dbpedia.org/property/ethnicity> ?uri. <http://dbpedia.org/resource/Holmes_Colbert> <http://dbpedia.org/ontology/stateOfOrigin> ?uri} ",
    "entity mapping": [
      {
        "label": "Riley Reid",
        "uri": "http://dbpedia.org/resource/Riley_Reid"
      },
      {
        "label": "Holmes Colbert",
        "uri": "http://dbpedia.org/resource/Holmes_Colbert"
      }
    ],
    "id": "6b2c6038daa7480ea340b9f0afc64454",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/ethnicity"
      },
      {
        "label": "state of origin",
        "uri": "http://dbpedia.org/ontology/stateOfOrigin"
      }
    ]
  },
  {
    "question": "Who all have been a commander during the battles of Ohio?",
    "SerialNumber": "4952",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/place> <http://dbpedia.org/resource/Ohio> . ?x <http://dbpedia.org/ontology/commander> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryConflict>}",
    "entity mapping": [
      {
        "label": "Ohio",
        "uri": "http://dbpedia.org/resource/Ohio"
      }
    ],
    "id": "fbb1dc5dc78144d4b151528772891c5a",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/property/place"
      },
      {
        "label": "commander",
        "uri": "http://dbpedia.org/ontology/commander"
      },
      {
        "label": "battles",
        "uri": "http://dbpedia.org/ontology/MilitaryConflict"
      }
    ]
  },
  {
    "question": "Where did john o conner study?",
    "SerialNumber": "4953",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/John_O'Connor_(archbishop_of_New_York)> <http://dbpedia.org/ontology/almaMater> ?uri } ",
    "entity mapping": [
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/John_O'Connor_(archbishop_of_New_York)"
      }
    ],
    "id": "44b54ea88b4c437bbca297ca3c04a6d3",
    "predicate mapping": [
      {
        "label": "study",
        "uri": "http://dbpedia.org/ontology/almaMater"
      }
    ]
  },
  {
    "question": "Who owns the websites for which Jimmy wales writes?",
    "SerialNumber": "4955",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/author> <http://dbpedia.org/resource/Jimmy_Wales> . ?x <http://dbpedia.org/ontology/owner> ?uri  . }",
    "entity mapping": [
      {
        "label": "Jimmy wales",
        "uri": "http://dbpedia.org/resource/Jimmy_Wales"
      }
    ],
    "id": "0d41f404ff594266aac5f28f38fdb49f",
    "predicate mapping": [
      {
        "label": "writes",
        "uri": "http://dbpedia.org/ontology/author"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/ontology/owner"
      }
    ]
  },
  {
    "question": "Which city council owns the Ted Williams tunnel and Leonard Memorial ridge?",
    "SerialNumber": "4956",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Ted_Williams_Tunnel> <http://dbpedia.org/property/owner> ?uri. <http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge> <http://dbpedia.org/property/owner> ?uri . }",
    "entity mapping": [
      {
        "label": "Ted Williams tunnel",
        "uri": "http://dbpedia.org/resource/Ted_Williams_Tunnel"
      },
      {
        "label": "memorial leonard ridge",
        "uri": "http://dbpedia.org/resource/Leonard_P._Zakim_Bunker_Hill_Memorial_Bridge"
      }
    ],
    "id": "92f7bcc8b88145149f59ce244d965e37",
    "predicate mapping": [
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      },
      {
        "label": "owns",
        "uri": "http://dbpedia.org/property/owner"
      }
    ]
  },
  {
    "question": "How many people have been the first one to scale a peak in the Yosemite Park?",
    "SerialNumber": "4958",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/locatedInArea> <http://dbpedia.org/resource/Yosemite_National_Park> . ?x <http://dbpedia.org/ontology/firstAscentPerson> ?uri  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Yosemite",
        "uri": "http://dbpedia.org/resource/Yosemite_National_Park"
      }
    ],
    "id": "8ccd8b60f2ef4e8bb9158dd030afb484",
    "predicate mapping": [
      {
        "label": "in",
        "uri": "http://dbpedia.org/ontology/locatedInArea"
      },
      {
        "label": "first",
        "uri": "http://dbpedia.org/ontology/firstAscentPerson"
      },
      {
        "label": "Park",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Name the battle fought by the people which also fought in Levant ?",
    "SerialNumber": "4959",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Levant> . ?x <http://dbpedia.org/property/battles> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Person>}",
    "entity mapping": [
      {
        "label": "Levant",
        "uri": "http://dbpedia.org/resource/Levant"
      }
    ],
    "id": "aad9f9ceb4364ee9b570d43ca42ce29c",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "fought",
        "uri": "http://dbpedia.org/ontology/Person"
      }
    ]
  },
  {
    "question": "Who starred in Awakening and fifety five days at peknig ?",
    "SerialNumber": "4960",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/The_Awakening_(1980_film)> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/55_Days_at_Peking> <http://dbpedia.org/ontology/starring> ?uri . }",
    "entity mapping": [
      {
        "label": "awakening",
        "uri": "http://dbpedia.org/resource/The_Awakening_(1980_film)"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/55_Days_at_Peking"
      }
    ],
    "id": "c1e28310cb5443f18804bfc7fb1af725",
    "predicate mapping": [
      {
        "label": "starred",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "starred",
        "uri": "http://dbpedia.org/ontology/starring"
      }
    ]
  },
  {
    "question": "What actor of Le Cirque is a relative of Maryanne Trump barry?",
    "SerialNumber": "4964",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven> <http://dbpedia.org/property/starring> ?uri. <http://dbpedia.org/resource/Maryanne_Trump_Barry> <http://dbpedia.org/ontology/relation> ?uri} ",
    "entity mapping": [
      {
        "label": "cirque",
        "uri": "http://dbpedia.org/resource/Le_Cirque:_A_Table_in_Heaven"
      },
      {
        "label": "Maryanne Trump barry",
        "uri": "http://dbpedia.org/resource/Maryanne_Trump_Barry"
      }
    ],
    "id": "649d452e63834157a29c6a1db0e777fa",
    "predicate mapping": [
      {
        "label": "actor",
        "uri": "http://dbpedia.org/property/starring"
      },
      {
        "label": "relative",
        "uri": "http://dbpedia.org/ontology/relation"
      }
    ]
  },
  {
    "question": "How many buildings are located in Toronto ?",
    "SerialNumber": "4965",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE {?uri <http://dbpedia.org/property/location> <http://dbpedia.org/resource/Toronto>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "Toronto",
        "uri": "http://dbpedia.org/resource/Toronto"
      }
    ],
    "id": "6a6a9694fbb44140ada81d7a8c89aa0f",
    "predicate mapping": [
      {
        "label": "located",
        "uri": "http://dbpedia.org/property/location"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "List the Stanley Kubrick's movies which has music by Laurie Johnson  ?",
    "SerialNumber": "4966",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/director> <http://dbpedia.org/resource/Stanley_Kubrick> . ?uri <http://dbpedia.org/property/music> <http://dbpedia.org/resource/Laurie_Johnson>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Film>}",
    "entity mapping": [
      {
        "label": "Stanley Kubrick",
        "uri": "http://dbpedia.org/resource/Stanley_Kubrick"
      },
      {
        "label": "Laurie Johnson",
        "uri": "http://dbpedia.org/resource/Laurie_Johnson"
      }
    ],
    "id": "d5f39362abb34bc4a563caa4d12fa4ce",
    "predicate mapping": [
      {
        "uri": "http://dbpedia.org/ontology/director"
      },
      {
        "label": "music",
        "uri": "http://dbpedia.org/property/music"
      },
      {
        "label": "movie",
        "uri": "http://dbpedia.org/ontology/Film"
      }
    ]
  },
  {
    "question": "What are some relatives of Battle of the Bulge veterans?",
    "SerialNumber": "4970",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/battles> <http://dbpedia.org/resource/Battle_of_the_Bulge> . ?x <http://dbpedia.org/ontology/relation> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/MilitaryPerson>}",
    "entity mapping": [
      {
        "label": "Battle of the Bulge",
        "uri": "http://dbpedia.org/resource/Battle_of_the_Bulge"
      }
    ],
    "id": "219e980d18d243f3a491b427da37633b",
    "predicate mapping": [
      {
        "label": "battle",
        "uri": "http://dbpedia.org/property/battles"
      },
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/relation"
      },
      {
        "label": "veterans",
        "uri": "http://dbpedia.org/ontology/MilitaryPerson"
      }
    ]
  },
  {
    "question": "What is the scientist whose doctoral students are Erich Bagge and erban ieica?",
    "SerialNumber": "4975",
    "sparql_query": "SELECT DISTINCT ?uri WHERE { ?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Erich_Bagge> . ?uri <http://dbpedia.org/ontology/doctoralStudent> <http://dbpedia.org/resource/Șerban_Țițeica> . }",
    "entity mapping": [
      {
        "label": "Erich Bagge",
        "uri": "http://dbpedia.org/resource/Erich_Bagge"
      },
      {
        "label": "",
        "uri": "http://dbpedia.org/resource/Șerban_Țițeica"
      }
    ],
    "id": "10c135a7b31546cc91c3dacf6c470b5c",
    "predicate mapping": [
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      },
      {
        "label": "doctoral student",
        "uri": "http://dbpedia.org/ontology/doctoralStudent"
      }
    ]
  },
  {
    "question": " Who astronaut from NASA was on the mission of Apollo 11?",
    "SerialNumber": "4976",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/property/mission> <http://dbpedia.org/resource/Apollo_11> . ?uri <http://dbpedia.org/property/type> <http://dbpedia.org/resource/NASA>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Astronaut>}",
    "entity mapping": [
      {
        "label": "Apollo 11",
        "uri": "http://dbpedia.org/resource/Apollo_11"
      },
      {
        "label": "NASA",
        "uri": "http://dbpedia.org/resource/NASA"
      }
    ],
    "id": "3b7d789c05074466884d8e0d189d97c4",
    "predicate mapping": [
      {
        "label": "mission",
        "uri": "http://dbpedia.org/property/mission"
      },
      {
        "uri": "http://dbpedia.org/property/type"
      },
      {
        "label": "astronaut",
        "uri": "http://dbpedia.org/ontology/Astronaut"
      }
    ]
  },
  {
    "question": "Games on amiga are typically of what kind?",
    "SerialNumber": "4979",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/computingPlatform> <http://dbpedia.org/resource/Amiga> . ?x <http://dbpedia.org/property/genre> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/VideoGame>}",
    "entity mapping": [
      {
        "label": "amiga",
        "uri": "http://dbpedia.org/resource/Amiga"
      }
    ],
    "id": "c26fb222e05a44ed915b27a0b62b1f35",
    "predicate mapping": [
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/computingPlatform"
      },
      {
        "label": "kind",
        "uri": "http://dbpedia.org/property/genre"
      },
      {
        "label": "games",
        "uri": "http://dbpedia.org/ontology/VideoGame"
      }
    ]
  },
  {
    "question": "Through which states does the stream ending at Saunders county go?",
    "SerialNumber": "4982",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/mouthLocation> <http://dbpedia.org/resource/Saunders_County,_Nebraska> . ?x <http://dbpedia.org/ontology/state> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stream>}",
    "entity mapping": [
      {
        "label": "Saunders county",
        "uri": "http://dbpedia.org/resource/Saunders_County,_Nebraska"
      }
    ],
    "id": "ac2cdf6aeebd49aba3049d487a9ce8a1",
    "predicate mapping": [
      {
        "label": "ending",
        "uri": "http://dbpedia.org/property/mouthLocation"
      },
      {
        "label": "county",
        "uri": "http://dbpedia.org/ontology/state"
      },
      {
        "label": "stream",
        "uri": "http://dbpedia.org/ontology/Stream"
      }
    ]
  },
  {
    "question": "Which religions' people fought in the Miao rebellion?",
    "SerialNumber": "4983",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { <http://dbpedia.org/resource/Miao_Rebellion_(1795–1806)> <http://dbpedia.org/property/combatant> ?x . ?x <http://dbpedia.org/ontology/religion> ?uri  . }",
    "entity mapping": [
      {
        "label": "Miao rebellion",
        "uri": "http://dbpedia.org/resource/Miao_Rebellion_(1795–1806)"
      }
    ],
    "id": "5bba92da3db5463eb604709023bbdce3",
    "predicate mapping": [
      {
        "label": "fought",
        "uri": "http://dbpedia.org/property/combatant"
      },
      {
        "label": "religion",
        "uri": "http://dbpedia.org/ontology/religion"
      }
    ]
  },
  {
    "question": "What are some languages in the italic family of languages?",
    "SerialNumber": "4984",
    "sparql_query": " SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/languageFamily> <http://dbpedia.org/resource/Italic_languages> } ",
    "entity mapping": [
      {
        "label": "languages italic",
        "uri": "http://dbpedia.org/resource/Italic_languages"
      }
    ],
    "id": "639d2cebd1c947d086337507434c201d",
    "predicate mapping": [
      {
        "label": "family",
        "uri": "http://dbpedia.org/ontology/languageFamily"
      }
    ]
  },
  {
    "question": "What is the product of the BBC Multimedia and is the theme of Visions, the convention?",
    "SerialNumber": "4985",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/BBC_Multimedia> <http://dbpedia.org/ontology/product> ?uri. <http://dbpedia.org/resource/Visions_(convention)> <http://dbpedia.org/property/genre> ?uri} ",
    "entity mapping": [
      {
        "label": "BBC Multimedia",
        "uri": "http://dbpedia.org/resource/BBC_Multimedia"
      },
      {
        "label": "Visions, the convention",
        "uri": "http://dbpedia.org/resource/Visions_(convention)"
      }
    ],
    "id": "bef5d2d4a45a4e84bdc7a586d4247c3c",
    "predicate mapping": [
      {
        "label": "product",
        "uri": "http://dbpedia.org/ontology/product"
      },
      {
        "label": "theme of",
        "uri": "http://dbpedia.org/property/genre"
      }
    ]
  },
  {
    "question": "How many people hold important positions alongwith Donna Shalala?",
    "SerialNumber": "4986",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/ontology/keyPerson> <http://dbpedia.org/resource/Donna_Shalala> . ?x <http://dbpedia.org/property/keyPeople> ?uri  . }",
    "entity mapping": [
      {
        "label": "Donna Shalala",
        "uri": "http://dbpedia.org/resource/Donna_Shalala"
      }
    ],
    "id": "aa9357296bd640539d42bcd5e05bca8a",
    "predicate mapping": [
      {
        "label": "important positions",
        "uri": "http://dbpedia.org/ontology/keyPerson"
      },
      {
        "label": "people",
        "uri": "http://dbpedia.org/property/keyPeople"
      }
    ]
  },
  {
    "question": "Where do I find buildings rented by Weber Thompson?",
    "SerialNumber": "4988",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/ontology/tenant> <http://dbpedia.org/resource/Weber_Thompson> . ?x <http://dbpedia.org/property/address> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Building>}",
    "entity mapping": [
      {
        "label": "Weber Thompson",
        "uri": "http://dbpedia.org/resource/Weber_Thompson"
      }
    ],
    "id": "c002ce3102a6429a849b2bc1c63213c8",
    "predicate mapping": [
      {
        "label": "rented",
        "uri": "http://dbpedia.org/ontology/tenant"
      },
      {
        "label": "Where",
        "uri": "http://dbpedia.org/property/address"
      },
      {
        "label": "building",
        "uri": "http://dbpedia.org/ontology/Building"
      }
    ]
  },
  {
    "question": "Who is the father of Edith Vonnegut and is also a writer?",
    "SerialNumber": "4989",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/child> <http://dbpedia.org/resource/Edith_Vonnegut>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Writer>}",
    "entity mapping": [
      {
        "label": "Edith Vonnegut",
        "uri": "http://dbpedia.org/resource/Edith_Vonnegut"
      }
    ],
    "id": "ab3856e5604443d1967a40d89f070cc9",
    "predicate mapping": [
      {
        "label": "father",
        "uri": "http://dbpedia.org/ontology/child"
      },
      {
        "label": "writer",
        "uri": "http://dbpedia.org/ontology/Writer"
      }
    ]
  },
  {
    "question": "Who are the members of organizations headquartered at Amstelveen?",
    "SerialNumber": "4994",
    "sparql_query": "SELECT DISTINCT ?uri, ?x WHERE { ?x <http://dbpedia.org/property/headquarters> <http://dbpedia.org/resource/Amstelveen> . ?x <http://dbpedia.org/property/membership> ?uri  . ?x <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Organisation>}",
    "entity mapping": [
      {
        "label": "Amstelveen",
        "uri": "http://dbpedia.org/resource/Amstelveen"
      }
    ],
    "id": "824317de97054fe7b674e6cf7d41721f",
    "predicate mapping": [
      {
        "label": "headquarter",
        "uri": "http://dbpedia.org/property/headquarters"
      },
      {
        "label": "members",
        "uri": "http://dbpedia.org/property/membership"
      },
      {
        "label": "organizations",
        "uri": "http://dbpedia.org/ontology/Organisation"
      }
    ]
  },
  {
    "question": "Name the show formed by J. Michael Stroczynski and had network as TNT ?",
    "SerialNumber": "4997",
    "sparql_query": "SELECT DISTINCT ?uri WHERE {?uri <http://dbpedia.org/ontology/developer> <http://dbpedia.org/resource/J._Michael_Straczynski> . ?uri <http://dbpedia.org/property/network> <http://dbpedia.org/resource/TNT_(TV_channel)>  . ?uri <https://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/TelevisionShow>}",
    "entity mapping": [
      {
        "label": "J. Michael Stroczynski",
        "uri": "http://dbpedia.org/resource/J._Michael_Straczynski"
      },
      {
        "label": "TNT",
        "uri": "http://dbpedia.org/resource/TNT_(TV_channel)"
      }
    ],
    "id": "03dc94e9c928474f91e0414b14f9e1e4",
    "predicate mapping": [
      {
        "label": "formed by",
        "uri": "http://dbpedia.org/ontology/developer"
      },
      {
        "label": "network",
        "uri": "http://dbpedia.org/property/network"
      },
      {
        "label": "show",
        "uri": "http://dbpedia.org/ontology/TelevisionShow"
      }
    ]
  },
  {
    "question": "Count all those who previously played for a team which ownes Varsity Stadium ?",
    "SerialNumber": "4998",
    "sparql_query": "SELECT DISTINCT COUNT(?uri) WHERE { ?x <http://dbpedia.org/property/field> <http://dbpedia.org/resource/Varsity_Stadium> . ?uri <http://dbpedia.org/ontology/formerTeam> ?x  . }",
    "entity mapping": [
      {
        "label": "Varsity Stadium",
        "uri": "http://dbpedia.org/resource/Varsity_Stadium"
      }
    ],
    "id": "2ca6c46d4387400999f62cc8354d3f73",
    "predicate mapping": [
      {
        "label": "ownes",
        "uri": "http://dbpedia.org/property/field"
      },
      {
        "label": "team for",
        "uri": "http://dbpedia.org/ontology/formerTeam"
      }
    ]
  },
  {
    "question": "Is NY Rangers a prospective team for Robin Kovacs?",
    "SerialNumber": "4999",
    "sparql_query": "ASK WHERE { <http://dbpedia.org/resource/Robin_Kovacs> <http://dbpedia.org/ontology/prospectTeam> <http://dbpedia.org/resource/New_York_Rangers> }",
    "entity mapping": [
      {
        "label": "Robin Kovacs",
        "uri": "http://dbpedia.org/resource/Robin_Kovacs"
      },
      {
        "label": "NY Rangers",
        "uri": "http://dbpedia.org/resource/New_York_Rangers"
      }
    ],
    "id": "2b9759c6010b4d4181dbad7e72db419c",
    "predicate mapping": [
      {
        "label": "team",
        "uri": "http://dbpedia.org/ontology/prospectTeam"
      }
    ]
  },
  {
    "question": "Which headcoach of Marquette Golden Eagles men's basketball team, 2008-09 was also the coach of Marquette Golden Eagles team ?",
    "SerialNumber": "5000",
    "sparql_query": " SELECT DISTINCT ?uri WHERE { <http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/ontology/coach> ?uri. <http://dbpedia.org/resource/2008–09_Marquette_Golden_Eagles_men's_basketball_team> <http://dbpedia.org/property/headcoach> ?uri} ",
    "entity mapping": [
      {
        "label": "Marquette Golden Eagles team",
        "uri": "http://dbpedia.org/resource/2013–14_Marquette_Golden_Eagles_men's_basketball_team"
      },
      {
        "label": "Marquette Golden Eagles men's basketball team, 2008-09",
        "uri": "http://dbpedia.org/resource/2008–09_Marquette_Golden_Eagles_men's_basketball_team"
      }
    ],
    "id": "1740f374977d429492e5c58dce8e4273",
    "predicate mapping": [
      {
        "label": "coach",
        "uri": "http://dbpedia.org/ontology/coach"
      },
      {
        "label": "headcoach",
        "uri": "http://dbpedia.org/property/headcoach"
      }
    ]
  }
]